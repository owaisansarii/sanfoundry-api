[
    {
        "id": 1,
        "Question": "Number of states of FSM required to simulate behaviour of a computer with a memory capable of storing “m” words, each of length ‘n’.",
        "Options": [
            "a) m x 2n",
            "b) 2mn",
            "c) 2(m+n)",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: For every Data here length is n and memory’s state is defined in terms of power of 2, Here the total memory capability for all the words = mn Hence the number of states is2mn."
    },
    {
        "id": 2,
        "Question": "An FSM with __________",
        "Options": [
            "a) M can be transformed to Numeral relabeling its states",
            "b) M can be transformed to N, merely relabeling its edges",
            "c) Both of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The Definition of FSM states that M can be transformed to N by relabeling its states or its edges."
    },
    {
        "id": 3,
        "Question": "Which of the following statement is correct?",
        "Options": [
            "a) A Context free language can be accepted by a deterministic PDA",
            "b) union of 2 CFLs is context free",
            "c) The intersection of two CFLs is context free",
            "d) The complement of CFLs is context free"
        ],
        "Answer": "Answer: b\nExplanation: Context-free languages are closed under the following operations.  The Kleene star, the concatenation, the union and the intersection."
    },
    {
        "id": 4,
        "Question": "Which of the following  is true?",
        "Options": [
            "a) Only S1 is correct",
            "b) Only S2 is correct",
            "c) Both S1 and S2 are correct",
            "d) None of S1 and S2 is correct"
        ],
        "Answer": "Answer:  c\nExplanation: S1 can be written as (00)n where n >= 1. And S2 can be written as (00) (m+n) where m >=2 and n >= 1. S2 can be further reduced to (00)x where x >= 3. SO we can write regular grammars for both\nG1 -> G100/00 (For S1)\nG2 -> G200/000000 (For S2)."
    },
    {
        "id": 5,
        "Question": "Which of the following pairs of regular expressions are equivalent?",
        "Options": [
            "a) 1(01)* and (10)*1",
            "b) x (xx)* and (xx)*x",
            "c) x+ and x+ x(*+)",
            "d) All of the mentioned"
        ],
        "Answer": "Answer:  d\nExplanation: Rule (pq)*p=p (qp)*\nTherefore–(xx*) (x*x**)\n(xx*)(x*x*)  [Using x**=x]\n(xx*)(x*)     [Using x*x*=x*]\n(xx*)           [Using x*xx*=x*)\nx+ "
    },
    {
        "id": 6,
        "Question": "Given a NFA with N states, the maximum number of states in an equivalent minimized DFA is at least.",
        "Options": [
            "a) N2",
            "b) 2N",
            "c) 2N",
            "d) N!"
        ],
        "Answer": "Answer: b\nExplanation: The initial state of the DFA constructed from this NFA is the set of all NFA states that are reachable from state 1 by ε-moves; that is, it is the set {1, 2, and 3}. A transition from states1, 2, and 3 by input symbol 0 must follow either the arrow from state 1 to 2, or from state 3 to 4. Also, neither state 2 nor 4 have outgoing ε-moves."
    },
    {
        "id": 7,
        "Question": "Let L denotes the language generated by the grammar S – OSO/00. Which of the following is true?",
        "Options": [
            "a) L = O",
            "b) L is regular but not O",
            "c) L is context free but not regular",
            "d) L is not context free"
        ],
        "Answer": "Answer:  b\nExplanation: The grammar itself is not regular but language L is regular as L can be represented using a regular grammar, for example S -> S00/00."
    },
    {
        "id": 8,
        "Question": "Which of the following are not regular?",
        "Options": [
            "a) String of )’s which has length that is a perfect square",
            "b) Palindromes Consisting of 0’s 1’s",
            "c) String of 0’s whose length is a prime number",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Strings of odd number of zeroes can be generated by the regular expression (00) *0.Pumping lemma can be used to prove the non-regularity of the other options."
    },
    {
        "id": 9,
        "Question": "If ∑ = {a, b, c, d, e, f} then number of strings in ∑ of length 4 such that no symbol is used more than once in a string is",
        "Options": [
            "a) 35",
            "b) 360",
            "c) 49",
            "d) 720"
        ],
        "Answer": "Answer: b\nExplanation: Here string length is 4 so we create string of length 4 by 6 values firstly we arrange any value by 6 methods. Then Remaining numbers are 5 so we can arrange them by 5 methods then remaining numbers are 4 so we arrange them by 4 methods and then 3.Thus 6*5*4*3=360."
    },
    {
        "id": 10,
        "Question": "Which one of the following statement is FALSE?",
        "Options": [
            "a) Context-free languages are closed under union",
            "b) Context-free languages are closed under concatenation",
            "c) Context-free languages are closed under intersection",
            "d) Context-free languages are closed under Kleene closure"
        ],
        "Answer": "Answer:  c\nExplanation: CFL is closed under Kleene closure, concatenation, and Union"
    },
    {
        "id": 11,
        "Options": [
            "a) aabb",
            "b) abab",
            "c) aababb",
            "d) aaabbb"
        ],
        "Answer": "Answer: d\nExplanation: Given S → SaSbS|ε\nS->aSbS             putting S-> € and then S->SaSbS\nS->aSaSaSbSbSbS    putting S->SaSbS\nS->aaabbb                  putting S->€."
    },
    {
        "id": 12,
        "Question": "What is the Regular Expression Matching Zero or More Specific Characters?",
        "Options": [
            "a) x",
            "b) #",
            "c) *",
            "d) &"
        ],
        "Answer": "Answer: b\nExplanation: RE is used for all types of string and numbers."
    },
    {
        "id": 13,
        "Question": "All __________ are automatically treated as regular expressions.",
        "Options": [
            "a) Programmatic description",
            "b) Window",
            "c) Win Object",
            "d) Collection"
        ],
        "Answer": "Answer: c\nExplanation: Zero or Specific Expression matching can be done only by a single character that is*."
    },
    {
        "id": 14,
        "Question": "The production Grammar is {S->aSbb,S->abb} is __________ grammar.",
        "Options": [
            "a) Type-3",
            "b) Type-2",
            "c) Type-1",
            "d) Type-0"
        ],
        "Answer": "Answer: a\nExplanation: It is seen that programmatic description are treated as regular expression."
    },
    {
        "id": 15,
        "Question": "Regular expression (x/y)(x/y) denotes which of the following set?",
        "Options": [
            "a) {xy,xy}",
            "b) {xx,xy,yx,yy}",
            "c) {x,y}",
            "d) {x,y,xy}"
        ],
        "Answer": "Answer: a\nExplanation: XML checkpoints employ RE."
    },
    {
        "id": 16,
        "Question": "Regular expression x/y denotes which of the following set?",
        "Options": [
            "a) {x,y}",
            "b) {xy}",
            "c) {x}",
            "d) {y}"
        ],
        "Answer": "Answer: b\nExplanation: As per the definition of type-2 grammar."
    },
    {
        "id": 17,
        "Question": "The regular expressions denote zero or more instances of an x or y is?",
        "Options": [
            "a) (x+y)",
            "b) (x+y)*",
            "c) (x* + y)",
            "d) (xy)*"
        ],
        "Answer": "Answer:  b\nExplanation: From first part if we take x then from the latter part x then it forms xx\nFrom first part if we take x then from the latter part y then it forms xy\nFrom first part if we take y then from the latter part x then it forms yx\nFrom first part if we take y then from the latter part y then it forms yy."
    },
    {
        "id": 18,
        "Question": "A system program that combines separately compiled modules of a program into a form suitable for execution is called ___________",
        "Options": [
            "a) Assembler",
            "b) Linking loader",
            "c) Cross compiler",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The definition of cross compiler."
    },
    {
        "id": 19,
        "Question": "A compiler for a high-level language that runs on one machine and produces code for a different machine is called ___________",
        "Options": [
            "a) Optimizing compiler",
            "b) One pass compiler",
            "c) Cross compiler",
            "d) Multipass compiler"
        ],
        "Answer": "Answer: c\nExplanation: A compiler for a high-level language that runs on one machine and produces code for a different machine is called cross compiler."
    },
    {
        "id": 20,
        "Question": "Cross-compiler is a compiler __________",
        "Options": [
            "a) Which is written in a different language from the source language?",
            "b) That generates object code for the machine it’s running on.",
            "c) Which is written in the same language as the source language?",
            "d) That runs on one machine but produces object code for another machine"
        ],
        "Answer": "Answer: a\nExplanation: A compiler for a high-level language that runs on one machine and produces code for a different machine is called a cross compiler."
    },
    {
        "id": 21,
        "Question": "The __________ is a technique for building cross compilers for other machines.",
        "Options": [
            "a) Brazilian Cross",
            "b) Canadian Cross",
            "c) Mexican Cross",
            "d) X-cross"
        ],
        "Answer": "Answer: a\nExplanation: Bootstrapping to a new platform. When software is developed for a new platform, a cross compiler is used to compile necessary tools such as the OS and a native compiler."
    },
    {
        "id": 22,
        "Question": " __________ was developed from the beginning as a cross compiler.",
        "Options": [
            "a) Free Pascal",
            "b) GCC",
            "c) Pascal",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: GCC, a free software collection of compilers, also can be used as cross compile. It supports many languages and platforms."
    },
    {
        "id": 23,
        "Question": "If we compile the sam.c file with the command “gcc -o sam sam.c”, then the executable file will be?",
        "Options": [
            "a) a.out",
            "b) sam",
            "c) sam.out",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: This is how the GCC is designed to take names of executable files."
    },
    {
        "id": 24,
        "Question": "2. What will be output of the following code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\t</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"nu16\">6.5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\t</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"nu0\">90000</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"st0\">'A'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8 4 2",
            "b) 8 4 2",
            "c) 8 4 4",
            "d) 8 4 3"
        ],
        "Answer": "Answer: c\nExplanation: GCC compilers (32 bit compilers) size of:\ndouble is 8 byte\nlong int is 8 byte\nCharacter constant is 2 byte."
    },
    {
        "id": 25,
        "Question": "3. What will be output of the following c code? ( according to GCC compiler)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">signed</span> x<span class=\"sy0\">;</span>\n    <span class=\"kw4\">unsigned</span> y<span class=\"sy0\">;</span>\n    x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">+-</span> 10u <span class=\"sy0\">+</span> 10u <span class=\"sy0\">+-</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\n    y <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span>\n    <span class=\"kw1\">if</span><span class=\"br0\">(</span>x<span class=\"sy0\">==</span>y<span class=\"br0\">)</span>\n         <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d %d\"</span><span class=\"sy0\">,</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span>x<span class=\"sy0\">!=</span>y<span class=\"br0\">)</span>\n         <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%u  %u\"</span><span class=\"sy0\">,</span>x<span class=\"sy0\">,</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0",
            "b) 65536  -10",
            "c) 0 65536",
            "d) Compilation error"
        ],
        "Answer": "Answer: a\nExplanation: Consider on the expression:\nx = 10 +- 10u + 10u +- 10;\n10: It is signed integer constant.\n10u: It is unsigned integer constant.\nX: It is signed integer variable.\nAs we know operators enjoy higher precedence than binary operators. So\nx = 10 + (-10u) + 10u + (-10);\n  = 10 + -10 + 10 + (-10);\n  = 0\nSo, Corresponding signed value of unsigned 10u is +10."
    },
    {
        "id": 26,
        "Question": "4. What will be output of the following c code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">const</span> <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>p<span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span>\n    p<span class=\"sy0\">=&amp;</span>a<span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,*</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 10",
            "c) Garbage Value",
            "d) Any Memory address"
        ],
        "Answer": "Answer: b\nExplanation: In the following declaration\nconst int *p;\np can keep address of constant integer."
    },
    {
        "id": 27,
        "Question": "5. What will be output of the following c code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">signed</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">unsigned</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> b<span class=\"sy0\">=</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">const</span><span class=\"br0\">)</span><span class=\"sy0\">+</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">volatile</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">+++</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 9",
            "c) 8",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: Default data type of signed, unsigned, const and volatile is intSo, a = 4 and b =4\nNow, a+++b\n= a++ + b\n= 4 + 4  //due to post increment operator.\n=8\nBut in Linux gcc compiler size of int is 4 byte so your out will be 16."
    },
    {
        "id": 28,
        "Question": "Which of the following is integral data type?",
        "Options": [
            "a) void",
            "b) char",
            "c) float",
            "d) double"
        ],
        "Answer": "Answer: b\nExpanation: In c char is integral data type. It stores the ASCII value."
    },
    {
        "id": 29,
        "Question": "7. What will be output of the following c code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">volatile</span> <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span><span class=\"nu0\">11</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) Garbage",
            "c) -2",
            "d) Cannot Predict"
        ],
        "Answer": "Answer: d\n Explanation: Value of volatile variable can’t be predicted because its value can be changed by any microprocessor interrupt."
    },
    {
        "id": 30,
        "Question": "8. What will be output of the following c code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">const</span> <span class=\"kw2\">enum</span> Alpha\n<span class=\"br0\">{</span>\n      X<span class=\"sy0\">,</span>\n      Y<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span>\n      Z\n<span class=\"br0\">}</span>p<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw2\">enum</span> Alpha a<span class=\"sy0\">,</span>b<span class=\"sy0\">;</span>\n    a<span class=\"sy0\">=</span> X<span class=\"sy0\">;</span>\n    b<span class=\"sy0\">=</span> Z<span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">+</span>b<span class=\"sy0\">-</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span> \n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> \n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) -4",
            "b) -5",
            "c) 10",
            "d) 11"
        ],
        "Answer": "Answer: a\nExplanation: Default value  X is zero and\nZ = Y + 1 = 5 + 1 = 6\nSo, a + b – p\n=0 + 6 -10 = -4."
    },
    {
        "id": 31,
        "Question": "What is the output of lexical analyzer?",
        "Options": [
            "a) A set of RE",
            "b) Syntax Tree",
            "c) Set of Tokens",
            "d) String Character"
        ],
        "Answer": "Answer: c\nExplanation: A lexical analyzer coverts character sequences to set of tokens."
    },
    {
        "id": 32,
        "Question": "Which symbol table implementation is based on the property of locality of reference?",
        "Options": [
            "a) Linear list",
            "b) Search tree",
            "c) Hash Table",
            "d) Self Organisation"
        ],
        "Answer": "Answer: c\nExplanation: Hash table is used as a reference for symbol table because it is efficient."
    },
    {
        "id": 33,
        "Question": "Which of the following is true for operator precedence parsing?",
        "Options": [
            "a) For all pair of non-terminal",
            "b) For all pair of non-terminals",
            "c) To delimit the handle",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: There are two important properties for these operator precedence parsers is that it does not appear on the right side of any production and no production has two adjacent non-terminals. Implying that no production right side is empty or has two adjacent non-terminals. So accordingly to property option (A) is correct."
    },
    {
        "id": 34,
        "Question": "What is an Object program?",
        "Options": [
            "a) Program written in machine language",
            "b) Program to be translated into machine language",
            "c) Translation of high-level language into machine language",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Since the input is the source language and the output that we get after the analysis is the machine language."
    },
    {
        "id": 35,
        "Question": "Which concept of FSA is used in the compiler?",
        "Options": [
            "a) Lexical analysis",
            "b) Parser",
            "c) Code generation",
            "d) Code optimization"
        ],
        "Answer": "Answer:  a\nExplanation: Because the lexer performs its analysis by going from one stage to another."
    },
    {
        "id": 36,
        "Question": "Which concept of grammar is used in the compiler?",
        "Options": [
            "a) Lexical analysis",
            "b) Parser",
            "c) Code generation",
            "d) Code optimization"
        ],
        "Answer": "Answer: b\nExplanation: As the lexical analysis of a grammar takes place in phases hence it is synonymous to parser."
    },
    {
        "id": 37,
        "Question": "Which of the following are Lexemes?",
        "Options": [
            "a) Identifiers",
            "b) Constants",
            "c) Keywords",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Different Lexical Classes or Tokens or Lexemes Identifiers, Constants, Keywords, Operators."
    },
    {
        "id": 38,
        "Question": "What constitutes the stages of the compilation process?",
        "Options": [
            "a) Feasibility study, system, design, and testing",
            "b) Implementation and documentation",
            "c) Lexical analysis, syntax, Analysis and code generation",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  c\nExplanation: As defined in the compilation process."
    },
    {
        "id": 39,
        "Question": "The lexical analyzer takes _________ as input and produces a stream of _______ as output.",
        "Options": [
            "a) Source program, tokens",
            "b) Token, source program",
            "c) Either of the two",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: As per the definition of Lexical Analyser which states that lexical analysis is the process of converting a sequence of characters into tokens."
    },
    {
        "id": 40,
        "Question": "Parsing is also known as ________",
        "Options": [
            "a) Lexical Analysis",
            "b) Syntax Analysis",
            "c) Semantic Analysis",
            "d) Code Generation"
        ],
        "Answer": "Answer:  b\nExplanation: Parsing or syntactic analysis is the process of analysing a string of symbols and conforming to the rules of grammar. "
    },
    {
        "id": 41,
        "Question": "A compiler program written in a high level language is called ________",
        "Options": [
            "a) Source Program",
            "b) Object Program",
            "c) Machine Language Program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  a\nExplanation: The input that we give in high level language is also known as the source language."
    },
    {
        "id": 42,
        "Question": "System program such a compiler are designed so that they are ________",
        "Options": [
            "a) Re-enterable",
            "b) Non-Usable",
            "c) Serially usable",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: For the convince of the user compilers are made re-enterable."
    },
    {
        "id": 43,
        "Question": "Which of the following is not a feature of compiler?",
        "Options": [
            "a) Scan the entire program first and translate into machine code",
            "b) To remove syntax errors",
            "c) Slow for debugging",
            "d) Execution time is more"
        ],
        "Answer": "Answer: d\nExplanation: The objective of the compiler is clearly not to increase the execution time of the program."
    },
    {
        "id": 44,
        "Question": "A system program that brings together separately compiled modules of a program into a form language that is suitable for execution.",
        "Options": [
            "a) Assembler",
            "b) Linking loader",
            "c) Cross compiler",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A loader which brings together the functions of a relocating loader with the ability to combine a number of program segments that have been independently compiled into an executable program."
    },
    {
        "id": 45,
        "Question": "A programmer by mistakes writes a program to multiply two numbers instead of dividing them, how can this error be detected?",
        "Options": [
            "a) Compiler",
            "b) Interpreter",
            "c) Compiler or interpreter",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: This is a logical error that can’t be detected by any compiler or interpreter."
    },
    {
        "id": 46,
        "Question": "All ___________ are automatically treated as regular expressions.",
        "Options": [
            "a) Programmatic description",
            "b) Window",
            "c) Win Object",
            "d) Collection"
        ],
        "Answer": "Answer: a\nExplanation: Because it checks for all the values and determines whether the output string matches with the given string."
    },
    {
        "id": 47,
        "Question": "The regular expression denotes a language comprising all possible strings of even length over the alphabet (0, 1).",
        "Options": [
            "a) 1 + 0(1+0)*",
            "b) (0+1) (1+0)*",
            "c) (1+0)",
            "d) (00+0111+10)*"
        ],
        "Answer": "Answer: b\nExplanation: No not for all values the string and numbers can we use the RE."
    },
    {
        "id": 48,
        "Question": "The RE gives none or many instances of an x or y is?",
        "Options": [
            "a) (x+y)",
            "b) (x+y)*",
            "c) (x* + y)",
            "d) (xy)*"
        ],
        "Answer": "Answer: b\nExplanation: For every cycle the values does not change unpredictably because the type of grammar that it accepts is defined."
    },
    {
        "id": 49,
        "Question": "The RE in which any number of 0′s is followed by any number of 1′s followed by any number of 2′s is?",
        "Options": [
            "a) (0+1+2)*",
            "b) 0*1*2*",
            "c) 0* + 1 + 2",
            "d) (0+1)*2*"
        ],
        "Answer": "Answer: b\nExplanation: The order for the desired string is 012 and for any number of 0s we write 0* for any number of 1s we denote it by 1* and similarly for 2*.Thus 0*1*2*."
    },
    {
        "id": 50,
        "Question": "The regular expression have all strings of 0′s and 1′s with no two consecutive 0′s is?",
        "Options": [
            "a) (0+1)",
            "b) (0+1)*",
            "c) (0+∈) (1+10)*",
            "d) (0+1)* 011"
        ],
        "Answer": "Answer: c\nExplanation: From the former bracket we choose 0 or epsilon. Then from the latter part 1 or 10 which can be followed by 1 or 10."
    },
    {
        "id": 51,
        "Question": "The regular expression with all strings of 0′s and 1′s with at least two consecutive 0′s is?",
        "Options": [
            "a) 1 + (10)*",
            "b) (0+1)*00(0+1)*",
            "c) (0+1)*011",
            "d) 0*1*2*"
        ],
        "Answer": "Answer: b\nExplanation: The expression (0+1)*00(0+1)* is where either it initially takes 0 or 1 or 00 followed by string of combination of 0 and 1."
    },
    {
        "id": 52,
        "Question": "Which of the following is NOT the set of regular expression R = (ab + abb)* bbab?",
        "Options": [
            "a) ababbbbab",
            "b) abbbab",
            "c) ababbabbbab",
            "d) abababab"
        ],
        "Answer": "Answer: d\nExplanation: abababab doesn’t end with bbab whereas the other 3 options satisfy the given regular expression."
    },
    {
        "id": 53,
        "Options": [
            "a) aabccd",
            "b) adabcca",
            "c) abcca",
            "d) abababd"
        ],
        "Answer": "Answer: a\nExplanation: S->aS      (substitute S->aS)\nS->aaS    (substitute S->bA)\nS->aabA   (substitute A->ccA)\nS->aabccA (substitute A->d)\nS->aabccd."
    },
    {
        "id": 54,
        "Question": "Consider the production of the grammar S->AA A->aa A->bb Describe the language specified by the production grammar.",
        "Options": [
            "a) L = {aaaa,aabb,bbaa,bbbb}",
            "b) L = {abab,abaa,aaab,baaa}",
            "c) L = {aaab,baba,bbaa,bbbb}",
            "d) L = {aaaa,abab,bbaa,aaab}"
        ],
        "Answer": "Answer: a\nExplanation: S->AA (substitute A->aa)\nS->aaaa\nS->AA (substitute A->aa )\nS->aaA (substitute A->bb)\nS->aabb\nS->AA (substitute A->bb the A->aa)\nS->bbaa\nS->AA (substitute A->bb)\nS->bbbb."
    },
    {
        "id": 55,
        "Question": "If R is regular language and Q is any language (regular/ non regular), then Pref (Q in R) is _____________",
        "Options": [
            "a) Non-regular",
            "b) Equal",
            "c) Infinite",
            "d) Regular"
        ],
        "Answer": "Answer: d\nExplanation: So says the definition of Regular Grammar."
    },
    {
        "id": 56,
        "Question": "(a,b) what is a?",
        "Options": [
            "a) Domain",
            "b) Range",
            "c) Domain & Range",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: A is called the domain."
    },
    {
        "id": 57,
        "Question": "(a,b) what is b?",
        "Options": [
            "a) Domain",
            "b) Range",
            "c) Domain & Range",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: B is called the Range."
    },
    {
        "id": 58,
        "Question": "The smallest set A such that A ∪ {1, 2} = {1, 2, 3, 5, 9} is?",
        "Options": [
            "a) {2,3,5}",
            "b) {1, 2, 5, 9}",
            "c) {3, 5, 9}",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: All the elements of A are related with itself by relation R, hence it is a reflexive relation."
    },
    {
        "id": 59,
        "Question": "If a set A has n elements, then the total number of subsets of A is?",
        "Options": [
            "a) N",
            "b) 2n",
            "c) N2",
            "d) 2n"
        ],
        "Answer": "Answer:  a\nExplanation: a is related to b by R, and if b is also related to a by the same relation R."
    },
    {
        "id": 60,
        "Question": "If A ∩ B = B, then?",
        "Options": [
            "a) A ⊂ B",
            "b) A = ø",
            "c) B ⊂ A",
            "d) B = ø"
        ],
        "Answer": "Answer: c\nExplanation: Since A ∩ B = B, hence B ⊂ A."
    },
    {
        "id": 61,
        "Question": "Empty set is a _____________",
        "Options": [
            "a) Invalid set",
            "b) Infinite set",
            "c) Finite set",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Empty set is a finite set."
    },
    {
        "id": 62,
        "Question": "If A, B and C are any three sets, then A – (B ∪ C) is equal to _____________",
        "Options": [
            "a) (A – B) ∪ (A – C)",
            "b) (A – B) ∪ C",
            "c) (A – B) ∩ (A – C)",
            "d) (A – B) ∩ C"
        ],
        "Answer": "Answer: c\nExplanation: it is De’ Morgan law."
    },
    {
        "id": 63,
        "Question": "A = {x: x ≠ x} represents?",
        "Options": [
            "a) {0] ",
            "b) {1}",
            "c) {}",
            "d) {x}"
        ],
        "Answer": "Answer: c\nExplanation: That is a fact."
    },
    {
        "id": 64,
        "Question": "If A, B, C be three sets such that A ∪ B = A ∪ C and A ∩ B = A ∩ C, then?",
        "Options": [
            "a) A=B",
            "b) A=C",
            "c) B=C",
            "d) A=B=C"
        ],
        "Answer": "Answer:  c\nExplanation: Transition Law."
    },
    {
        "id": 65,
        "Question": "The number of proper subsets of the set {1, 2, and 3} is?",
        "Options": [
            "a) 8",
            "b) 6",
            "c) 7",
            "d) 5"
        ],
        "Answer": "Answer: b\nExplanation: Number of proper subsets of the set {1, 2, 3) = 23 – 2 = 6."
    },
    {
        "id": 66,
        "Question": "If A and B are any two sets, then A ∪ (A ∩ B) is equal to _____________",
        "Options": [
            "a) A",
            "b) B",
            "c) A^C",
            "d) B^C"
        ],
        "Answer": "Answer: a\nExplanation: A ∩ B ⊆ A Hence A ∪ (A ∩ B) = A."
    },
    {
        "id": 67,
        "Question": "If A, B and C are any three sets, then A × (B ∪ C) is equal to _____________",
        "Options": [
            "a) (A × B) ∪ (A × C)",
            "b) (A × B) ∩ (A × C)",
            "c) (A ∪ B) × (A ∪ C)",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It is distributive law."
    },
    {
        "id": 68,
        "Question": "A language L from a grammar G = { VN, Σ, P, S} is?",
        "Options": [
            "a) Set of symbols over VN",
            "b) Set of symbols over Σ",
            "c) Set of symbols over P",
            "d) Set of symbols over S"
        ],
        "Answer": "Answer: b\nExplanation: The definition of the grammar is set of symbols over Σ."
    },
    {
        "id": 69,
        "Question": "What is the transitional function of a DFA?",
        "Options": [
            "a) Q X Σ→Q",
            "b) Q X Σ→2Q",
            "c) Q X Σ→2n",
            "d) Q X Σ→Qn"
        ],
        "Answer": "Answer: a\nExplanation: Q is the finite set and let be a finite set of symbols so Q X Σ fives no of states."
    },
    {
        "id": 70,
        "Question": "What is the transitional function of an NFA?",
        "Options": [
            "a) Q X Σ→Q",
            "b) Q X Σ→2Q",
            "c) Q X Σ→2n",
            "d) Q X Σ→Qn"
        ],
        "Answer": "Answer: b\nExplanation: Let Q be a finite set and let be a finite set of symbols. Also let be a function from Q to 2Q. All the elements of Q a state, the transition function, q0 the initial state and A the set of accepting states.\nThen a nondeterministic finite automaton is a 5-tuple < Q,  , q0,  , A >."
    },
    {
        "id": 71,
        "Question": "Maximum number of states of a DFA converted from an NFA with nstates is?",
        "Options": [
            "a) n",
            "b) n2",
            "c) 2n",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Take the NFA with states {qo,q1}, alphabet Σ={a}, initial state q0, transitions δ(q0,a)=q0, δ(q0,a)=q1 and final state q1. It generates the same language as the DFA with the same set of states and alphabet, but transitions δ(q0,a)=q1 and δ(q1,a)=q1."
    },
    {
        "id": 72,
        "Question": "What are the basic limitations of finite state machine?",
        "Options": [
            "a) It cannot remember arbitrarily large amount of information",
            "b) In cannot remember state transitions",
            "c) In cannot remember grammar for a language",
            "d) It cannot remember language generated from a grammar"
        ],
        "Answer": "Answer: b\nExplanation: Because it does to store its previous state of the transition."
    },
    {
        "id": 73,
        "Question": "The string WWR is not recognized by any FSM because _____________",
        "Options": [
            "a) An FSM cannot remember arbitrarily large amount of information",
            "b) An FSM cannot fix the midpoint",
            "c) An FSM cannot match W with WR",
            "d) An FSM cannot remember first and last inputs"
        ],
        "Answer": "Answer: b\nExplanation: Palindromes cannot be recognized by FSM."
    },
    {
        "id": 74,
        "Question": "A finite automata recognizes ____________",
        "Options": [
            "a) Any Language",
            "b) Context Sensitive Language",
            "c) Context Free Language",
            "d) Regular Language"
        ],
        "Answer": "Answer: d\nExplanation: All regular languages are implemented by finite automata."
    },
    {
        "id": 75,
        "Question": "Which of the following statement is true for Dead State?",
        "Options": [
            "a) It cannot be reached anytime",
            "b) There is no necessity of the state",
            "c) If control enters no way to come out from the state",
            "d) If control enters FA deads"
        ],
        "Answer": "Answer: c\nExplanation: It is a rejecting state for if the control enters it reaches the dead end and cannot reach an accepting state."
    },
    {
        "id": 76,
        "Question": "Which of the following statement is true for Moore Machine?",
        "Options": [
            "a) Output depends on present state",
            "b) Output depends on present input",
            "c) Output depends on present state and present input",
            "d) Output depends on present state and past input"
        ],
        "Answer": "Answer: a\nExplanation: The definition states that moore machines output is determined by the current state only."
    },
    {
        "id": 77,
        "Question": "Which of the following statement is true for Mealy Machine?",
        "Options": [
            "a) Output depends on present state",
            "b) Output depends on present input",
            "c) Output depends on present state and present input",
            "d) Output depends on present state and past input"
        ],
        "Answer": "Answer: c\nExplanation: The definition states that its output is determined by current state and current input."
    },
    {
        "id": 78,
        "Question": "Which is true for in accessible state?",
        "Options": [
            "a) It cannot be reached anytime",
            "b) There is no necessity of the state",
            "c) If control enters no way to come out from the state",
            "d) If control enters FA deads"
        ],
        "Answer": "Answer: a\nExplanation: The very meaning of in accessible state is that it cannot be reached at any point of time."
    },
    {
        "id": 79,
        "Question": "In Mealy Machine O/P is associated with ____________",
        "Options": [
            "a) Present state",
            "b) Next state",
            "c) Input",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The definition states that its output is determined by current state and current input."
    },
    {
        "id": 80,
        "Question": "In Moore Machine O/P is associated with ____________",
        "Options": [
            "a) Present state",
            "b) Next state",
            "c) Input",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The definition states that moore machines output is determined by the current state only."
    },
    {
        "id": 81,
        "Question": "Which type of string is accepted by the following finite automata?",
        "Options": [
            "a) All string",
            "b) Null string",
            "c) No string",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Null strings are not accepted by finite automata."
    },
    {
        "id": 82,
        "Question": "Myhill-Nerode Theorem is used for __________",
        "Options": [
            "a) Minimization of DFA",
            "b) Maximization of NFA",
            "c) Conversion of NFA",
            "d) Conversion of DFA"
        ],
        "Answer": "Answer: a\nExplanation: Myhill–Nerode theorem provides a necessary and sufficient condition for a language to be regular. The Myhill–Nerode theorem can be generalized to trees. And used for minimization of DFA."
    },
    {
        "id": 83,
        "Options": [
            "a) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1a.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1a\" width=\"300\" height=\"120\" class=\"alignnone size-full wp-image-159769\" />",
            "b)  <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1b.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1b\" width=\"276\" height=\"157\" class=\"alignnone size-full wp-image-159771\" />",
            "c) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1c.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1c\" width=\"300\" height=\"84\" class=\"alignnone size-full wp-image-159772\" />",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: We can verify that the string ababa is accepted by this NFA once we “guess” the state path q0, q2, q5, q2, q5, q2 ∈ F. Of course the only choice is the first one. If we made the wrong start q0, q1, q3, q4, q1 we reach a point where we have a remaining a to process with no place to go. This is a failure."
    },
    {
        "id": 84,
        "Question": "",
        "Options": [
            "a) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1a.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1a\" width=\"300\" height=\"120\" class=\"alignnone size-full wp-image-159769\" />",
            "b)  <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1b.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1b\" width=\"276\" height=\"157\" class=\"alignnone size-full wp-image-159771\" />",
            "c) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-non-deterministic-finite-automata-1-q1c.png\" alt=\"compilers-questions-answers-non-deterministic-finite-automata-1-q1c\" width=\"300\" height=\"84\" class=\"alignnone size-full wp-image-159772\" />",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A ε transition takes no input and represents a pure nondeterministic choice of being in the state or the target state without having done any processing."
    },
    {
        "id": 85,
        "Question": "NDFAs where introduced by ____________",
        "Options": [
            "a) Michael O Rabin & Dana Scott",
            "b) Dan Brown",
            "c) Sun micro system Labs",
            "d) SAP Labs"
        ],
        "Answer": "Answer: a\nExplanation: NFAs were introduced Dana Scott and Michael O. Rabin  who also showed their equivalence to DFAs."
    },
    {
        "id": 86,
        "Question": "The regular languages are not closed under ___________",
        "Options": [
            "a) Concatenation",
            "b) Union",
            "c) Kleene star",
            "d) Complement"
        ],
        "Answer": "Answer: d\n Explanation: RE are closed under\nUnion (cf. picture)\nIntersection\nConcatenation\nNegation\nKleene closure.\n"
    },
    {
        "id": 87,
        "Question": "The Tuples for NDFA is ___________",
        "Options": [
            "a) ∑, Q, q0, F, δ",
            "b) Q, q0, F, δ",
            "c) Θ, Q, q0, F,δ",
            "d) F, Q, Δ, q0, δ"
        ],
        "Answer": "Answer: a\nExplanation: An NFA is represented formally by a 5-tuple, (Q, Σ, Δ, q0, F), of\na  set of states Q\na set of input symbols Σ\na transition function Δ : Q × Σ → P(Q).\nan initial state q0 ∈ Q\na  final state F ⊆ Q.\n"
    },
    {
        "id": 88,
        "Question": "NFAs are ________ DFAs.",
        "Options": [
            "a) Larger than",
            "b) More expressive than",
            "c) Less expressive than",
            "d) Equally expressive as"
        ],
        "Answer": "Answer: a\nExplanation: Because there is more number of states for an NDFA than for a DFA for a given expression."
    },
    {
        "id": 89,
        "Question": "An NFA’s transition function returns ________",
        "Options": [
            "a) A Boolean value",
            "b) A state",
            "c) A set of states",
            "d) An edge"
        ],
        "Answer": "Answer: c\nExplanation: A transition function Δ: Q × Σ → P (Q).Where P (Q) denotes the power set of Q."
    },
    {
        "id": 90,
        "Question": "Conversion of a DFA to an NFA __________",
        "Options": [
            "a) Is impossible",
            "b) Requires the subset construction",
            "c) Is Chancy",
            "d) Is nondeterministic"
        ],
        "Answer": "Answer: b\nExplanation: In order to convert NDFA to DFA we work with sets of state where each state in the DFA corresponds to a set of NFA states."
    },
    {
        "id": 91,
        "Question": "A regular language corresponds to __________",
        "Options": [
            "a) An alphabet",
            "b) Set of strings over an alphabet",
            "c) A DFA only",
            "d) A DFA or an NFA"
        ],
        "Answer": "Answer: b\nExplanation: A regular grammar takes in all strings over an alphabet."
    },
    {
        "id": 92,
        "Question": "An NFA may be converted to a DFA using __________",
        "Options": [
            "a) Induction",
            "b) A construction",
            "c) Contradiction",
            "d) Compilation"
        ],
        "Answer": "Answer: b\nExplanation: subset construction is used to convert a NFA into DFA."
    },
    {
        "id": 93,
        "Question": "The subset construction shows that every NFA accepts a __________",
        "Options": [
            "a) String",
            "b) Function",
            "c) Regular language",
            "d) Context-free language"
        ],
        "Answer": "Answer: c\nExplanation: Like DFAs, NFAs only recognize regular languages. "
    },
    {
        "id": 94,
        "Options": [
            "a) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-interview-questions-answers-freshers-q5a.png\" alt=\"compilers-interview-questions-answers-freshers-q5a\" width=\"300\" height=\"84\" class=\"alignnone size-full wp-image-159779\" />",
            "b) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-interview-questions-answers-freshers-q5b.png\" alt=\"compilers-interview-questions-answers-freshers-q5b\" width=\"276\" height=\"157\" class=\"alignnone size-full wp-image-159781\" />",
            "c) <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-interview-questions-answers-freshers-q5c.png\" alt=\"compilers-interview-questions-answers-freshers-q5c\" width=\"300\" height=\"120\" class=\"alignnone size-full wp-image-159782\" />",
            "d)  None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The NDFA initially takes either a or b followed by a then b then reaches the final state or takes iterations of a or b to reach the final state."
    },
    {
        "id": 95,
        "Question": "Which is the application of NFA?",
        "Options": [
            "a) A regular language is produced by union of two regular languages",
            "b) The concatenation of two regular languages is regular",
            "c) The Kleene closure of a regular language is regular",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: As per its definition."
    },
    {
        "id": 96,
        "Question": "Can a DFA simulate NDFA?",
        "Options": [
            "a) No",
            "b) Yes",
            "c) Sometimes",
            "d) Depends on NDFA"
        ],
        "Answer": "Answer: b\nExplanation: Yes it can be done through power set construction."
    },
    {
        "id": 97,
        "Question": "Find the wrong statement?",
        "Options": [
            "a) The language accepted by finite automata are the languages denoted by regular expression",
            "b) Every DFA has a regular expression denoting its language",
            "c) For a regular expression r, there does not exists NDFA with L® ant transit that accept",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The vice versa is true."
    },
    {
        "id": 98,
        "Question": "Regular expression a/b denotes which of the following set?",
        "Options": [
            "a) {a}",
            "b) {€,a,b}",
            "c) {a,b}",
            "d) {ab}"
        ],
        "Answer": "Answer: c\nExplanation: Either a is the output or b hence it’s {a, b}."
    },
    {
        "id": 99,
        "Question": "Which behaviour of a NFA can be stimulated by DFA?",
        "Options": [
            "a) Always",
            "b) Sometimes",
            "c) Never",
            "d) Depends on NFA"
        ],
        "Answer": "Answer: a\nExplanation: It can be done through power set construction."
    },
    {
        "id": 100,
        "Question": "What is the relation between NFA-accepted languages and DFA accepted languages?",
        "Options": [
            "a) >",
            "b) <",
            "c) =",
            "d) <="
        ],
        "Answer": "Answer: a\nExplanation: It the standard procedure to convert NFA to DFA."
    },
    {
        "id": 101,
        "Question": "In regular expressions, the operator ‘*’ stands for?",
        "Options": [
            "a) Concatenation",
            "b) Selection",
            "c) Iteration",
            "d) Addition"
        ],
        "Answer": "Answer: c\nExplanation: The no of languages accepted by NFA and DFA is equal."
    },
    {
        "id": 102,
        "Question": "The lexical analysis for a modern language such as Java needs the power of which one of the following machine models in a necessary and sufficient sense?",
        "Options": [
            "a) Finite state automata",
            "b) Deterministic pushdown automata",
            "c) Non-deterministic pushdown automata",
            "d) Turing machine"
        ],
        "Answer": "Answer: a\nExplanation: Two options are invalid because they both accept ‘b’ as a string which is not accepted by give DFA. D is invalid because it accepts bb+a which are not accepted by given DFA."
    },
    {
        "id": 103,
        "Options": [
            "a) i, ii and iii",
            "b) ii, iii and iv",
            "c) i, ii and iv",
            "d) i, iii and iv"
        ],
        "Answer": "Answer: a\nExplanation: Initially in lexical analysis the program is divided into tokens. Tokens can be expressed as regular expressions: [a-zA-Z] [a-zA-Z0-9]*\nthe keyword if is given by if.\nIntegers are given by [+-]? [0-9]+."
    },
    {
        "id": 104,
        "Question": "",
        "Options": [
            "a) i, ii, iii, iv",
            "b) i, ii",
            "c) ii, iii, iv",
            "d) iii, iv"
        ],
        "Answer": "Answer: a\nExplanation: Empty strings can be inputted n a NDFA."
    },
    {
        "id": 105,
        "Question": "The definition of a language L with alphabet {a} is given as following. L = { ank | k > 0, and n is a positive integer constant} What is the minimum number of states needed in a DFA to recognize L?",
        "Options": [
            "a) k+1",
            "b) n+1",
            "c) 2n+1",
            "d) 2k+1"
        ],
        "Answer": "Answer: b\nExplanation: The given alphabet ∑ contains only one symbol {a} and the given NFA accepts all strings with any number of occurrences of ‘a’. Hence the complement is an empty string."
    },
    {
        "id": 106,
        "Question": "S –> aSa| bSb| a| b; the language generated by the above grammar is the set of ____________",
        "Options": [
            "a) All palindromes",
            "b) All odd length palindromes",
            "c) Strings beginning and ending with the same symbol",
            "d) All even length palindromes"
        ],
        "Answer": "Answer: b\nExplanation: The strings accepted by language are {a, b, aaa, bbb, aba, bab,}. All the strings are odd length palindromes."
    },
    {
        "id": 107,
        "Options": [
            "a) strings with the substring 00",
            "b) strings with at most two 0’s",
            "c) strings with at least two 0’s",
            "d) strings beginning and ending with either 0 or 1"
        ],
        "Answer": "Answer: c\nExplanation: The RE having 2 0’s padded by (0+1)* which means accepted strings must have at least 2 0’s."
    },
    {
        "id": 108,
        "Question": "Which one is a FALSE statement?",
        "Options": [
            "a) There exists a unique DFA for every regular language",
            "b) NFA can always are converted to a PDA",
            "c) Complement of CFL is always recursive",
            "d) Every NDFA can be converted to a DFA"
        ],
        "Answer": "Answer: d\nExplanation: Deterministic PDA cannot handle languages or grammars with ambiguity, but NDFA can handle with ambiguous languages as well as context-free grammar. Hence not every Ndfa can be converted to DFA."
    },
    {
        "id": 109,
        "Question": "4. Match the following.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">      Group 1                       Group 2\nP. Regular expression        1. Syntax analysis\nQ. Pushdown automata         2. Code generation\nR. Dataflow analysis         3. Lexical analysis\nS. Register allocation       4. Code optimization</pre></div></div></div></div></div></div>",
        "Options": [
            "a) P-4. Q-1, R-2, S-3",
            "b) P-3, Q-1, R-4, S-2",
            "c) P-3, Q-4, R-1, S-2",
            "d) P-2, Q-1, R-4, S-3"
        ],
        "Answer": "Answer: b\nExplanation: Regular grammar relates to lexical analysis\nPushdown automata relates to Syntax analysis\nData flow analysis is Code optimization\nRegister allocation is code generation."
    },
    {
        "id": 110,
        "Question": "Then L is?",
        "Options": [
            "a) Not recursive",
            "b) Regular",
            "c) Context free but not regular",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The language L1 accept strings {c, abc, abcab, aabbcab, aabbcaabb,} and L2 accept strings {a, b, c, ab, abc, aabc, aabbc, … }. Intersection of these two languages is L1 ∩ L2 = {akbkc | k >= 0} which is not regular but context free."
    },
    {
        "id": 111,
        "Question": "Which of the following CFG’s can’t be simulated by an FSM?",
        "Options": [
            "a) S->Sa/b",
            "b) S->aSb/ab",
            "c) S->abX, X->cY, Y->d/aX",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: NFA-ε can be transformed into a NFA always, the properties are also true for NFAs."
    },
    {
        "id": 112,
        "Question": "The transitions which does not take an input symbol are called ___________",
        "Options": [
            "a) ε-transitions",
            "b) λ-transitions",
            "c) ε-transitions & λ-transitions",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The ε-closure of a set of states Z of an NFA is defined as the set of states reachable from any state in Z following ε-transitions. "
    },
    {
        "id": 113,
        "Question": "Which of the following is a correct statement?",
        "Options": [
            "a) { If an bn  | n = 0,1, 2, 3 ..} is regular language",
            "b) Strings with equal number of a’s and b’s denies a regular language",
            "c) L (A* B*)∩ B gives the set A",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: ε-transitions provides a convenient transition in  the systems whose current states are not precisely known."
    },
    {
        "id": 114,
        "Question": "Find the pair of regular expressions that are equivalent.",
        "Options": [
            "a) (0+1)* and (0*+1*)*",
            "b) (0+1)* and (0+1*)*",
            "c) (0+10)* and (0*+10)*",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The states traversed are ABDBDABDAC, and the only edge not traversed C D."
    },
    {
        "id": 115,
        "Question": "Which of the following strings is NOT in the Kleene star of the language {011, 10, 110}?",
        "Options": [
            "a) 01",
            "b) 10",
            "c) 110",
            "d) 10011101"
        ],
        "Answer": "Answer: a\nExplanation: 111001 cannot be the suffix of any string accepted by this DFA. Suppose s=w111001. No matter what state the DFA reaches after reading w, it will go to state D after reading “111”, then go to state B after reading “00” and finally reaches state C after reading “1”."
    },
    {
        "id": 116,
        "Question": "Which grammar is not regular?",
        "Options": [
            "a) 0^n",
            "b) 0^n 1^n n",
            "c) 0^m 0^n n",
            "d) 0^n 0^n n"
        ],
        "Answer": "Answer: d\nExplanation: All generate all strings of 0’s and 1’s thus are these pairs are equivalent."
    },
    {
        "id": 117,
        "Question": "If is a language, and is a symbol, then, the quotient of and, is the set of strings such that is in: is in. Suppose is regular, which of the following statements is true?",
        "Options": [
            "a) L/a is always a regular language",
            "b) L/a is not a regular language",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Every string in the language {011, 10, 110}* has to be formed from zero or more uses of the strings 011, 10, and 110. A string may be used more than once."
    },
    {
        "id": 118,
        "Question": "Here is a context-free grammar G: S → AB A → 0A1 | 2 B → 1B | 3A which of the following strings are in L (G)?",
        "Options": [
            "a) 021300211",
            "b) 022111300211",
            "c) None of the mentioned",
            "d) 021300211 & 022111300211"
        ],
        "Answer": "Answer: a\nExplanation: According to pumping lemma, is not a regular language. It is the language of the DFA with two states to achieve an even number of 0’s…"
    },
    {
        "id": 119,
        "Question": "The grammar G: S → SS | a | b is ambiguous. Check all and only the strings that have exactly two leftmost derivations in G.",
        "Options": [
            "a) bbb",
            "b) ab",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: We can build a DFA for as such: firstly we get the DFA for: Then, we copy all the states and transitions to the DFA for. However, we mark any state as a final state in if and only if is a final state in."
    },
    {
        "id": 120,
        "Question": "For the following grammar: S → A | B | 2 A → C0 | D B → C1 | E C → D | E | 3 D → E0 | S E → D1 | S Identify all the unit pairs.",
        "Options": [
            "a) D,C",
            "b) A,B",
            "c) B,C",
            "d) A,C"
        ],
        "Answer": "Answer: d\nExplanation: First, notice that A generates strings of the form 021, where n is 0 or more. Also, B gives zero or more 1’s, which is followed by one 3, and then A gives something. Since S generates something an A can generate followed by something a B can generate, the strings in L (G) are of the form 0 21 30 21."
    },
    {
        "id": 121,
        "Options": [
            "a) P is not closed under union",
            "b) NP is not closed under intersection",
            "c) None of the mentioned",
            "d) P is not closed under union & NP is not closed under intersection"
        ],
        "Answer": "Answer: d\nExplanation: Both P and NP are closed under each of these operations."
    },
    {
        "id": 122,
        "Question": "__________ a part of a compiler that is responsible for recognizing syntax.",
        "Options": [
            "a) Parser",
            "b) Bzr",
            "c) Linker",
            "d) Optimizer"
        ],
        "Answer": "Answer: a\nExplanation: They both are equivalent."
    },
    {
        "id": 123,
        "Question": "__________ a part of a compiler that takes as input a stream of characters and produces as output a stream of words along with their associated syntactic categories.",
        "Options": [
            "a) Parser",
            "b) Optimizer",
            "c) Scanner",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Parser recognises all the syntax of the language."
    },
    {
        "id": 124,
        "Question": "_________an IR-to-IR transformer that tries to improve the IR program in some way.",
        "Options": [
            "a) Optimizer",
            "b) Parser",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation:  A compiler’s scanner reads an input stream that consists of characters and produces an output stream that contains words, each labelled with its Syntactic category."
    },
    {
        "id": 125,
        "Question": "_________ a phase of a compiler that maps the IR program into the instruction set and the finite resources of the target machine.",
        "Options": [
            "a) Optimizer",
            "b) Parser",
            "c) Optimizer & Parser",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The optimizer is an IR-to-IR transformer that tries to improve the IR program in some way."
    },
    {
        "id": 126,
        "Question": "Consider the languages L1 =   and L2 = {a}. Which one of the following represents L1 L2* U L1*?",
        "Options": [
            "a) €",
            "b) a*",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: L1* =  * which is { }."
    },
    {
        "id": 127,
        "Options": [
            "a) 1, 2, 3",
            "b) 2, 3, 4",
            "c) 1, 2, 4",
            "d) 1, 3, 4"
        ],
        "Answer": "Answer: c\nExplanation: The DFA can be minimized to two states and the second state is final state .We reach second state after a 0."
    },
    {
        "id": 128,
        "Question": "",
        "Options": [
            "a) String with substring 00",
            "b) String with at most two 0’s",
            "c) String containg at least two 0’s",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The given alphabet ∑ contains only one symbol {a} and the given NFA accepts all strings with any number of occurrences of ‘a’."
    },
    {
        "id": 129,
        "Question": "Which one of the following is FALSE?",
        "Options": [
            "a) Every NFA can be converted to DFA",
            "b) Every subset of a recursively enumerable set is recursive",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The given alphabet contains only one symbol {a} and the given NFA accepts all strings with any number of occurrences of ‘a’."
    },
    {
        "id": 130,
        "Question": "<img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-minimization-dfa-1-q9.png\" alt=\"compilers-questions-answers-minimization-dfa-1-q9\" width=\"300\" height=\"170\" class=\"alignnone size-full wp-image-159838\" />",
        "Options": [
            "a) P-2, Q-1, R-3, S-4",
            "b) P-1, Q-3, R-2, S-4",
            "c) P-1, Q-2, R-3, S-4",
            "d) P-3, Q-2, R-1, S-4"
        ],
        "Answer": "Answer: a\nExplanation: Some are invalid because they both accept ‘b’ as a string which is not accepted by give DFA. D is invalid because it accepts bb+a which are not accepted by given DFA."
    },
    {
        "id": 131,
        "Question": "",
        "Options": [
            "a) I and IV",
            "b) I and III",
            "c) I  and only",
            "d) IV"
        ],
        "Answer": "Answer: c\nExplanation: We need minimum n+ 1 state to build NFA that accepts all substrings of a binary string. Following NFA accepts all strings containing substring of “010″ and it has 4 states. "
    },
    {
        "id": 132,
        "Question": "Which one of the following is TRUE?",
        "Options": [
            "a) The language L={a^n b^n |n>0 } is regular",
            "b) The language L={a^n  |n is prime } is regular",
            "c) The language L={w|w has 3k+1 b’s for some k } is regular",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Initially circle s around b so b* then a then followed by (a+b)*."
    },
    {
        "id": 133,
        "Question": "<img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-minimization-dfa-2-q4.png\" alt=\"compilers-questions-answers-minimization-dfa-2-q4\" width=\"300\" height=\"116\" class=\"alignnone size-full wp-image-159843\" />",
        "Options": [
            "a) q0, q1,q2",
            "b) q0,q1",
            "c) q0,q1,q2,q3",
            "d) q3"
        ],
        "Answer": "Answer: b\nExplanation: State q0 can be omitted because it takes the same input as state q1 hence by removing q0 nothing changes.\n<img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-minimization-dfa-2-q2.png\" alt=\"compilers-questions-answers-minimization-dfa-2-q2\" width=\"279\" height=\"145\" class=\"alignnone size-full wp-image-159842\" />\n Following is equivalent FSA with 2 states."
    },
    {
        "id": 134,
        "Question": "Given an arbitrary non-deterministic finite automaton (NFA) with N states, the maximum number of states in an equivalent minimized DFA is at least?",
        "Options": [
            "a) N2",
            "b) 2N",
            "c) 2N",
            "d) N!"
        ],
        "Answer": "Answer: b\nExplanation: Either it takes 0 or 1 or iterations of it or none.compilers-questions-answers-Obtaining the regular Expression from the Finite automata"
    },
    {
        "id": 135,
        "Question": "What can be said about a regular language L over {a} whose minimal finite state automaton has two states?",
        "Options": [
            "a) L must be {an| n is odd}",
            "b) L must be {an| n is even}",
            "c) L must be {an| n is even}",
            "d) Either L must be {an | n is odd}, or L must be {an | n is even}"
        ],
        "Answer": "Answer: c\nExplanation: If the NFA has n states, the resulting DFA may have up to 2n states, an exponentially larger number, which sometimes makes the construction impractical for large NFAs."
    },
    {
        "id": 136,
        "Question": "How many minimum states are required to find whether a string has odd number of 0’s or not?",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: d\nExplanation: There are two states. When first state is final, it accepts even no. of a’s. When second state is final, it accepts odd no. of a’s."
    },
    {
        "id": 137,
        "Question": "Which one of the following represents the strings in X0?",
        "Options": [
            "a) 10 (0* + (10)*)1",
            "b) 10 (0* + (10)*)*1",
            "c) 10 (0* + (10)*)*1",
            "d) 10 (0 + 10)*1 + 110 (0 + 10)*1"
        ],
        "Answer": "Answer: b\nExplanation: 2 minimum states are required to find whether a string has odd number of 0’s or not.\n<img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q4.png\" alt=\"compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q4\" width=\"300\" height=\"173\" class=\"alignnone size-full wp-image-159849\" />"
    },
    {
        "id": 138,
        "Options": [
            "a) L1 and L3 only",
            "b) L2",
            "c) L2 and L3 only",
            "d) L3 only"
        ],
        "Answer": "Answer: b\nExplanation: In DFA M: all strings must end with ‘a’. In DFA N: all strings must end with ‘b’. So the intersection is empty. For an empty language, only one state is needed. <img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q5a.png\" alt=\"compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q5a\" width=\"159\" height=\"82\" class=\"alignnone size-full wp-image-159851\" />"
    },
    {
        "id": 139,
        "Question": "The reorganizing capability of NDFA and DFA is?",
        "Options": [
            "a) May be different",
            "b) Must be different",
            "c) Must be same",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The smallest possible string by given grammar is “11”.\nX0 = 1X1\n   = 11X2  [Replacing X1 with 1X2] \n   = 11    [Replacing X2 with λ] \nThe string “11” is only possible with option 10 (0* + (10)*)*1."
    },
    {
        "id": 140,
        "Question": "Which of the following is not regular?",
        "Options": [
            "a) String whose length is perfect square and consists of 0s",
            "b) Palindromes consisting  of 0’s and 1’s",
            "c) String whose length is perfect square and consists of 0s & Palindromes consisting  of 0’s and 1’s",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: L3 is simple to guess, it is regular.\nBelow is DFA for L1.\n<img src=\"https://www.sanfoundry.com/wp-content/uploads/2017/05/compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q7.png\" alt=\"compilers-questions-answers-obtaining-regular-expression-from-finite-automata-1-q7\" width=\"300\" height=\"106\" class=\"alignnone size-full wp-image-159852\" />\nL1 is interesting. The important thing to note\nabout L1 is length of x is greater than 0."
    },
    {
        "id": 141,
        "Question": "Which of the following pairs of regular expression are equivalent?",
        "Options": [
            "a) 1(01)* and (10)*1",
            "b) X(xx)* and (xx)*x",
            "c) 1(01)* and (10)*1 & X(xx)* and (xx)*x",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Given any NDFA one can construct an equivalent DFA."
    },
    {
        "id": 142,
        "Question": "Which of the following identity is true?",
        "Options": [
            "a) Ɛ + RR* = R* = ɛ + R*R",
            "b) (R1R2)*R1 = R1 (R2R1)*",
            "c) R*R* = R*",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The former Re can be produced from the latter one."
    },
    {
        "id": 143,
        "Question": "The set of all strings over ∑ = {a,b} in which all strings having bbbb as substring is?",
        "Options": [
            "a) (a+b)* bbbb (a+b)*",
            "b) (a+b)* bb (a+b)*bb",
            "c) bbb(a+b)*",
            "d) bb (a+b)*"
        ],
        "Answer": "Answer: a\nExplanation: Out of  all RE mentioned only the first string  certainly has bbbb as substring. Rest all just have a possibility of having it."
    },
    {
        "id": 144,
        "Question": "The set of all strings over ∑ ={a,b} in which a single a is followed by any number of b’s a single b                   followed by any number of a’s is?",
        "Options": [
            "a) ab* + ba*",
            "b) ab*ba*",
            "c) a*b + b*a",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: ab*+ba* is the expression in which a single a is followed by any number of b’s a single b followed by any number of a’s."
    },
    {
        "id": 145,
        "Question": "Regular expressions are used to represent which language?",
        "Options": [
            "a) Recursive language",
            "b) Context free language",
            "c) Regular language",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Regular expression is represented by regular language."
    },
    {
        "id": 146,
        "Question": "The set of all strings over ∑ = {a,b} in which strings consisting a’s and b’s and ending with in bb is?",
        "Options": [
            "a) ab",
            "b) a*bbb",
            "c) (a+b)* bb",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Only this expression ends with bb only."
    },
    {
        "id": 147,
        "Question": "If P, Q, R are three regular expressions and if P does not contain a then the equation R = R + RP has a unique solution given by?",
        "Options": [
            "a) R = QP*",
            "b) R = P*Q",
            "c) R = RP",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It is an important law primarily used in conversion."
    },
    {
        "id": 148,
        "Question": "If L1 and L2 are regular languages is/are also regular language(s).",
        "Options": [
            "a) L1 + L2",
            "b) L1L2",
            "c) L1",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All these expression give us a regular grammar when L1 and L2 are regular."
    },
    {
        "id": 149,
        "Question": "Which of the following regular expression denotes zero or more instances of an a or b?",
        "Options": [
            "a) a/b",
            "b) (a/b)*",
            "c) (ab)*",
            "d) a*Ib"
        ],
        "Answer": "Answer: b\nExplanation: This expression gives o or more instances of a or b."
    },
    {
        "id": 150,
        "Question": "The string (a)|((b)*(c)) is equivalent to ______________",
        "Options": [
            "a) Empty",
            "b) abcabc",
            "c) b*c|a",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Either b or a can lead followed by c this expression can be achieved by C as well."
    },
    {
        "id": 151,
        "Question": "In a compiler the module that checks every character of the source text is called __________",
        "Options": [
            "a) The code generator",
            "b) The code optimizer",
            "c) The lexical analyzer",
            "d) The syntax analyzer"
        ],
        "Answer": "Answer: a\nExplanation: Lexical analysis is the process of converting a sequence of characters into a sequence of tokens."
    },
    {
        "id": 152,
        "Question": "The context free grammar is ambiguous if ______________",
        "Options": [
            "a) The grammar contains non-terminals",
            "b) Produces more than one parse tree",
            "c) Production has two non-terminals side by side",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Since more than one parse tree is generated hence one than option is available .Therefore it’s ambiguous."
    },
    {
        "id": 153,
        "Question": "What is another name for Lexical Analyser?",
        "Options": [
            "a) Linear Phase",
            "b) Linear Analysis",
            "c) Scanning",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Lexical Analyzer is also called “Linear Phase” or “Linear Analysis” or “Scanning“."
    },
    {
        "id": 154,
        "Question": "An individual token is called ________",
        "Options": [
            "a) Lexeme",
            "b) Lex",
            "c) Lexeme & Lex",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Individual Token is also Called Lexeme."
    },
    {
        "id": 155,
        "Question": "Which phase of the compiler is Lexical Analyser?",
        "Options": [
            "a) First",
            "b) Second",
            "c) Third",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical Analyzer’s Output is given to Syntax Analysis."
    },
    {
        "id": 156,
        "Question": "Input to Lexical Analyser is _________",
        "Options": [
            "a) Source Code",
            "b) Object Code",
            "c) Lexeme",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical Analyzer is First Phase of Compiler."
    },
    {
        "id": 157,
        "Question": "Lexical Analysis Identifies Different Lexical Units in a _______",
        "Options": [
            "a) Source Code",
            "b) Object Code",
            "c) Lexeme",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical analyser’s Input is Source Code."
    },
    {
        "id": 158,
        "Question": "Which one is a type of Lexeme?",
        "Options": [
            "a) Identifiers",
            "b) Constants",
            "c) Keywords",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical Analysis Identifies Different Lexical Units in a source Code."
    },
    {
        "id": 159,
        "Question": "A ________ is a string of characters which form a syntactic unit.",
        "Options": [
            "a) Lexeme",
            "b) Lex",
            "c) Lexeme & Lex",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of them along with Operators are different types of lexemes."
    },
    {
        "id": 160,
        "Question": "The process of forming tokens from an input stream of characters is called __________",
        "Options": [
            "a) Liberalisation",
            "b) Characterisation",
            "c) Tokenization",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation:  The process of forming tokens from an input stream of characters is called tokenization."
    },
    {
        "id": 161,
        "Question": "When expression sum=3+2 is tokenized then what is the token category of 3?",
        "Options": [
            "a) Identifier",
            "b) Assignment operator",
            "c) Integer Literal",
            "d) Addition Operator"
        ],
        "Answer": "Answer: c\nExplanation:\nLexeme\nToken category\n\n\nSum\t\"Identifier\"\n=\t\"Assignment operator\"\n3\t\"Integer literal\"\n+\t\"Addition operator\"\n2\t\"Integer literal\"\n;\t\"End of statement\".\n\n\n"
    },
    {
        "id": 162,
        "Question": "Which grammar defines Lexical Syntax?",
        "Options": [
            "a) Regular Grammar",
            "b) Syntactic Grammar",
            "c) Context free Grammar",
            "d) Lexical Grammar"
        ],
        "Answer": "Answer: d\nExplanation: The specification of a programming language often includes a set of rules, the lexical grammar, which defines the lexical syntax."
    },
    {
        "id": 163,
        "Question": "Two Important lexical categories are __________",
        "Options": [
            "a) White Space",
            "b) Comments",
            "c) None of the mentioned",
            "d) White Space & Comments"
        ],
        "Answer": "Answer: d\nExplanation: Two important common lexical categories are white space and comments. "
    },
    {
        "id": 164,
        "Question": "It has encoded within it information on the possible sequences of characters that can be contained within any of the tokens it handles. The mentioned function is performed by?",
        "Options": [
            "a) Scanner",
            "b) Parser",
            "c) Syntactic Analyser",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The first stage, the scanner, is FSM. It has encoded information on the possible sequences of characters that can be contained within any of the tokens it handles."
    },
    {
        "id": 165,
        "Question": "What goes over the characters of the lexeme to produce value?",
        "Options": [
            "a) Scanner",
            "b) Parser",
            "c) Evaluator",
            "d) Lexical generator"
        ],
        "Answer": "Answer: a\nExplanation: In order to construct a token, the lexical analyzer needs a second stage, the evaluator, which goes over the characters of the lexeme to produce a value."
    },
    {
        "id": 166,
        "Question": "Which one is a lexer Generator?",
        "Options": [
            "a) ANTLR",
            "b) DRASTAR",
            "c) FLEX",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexers are often generated by a lexer generator same as parser."
    },
    {
        "id": 167,
        "Question": "Which of the lexical analyser can handle Unicode?",
        "Options": [
            "a) Java CC",
            "b) JFLex",
            "c) Quex",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: ANTLR – Can generate lexical analyzers and parsers.\nDFASTAR – Generates DFA matrix table-driven lexers in C++.\nFlex – variant of the “lex” (C/C++).\nRagel – A state machine and lexer generator with output in C, C++, C#, Objective-C, D, Java, Go and Ruby."
    },
    {
        "id": 168,
        "Question": "What is the output of a lexical analyzer?",
        "Options": [
            "a) Machine Code",
            "b) Intermediate Code",
            "c) Stream of Token",
            "d) Parse Tree"
        ],
        "Answer": "Answer: d\nExplanation: JavaCC – JavaCC generates lexical analyzers written in Java.\nJFLex – A lexical analyzer generator for Java.\nQuex – A fast universal lexical analyzer generator for C and C++.\nFsLex – A lexer generator for byte and Unicode character input for F#."
    },
    {
        "id": 169,
        "Question": "Which phase of the compiler is Syntax Analysis?",
        "Options": [
            "a) First",
            "b) Second",
            "c) Third",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It is Second Phase Of Compiler after Lexical Analyzer."
    },
    {
        "id": 170,
        "Question": "Syntax Analyser is also known as ___________",
        "Options": [
            "a) Hierarchical Analysis",
            "b) Hierarchical Parsing",
            "c) None of the mentioned",
            "d) Hierarchical Analysis & Parsing"
        ],
        "Answer": "Answer: d\nExplanation: It is also called as Hierarchical Analysis or Parsing."
    },
    {
        "id": 171,
        "Question": "From where it takes its input from?",
        "Options": [
            "a) Lexical analyser",
            "b) Syntactic Analyser",
            "c) Semantic Analyser",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It Groups Tokens of source Program into Grammatical Production."
    },
    {
        "id": 172,
        "Question": "A grammar for a programming language is a formal description of _______________",
        "Options": [
            "a) Syntax",
            "b) Semantics",
            "c) Structure",
            "d) Library"
        ],
        "Answer": "Answer: a\nExplanation: A syntax analyzer or parser takes the input from a lexical analyzer in the form of token streams."
    },
    {
        "id": 173,
        "Question": "Which of these is not true about the Symbol Table?",
        "Options": [
            "a) All the labels of the instructions are symbols",
            "b) Table has entry for symbol name address value",
            "c) Perform the processing of the assembler directives",
            "d) Created during pass 1"
        ],
        "Answer": "Answer: a\nExplanation: Parsers are expected to parse the whole code even if some errors exist in the program. "
    },
    {
        "id": 174,
        "Question": "Which of these features of assembler are Machine-Dependent?",
        "Options": [
            "a) Instruction formats",
            "b) Addressing modes",
            "c) Program relocation",
            "d) All of the  mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The grammar clearly indicates which type of structure does a program has."
    },
    {
        "id": 175,
        "Question": "A compiler can check?",
        "Options": [
            "a) Logical Error",
            "b) Syntax Error",
            "c) Both Logical and Syntax Error",
            "d) Not Logical and Syntax Error"
        ],
        "Answer": "Answer: c\nExplanation: The Symbol table does not ever perform the processing of the assembler derivative."
    },
    {
        "id": 176,
        "Question": "The fourth Generation computer was made up of ______________",
        "Options": [
            "a) Transistor",
            "b) Vacuum tubes",
            "c) Chips",
            "d) Microprocessor chips"
        ],
        "Answer": "Answer: d\nExplanation: All of these options are features of assembler which are machine dependent."
    },
    {
        "id": 177,
        "Question": "Select a Machine Independent phase of the compiler.",
        "Options": [
            "a) Syntax Analysis",
            "b) Intermediate Code generation",
            "c) Lexical Analysis",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of them work independent of a machine."
    },
    {
        "id": 178,
        "Question": "A system program that combines the separately compiled modules of a program into a form suitable for execution?",
        "Options": [
            "a) Assembler",
            "b) Compiler",
            "c) Linking Loader",
            "d) Interpreter"
        ],
        "Answer": "Answer: c\nExplanation: A loader which combines the functions of a relocating loader with the ability to combine a number of program segments that have been independently compiled."
    },
    {
        "id": 179,
        "Question": "Which of the following system software resides in the main memory?",
        "Options": [
            "a) Text Editor",
            "b) Assembler",
            "c) Linker",
            "d) Loader"
        ],
        "Answer": "Answer: d\nExplanation: Loader is used to loading programs."
    },
    {
        "id": 180,
        "Question": "Output file of Lex is __________ the input file is Myfile.",
        "Options": [
            "a) Myfile.e",
            "b) Myfile.yy.c",
            "c) Myfile.lex",
            "d) Myfile.obj"
        ],
        "Answer": "Answer: b\nExplanation: This Produce the filr “myfile.yy.c” which we can then compile with g++."
    },
    {
        "id": 181,
        "Question": "Type checking is normally done during ____________",
        "Options": [
            "a) Lexical Analysis",
            "b) Syntax Analysis",
            "c) Syntax Directed Translation",
            "d) Code generation"
        ],
        "Answer": "Answer: c\nExplanation: It is the function of Syntax directed translation."
    },
    {
        "id": 182,
        "Question": "By whom is the symbol table created?",
        "Options": [
            "a) Compiler",
            "b) Interpreter",
            "c) Assembler",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Syntax analyser does not check the type of the operand."
    },
    {
        "id": 183,
        "Question": "What does a Syntactic Analyser do?",
        "Options": [
            "a) Maintain Symbol Table",
            "b) Collect type of information",
            "c) Create parse tree",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Short Syntax Analysis generates a parse tree."
    },
    {
        "id": 184,
        "Question": "Semantic Analyser is used for?",
        "Options": [
            "a) Generating Object code",
            "b) Maintaining symbol table",
            "c) Generating Object code & Maintaining symbol table",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation:  Symbol table is created by the compiler which contains the list of lexemes or tokens."
    },
    {
        "id": 185,
        "Question": "If P & R are regular and also given that if PQ=R, then?",
        "Options": [
            "a) Q has to be regular",
            "b) Q cannot be regular",
            "c) Q need not be regular",
            "d) Q has to be a CFL"
        ],
        "Answer": "Answer: a\nExplanation: The proof of S1 can be seen in various book of theory of computation but s2 is a problem of category undecidable so a contradiction to this assumption can be easily obtained."
    },
    {
        "id": 186,
        "Question": "Which of the following conversion is not possible (algorithmically)?",
        "Options": [
            "a) Regular grammar to CFG",
            "b) NDFA to DFA",
            "c) NDPDA to DPDA",
            "d) NDTM to DTM"
        ],
        "Answer": "Answer: c\nExplanation: If two regular languages when combined do not always produce a regular language."
    },
    {
        "id": 187,
        "Question": "Consider the grammar given below E? E+E | E*E | E-E | E/E | E^E | (E) | id Assume that + and ^ have the same but least precedence, * and / have the next higher precedence but the same precedence and finally ^ has the highest precedence. Assume + and ^ associate to the left like * and / and that ^ associates to the right. Choose the correct for the ordered pairs (^,^), (-,-), (+,+), (*,*) in the operator precedence table constructed for the grammar.",
        "Options": [
            "a) All <",
            "b) All >",
            "c) < >, =",
            "d) < > > >"
        ],
        "Answer": "Answer: c\nExplanation: Not every NDPDA has an equivalent deterministic PDA. "
    },
    {
        "id": 188,
        "Question": "Recursively enumerable languages are not closed under ______________",
        "Options": [
            "a) Union",
            "b) Intersection",
            "c) Complementation",
            "d) Concatenation"
        ],
        "Answer": "Answer: d\nExplanation: This relation is established of basis of the precedence of operators."
    },
    {
        "id": 189,
        "Question": "Grammar that produce more than one Parse tree for same sentence is ___________",
        "Options": [
            "a) Ambiguous",
            "b) Unambiguous",
            "c) Complementation",
            "d) Concatenation Intersection"
        ],
        "Answer": "Answer: c\nExplanation: Recursive languages are closed under the following operations.\nThe Kleene star L * of L\nthe concatenation L * o P of L and P\nthe union L U P\nthe intersection L ∩ P."
    },
    {
        "id": 190,
        "Question": "Automaton accepting the regular expression of any number of a’ s is ___________",
        "Options": [
            "a) a*",
            "b) ab*",
            "c) (a/b)*",
            "d) a*b*c"
        ],
        "Answer": "Answer: a\nExplanation: An ambiguous grammar is one for which there is more than one parse tree for a single sentence. "
    },
    {
        "id": 191,
        "Question": "Grammars that can be translated to DFAs is ___________",
        "Options": [
            "a) Left linear grammar",
            "b) Right linear grammar",
            "c) Generic grammar",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It gives any number of a’s."
    },
    {
        "id": 192,
        "Question": "Which of the following language accepted by a Push down Automata?",
        "Options": [
            "a) Type0",
            "b) Type1",
            "c) Type2",
            "d) Type3"
        ],
        "Answer": "Answer: b\nExplanation: Right linear grammar can be translated to the DFAs."
    },
    {
        "id": 193,
        "Question": "Given the following statements: (i) Recursive enumerable sets are closed under complementation. (ii) Recursive sets are closed under complements. Which is/are the correct statements?",
        "Options": [
            "a) I only",
            "b) II only",
            "c) Both I and II",
            "d) Neither I nor II"
        ],
        "Answer": "Answer: c\nExplanation: A known fact that type 2 grammar is accepted by PDA."
    },
    {
        "id": 194,
        "Question": "Assume statements S1 and S2 defined as: S1: L2-L1 is recursive enumerable where L1 and L2 are recursive and recursive enumerable respectively. S2: The set of all Turing machines is countable. Which of the following is true?",
        "Options": [
            "a) S1 is correct and S2 is not correct",
            "b) Both S1 and S2 are correct",
            "c) Both S1 and S2 are not correct",
            "d) S1 is not correct and S2 is correct"
        ],
        "Answer": "Answer: b\nExplanation: The assumptions of statement S1 and S2 are correct."
    },
    {
        "id": 195,
        "Question": "A context free language is called ambiguous if _________",
        "Options": [
            "a) It has 2 or more left derivations for some terminal string ѡ є L (G)",
            "b) It has 2 or more right derivations for some terminal string ѡ є L (G)",
            "c) It has 2 or more left & right derivations for some terminal string ѡ є L (G)",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation:  A context-free grammar (CFG) is a set of recursive rewriting rules (or productions) used to generate patterns of strings."
    },
    {
        "id": 196,
        "Question": "Which of the following statement is false?",
        "Options": [
            "a) The CFG can be converted to Chomsky normal form",
            "b) The CFG can be converted to Greibach normal form",
            "c) CFG is accepted by pushdown automata",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All the statements follow the rules."
    },
    {
        "id": 197,
        "Question": "The context free grammar S → A111|S1, A → A0 | 00 is equivalent to _________",
        "Options": [
            "a) {0n1m | n=2, m=3}",
            "b) {0n1m | n=1, m=5}",
            "c) {0n1m | n should be greater than two and m should be greater than four}",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation:  S-> A111\n     S->00111 (A->00)."
    },
    {
        "id": 198,
        "Question": "The context free grammar S → SS | 0S1 | 1S0 | ɛ generates _________",
        "Options": [
            "a) Equal number of 0’s and 1’s",
            "b) Unequal number of 0’s and 1’s",
            "c) Number of 0’s followed by any number of 1’s",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: S->SS\nS->0S1S\nS->0S11S0\nS->0110."
    },
    {
        "id": 199,
        "Question": "Which of the following statement is false?",
        "Options": [
            "a) In derivation tree, the label of each leaf node is terminal",
            "b) In derivation tree, the label of all nodes except leaf nodes is a variable",
            "c) In derivation tree, if the root of a sub tree is X then it is called –tree",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of them are true regarding a derivation tree."
    },
    {
        "id": 200,
        "Question": "Push down automata accepts which language?",
        "Options": [
            "a) Context sensitive language",
            "b) Context free language",
            "c) Recursive language",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: PDA accepts CFG."
    },
    {
        "id": 201,
        "Question": "A regular Grammar is a  _________",
        "Options": [
            "a) CFG",
            "b) Non CFG",
            "c) English Grammar",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Regular grammar is CFG. It restricts its rules to a single non terminal on left hand side."
    },
    {
        "id": 202,
        "Question": "A CFG is closed under _________",
        "Options": [
            "a) Union",
            "b) Kleene star",
            "c) Concatenation",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: CFG is closed under the above mentioned 3 operations."
    },
    {
        "id": 203,
        "Question": "Which of these does not belong to CFG?",
        "Options": [
            "a) Terminal Symbol",
            "b) Non terminal Symbol",
            "c) Start symbol",
            "d) End Symbol"
        ],
        "Answer": "Answer: d\nExplanation: CFG consists of terminal non terminal start symbol set of production rules but does not have an end symbol."
    },
    {
        "id": 204,
        "Question": "How many strings of length less than 4 contains the language described by the regular expression (x+y)*y(a+ab)*?",
        "Options": [
            "a) 7",
            "b) 10",
            "c) 12",
            "d) 11"
        ],
        "Answer": "Answer: d\nExplanation: String of length 0 = 1\nstring of length 1 = 4\nstring of length 2 = 3\nstring of length 3 = 3."
    },
    {
        "id": 205,
        "Question": "Which of the following is true?",
        "Options": [
            "a) (01)*0 = 0(10)*",
            "b) (0+1)*0(0+1)*1(0+1) = (0+1)*01(0+1)*",
            "c) (0+1)*01(0+1)*+1*0* = (0+1)*",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: None."
    },
    {
        "id": 206,
        "Question": "A language is regular if and only if?",
        "Options": [
            "a) Accepted by DFA",
            "b) Accepted by PDA",
            "c) Accepted by LBA",
            "d) Accepted by Turing machine"
        ],
        "Answer": "Answer: a\nExplanation: All of above machine can accept regular language but all string accepted by machine is regular only for DFA."
    },
    {
        "id": 207,
        "Question": "What is Regular grammar?",
        "Options": [
            "a) Context free grammar",
            "b) Non context free grammar",
            "c) English grammar",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Regular grammar is subset of context free grammar."
    },
    {
        "id": 208,
        "Question": "Let the class of language accepted by finite state machine be L1 and the class of languages represented by regular expressions be L2 then?",
        "Options": [
            "a) L1<l2",
            "b) L1>=L2",
            "c) L1 U L2 = .*",
            "d) L1=L2"
        ],
        "Answer": "Answer: d\nExplanation: Finite state machine and regular expression have same power to express a language."
    },
    {
        "id": 209,
        "Question": "Which of the following is not a regular expression?",
        "Options": [
            "a) [(a+b)*-(aa+bb)]*",
            "b) [(0+1)-(0b+a1)*(a+b)]*",
            "c) (01+11+10)*",
            "d) (1+2+0)*(1+2)*"
        ],
        "Answer": "Answer: b\nExplanation: Except [(0+1)-(0b+a1)*(a+b)]* all are regular expression."
    },
    {
        "id": 210,
        "Question": "Regular expression is __________",
        "Options": [
            "a) Type 0 language",
            "b) Type 1 language",
            "c) Type 2 language",
            "d) Type 3 language"
        ],
        "Answer": "Answer: a\nExplanation: According to the Chomsky hierarchy."
    },
    {
        "id": 211,
        "Question": "Which of the following is true?",
        "Options": [
            "a) All subsets of a regular set are always regular",
            "b) All finite subsets of non-regular set are always regular",
            "c) Union of two non regular set of language is not regular",
            "d) Infinite times union of finite set is always regular"
        ],
        "Answer": "Answer: b\nExplanation: None."
    },
    {
        "id": 212,
        "Question": "L and ~L are recursive enumerable then L is?",
        "Options": [
            "a) Regular",
            "b) Context free",
            "c) Context sensitive",
            "d) Recursive"
        ],
        "Answer": "Answer: d\nExplanation: If L is recursive enumerable and its complement too if and only if L is recursive."
    },
    {
        "id": 213,
        "Question": "Regular expressions are closed under _____________",
        "Options": [
            "a) Union",
            "b) Intersection",
            "c) Kleene star",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: According to the definition of regular expression."
    },
    {
        "id": 214,
        "Question": "Give a production grammar that specified language L = {ai b2i >= 1}.",
        "Options": [
            "a) {S->aSbb,S->abb}",
            "b) {S->aSb, S->b}",
            "c) {S->aA,S->b,A->b}",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: S->aSbb, S->abb give a^I  a’s and b^2i b’s."
    },
    {
        "id": 215,
        "Question": "Let R1 and R2 be regular sets defined over alphabet ∑ then?",
        "Options": [
            "a) R1 UNION R2 is regular",
            "b) R1 INTERSECTION R2 is regular",
            "c) ∑ INTERSECTION R2 IS NOT REGULAR",
            "d) R2* IS NOT REGULAR"
        ],
        "Answer": "Answer: a\nExplanation: Union of 2 regular languages is regular. "
    },
    {
        "id": 216,
        "Question": "Which of the following String can be obtained by the language L = {ai b2i / i >=1}?",
        "Options": [
            "a) aaabbbbbb",
            "b) aabbb",
            "c) abbabbba",
            "d) aaaabbbabb"
        ],
        "Answer": "Answer: a\nExplanation: Above production rule gives suppose if 3 a’s the corresponding b’s are 6 b’s. "
    },
    {
        "id": 217,
        "Question": "Give a production grammar for the language L = {x/x ∈ (a,b)*, the number of a’s in x is multiple of 3}.",
        "Options": [
            "a) {S->bS, S->b,S->aA, S->bA, A->aB, B->bB, B->aS, S->a}",
            "b) {S->aS,S->bA,A->bB,B->bBa,B->bB}",
            "c) {S->aaS,S->bbA,A->bB,B->ba}",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The above given condition is satisfied by\nS->bS S->B\nS->aA s->bA A->aB B->bB\nB->aS S->a. "
    },
    {
        "id": 218,
        "Question": "The production Grammar is {S->aSbb, S->abb} is?",
        "Options": [
            "a) type-3 grammar",
            "b) type-2 grammar",
            "c) type-1 grammar",
            "d) type-0 grammar"
        ],
        "Answer": "Answer: b\nExplanation: Type 2 grammar satisfies this production grammar. "
    },
    {
        "id": 219,
        "Question": "The regular expression denote a language comprising all possible strings of even length over the alphabet (0,1) is?",
        "Options": [
            "a) 1 + 0(1+0)*",
            "b) (0+1)(1+0)*",
            "c) (1+0)",
            "d) (00+0111+10)*"
        ],
        "Answer": "Answer: d\nExplanation:  The condition is satisfied by 00 or 0111 or 10 or iterations of these. "
    },
    {
        "id": 220,
        "Options": [
            "a) Linear",
            "b) Nonlinear",
            "c) Linear & Nonlinear",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  a\nExplanation: The above stated grammar is non-linear because it has two non-terminals on the right-hand side."
    },
    {
        "id": 221,
        "Question": "",
        "Options": [
            "a) Right Linear Grammar",
            "b) Left Linear Grammar",
            "c) Right & Left Linear Grammar",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Grammar is non-linear because one of the rules (the first one) has two non-terminals on the right-hand side."
    },
    {
        "id": 222,
        "Question": "What are the two types of Linear Grammar?",
        "Options": [
            "a) Right Linear",
            "b) Left Linear",
            "c) None of the mentioned",
            "d) Right & Left Linear"
        ],
        "Answer": "Answer: a\nExplanation: Grammar is linear because no rule has more than one non terminal on the right-hand side."
    },
    {
        "id": 223,
        "Question": "Which Grammar is it?",
        "Options": [
            "a) Right Linear",
            "b) Left Linear",
            "c) None of the mentioned",
            "d) Right & Left Linear"
        ],
        "Answer": "Answer: a\nExplanation:  Right-Linear grammars, following are the form of productions: A → xB or A → x where x is some string of terminals."
    },
    {
        "id": 224,
        "Question": "",
        "Options": [
            "a) Right Linear",
            "b) Left Linear",
            "c) None of the mentioned",
            "d) Right & Left Linear"
        ],
        "Answer": "Answer: a\nExplanation: grammars in which all of the rules contain only one non-terminal on the left-hand side, and where in every case that non-terminal is the first symbol are called right Linear."
    },
    {
        "id": 225,
        "Question": "What is CFG?",
        "Options": [
            "a) Compiler",
            "b) A language expression",
            "c) Regular Expression",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Since right-linear grammars are regular, it follows that left-linear grammars are also regular."
    },
    {
        "id": 226,
        "Question": "What is the idea of automation with a stack as auxiliary storage?",
        "Options": [
            "a) Finite automata",
            "b) Push Down Automata",
            "c) Deterministic Automata",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: They are defined by rule A->b where A is non terminal and b is terminal."
    },
    {
        "id": 227,
        "Question": "Transition of finite automata is ___________",
        "Options": [
            "a) Finite Diagram",
            "b) State Diagram",
            "c) Node Diagram",
            "d) E-R Diagram"
        ],
        "Answer": "Answer: b\nExplanation: Push Down Automata manipulate the Stack as a part of performing a transition."
    },
    {
        "id": 228,
        "Question": "A context free language is called ambiguous if?",
        "Options": [
            "a)  It has 2 or more than 2 left derivations for some terminal string ѡ є L (G)",
            "b)  It has 2 or more than 2 right derivations for some terminal string ѡ є L (G)",
            "c)  It has 2 or more than 2 left and right derivations for some terminal string ѡ є L (G)",
            "d)  None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Transition of finite automata is Finite Diagram."
    },
    {
        "id": 229,
        "Question": "Which of the following statement is true?",
        "Options": [
            "a) Every language that is defined by regular expression can also be defined by finite automata",
            "b) Every language defined by finite automata can also be defined by regular expression",
            "c) We can convert regular expressions into finite automata",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: When two or more Left and right most derivative occur the grammar turn ambiguous ."
    },
    {
        "id": 230,
        "Question": "Which of the following identity is wrong?",
        "Options": [
            "a) R + R = R",
            "b) (R*)* = R*",
            "c) ƐR = Rɛ = R",
            "d) ØR = RØ = RR*"
        ],
        "Answer": "Answer: d\nExplanation: All these statements are true w.r.t regular expression."
    },
    {
        "id": 231,
        "Question": "Grammars that can be translated to DFAs is __________",
        "Options": [
            "a) Left linear grammar",
            "b) Right linear grammar",
            "c) Generic grammar",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Regular grammar combined with empty does not give R* instead gives empty."
    },
    {
        "id": 232,
        "Question": "A language is regular if and only if it is accepted by finite automata.",
        "Options": [
            "a) The given statement statement is true",
            "b) Given statement is false",
            "c) Statement is partially true",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Right Linear grammar can be translate to DFA."
    },
    {
        "id": 233,
        "Question": "A Push Down Automata is if there is at most one transition applicable to each configuration?",
        "Options": [
            "a) Deterministic",
            "b) Non deterministic",
            "c) Finite",
            "d) Non finite"
        ],
        "Answer": "Answer: a\nExplanation: Regular Language is accepted by Finite Automata. Every regular language is Context free."
    },
    {
        "id": 234,
        "Question": "Which of the following derivations does a top-down parser use while parsing an input string?",
        "Options": [
            "a) Leftmost derivation",
            "b) Leftmost derivation  in reverse",
            "c) Rightmost derivation",
            "d) Rightmost derivation in reverse"
        ],
        "Answer": "Answer: a\nExplanation: In top down parser takes input from Left to right constructing leftmost derivation of the sentence."
    },
    {
        "id": 235,
        "Question": "The process of assigning load addresses to the various parts of the program and adjusting the code and data in the program to reflect the assigned addresses is called?",
        "Options": [
            "a) Assembly",
            "b) Parsing",
            "c) Relocation",
            "d) Symbol resolute"
        ],
        "Answer": "Answer: c\nExplanation: Relocation is the process of replacing symbolic references or names of libraries with actual usable addresses in memory before running a program. Linker performs it during compilation."
    },
    {
        "id": 236,
        "Question": "Which of the following statements is false?",
        "Options": [
            "a) Left as well as right most derivations can be in Unambiguous grammar",
            "b) An LL (1) parser is a top-down parser",
            "c) LALR is more powerful than SLR",
            "d) Ambiguous grammar can’t be LR (k)"
        ],
        "Answer": "Answer: a\nExplanation: If a grammar has more than one leftmost (or rightmost) derivation the grammar is ambiguous. Sometimes in unambiguous grammar the rightmost derivation and leftmost derivations may differ."
    },
    {
        "id": 237,
        "Options": [
            "a) (i) only",
            "b) (i) and (iii) only",
            "c) (ii) and (iii) only",
            "d) (iii) and (iv) only"
        ],
        "Answer": "Answer: b\nExplanation: An operator precedence parser is a bottom-up parser that interprets an operator-precedence grammar.\n Consider the grammar with the following translation rules and E as the start symbol.\nA -> A1 #B {A.value = A1.value * B.value}\n| B {A.value = B.value}\nB-> B1 & F {B.value = B1.value + C.value}\n|C {B.value= C.value }\nC -> num {C.value = num.value}."
    },
    {
        "id": 238,
        "Question": "Compute E.value for the root of the parse tree for the expression:2 # 3 & 5 # 6 &4.",
        "Options": [
            "a) 200",
            "b) 180",
            "c) 160",
            "d) 40"
        ],
        "Answer": "Answer: c\nExplanation: Higher precedence operator will never produce an expression with operator with lower precedence.&># in terms of precedence order."
    },
    {
        "id": 239,
        "Question": "which of the following is true?",
        "Options": [
            "a) * has higher precedence than +",
            "b) – has higher precedence than *",
            "c) + and — have same precedence",
            "d) + has higher precedence than *"
        ],
        "Answer": "Answer: b\nExplanation: Precedence is that a higher precedence operator will never produce an expression with operator with lower precedence.\nIn the given grammar MINUS has higher precedence than ASTERIX."
    },
    {
        "id": 240,
        "Question": "Consider a program P that consists of two source modules M1(contains reference to a function defined in M2) and M2 contained in two different files.",
        "Options": [
            "a) Edit time",
            "b) Compile time",
            "c) Link time",
            "d) Load time"
        ],
        "Answer": "Answer: c\nExplanation: Compiler transforms source code into the machine language which is in binary.\nKinds of object codes:\ni. Defined symbols, which allow it to be called by other modules,\nii. Undefined symbols, which call the other modules where these symbols are defined, and\niii. Symbols which are used internally within  object file for relocation."
    },
    {
        "id": 241,
        "Question": "Which of the following suffices to convert an arbitrary CFG to an LL(1) grammar?",
        "Options": [
            "a) Removing left recursion only",
            "b) Factoring the grammar alone",
            "c) Factoring & left recursion removal",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Factoring as well as left recursion removal do not suffice to convert an arbitrary CFG to LL(1) grammar."
    },
    {
        "id": 242,
        "Question": "Assume that the SLR parser for a grammar G has n1 states and the LALR parser for G has n2 states.",
        "Options": [
            "a) n1 is necessarily less than n2",
            "b) n1 is necessarily equal to n2",
            "c) n1 is necessarily greater than n2",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: SLR parser has less range of context free languages than LALR but still both n1 & n2 are same for SLR & LALR respectively."
    },
    {
        "id": 243,
        "Question": "10. Match the following.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">P. Regular expression        1. Syntax analysis\nQ. Pushdown automata         2. Code generation\nR. Dataflow analysis         3. Lexical analysis\nS. Register allocation       4. Code optimization</pre></div></div></div></div></div></div>",
        "Options": [
            "a) P-4. Q-1, R-2, S-3",
            "b) P-3, Q-1, R-4, S-2",
            "c) P-3, Q-4, R-1, S-2",
            "d) P-2, Q-1, R-4, S-3"
        ],
        "Answer": "Answer: b\nExplanation: Syntax analysis has Regular expressions. The code optimization goes hand in hand with data flow analysis.  Whereas CFG is related to PDA  which is related to syntax analysis Register allocation is used in reference with code generation."
    },
    {
        "id": 244,
        "Options": [
            "a) I and II",
            "b) I and IV",
            "c) III and IV",
            "d) I III and IV"
        ],
        "Answer": "Answer: b\nExplanation: In recursion, space used but recursive call can’t be calculated by the compiler. "
    },
    {
        "id": 245,
        "Question": "Which of the following describes a handle (as applicable to LR-parsing) appropriately?",
        "Options": [
            "a) Position where  next reduce or  shift  operation will occur",
            "b) The next step has use of Non-terminal for reduction",
            "c) Used for reduction in a coming-up  step along with a position in the sentential form where the next shift or reduce operation will occur",
            "d) Used in the next step for reduction along with a position in the sentential form where the right hand side of the production may be found"
        ],
        "Answer": "Answer: d\nExplanation: the next step in LR parsing shall have a Reduction."
    },
    {
        "id": 246,
        "Question": "Which one of the following is a top-down parser?",
        "Options": [
            "a) Recursive descent parser",
            "b) Operator precedence parser",
            "c) An LR(k) parser",
            "d) An LALR(k) parser"
        ],
        "Answer": "Answer: a\nExplanation: Recursive Descent also known as top down parsing also known to be LL(1).\n Consider the following two statements:\nP: Every regular grammar is LL(1)\nQ: Regular is LR(1) grammar."
    },
    {
        "id": 247,
        "Question": "Which of the following is TRUE?",
        "Options": [
            "a) Both P and Q are true",
            "b) P is true and Q is false",
            "c) P is false and Q is true",
            "d) Both P and Q are false"
        ],
        "Answer": "Answer: c\nExplanation: Ambiguity can be seen in  regular grammar\nS → aA/a\nA → aA/ε\nIn above grammar, string ‘a’ has two leftmost\nderivations.\n   S → aA\n  S → a\n      S->a (using A->ε)."
    },
    {
        "id": 248,
        "Question": "Which one of the following is TRUE?",
        "Options": [
            "a) + is left associative, while ∗ is right associative",
            "b) + is right associative, while ∗ is left associative",
            "c) Both + and ∗ are right associative",
            "d) Both + and ∗ are left associative"
        ],
        "Answer": "Answer: b\nExplanation: It is associative we can see and tell.\nSecond productions latter part shows left recursion and is left associative."
    },
    {
        "id": 249,
        "Question": "The grammar A → AA | (A) | e is not suitable for predictive-parsing because the grammar is?",
        "Options": [
            "a) Ambiguous",
            "b) Left recursive",
            "c) Right recursive",
            "d) An operator grammar"
        ],
        "Answer": "Answer: b\nExplanation:\nA ::= A a\n    | b  is the left recursive language. "
    },
    {
        "id": 250,
        "Question": "For a sentence n + n × n, the handles in the right-sentential form of the reduction are __________",
        "Options": [
            "a) n, E + n and E + n × n",
            "b) n, E + n and E + n × n",
            "c) n, n + n and n + n × n",
            "d) n, E + n and E × n"
        ],
        "Answer": "Answer: d\nExplanation:  E → E + n       {Applying E → E + n }\n  → E + E * n   {Applying E → E * n }\n  → E + n * n   {Applying E → n }\n  → n + n * n   {Applying E → n }."
    },
    {
        "id": 251,
        "Question": "8. Which grammar rules violate the requirements of an operator grammar?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">1.  P → Q R                    \n2.  P → Q s R\n3.  P → ε       \n4.  P → Q t R r</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 only",
            "b) 1 and 3 only",
            "c) 2 and 3 only",
            "d) 3 and 4 only"
        ],
        "Answer": "Answer: b\nExplanation: Top down parsin:  We begin with the start symbol and compare the right side of the different productions against the first piece of input to see which of the productions should be used."
    },
    {
        "id": 252,
        "Question": "Which of the following suffices to convert an arbitrary CFG to an LL(1) grammar?",
        "Options": [
            "a) Removing left Recursive alone",
            "b) Factoring the grammar alone",
            "c) Along with removing left recursion we also perform the factoring of the grammar",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Removing left recursion and factoring the grammar do not suffice to convert an arbitrary CFG to LL(1) grammar.\n"
    },
    {
        "id": 253,
        "Question": "In a bottom-up evaluation of a syntax directed definition its inherited attributes can do which of the following?",
        "Options": [
            "a) Always evaluated",
            "b) Can be  evaluated  if the definition is L attributed",
            "c) Can be  evaluated  if the definition has synthesized attributes",
            "d) Never be evaluated"
        ],
        "Answer": "Answer: b\nExplanation: A Syntax Directed Definition (SDD) is called S Attributed if it has only synthesized attributes. Also the L-Attributed Definitions contain both synthesized and inherited attributes but do not need to build a dependency graph to evaluate them. "
    },
    {
        "id": 254,
        "Options": [
            "a) LL(1)",
            "b) SLR(1) but not LL(1)",
            "c) LALR(1) but not SLR(1)",
            "d) LR(1) but not LALR(1)"
        ],
        "Answer": "Answer: a\nExplanation: Since there is no conflict, the grammar is LL (1) hence a predictive parse table with no conflicts can be constructed."
    },
    {
        "id": 255,
        "Question": "Which of the following statements is false?",
        "Options": [
            "a) Unambiguous grammar has both kind of derivations",
            "b) An LL(1) parser is a top-down parser",
            "c) LALR is more powerful than SLR",
            "d) Ambiguous grammar can’t be LR(k)"
        ],
        "Answer": "Answer: a\nExplanation: If a grammar has more than one leftmost (or rightmost) derivation the grammar is ambiguous. "
    },
    {
        "id": 256,
        "Question": "Which of the following is true?",
        "Options": [
            "a) * has higher precedence than +",
            "b) – has higher precedence than *",
            "c) + and — have same precedence",
            "d) + has higher precedence than *"
        ],
        "Answer": "Answer: b\nExplanation: e.g. input is 3*4-5 r\n\n\n        \n\n         E\n     /  |  \\\n     E   *   F\n  |     / | \\\n  F    F - F\n  |    |     |\nid (3) id (4) id (5)\n\n\n First ‘- ‘ is be evaluated then ‘ *’\n"
    },
    {
        "id": 257,
        "Question": "Which one of the following is true at any valid state in shift-reduce parsing?",
        "Options": [
            "a) At the bottom we find the prefixes",
            "b) None of the mentioned",
            "c) Stack contains only viable prefixes",
            "d) Stack consists of viable prefixes"
        ],
        "Answer": "Answer: c\nExplanation: The prefixes on the stack of a shift-reduce parser are called viable prefixes. "
    },
    {
        "id": 258,
        "Question": "In the context of abstract-syntax-tree and control-flow-graph. Which one of the following is true?",
        "Options": [
            "a) In both AST and CFG if node N2 be the successor of node N1",
            "b) For any input program, neither AST nor CFG will contain a cycle",
            "c) The max number of successors of a node in an AST and a CFG depends on the input program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Successors depends on input ."
    },
    {
        "id": 259,
        "Question": "6. Match the following.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">      List-I                  List-II\nA. Lexical analysis       1. Graph coloring\nB. Parsing                2. DFA minimization\nC. Register allocation    3. Post-order traversal\nD. Expression evaluation  4. Production tree</pre></div></div></div></div></div></div>",
        "Options": [
            "a) A – 2, B – 3, C – 1, D – 4",
            "b) A – 2, B – 1, C – 4, D – 3",
            "c) A – 2, B – 4, C – 1, D – 3",
            "d) A – 2, B – 3, C – 4, D – 1"
        ],
        "Answer": "Answer: c\nExplanation: The entire column an items matches the Column B items in a certain way. "
    },
    {
        "id": 260,
        "Question": "Which of the following pairs is the most powerful?",
        "Options": [
            "a) SLR, LALR",
            "b) Canonical LR ,LALR",
            "c) SLR canonical LR",
            "d) LALR canonical LR"
        ],
        "Answer": "Answer: c\nExplanation parser algorithm is simple."
    },
    {
        "id": 261,
        "Question": "What is the maximum number of reduce moves that can be taken by a bottom-up parser for a grammar with no epsilon- and unit-production to parse a string with n tokens?",
        "Options": [
            "a) n/2",
            "b) n-1",
            "c) 2n-1",
            "d) 2^n"
        ],
        "Answer": "Answer: d\nExplanation: There is ambiguity as the string can be derived in 2 possible ways.\nFirst Leftmost Derivation\n  S → F\n  F → c\nSecond Leftmost Derivation\n  S → H\n  H → c."
    },
    {
        "id": 262,
        "Question": "Which one is false?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">1. Cannot be merged since look ahead’s are different.\n2. Can be merged but will result in S-R conflict.\n3. Can be merged but will result in R-R conflict.\n4. Cannot be merged since goto on c will lead to two different sets.</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 only",
            "b) 2 only",
            "c) 1 and 4 only",
            "d) 1, 2, 3 and 4 only"
        ],
        "Answer": "Answer: b\nExplanation: The moves are n-1."
    },
    {
        "id": 263,
        "Question": "Inherited attribute is a natural choice in ___________",
        "Options": [
            "a) Variable declarations record is maintained",
            "b) L values and R values",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It keeps track of variable."
    },
    {
        "id": 264,
        "Question": "YACC builds up __________",
        "Options": [
            "a) SLR parsing table",
            "b) Canonical LR parsing table",
            "c) LALR parsing table",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: It is a parser generator."
    },
    {
        "id": 265,
        "Question": "In an absolute loading scheme which loader function is accomplished by assembler?",
        "Options": [
            "a) Re-allocation",
            "b) Allocation",
            "c) Linking",
            "d) Loading"
        ],
        "Answer": "Answer: a\nExplanation: Large number variables onto a small number of CPU register."
    },
    {
        "id": 266,
        "Question": "A parser with the valid prefix property is advantageous because it __________",
        "Options": [
            "a) Detects errors",
            "b) None of the mentioned",
            "c) Errors are passed to the text phase",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Advantage for a valid prefix property."
    },
    {
        "id": 267,
        "Question": "The action of parsing the source program into proper syntactic classes is called __________",
        "Options": [
            "a) Syntax Analysis",
            "b) Lexical Analysis",
            "c) Interpretation analysis",
            "d) General Syntax Analysis"
        ],
        "Answer": "Answer: b\nExplanation: Conversion of characters to tokens."
    },
    {
        "id": 268,
        "Question": "Relocating bits used by relocating loader are specified by __________",
        "Options": [
            "a) Relocating loader itself",
            "b) Linker",
            "c) Assembler",
            "d) Macro Processor"
        ],
        "Answer": "Answer: b\nExplanation: Takes an object files and combines them into a single executable file, library file, or another object file."
    },
    {
        "id": 269,
        "Question": "What is the binary equivalent of the decimal number 368?",
        "Options": [
            "a) 10111000",
            "b) 110110000",
            "c) 111010000",
            "d) 111100000"
        ],
        "Answer": "Answer: b\nExplanation: 368 binary equivalents is\n8=1000\n6=0110\n3=0011\nSo 1101101000."
    },
    {
        "id": 270,
        "Question": "AB+(A+B)’ is equivalent to __________",
        "Options": [
            "a) A?B",
            "b) A+B",
            "c) (A+B)A",
            "d) (A+B)B"
        ],
        "Answer": "Answer: a\nExplanation: It is equivalent to A? B."
    },
    {
        "id": 271,
        "Question": "A top down parser generates __________",
        "Options": [
            "a) Rightmost Derivation",
            "b) Right most derivation in reverse",
            "c) Left most derivation",
            "d) Left most derivation in reverse"
        ],
        "Answer": "Answer: c\nExplanation: Top-down parsing is a parsing strategy where one first looks at the highest level of the parse tree and works down the parse tree by using the rewriting rules of a formal grammar. "
    },
    {
        "id": 272,
        "Question": "Running time of a program depends on __________",
        "Options": [
            "a) Addressing mode",
            "b) Order of computations",
            "c) The usage of machine idioms",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Run time, runtime or execution time is the time during which a program is running (executing)."
    },
    {
        "id": 273,
        "Question": "Which of the following is the fastest logic?",
        "Options": [
            "a) TTL",
            "b) ECL",
            "c) CMOS",
            "d) LSI"
        ],
        "Answer": "Answer: b\nExplanation: In electronics, emitter-coupled logic (ECL) is a high-speed integrated circuit. "
    },
    {
        "id": 274,
        "Question": "A bottom up parser generates __________",
        "Options": [
            "a) Right most derivation",
            "b) Rightmost derivation in reverse",
            "c) Leftmost derivation",
            "d) Leftmost derivation in reverse"
        ],
        "Answer": "Answer: b\nExplanation: This corresponds to starting at the leaves of the parse tree also known as shift-reduce parsing."
    },
    {
        "id": 275,
        "Question": "A grammar that produces more than one parse tree for some sentence is called __________",
        "Options": [
            "a) Ambiguous",
            "b) Unambiguous",
            "c) Regular",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation:  ambiguous grammar has more than one parse tree."
    },
    {
        "id": 276,
        "Question": "An optimizer Compiler __________",
        "Options": [
            "a) Is optimized to occupy less space",
            "b) Is optimized to occupy less space & Optimize the code",
            "c) Optimize the code",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation:  In computing, an optimizing compiler is a compiler that tries to minimize or maximize some attributes of an executable computer program."
    },
    {
        "id": 277,
        "Question": "The linker __________",
        "Options": [
            "a) Is similar to interpreter",
            "b) Uses source code as its input",
            "c) Is required to create a load module",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation:  It is a program that takes one or more object files generated by a compiler and combines them into a single executable file, library file, or another object file."
    },
    {
        "id": 278,
        "Question": "A latch is constructed using which two cross coupled?",
        "Options": [
            "a) AND OR gates",
            "b) AND gates",
            "c) NAND and NOR gates",
            "d) NAND gates"
        ],
        "Answer": "Answer: d\nExplanation: It has two inputs and one output."
    },
    {
        "id": 279,
        "Question": "Pee Hole optimization __________",
        "Options": [
            "a) Loop Optimization",
            "b) Local Optimization",
            "c) Constant folding",
            "d) Data Flow analysis"
        ],
        "Answer": "Answer: c\nExplanation: More loops are added."
    },
    {
        "id": 280,
        "Question": "The optimization which avoids test at every iteration is?",
        "Options": [
            "a) Loop unrolling",
            "b) Loop jamming",
            "c) Constant folding",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation:  Execution speed is enhanced by sacrificing bits. "
    },
    {
        "id": 281,
        "Question": "Scissoring enables __________",
        "Options": [
            "a) A part of data to be displayed",
            "b) Entire data to be displayed",
            "c) None of the mentioned",
            "d) No data to be displayed"
        ],
        "Answer": "Answer: a\nExplanation: Displays only some part of the data."
    },
    {
        "id": 282,
        "Question": "Shift reduce parsers are __________",
        "Options": [
            "a) Top down Parser",
            "b) Bottom Up parser",
            "c) May be top down or bottom up",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Also known as shift reduce parser."
    },
    {
        "id": 283,
        "Question": "DAG representation of a basic block allows __________",
        "Options": [
            "a) Automatic detection of local common sub expressions",
            "b) Detection of induction variables",
            "c) Automatic detection of loop variant",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It detects local sub expression."
    },
    {
        "id": 284,
        "Question": "Inherited attribute is a natural choice in __________",
        "Options": [
            "a) Tracking  declaration of a variable",
            "b) Correct use of L and R values",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: These attribute keep a check on variable declaration."
    },
    {
        "id": 285,
        "Question": "An intermediate code form is __________",
        "Options": [
            "a) Postfix notation",
            "b) Syntax Trees",
            "c) Three Address code",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Intermediate code generator receives input from its predecessor phase, semantic analyzer, in the form of an annotated syntax tree. "
    },
    {
        "id": 286,
        "Question": "Which of the following actions an operator precedence parser may take to recover from an error?",
        "Options": [
            "a) Insert symbols onto the stack",
            "b) Delete symbols from the stack",
            "c) Inserting or deleting symbols from the input",
            "d) All of the mentioned"
        ],
        "Answer": "Answer:  d\nExplanation: All these symbols are used to recover operator precedence parser from an error."
    },
    {
        "id": 287,
        "Question": "What is the output of lexical analyzer?",
        "Options": [
            "a) A set of regular expression",
            "b) Syntax tress",
            "c) Set of Token",
            "d) String of Characters"
        ],
        "Answer": "Answer: c\nExplanation: Lexical analysis is the process of converting a sequence of characters into a sequence of tokens."
    },
    {
        "id": 288,
        "Question": "Which of the following is used for grouping of characters into tokens?",
        "Options": [
            "a) Parser",
            "b) Code optimization",
            "c) Code generator",
            "d) Lexical analyser"
        ],
        "Answer": "Answer: d\nExplanation: Lexical analysis is the process of converting a sequence of characters into a sequence of tokens."
    },
    {
        "id": 289,
        "Question": "Shift reduce parsers are __________",
        "Options": [
            "a) Top down parser",
            "b) Bottom up parser",
            "c) Maybe both",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: This corresponds to starting at the leaves of the parse tree. It can be thought of a process of reducing the string in question to the start symbol of the grammar. Bottom-up parsing is also known as shift-reduce parsing."
    },
    {
        "id": 290,
        "Question": "A bottom up parser generates __________",
        "Options": [
            "a) Right most derivation",
            "b) Right most derivation in reverse",
            "c) Left most derivation",
            "d) Left most derivation in reverse"
        ],
        "Answer": "Answer: b\nExplanation: This corresponds to starting at the leaves of the parse tree. It can be thought of. A process of reducing the string in question to the start symbol of the grammar. Bottom-up parsing is also known as shift-reduce parsing."
    },
    {
        "id": 291,
        "Question": "What is garbage?",
        "Options": [
            "a) Unallocated storage",
            "b) Allocated storage whose access paths are destroyed?",
            "c) Allocated storage",
            "d) Uninitialized storage"
        ],
        "Answer": "Answer: b\nExplanation: These are more like memory locations with values whose pointers have been revoked."
    },
    {
        "id": 292,
        "Question": "An optimizing compiler __________",
        "Options": [
            "a) Is optimized to occupy less space",
            "b) Is optimized to take less time for execution",
            "c) Optimized the code",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  c\nExplanation: As the name suggests that it optimizes the code."
    },
    {
        "id": 293,
        "Question": "Input to code generator is __________",
        "Options": [
            "a) Source code",
            "b) Intermediate code",
            "c) Target code",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Intermediate code is the input to the code generator."
    },
    {
        "id": 294,
        "Question": "A synthesized attribute is an attribute whose value at a parse tree node depends on __________",
        "Options": [
            "a) Attributes at the siblings only",
            "b) Attributes at parent node only",
            "c) Attributes at children nodes only",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Synthesized attribute’s value depend on children node only."
    },
    {
        "id": 295,
        "Question": "In a bottom up evaluation of a syntax direction definition, inherited attributes can __________",
        "Options": [
            "a) Always be evaluated",
            "b) Be evaluated only if the definition is L –attributed",
            "c) Evaluation only done if the definition has synthesized attributes",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  c\nExplanation: Bottom-up parsing identifies and processes the text’s lowest-level, before its mid-level structures, and the highest-level overall structure to last are left."
    },
    {
        "id": 296,
        "Question": "The graph that shows basic blocks and their successor relationship is called __________",
        "Options": [
            "a) DAG",
            "b) Flow Chart",
            "c) Control Graph",
            "d) Hamilton graph"
        ],
        "Answer": "Answer: b\n Explanation: Flow chart shows basic blocks."
    },
    {
        "id": 297,
        "Question": "_________ or scanning is the process where the stream of characters making up the source program is read from left to right and grouped into tokens.",
        "Options": [
            "a) Lexical Analysis",
            "b) Diversion",
            "c) Modelling",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical analysis is the process of converting a sequence of characters into a sequence of tokens."
    },
    {
        "id": 298,
        "Question": "_____________ is a graph representation of a derivation.",
        "Options": [
            "a) The parse tree",
            "b) Oct tree",
            "c) Binary tree",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Parse tree is a representation of the derivation."
    },
    {
        "id": 299,
        "Question": "Which of the following symbols table implementation is based on the property of locality of reference?",
        "Options": [
            "a) Hash Table",
            "b) Search tree",
            "c) Self organizing list",
            "d) Linear list"
        ],
        "Answer": "Answer: c\nExplanation: Self Organizing list is based on locality of reference. "
    },
    {
        "id": 300,
        "Question": "Assume that the SLR parser for a grammar G has n1 states and the LALR parser for G has n2 states. Hence which one is true?",
        "Options": [
            "a) N1 is necessarily less than n2",
            "b) N1 is necessarily equal to n2",
            "c) N1 is necessarily greater than n2",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The output of lexical analyzer is output token."
    },
    {
        "id": 301,
        "Question": "Which of these is also known as look-head LR parser?",
        "Options": [
            "a) SLR",
            "b) LR",
            "c) LLR",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: LLR is the look ahead parser."
    },
    {
        "id": 302,
        "Question": "What is the similarity between LR, LALR and SLR?",
        "Options": [
            "a) Use same algorithm, but different parsing table",
            "b) Same parsing table, but different algorithm",
            "c) Their Parsing tables and algorithm are similar but uses top down approach",
            "d) Both Parsing tables and algorithm are different"
        ],
        "Answer": "Answer: a\nExplanation: The common grounds of these 3 parser is the algorithm but parsing table is different."
    },
    {
        "id": 303,
        "Question": "An LR-parser can detect a syntactic error as soon as __________",
        "Options": [
            "a) The parsing starts",
            "b) It is possible to do so a left-to-right scan of the input",
            "c) It is possible to do so a right-to-left scan of the input",
            "d) Parsing ends"
        ],
        "Answer": "Answer: b\nExplanation: Error is found when it the input string is scanned."
    },
    {
        "id": 304,
        "Question": "Which of these is true about LR parsing?",
        "Options": [
            "a) Is most general non-backtracking shift-reduce parsing",
            "b) It is still efficient",
            "c) Is most general non-backtracking shift-reduce parsing & It is still efficient",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: LR parsers are a type of bottom-up parsers that efficiently handle deterministic context-free languages in guaranteed linear time."
    },
    {
        "id": 305,
        "Question": "Which of the following is incorrect for the actions of A LR-Parser I) shift s ii) reduce A->ß iii) Accept iv) reject?",
        "Options": [
            "a) Only I)",
            "b) I) and ii)",
            "c) I), ii) and iii)",
            "d) I), ii) , iii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: Only reject out of the following is a correct LR parser action."
    },
    {
        "id": 306,
        "Question": "If a state does not know whether it will make a shift operation or reduction for a terminal is called _________",
        "Options": [
            "a) Shift/reduce conflict",
            "b) Reduce /shift conflict",
            "c) Shift conflict",
            "d) Reduce conflict"
        ],
        "Answer": "Answer: a\nExplanation: As the name suggests that the conflict is between shift and reduce hence it is called shift reduce conflict."
    },
    {
        "id": 307,
        "Question": "When there is a reduce/reduce conflict?",
        "Options": [
            "a) If a state does not know whether it will make a shift operation using the production rule i or j for a terminal",
            "b) If a state does not know whether it will make a shift or reduction operation using the production rule i or j for a terminal",
            "c) If a state does not know whether it will make a reduction operation using the production rule i or j for a terminal",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: It occurs when If a state does not know whether it will make a reduction operation using the production rule i or j for a terminal."
    },
    {
        "id": 308,
        "Question": "When ß (in the LR(1) item A -> ß.a,a) is not empty, the look-head _________",
        "Options": [
            "a) Will be affecting",
            "b) Does not have any affect",
            "c) Shift will take place",
            "d) Reduction will take place"
        ],
        "Answer": "Answer: b\nExplanation: There is no terminal before the non terminal beta."
    },
    {
        "id": 309,
        "Question": "When ß is empty (A -> ß.,a), the reduction by A-> a is done by _________",
        "Options": [
            "a) If next symbol is a terminal",
            "b) Only If the next input symbol is a",
            "c) Only If the next input symbol is A",
            "d) Only if the next input symbol is a"
        ],
        "Answer": "Answer: d\nExplanation: The next token is considered in this case it’s a."
    },
    {
        "id": 310,
        "Question": "The construction of the canonical collection of the sets of LR (1) items are similar to the construction of the canonical collection of the sets of LR (0) items. Which is an exception?",
        "Options": [
            "a) Closure and goto operations work a little bit different",
            "b) Closure and goto operations work similarly",
            "c) Closure and additive operations work a little bit different",
            "d) Closure and associatively operations work a little bit different"
        ],
        "Answer": "Answer: a\nExplanation: Closure and goto do work differently in case of LR (0) and LR (1)."
    },
    {
        "id": 311,
        "Question": "What is terminal table?",
        "Options": [
            "a) Contains all constants in the program",
            "b) Is a permanent table of decision rules in the form of patterns for matching with the uniform symbol table to discover syntactic structure",
            "c) Consist of a full or partial list of the token is as they appear in the program created by lexical analysis and used for syntax analysis and interpretation",
            "d) Is a permanent table which lists all keywords and special symbols of the language in symbolic form"
        ],
        "Answer": "Answer: d\nExplanation:  A permanent database that has entry for each terminal symbols such as arithmetic operators, keywords, punctuation characters such as ‘;’, ‘,’etc Fields: Name of the symbol."
    },
    {
        "id": 312,
        "Question": "Advantage of incorporating the macro-processor into pass 1 is that _________",
        "Options": [
            "a) Many functions have to be implemented twice",
            "b) Functions are combined not necessarily creating intermediate files as output from the macro-processor and input to the assembler",
            "c) More flexibility is provided to the programmer in that he may use all the features of the assembler in conjunction with macros",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation:  A general-purpose macro processor or general purpose pre-processor is a macro designed primarily for string manipulation, macro definition."
    },
    {
        "id": 313,
        "Question": "Which of the following is a phase of a compilation process?",
        "Options": [
            "a) Lexical Analysis",
            "b) Code Generation",
            "c) Lexical Analysis & Code Generation",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Lexical analysis and code generation is a phase of compilation process."
    },
    {
        "id": 314,
        "Question": "System program such as compiler are designed so that they are _________",
        "Options": [
            "a) Re-enterable",
            "b) Non reusable",
            "c) Serially usable",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Re-enterable is the keyword for compiler being designed."
    },
    {
        "id": 315,
        "Question": "A series of statements explaining how the data is to be processed is called _________",
        "Options": [
            "a) Assembly",
            "b) Machine",
            "c) COBOL",
            "d) Program"
        ],
        "Answer": "Answer: d\nExplanation: A program is a sequence of instructions, written to perform a task by computer. It requires programs to function, typically executing the program’s instructions in a central processor.\n"
    },
    {
        "id": 316,
        "Question": "A loader is a program that _________",
        "Options": [
            "a) Program that places functions into memory and prepares them for execution",
            "b) Program that automates the translation of assembly language into machine language",
            "c) Program accepting another program written in a high level language and produces as object program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: A loader is the part of an operating system that is responsible for loading programs and libraries. It is important in the process of placing the programs into memory and executing them."
    },
    {
        "id": 317,
        "Question": "A system program that setup an executable program in main memory ready for execution is?",
        "Options": [
            "a) Assembler",
            "b) Linker",
            "c) Loader",
            "d) Load and go"
        ],
        "Answer": "Answer: c\nExplanation: A loader is the part of an operating system that is responsible for loading programs and libraries. It is one of the essential stages in the process of starting a program, as it places programs into memory and prepares them for execution."
    },
    {
        "id": 318,
        "Question": "Which of the following system program forgoes the production of object code to generate absolute machine code and load it into the physical main storage location from which it will be executed immediately upon completion of the assembly?",
        "Options": [
            "a) Two pass assembler",
            "b) Load and go assembler",
            "c) Macro processor",
            "d) Linker"
        ],
        "Answer": "Answer: b\nExplanation: A load and go assembler generates absolute machine code and loads it to physical memory."
    },
    {
        "id": 319,
        "Question": "Uniform symbol table _________",
        "Options": [
            "a) Has all constants in the program",
            "b) Permanent table of rules in the form of patterns for matching with the uniform symbol table to discover syntactic structure",
            "c) Consists of full or partial list of the tokens as they appear in the program created by Lexical analysis and used for syntax analysis and interpretation",
            "d) A permanent table which has all key words and special symbols of the language in symbolic form"
        ],
        "Answer": "Answer: c\nExplanation: Each pass scans the program, the first pass generates the symbol table and the second pass generates the machine code. "
    },
    {
        "id": 320,
        "Question": "Assembler is a program that _________",
        "Options": [
            "a) Puts programs into memory and executes them",
            "b) Translates the assembly language into machine language",
            "c) Writes in high level language and produces an object program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: An assembler is a program that takes basic computer instructions and converts them into a pattern of bits that the computer’s processor can use to perform its basic operations. "
    },
    {
        "id": 321,
        "Question": "Compiler can diagnose __________",
        "Options": [
            "a) Grammatical errors only",
            "b) Logical errors only",
            "c) Grammatical and logical errors",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Only syntactical errors can be detected by the compiler."
    },
    {
        "id": 322,
        "Question": "A simple two-pass assembler does which of the following in the first pass?",
        "Options": [
            "a) It allocates space for the literals",
            "b) Calculates total length of the program",
            "c) Symbol table is built for the symbols and their value",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A two-pass assembler. Each pass scans the program, the first pass generates the symbol table and the second pass generates the machine code."
    },
    {
        "id": 323,
        "Question": "A system program that set-up an executable program in the main memory ready for execution is?",
        "Options": [
            "a) Assembler",
            "b) Linker",
            "c) Loader",
            "d) Text editor"
        ],
        "Answer": "Answer: c\nExplanation: A loader is the part of an operating system that is responsible for loading programs and libraries. It is important that with the starting of a program, as it places programs into memory and executes it. "
    },
    {
        "id": 324,
        "Question": "A compiler is a program that ___________",
        "Options": [
            "a) Program is put into memory and executes it",
            "b) Translation of assembly language into machine language",
            "c) Acceptance of a program written in a high level language and produces an object program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: A compiler is a computer program (or set of programs) that transforms source code written in a programming language (the source language) into another computer language (the target language, often having a binary form known as object code)."
    },
    {
        "id": 325,
        "Question": "A programmer by mistake writes multiplication instead of division, such error can be detected by?",
        "Options": [
            "a) Compiler",
            "b) Interpreter",
            "c) Compiler or interpreter test",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: No Logical errors can be detected."
    },
    {
        "id": 326,
        "Question": "The computer language generally translated to pseudocode is ___________",
        "Options": [
            "a) Assembly",
            "b) Machine",
            "c) Pascal",
            "d) FORTRAN"
        ],
        "Answer": "Answer: a\nExplanation: An assembly language (or assembler language) is a low-level programming language for a computer, or other programmable device, in which there is a very strong (generally one-to-one) correspondence between the language and the architecture’s machine code instructions."
    },
    {
        "id": 327,
        "Question": "A system program that combines separately compiled modules of a program into a form suitable for execution is?",
        "Options": [
            "a) Assembler",
            "b) Linking Loader",
            "c) Cross Compiler",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A loader which combines the functions of a relocating loader with the ability to combine a number of program segments that have been independently compiled into an executable program."
    },
    {
        "id": 328,
        "Question": "In which way a macro processor for assembly language can be implemented?",
        "Options": [
            "a) Independent two-pass processor",
            "b) Independent one-pass processor",
            "c) Processor put into pass 1 of a standard two pass assembler",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A general-purpose macro processor or general purpose preprocessor is a macro designed for string manipulation, macro definition."
    },
    {
        "id": 329,
        "Question": "Resolution of externally defined symbols is performed by ___________",
        "Options": [
            "a) Linker",
            "b) Loader",
            "c) Compiler",
            "d) Interpreter"
        ],
        "Answer": "Answer: a\nExplanation: A linker or link editor is a computer program that takes one or more object files generated by a compiler and combines them into a single executable file, library file, or another object file."
    },
    {
        "id": 330,
        "Question": "A shift reduce parser carries out the actions specified within braces immediately after reducing with the corresponding rule of grammar S—-> xxW ( PRINT “1”) S—-> y { print ” 2 ” } S—-> Sz { print ” 3 ” ) What is the translation of xxxxyzz using the syntax directed translation scheme described by the above rules?",
        "Options": [
            "a) 23131",
            "b) 11233",
            "c) 11231",
            "d) 33211"
        ],
        "Answer": "Answer:  a\nExplanation: Initially 2 is printed then 3 then 1 3 1."
    },
    {
        "id": 331,
        "Question": "In operator precedence parsing whose precedence relations are defined _________",
        "Options": [
            "a) For all pair of non-terminals",
            "b) For all pair of terminals",
            "c) To delimit the handle",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: There are two important properties for these operator precedence parsers is that it does not appear on the right side of any production and no production has two adjacent no terminals. "
    },
    {
        "id": 332,
        "Question": "LR parsers are attractive because _________",
        "Options": [
            "a) It can be constructed to recognize CFG corresponding to almost all programming constructs",
            "b) It does not backtrack",
            "c) It can be constructed to recognize CFG corresponding to almost all programming constructs & It does not backtrack",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: These above mentioned are the reasons why LR parser is considered to be attractive"
    },
    {
        "id": 333,
        "Question": "Which is the most powerful parser?",
        "Options": [
            "a) SLR",
            "b) LALR",
            "c) Canonical LR",
            "d) Operator Precedence"
        ],
        "Answer": "Answer: c\nExplanation:  The most powerful parser is Canonical LR"
    },
    {
        "id": 334,
        "Question": "( Z,* ) be a structure, and  * is defined by n * m =maximum (n, m) Which of the following statements is true for ( Z, * )?",
        "Options": [
            "a) ( Z,* ) is a monoid",
            "b) ( Z,* ) is an algebraic group",
            "c) ( Z,* ) is a group",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: It is neither a monoid nor a simple group nor algebraic group "
    },
    {
        "id": 335,
        "Question": "The address code involves _____________",
        "Options": [
            "a) Exactly 3 address",
            "b) At most Three address",
            "c) No unary operators",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In computer science, three-address is an intermediate code used by optimizing compilers to aid in the implementation of code-improving transformations. "
    },
    {
        "id": 336,
        "Question": "An intermediate code form is ___________",
        "Options": [
            "a) Postfix Notation",
            "b) Syntax Trees",
            "c) Three address code",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Intermediate code generator takes input from its predecessor phase, semantic analyzer, in the form of an annotated syntax tree."
    },
    {
        "id": 337,
        "Question": "In a single pass assembler, most of the forward references can be avoided by putting the restriction ___________",
        "Options": [
            "a) On the number of strings/life reacts",
            "b) Code segment to be defined after data segment",
            "c) On unconditional rump",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A single pass assembler scans the program only once and creates the equivalent binary program."
    },
    {
        "id": 338,
        "Question": "The method which merges the bodies of two loops is?",
        "Options": [
            "a) Loop rolling",
            "b) Loop jamming",
            "c) Constant folding",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: In computer science, loop fusion (or loop jamming) is a compiler optimization and loop transformation which replaces multiple loops with a single one."
    },
    {
        "id": 339,
        "Question": "Assembly code data base is associated with ___________",
        "Options": [
            "a) Code is converted into assembly",
            "b) Table of rules in the form of patterns for matching with the uniform symbol table to discover syntactic structure",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: An assembly language is a low-level programming language for a computer, or other programmable device, in which there is a very strong (generally one-to-one) correspondence between the language and the architecture’s machine code instructions."
    },
    {
        "id": 340,
        "Question": "The process manager has to keep track of ___________",
        "Options": [
            "a) Status of each program",
            "b) Information to a programmer using the system",
            "c) Status of each program & Information to a programmer using the system",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Process manager keep track of the status and info about the program."
    },
    {
        "id": 341,
        "Question": "What is the function of the syntax phase?",
        "Options": [
            "a) recognize the language and to cal the appropriate action routines that will generate the intermediate form or matrix for these constructs",
            "b) Build a literal table and an identifier table",
            "c) Build a uniform symbol table",
            "d) Parse the source program into the basic elements or tokens of the language"
        ],
        "Answer": "Answer: a\nExplanation:  In this phase symbol table is created by the compiler which contains the list of lexemes or tokens."
    },
    {
        "id": 342,
        "Question": "If E be a shifting operation applied to a function f, such that E(f) = f (x +β ), then?",
        "Options": [
            "a) E (αf+β g) = α  E(f) +β  E (g)",
            "b) E (αf +β g ) =. ( α+ β ) + E (f + g)",
            "c) E (αf +β g ) = α E (f+gβ)",
            "d) E (αf +β g ) = αβ E (f + g)"
        ],
        "Answer": "Answer: a\nExplanation: Shifting operation when performed gives this result."
    },
    {
        "id": 343,
        "Question": "Pass I ______________",
        "Options": [
            "a) Assign address to all statements",
            "b) Save the values assigned to all labels for use in pass 2",
            "c) Perform some processing",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The pass 1 of a compiler the above mentioned functions are performed"
    },
    {
        "id": 344,
        "Question": "Which table is a permanent database that has an entry for each terminal symbol?",
        "Options": [
            "a) Terminal Table",
            "b) Literal Table",
            "c) Identifier Table",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: A database that has entry for each terminal symbols such as arithmetic operators, keywords, punctuation characters such as ‘;’, ‘,’etc Fields: Name of the symbol."
    },
    {
        "id": 345,
        "Question": "Which of the following functions is performed by loader?",
        "Options": [
            "a) Allocate memory for the programs and resolve symbolic references between objects decks",
            "b) Address dependent locations, such as address constants, to correspond to the allocated space",
            "c) Physically place the machine instructions and data into memory",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A loader is the part of an operating system that is responsible for loading programs and libraries. "
    },
    {
        "id": 346,
        "Question": "The root directory of a disk should be placed ___________",
        "Options": [
            "a) At a fixed address in main memory",
            "b) At a fixed location on the disk",
            "c) Anywhere on the disk",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Root directory is placed at a fixed disk location"
    },
    {
        "id": 347,
        "Question": "The segment base is specified using the register named is?",
        "Options": [
            "a) ORG instructions",
            "b) TITLE instruction",
            "c) ASSUME instruction",
            "d) SEGMENT instruction"
        ],
        "Answer": "Answer: a\nExplanation: ORG segment base register is used to specify the register."
    },
    {
        "id": 348,
        "Question": "In what module multiple instances of execution will yield the same result even if one instance has not terminated before the next one has begun?",
        "Options": [
            "a) Non usable module",
            "b) Serially usable",
            "c) Re-enter-able",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Re enter-able module is the reason why the compiler is used in the first place."
    },
    {
        "id": 349,
        "Question": "Dividing a project into segments and smaller units in order to simplify design and programming efforts is called?",
        "Options": [
            "a) Modular approach",
            "b) Top down approach",
            "c) Bottom up approach",
            "d) Left right approach"
        ],
        "Answer": "Answer: a\nExplanation: Modular design, or “modularity in design”, is a design approach that subdivides a system into smaller parts called modules or skids that can be independently created and then used in different systems."
    },
    {
        "id": 350,
        "Question": "Which one of the following is the tightest upper bound that represents the time complexity of inserting an object into a binary search tree of n nodes?",
        "Options": [
            "a) O(1)",
            "b) O(long)",
            "c) O(n)",
            "d) O(long)"
        ],
        "Answer": "Answer: c\nExplanation: For skewed binary search tree on n nodes, the upper bound to insert a node is O (n)."
    },
    {
        "id": 351,
        "Question": "Which of the following is true for machine language?",
        "Options": [
            "a) Continuous execution of program segments",
            "b) Depicting flow of data in a system",
            "c) A sequence of instructions which solves a problem",
            "d) The language which interacts with the computer using only the binary digits 1 and 0"
        ],
        "Answer": "Answer: d\nExplanation: Machine code or machine language is a set of instructions executed directly by a computer’s central processing unit (CPU). Each instruction performs a very specific task."
    },
    {
        "id": 352,
        "Question": "Software that measures, monitors, and controls events are ___________",
        "Options": [
            "a) System S/w",
            "b) Real Time software",
            "c) Scientific software",
            "d) Business Software"
        ],
        "Answer": "Answer: b\nExplanation: In computer science, real-time computing (RTC), or reactive computing describes hardware and software systems subject to a “real-time constraint”, for example operational deadlines from event to system response."
    },
    {
        "id": 353,
        "Question": "A linker is given object module for a set of programs that were compiled separately. What is not true about an object module?",
        "Options": [
            "a) Object code",
            "b) Relocation bits",
            "c) Names and locations of all external symbols denied in the object module",
            "d) Absolute addresses of internal symbols"
        ],
        "Answer": "Answer: d\nExplanation: A linker or link editor is a computer program that takes one or more object files generated by a compiler and combines them into a single executable file, library file, or another object file."
    },
    {
        "id": 354,
        "Question": "The table created by lexical analysis to describe all literals used in the source program is?",
        "Options": [
            "a) Terminal table",
            "b) Literal table",
            "c) Identifier table",
            "d) Reductions"
        ],
        "Answer": "Answer: b\nExplanation: In computer science, and specifically in compiler and assembler design, literal pool is a lookup table used to hold literals during assembly and execution."
    },
    {
        "id": 355,
        "Question": "Which loader function is accomplished by loader?",
        "Options": [
            "a) Reallocation",
            "b) Allocation",
            "c) Linking",
            "d) Loading"
        ],
        "Answer": "Answer: d\nExplanation: Function of a loader."
    },
    {
        "id": 356,
        "Question": "What is Pass 2?",
        "Options": [
            "a) Assemble instruction and generate data",
            "b) Perform processing of assembler",
            "c) Write the object program",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A multi-pass compiler is a type of compiler that processes the source code or abstract syntax tree of a program several times. Each pass takes the result of the previous pass as the input and creates an intermediate output."
    },
    {
        "id": 357,
        "Question": "Which is not true about syntax and semantic parts of a computer language?",
        "Options": [
            "a) Semantics is checked mechanically by a computer",
            "b) Semantics is the responsibility of the programmer",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation:  Both in terms of semantics is not true."
    },
    {
        "id": 358,
        "Question": "Which of the following statement is true?",
        "Options": [
            "a) SLR powerful than LALR",
            "b) LALR  powerful than Canonical LR parser",
            "c) Canonical LR  powerful than LALR parser",
            "d) The parsers SLR= Canonical LR=LALR"
        ],
        "Answer": "Answer: c\nExplanation:  LR > LALR > SLR In terms of the parser."
    },
    {
        "id": 359,
        "Question": "Which of the following features cannot be captured by CFG?",
        "Options": [
            "a) Syntax of if-then-else statements",
            "b) Syntax of recursive procedures",
            "c) A variable is declared before its use",
            "d) Matching nested parenthesis"
        ],
        "Answer": "Answer:  d\nExplanation: It is because, it is equivalent to recognizing us, where the first w is the declaration and the second is its use, we are not a CFG."
    },
    {
        "id": 360,
        "Question": "In which of the following no information hiding is done?",
        "Options": [
            "a) Compile prig 1, prig 2",
            "b) Run test, prog",
            "c) Load R1, A",
            "d) 001001000010101"
        ],
        "Answer": "Answer: d\nExplanation: The entire binary symbol gives information. "
    },
    {
        "id": 361,
        "Question": "The identification of common sub-expression and replacement of run-time computations by compile-time computations is _____________",
        "Options": [
            "a) Local optimization",
            "b) Loop optimization",
            "c) Constant folding",
            "d) Data flow analysis"
        ],
        "Answer": "Answer: c\nExplanation: Constant folding is the process of recognizing and evaluating constant expressions at compile time rather than computing them at runtime. Terms in constant expressions are typically simple literals they may also be variables whose values are assigned at compile time."
    },
    {
        "id": 362,
        "Question": "The graph that shows basic blocks and their successor relationship is called ____________",
        "Options": [
            "a) Dag",
            "b) Flow Graph",
            "c) Control Graph",
            "d) Hamilton Graph"
        ],
        "Answer": "Answer: b\nExplanation: Flow graph shows the basic blocks."
    },
    {
        "id": 363,
        "Question": "The specific task storage manager performs ____________",
        "Options": [
            "a) Allocation/ deal location of programs",
            "b) Protection of storage area assigned to the program",
            "c) Allocation/ deal location of programs & protection of storage area assigned to the program",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Its basic function is that of the task storage manager."
    },
    {
        "id": 364,
        "Question": "When a computer is rebooted, a special type of loader is executed called?",
        "Options": [
            "a) Compile and GO ” loader",
            "b) Boot loader",
            "c) Bootstrap Loader",
            "d) Relating Loader"
        ],
        "Answer": "Answer: c\nExplanation: A boot loader, is a small program that places the operating system (OS) of a computer into memory."
    },
    {
        "id": 365,
        "Question": "What is the disadvantage of ” Compile and GO ” loading scheme?",
        "Options": [
            "a) Memory is wasted because the case occupied by the assembler is unavailable to the object program",
            "b) Necessary to translate the users program",
            "c) It is very difficult to handle multiple segments, even when the source programs are in different languages and to produce orderly modular programs",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In computer programming, a compile and go system, compile, load, and go system, assemble and go system, or load and go system[1][2][3] is a programming language processor in which the compilation, assembly, or link steps are not separated from program execution."
    },
    {
        "id": 366,
        "Question": "What is the function of the storage assignment?",
        "Options": [
            "a) Assign storage to all variables referenced in the source program",
            "b) Assign storage to all temporary locations that are necessary for intermediate results",
            "c) Assign storage to literals, and to ensure that the storage is allocated and appropriate locations are initialized",
            "d) All of the mentioned"
        ],
        "Answer": "Answer:  d\nExplanation: The storage assignment performs the above mentioned tasks."
    },
    {
        "id": 367,
        "Question": "A non relocatable program is the one which?",
        "Options": [
            "a) Cannot  execute in any area of storage other than the one designated",
            "b) Consists of a program and  information for its relocation",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer:  a\nExplanation: A non reloadable program is one which cannot be made to execute in any area of storage other than the one designated for it at the time of its coding or translation."
    },
    {
        "id": 368,
        "Question": "A relocatable program form is one which?",
        "Options": [
            "a) Cannot execute in any area of storage other than the one designated",
            "b) Consists of a program and  information for its relocation",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: A relocatable program form is one which consists of a program and relevant information for its relocation. Using this information it is possible to relocate the program to execute from a storage area then the one designated for it at the time of its coding or translation."
    },
    {
        "id": 369,
        "Question": "A self-relocating program is one which?",
        "Options": [
            "a) Cannot execute in any area of storage other than the one designated",
            "b) Consists of a program and  information for its relocation",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer:  c\nExplanation: A self-relocating program is a program which can perform the relocation itself\n• A table of information about address sensitive instruction in the program.\n• Relocating logic that can perform the relocation of the address sensitive instructions."
    },
    {
        "id": 370,
        "Question": "Scissoring enables ______________",
        "Options": [
            "a) A part of data to be displayed",
            "b) Entire data to be displayed",
            "c) Full data display on full screen",
            "d) No data to be displayed"
        ],
        "Answer": "Answer: a\nExplanation: It displays a part of the data."
    },
    {
        "id": 371,
        "Question": "Which of the following can be accessed by the transfer vector approach of linking?",
        "Options": [
            "a) External data segments",
            "b) External sub-routines",
            "c) Data located in other procedure",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: External subroutines are routines that are created and maintained separately from the program that will be calling them."
    },
    {
        "id": 372,
        "Question": "Relocation bits used by relocating loader are specified by ____________",
        "Options": [
            "a) Relocating loader itself",
            "b) Linker",
            "c) Assembler",
            "d) Macro processor"
        ],
        "Answer": "Answer: b\nExplanation: A linker or link editor is a computer program that takes one or more object files generated by a compiler and combines them into a single executable file, library file, or another object file."
    },
    {
        "id": 373,
        "Question": "Generation of intermediate code based on a abstract machine model is useful in compilers because ____________",
        "Options": [
            "a) Implementation of lexical analysis and syntax analysis is made easier",
            "b) Writing for intermediate code generation",
            "c) Portability of the front end of the compiler",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Intermediate code generator receives input from its predecessor phase, semantic analyzer, in the form of an annotated syntax tree."
    },
    {
        "id": 374,
        "Question": "Which of the following module does not incorporate initialization of values changed by the module?",
        "Options": [
            "a) Non reusable module",
            "b) Serially reusable module",
            "c) Re-enterable module",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Non reusable models can be used once for a purpose they can’t be modified and used again."
    },
    {
        "id": 375,
        "Question": "The best way to compare the different implementations of symbol table is to compare the time required to ____________",
        "Options": [
            "a) Add a new name",
            "b) Make an enquiry",
            "c) Add a new name and make an enquiry",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: These are the different implementations of the symbol table as mentioned above."
    },
    {
        "id": 376,
        "Question": "Dynamic linking can cause security concerns because ______________",
        "Options": [
            "a) Security is dynamic",
            "b) None of the mentioned",
            "c) Security is dynamic & Cryptographic procedures are not available for dynamic linking",
            "d) Cryptographic procedures are not available for dynamic linking"
        ],
        "Answer": "Answer: d\nExplanation: Required by the program are linked during run time. "
    },
    {
        "id": 377,
        "Question": "Which of the following statements is FALSE?",
        "Options": [
            "a) In up-typed languages, values do not have any types & Dynamic languages have no variables types",
            "b) In up-typed languages, values do not have any types",
            "c) Dynamic languages have no variables types",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: They have dynamically changing types."
    },
    {
        "id": 378,
        "Options": [
            "a) LL (1)",
            "b) SLR (1) but not LL (1)",
            "c) LALR (1) but not SLR (1)",
            "d) LR (1) but not LALR (1)"
        ],
        "Answer": "Answer: c\nExplanation: The grammar is CLR and can be reduced to LALR. "
    },
    {
        "id": 379,
        "Question": "4. The 3-address code sequence generated by which definition?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">S -&gt; id: = E \" \nnewtemp ();\n gen(t . place . place;); .place t} \" \n.place .place;}\nFor the statement ‘X: = Y + Z ’,</pre></div></div></div></div></div></div>",
        "Options": [
            "a) X = Y + Z",
            "b) t1 = Y + Z; X t1",
            "c) t1 = Y; t2 = t1 + Z; X = t2",
            "d) t1 = Y; t2 = Z; t3 + t2; X = t3"
        ],
        "Answer": "Answer: d\nExplanation: In 3-address code we use temporary variables. "
    },
    {
        "id": 380,
        "Question": "If the programming language uses static scoping and call by need parameter passing mechanism, the values printed will be?",
        "Options": [
            "a) 115, 220",
            "b) 25, 220",
            "c) 25, 15",
            "d) 115, 105"
        ],
        "Answer": "Answer: d\nExplanation: So i = 100 & j = 5 P (i + j) = P (100 + 5) = P(105) So x = 105 x + 10 = 105 + 10 = 115 So 115 & 105 will be printed. "
    },
    {
        "id": 381,
        "Question": "If  dynamic scoping is used and call by name mechanism is used, the values printed will be?",
        "Options": [
            "a) 115, 220",
            "b) 25, 220",
            "c) 25, 15",
            "d) 115, 105"
        ],
        "Answer": "Answer: b\nExplanation: Since x = i + j & in P (x) i = 200 & j = 20 x = 200 + 20 = 220 & printing (x + 10) 9. = i + j + 10 = 10 + 5 + 10 = 25. "
    },
    {
        "id": 382,
        "Question": "7. What will be the output of the following code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">P x <span class=\"sy0\">=</span>new Q<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\nQ y <span class=\"sy0\">=</span>new Q<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\nP z <span class=\"sy0\">=</span>new Q<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> \nx. <span class=\"me1\">f</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">(</span><span class=\"br0\">(</span>P<span class=\"br0\">)</span> y<span class=\"br0\">)</span>. <span class=\"me1\">f</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\nz.<span class=\"me1\">f</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 1",
            "b) 2 1 1",
            "c) 2 1 2",
            "d) 2 2 2"
        ],
        "Answer": "Answer:d\nExplanation: Here,\n1. Px = newQ();\n2. Qy = newQ();\n3. Pz = newQ(); \n4. x : f(1); \nprint 2 # i = 2\n5. ((P) y) :f(1); \n6. z : f(1) print 2 # i = 2 \n\nbut line 6. will print 2 because typecast to parent class can’t prevent over ridding. "
    },
    {
        "id": 383,
        "Question": "Which of the following is NOT an advantage of using shared, dynamically linked libraries as compared to  statically linked libraries?",
        "Options": [
            "a) Smaller sizes of executable",
            "b) Lesser overall page fault rate in the system",
            "c) Faster program start-up",
            "d) Existing programs need not be re-linked to take advantage of newer versions of libraries"
        ],
        "Answer": "Answer: c\nExplanation: No need for re-linking if newer versions of libraries are there. "
    },
    {
        "id": 384,
        "Question": "9. Which  grammar  violate rules of  an operator grammar?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">(i)\tP-&gt; QR \n(ii)\tP -&gt; Q s R \n(iii)\tP -&gt; ε \n(iv)\tP -&gt;Q t</pre></div></div></div></div></div></div>",
        "Options": [
            "a) (i) only",
            "b) (i) and (iii) only",
            "c) (ii) and (iii) only",
            "d) (iii) and (iv) only"
        ],
        "Answer": "Answer: b\nExplanation: (I) P ” QR is not possible since two NT should include one operator as Terminal. "
    },
    {
        "id": 385,
        "Question": "Consider the grammar rule. E -> E1 − E2 for arithmetic expressions. If E1 and E2 do not have any common sub expression, in order to get the shortest possible code.",
        "Options": [
            "a) E1 should be evaluated first",
            "b) E2 should be evaluated first",
            "c) Evaluation of E1 and E2 should necessarily be interleaved",
            "d) Order of evaluation of E1 and E2 is of no consequence"
        ],
        "Answer": "Answer:  b\nExplanation: E1 is to be kept in accumulator & accumulator is required for operations to evaluate E2. "
    },
    {
        "id": 386,
        "Question": "The grammar A ->AA |( A)| ε is not suitable for predictive-parsing because the grammar is ___________",
        "Options": [
            "a) Ambiguous",
            "b) Left-recursive",
            "c) Right-recursive",
            "d) An operator-grammar"
        ],
        "Answer": "Answer: a\nExplanation: The grammar is ambiguous. "
    },
    {
        "id": 387,
        "Question": "For a sentence n + n, form of the reduction are __________",
        "Options": [
            "a) n, E + n and E + n # n",
            "b) n , E + n and E + E # n",
            "c) n , n + n and n + n # n",
            "d) n , E + n and E # n"
        ],
        "Answer": "Answer: d\nExplanation: During reduction the order is reverse. So {E ” n , E ” E + n, E ” E # n}."
    },
    {
        "id": 388,
        "Question": "4. Consider line 3. Identify the compiler’s response about this line while creating the object-module<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">Int main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span> <span class=\"kw4\">int</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span>N<span class=\"sy0\">;</span>\nFro <span class=\"br0\">(</span>I<span class=\"sy0\">,</span><span class=\"nu0\">1</span> N<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) No compilation error",
            "b) Only a lexical error",
            "c) Only syntactic errors",
            "d) Both lexical and syntactic errors"
        ],
        "Answer": "Answer: b\nExplanation: The no. of states for SLR(1) & LALR(1) are equal so n 1 = n3, but CLR(1) or LR(1) will have no. of states greater than LALR & LR(0) both. "
    },
    {
        "id": 389,
        "Question": "Which one of the following is true about the action of yacc for the given grammar?",
        "Options": [
            "a) It detects recursion and eliminates recursion",
            "b) It detects reduce-reduce conflict and resolves",
            "c) It detects shift-reduce conflict and resolves the conflict in favor of a shift over a reduce action",
            "d) It detects shift-reduce conflict and resolves the conflict in favor of a reduce over a shift action"
        ],
        "Answer": "Answer: c\nExplanation: There are no lexical errors for C because all the wrong spelled keywords. "
    },
    {
        "id": 390,
        "Question": "What precedence and associativity properties does the generated parser realize?",
        "Options": [
            "a) Equal precedence and left associativity; expression is evaluated to 7",
            "b) Equal precedence and right associativity, expression is evaluated to 9",
            "c) Precedence of ‘x’ is higher than that of ‘+’, and both operators are left associative; expression is evaluated to 7",
            "d) Precedence of ‘ # ‘ is higher than that of ‘#’, and both operators are left associative; expression is evaluated to 9"
        ],
        "Answer": "Answer: c\nExplanation: Yacc tool is used to create a LALR(1) parser. "
    },
    {
        "id": 391,
        "Question": "Given the items above, which two of them will appear in the same set in the canonical sets-of-items for the grammar?",
        "Options": [
            "a) (i) and (ii)",
            "b) (ii) and (iii)",
            "c) (i) and (iii)",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The grammar has equal precedence and it is also ambiguous."
    },
    {
        "id": 392,
        "Question": "In the predictive parser table, M , of the grammar the entries M [ S, id] and M [ R,$] respectively.",
        "Options": [
            "a) {S ” FR} and {R ” ε}",
            "b) {S ” FR} and {}",
            "c) {S ” FR} and {R ” * S}",
            "d) {F ” id} and {R ” ε}"
        ],
        "Answer": "Answer: a\nExplanation: The predictive parser table is given as. Non Terminal ) id $ S S -> FR F\nF -> id R\nR ->) S\nR ->! R ->!\n So at M [ S, id] = { S ” FR} M [ R,$] = {R “!}"
    },
    {
        "id": 393,
        "Question": "Here id is a taken that represents an integer and id. value represents the corresponding integer value. For an input ‘2 * 3 + 4’, this translation scheme prints?",
        "Options": [
            "a) 2 * 3 + 4",
            "b) 2 * + 3 4",
            "c) 2 3 * 4 +",
            "d) 2 3 4 + *"
        ],
        "Answer": "Answer: b\nExplanation: Input string 2 ) 3 + 4 S ” ER FR idR {print(2)} id)ER {print())} id) F+ER {print(+)}id) id + ER {print(3)} id) id ) id +id So 2 )+ 3 4 are printed. "
    },
    {
        "id": 394,
        "Question": "Which one to the following false?",
        "Options": [
            "a) The code contains loop-in variant computation",
            "b) There is scope of common sub-expression elimination in this code",
            "c) There is scope strength reduction in this code",
            "d) There is scope of dead code elimination in this code"
        ],
        "Answer": "Answer: d\nExplanation: All the statements are true except option last since there is no dead code to get eliminated. "
    },
    {
        "id": 395,
        "Question": "1. The below grammar and the semantic rules are fed to a yacc tool (which is an LALR (1) parser generator) for parsing and evaluating arithmetic expressions. Which one of the following is true about the action of yacc for the given grammar?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\"> E -&gt; number   Eval           number val \n     E         E .val         E .VAL           E .val \n    E # E      E .val         E .VAL           E .val \n     ;</pre></div></div></div></div></div></div>",
        "Options": [
            "a) It detects recursion and eliminates recursion",
            "b) It detects reduce-reduce conflict and resolves",
            "c) It detects shift-reduce conflict and resolves the conflict in favor of a shift over a reduce action",
            "d) It detects shift-reduce conflict and resolves the conflict in favor of a reduce over a shift action"
        ],
        "Answer": "Answer: c\nExplanation:  Yacc tool is used to create a LALR (1) parser. This parser can detect the conflicts but to resolve the conflicts it actually prefers shift over reduce action."
    },
    {
        "id": 396,
        "Question": "2. Assume the conflicts part (a) of this question are resolved and an LALR (1) parser is generated for parsing arithmetic expressions as per the given grammar. Consider an expression 3 # 2 + 1. What precedence and associativity properties does the generated parser realize?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">  E -&gt; number        Eval               number val \n   E                 E .val             E .VAL                  E .val \n  E # E              E .val             E .VAL                  E .val \n   ;</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Equal precedence and left associativity; expression is evaluated to 7",
            "b) Equal precedence and right associativity, expression is evaluated to 9",
            "c) Precedence of ‘x’ is higher than that of ‘+’, and both operators are left associative; expression is evaluated to 7",
            "d) Precedence of ‘ # ‘ is higher than that of ‘#’, and both operators are left associative; expression is evaluated to 9"
        ],
        "Answer": "Answer: b\nExplanation: The grammar has equal precedence and it is also ambiguous. Since LALR (1) parser prefer shift over reduce so + operation will be executed here before). 2 + 1 = 3 & 3 # 3 = 9 also the operators are right associative. "
    },
    {
        "id": 397,
        "Question": "Given the items above, which two of them will appear in the same set in the canonical sets-of-items for the grammar?",
        "Options": [
            "a) (ii)",
            "b) (i) and (iii)",
            "c) (iii)",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The predictive parser table is given as. Non Terminal) id $ S S “FR F F “id R R “) S R “! R “! So at M [ S, id] = { S ” FR} M [ R,$] = {R “!}."
    },
    {
        "id": 398,
        "Question": "In the predictive parser table, M, of the grammar the entries M [S, id] and M [R, $] respectively.",
        "Options": [
            "a) {S ” FR} and {R ” ε}",
            "b) {S ” FR} and {}",
            "c) {S ” FR} and {R ” * S}",
            "d) {F ” id} and {R ” ε}"
        ],
        "Answer": "Answer: b\nExplanation:  Input string 2 ) 3 + 4 S ” ER FR idR {print(2)} id)ER {print())} id) F+ER {print(+)}id) id + ER {print(3)} id) id ) id +id So 2 )+ 3 4 are printed. "
    },
    {
        "id": 399,
        "Question": "Here id is a taken that represents an integer and id. value represents the corresponding integer value. For an input ‘2 * 3 + 4’, this translation scheme prints?",
        "Options": [
            "a) 2 * 3 + 4",
            "b) 2 * + 3 4",
            "c) 2 3 * 4 +",
            "d) 2 3 4 + *"
        ],
        "Answer": "Answer: d\nExplanation: All the statements are true except option (There is scope of dead code elimination in this code ) since there is no dead code to get eliminated."
    },
    {
        "id": 400,
        "Question": "Which one to the following false?",
        "Options": [
            "a) The code contains loop-in variant computation",
            "b) There is scope of common sub-expression elimination in this code",
            "c) There is scope strength reduction in this code",
            "d) There is scope of dead code elimination in this code"
        ],
        "Answer": "Answer: d\nExplanation: The grammar S -> AC CB\nC ->aCb !\nA ->aA a\nB->” bB b\n Consider string aaabb S -> AC AaCb AaaCbb Aaabb aaabb But string aabb S ” AC And ->his string is not derivable."
    },
    {
        "id": 401,
        "Question": "In the correct grammar above, what is the length of the derivation (number of steps starting from S to generate the string a l b m with l ! m?",
        "Options": [
            "a) max (l, m) + 2",
            "b) l+m+2",
            "c) l + m + 3",
            "d) max (l, m) + 3"
        ],
        "Answer": "Answer: a\n Explanation: Clearly LR & LALR are not top down they are bottom up passers. Also not operator precedence parser. ut yes recursive descent parser is top down parser. Starts from start symbol & derives the terminal string."
    },
    {
        "id": 402,
        "Question": "Which one of the following is a top-down parser?",
        "Options": [
            "a) Recursive descent parser",
            "b) Operator precedence parser",
            "c) An LR(k) parser",
            "d) An LALR(k) parser"
        ],
        "Answer": "Answer: a\nExplanation: The grammar has production S ” iCtSS1 here the right hand side of grammar has the same symbol as left side. So the grammar is left recursive. The grammar is not ambiguous. "
    },
    {
        "id": 403,
        "Question": "The grammar is NOTLL(1) because ________",
        "Options": [
            "a) It is left recursive",
            "b) It is right recursive",
            "c) It is ambiguous",
            "d) It is not context-free"
        ]
    },
    {
        "id": 404,
        "Question": "Assume that all operands are initially in memory. The final value of the computation should be in memory. What is the minimum number of MOV instructions in the code generated for this basic block?",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 5",
            "d) 6"
        ],
        "Answer": "Answer: a\nExplanation: LL(1) parsers can recognize the regular grammars also LL(1) is subset of LR(1) or CLR grammar so it also recognizes regular sets. So both accept regular grammar. "
    },
    {
        "id": 405,
        "Question": "3. Which of the following strings is generated by the grammar?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">S-&gt;bA       S-&gt;aB\nA-&gt;a          B-&gt;b\nA-&gt;aS           B-&gt;bS\nA-&gt;bAA          B-&gt;aBB</pre></div></div></div></div></div></div>",
        "Options": [
            "a) aaaabb",
            "b) aabbbb",
            "c) aabbab",
            "d) abbbba"
        ],
        "Answer": "Answer: b\nExplanation: The operation sequence would be\nMOV a, R1\nADD b , R1 {R 1 = t1\nMOV c , R2\nADD d, R2 {R 2 = t2\nSUB e , R2 {t 3 = e − R 2 = R2\nSUB R 1, R2 {R 2 = t4\nMOV R 2, t4 {finally in memory\nTotally no. of move operation is 3."
    },
    {
        "id": 406,
        "Question": "4. How many derivation trees are there?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">S-&gt;bA       S-&gt;aB\nA-&gt;a          B-&gt;b\nA-&gt;aS           B-&gt;bS\nA-&gt;bAA          B-&gt;aBB</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: c\nExplanation: aabbab S ” aB ” aaBB ” aabSB ” aabbAB ” aabbab "
    },
    {
        "id": 407,
        "Question": "Which of the following describes a handle (as applicable to LR-parsing) appropriately?",
        "Options": [
            "a) It is the position in a sentential form where the next shift or reduce operation will occur",
            "b) It is a non-terminal whose production will be used for reduction in the next step",
            "c) It is a production that may be used for reduction in a future step along with a position in the sentential form where the next shift or reduce operation will occur.",
            "d) It is the production p that will be used for reduction in the next step along with a position in the sentential form where the right hand side of the production may be found"
        ],
        "Answer": "Answer: b\nExplanation: For the derivation two trees are possible So due to ambiguity 2 trees are possible. "
    },
    {
        "id": 408,
        "Question": "Some code optimizations are carried out on the intermediate code because _______________",
        "Options": [
            "a) They enhance the portability of the complier to other target processors",
            "b) Program analysis is name accurate on intermediate code than on machine code",
            "c) The information from data flow analysis cannot otherwise be used for optimization",
            "d) The information from the front end cannot otherwise be used for optimization"
        ],
        "Answer": "Answer: d\nExplanation:  Handles are the part of sentential form, & they are identified as the right side of any given production which will be used for reduction in the next step. "
    },
    {
        "id": 409,
        "Question": "An LALR(1) parser for a grammar can have shift-reduce (S-R) conflicts if and only if ___________",
        "Options": [
            "a) The SLR(1) parser for G has S-R conflicts",
            "b) The LR(1) parser for G has S-R conflicts",
            "c) The LR(0) parser for G has S-R conflicts",
            "d) The LALR(1) parser for G has reduce-reduce conflicts"
        ],
        "Answer": "Answer: b\nExplanation: Code optimizations are carried out on the intermediate code because program analysis is more accurate on intermediate code than on machine code. "
    },
    {
        "id": 410,
        "Question": "What data structure in a complier is used for managing information about variables and their attributes?",
        "Options": [
            "a) Abstract syntax tree",
            "b) Symbol table",
            "c) Semantic stack",
            "d) Parse table"
        ],
        "Answer": "Answer: a\nExplanation: I. Statement is false since global variables are required for recursions with static storage. This is due to unavailability of stack in static storage. II. This is true III. In dynamic allocation heap structure is used, so it is false. IV. False since recursion can be implemented. V. Statement is completely true. So only II & V are true. "
    },
    {
        "id": 411,
        "Question": "Which languages necessarily need heap allocation in the runtime environment?",
        "Options": [
            "a) Those that support recursion",
            "b) Those that use dynamic scoping",
            "c) Allow dynamic data structure",
            "d) Those that use global variables"
        ],
        "Answer": "Answer: c\nExplanation: E.g.: Heap."
    },
    {
        "id": 412,
        "Question": "2. Given the language L-{ab, aa, baa}, which of the following strings are in LG?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">1) abaabaaabaa\n2) aaaabaaaa \n3) baaaaabaaaab \n4) baaaaabaa</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1,2 and 3",
            "b) 2,3 and 4",
            "c) 1,2 and 4",
            "d) 1,3 and 4"
        ],
        "Answer": "Answer: c\nExplanation: Generates strings like aaaabaaaa\n baaaaabaa"
    },
    {
        "id": 413,
        "Question": "The lexical analyzer takes _________ as input and produces a stream of _______ as output.",
        "Options": [
            "a) Source program, tokens",
            "b) Token, source program",
            "c) Either A and B",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Lexical analyser takes source program as input and token as output."
    },
    {
        "id": 414,
        "Question": "The action of parsing the source program into proper syntactic classes is called ________",
        "Options": [
            "a) Syntax analysis",
            "b) Lexical analysis",
            "c) Interpretation analysis",
            "d) General syntax analysis"
        ],
        "Answer": "Answer: b\nExplanation: Checks for correct syntax."
    },
    {
        "id": 415,
        "Question": "What is the task of the lexical analysis?",
        "Options": [
            "a) None of the mentioned",
            "b) To build a literal and identifier table",
            "c) To build a uniform symbol table",
            "d) To build a uniform symbol table, literal and identifier table"
        ],
        "Answer": "Answer: d\nExplanation: It is the task performed."
    },
    {
        "id": 416,
        "Question": "In a two pass assembler, adding literals to literal table and address resolution of local symbols are done using?",
        "Options": [
            "a) First pass and second respectively",
            "b) Both second pass",
            "c) Second pass and first respectively",
            "d) Both first pass"
        ],
        "Answer": "Answer: d\nExplanation: A two pass assembler does two passes over the source file (the second pass can be over a file generated in the first pass)."
    },
    {
        "id": 417,
        "Question": "In Two pass assembler the object code generation is done during the ______________",
        "Options": [
            "a) Second pass",
            "b) First pass",
            "c) Zeroth pass",
            "d) Not done by assembler"
        ],
        "Answer": "Answer:a\nExplanation:  On the second pass, the assembler:\n• source statements into machine code\n• error messages, if error has occurred."
    },
    {
        "id": 418,
        "Question": "Pick the machine independent phase of the compiler.",
        "Options": [
            "a) Syntax analysis",
            "b) Code generation",
            "c) Lexical analysis",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Machine independent phases are Lexical analysis, Syntax analysis, Semantic analysis, Intermediate code generation and sometime code optimization."
    },
    {
        "id": 419,
        "Question": "A system program that combines the separately compiled modules of a program into a form suitable for execution is?",
        "Options": [
            "a) Assembler",
            "b) Linking loader",
            "c) Cross compiler",
            "d) Load and Go"
        ],
        "Answer": "Answer: b\nExplanation: Combines the modules which have been compiled separately. "
    },
    {
        "id": 420,
        "Question": "Which of the following type of software should be used if you need to create, edit and print documents?",
        "Options": [
            "a) Word processing",
            "b) Spreadsheet",
            "c) Desktop publishing",
            "d) UNIX"
        ],
        "Answer": "Answer: an\nExplanation: Application software such as word processors."
    },
    {
        "id": 421,
        "Question": "Output file of the Lex is _________ is the input file is Sam.",
        "Options": [
            "a) sam",
            "b) sam.yy.c",
            "c) sam.lex",
            "d) sam.obj"
        ],
        "Answer": "Answer: b\nExplanation: This Produce the file “sam.yy.c”, which we can then compile with g++."
    },
    {
        "id": 422,
        "Question": "Type checking is normally done during ____________",
        "Options": [
            "a) Lexical analysis",
            "b) Syntax analysis",
            "c) Syntax directed translation",
            "d) Code generation"
        ],
        "Answer": "Answer: c\nExplanation: It enables the compiler to do type checking."
    },
    {
        "id": 423,
        "Question": "Yacc is available as a command on the ____________",
        "Options": [
            "a) MINIX",
            "b) UNIX",
            "c) DOS",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Unix provides with a YACC command."
    },
    {
        "id": 424,
        "Question": "Loading process can be divided into two programs. The first is binder the other is ____________",
        "Options": [
            "a) Linkage editor",
            "b) Module Loader",
            "c) Relocate",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A module loader is an answer."
    },
    {
        "id": 425,
        "Question": "In Lex, a class is complemented by first placing ____________",
        "Options": [
            "a) ^",
            "b) OR",
            "c) –",
            "d) NOT"
        ],
        "Answer": "Answer:  a\nExplanation: ^ =complement."
    },
    {
        "id": 426,
        "Question": "Which of the following is not a feature of the compiler?",
        "Options": [
            "a) Converts  it into machine code",
            "b) None of the mentioned",
            "c) Slow for debugging",
            "d) Execution time is more"
        ],
        "Answer": "Answer: d\nExplanation: No specified execution time."
    },
    {
        "id": 427,
        "Question": "A programming language is to be designed to run on a machine that does not have a big memory.",
        "Options": [
            "a) Prefer a 2 pass compiler",
            "b) Prefer an interpreter",
            "c) Not support recursion",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: If a language designed to run on a machine then recursion should not be followed it should prefer 2 pass assembler and prefer an interpreter to a compiler."
    },
    {
        "id": 428,
        "Question": "What is linker?",
        "Options": [
            "a) Is same as the loader",
            "b) Create a load module",
            "c) Is same as the loader & Create a load module",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It creates a module to be loaded. "
    },
    {
        "id": 429,
        "Question": "Predictive parsers can be __________",
        "Options": [
            "a) Recursive",
            "b) Constructive",
            "c) Non recursive",
            "d) Both Recursive and Constructive"
        ],
        "Answer": "Answer: a\nExplanation: The nature of predictive parsers can be Recursive."
    },
    {
        "id": 430,
        "Question": "Producer consumer problem can be solved using __________",
        "Options": [
            "a) Semaphores",
            "b) Event counters",
            "c) Monitors",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The famous producer consumer problem can be solved by a semaphores event counters as well as monitors."
    },
    {
        "id": 431,
        "Question": "Bottom up parsing involves __________",
        "Options": [
            "a) Shift reduce",
            "b) Handle pruning",
            "c) Shift reduce & Handle pruning",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\n Explanation: The bottom up parsing involves Shift reduce operation and Handle pruning."
    },
    {
        "id": 432,
        "Question": "What is an example of intermediate language?",
        "Options": [
            "a) SNOBOL",
            "b) PASCAL",
            "c) COBOL",
            "d) UNCOL"
        ],
        "Answer": "Answer: d\nExplanation: Others are HLL."
    },
    {
        "id": 433,
        "Question": "In a two pass assembler the object code generation is done during the __________",
        "Options": [
            "a) Second pass",
            "b) First pass",
            "c) Zeroth pass",
            "d) Not done by assembler"
        ],
        "Answer": "Answer: a\nExplanation: I second pass object code is generated."
    },
    {
        "id": 434,
        "Question": "In which addressing mode the operand is given explicitly in the instruction?",
        "Options": [
            "a) Absolute mode",
            "b) Immediate mode",
            "c) Indirect mode",
            "d) Index mode"
        ],
        "Answer": "Answer:  b\nExplanation: In Immediate addressing mode operand is directly found from the instruction. "
    },
    {
        "id": 435,
        "Question": "Which of the following is not true?",
        "Options": [
            "a) UGL doesn’t support high level seven interaction",
            "b) Many DBMS support 4GLs",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It supports HLL."
    },
    {
        "id": 436,
        "Question": "Non modifiable procedures are called ___________",
        "Options": [
            "a) Concurrent procedures",
            "b) Serially usable procedures",
            "c) Re-entrant procedures",
            "d) Top down procedures"
        ],
        "Answer": "Answer: b\nExplanation: These can’t be modified."
    },
    {
        "id": 437,
        "Question": "Which of the following is not a type of assembler?",
        "Options": [
            "a) One pass",
            "b) Two pass",
            "c) Three pass",
            "d) Load and go"
        ],
        "Answer": "Answer: c\nExplanation: No 3 pass assembler created as yet."
    },
    {
        "id": 438,
        "Question": "Daisy chain is a device for ___________",
        "Options": [
            "a) None of the mentioned",
            "b) Connecting devices to a controller",
            "c) Connecting  controller to devices",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Combines multiple devices in sequence or a ring."
    },
    {
        "id": 439,
        "Question": "What is the input of Lex?",
        "Options": [
            "a) Set to regular expression",
            "b) Statement",
            "c) Numeric data",
            "d) ASCII data"
        ],
        "Answer": "Answer: a\nExplanation: Input is a string."
    },
    {
        "id": 440,
        "Question": "Yacc semantic action is a sequence of ___________",
        "Options": [
            "a) Tokens",
            "b) Expression",
            "c) Statement",
            "d) Rules"
        ],
        "Answer": "Answer: c\nExplanation: Yacc is yet another compiler which is a set of statements."
    },
    {
        "id": 441,
        "Question": "Which of the following software tool is parser generator?",
        "Options": [
            "a) Lex",
            "b) Yacc",
            "c) Lex & Yacc",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: YACC is a LALR parser."
    },
    {
        "id": 442,
        "Question": "A Lex compiler generates ___________",
        "Options": [
            "a) Lex object code",
            "b) Transition tables",
            "c) Tokens",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The output of Lex is a string of tokens."
    },
    {
        "id": 443,
        "Question": "A Compiler has __________ phases.",
        "Options": [
            "a) 7",
            "b) 6",
            "c) 8",
            "d) None of the mentioned"
        ],
        "Answer": "Answer:  c\nExplanation: It has 8 phases."
    },
    {
        "id": 444,
        "Question": " This set of Compilers Multiple Choice Questions & Answers (MCQs) focuses on “Implementation of Increment and Decrement – 1”.\nhat value does the variable b have after ALL of the code executes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> a<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> b<span class=\"sy0\">;</span>\na<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>\nb<span class=\"sy0\">=</span>a<span class=\"sy0\">++;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) unknown/undefined"
        ],
        "Answer": "Answer: a\nExplanation: b will be one because when value of ais 1 it is stored."
    },
    {
        "id": 445,
        "Question": "2. What value does the variable a have after ALL of the code above executes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> a<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> b<span class=\"sy0\">;</span>\na<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span>\nb<span class=\"sy0\">=</span>a<span class=\"sy0\">++;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) unknown/undefined"
        ],
        "Answer": "Answer: b\nExplanation: a=2 cause it has been incremented."
    },
    {
        "id": 446,
        "Question": "3. What value does the variable z have after ALL of the code above executes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> x<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> y<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> z<span class=\"sy0\">;</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span>\ny<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"sy0\">;</span>\nz <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>x <span class=\"sy0\">*</span> y<span class=\"sy0\">++;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 9",
            "b) 12",
            "c) 16",
            "d) 20"
        ],
        "Answer": "Answer: c\nExplanation: z=4* 4\nHence the answer will be 16."
    },
    {
        "id": 447,
        "Question": "4. What value does the variable x have after ALL of the code above executes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> x<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> y<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> z<span class=\"sy0\">;</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span>\ny<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"sy0\">;</span>\nz <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>x <span class=\"sy0\">*</span> y<span class=\"sy0\">++;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 4",
            "d) unknown/undefined"
        ],
        "Answer": "Answer: c\nExplanation: Finally the value of x is 4."
    },
    {
        "id": 448,
        "Question": "5. What value does the variable y have after ALL of the code above executes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> x<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> y<span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> z<span class=\"sy0\">;</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span>\ny<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"sy0\">;</span>\nz <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>x <span class=\"sy0\">*</span> y<span class=\"sy0\">++;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 6",
            "d) unknown/undefined"
        ],
        "Answer": "Answer: b\nExplanation: The value of y is increased by 1 and becomes 5."
    },
    {
        "id": 449,
        "Question": "6. What will be the output of the following program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span> <span class=\"sy0\">++</span><span class=\"br0\">(</span><span class=\"sy0\">-</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) 10",
            "c) -9",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The expression  ++(-i) is not valid but –(++i) is valid."
    },
    {
        "id": 450,
        "Question": "7. What will be output of the following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#‎include‬ &lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> x<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"sy0\">;</span>\n    y <span class=\"sy0\">=</span> <span class=\"sy0\">--</span>x<span class=\"sy0\">;</span>\n    z <span class=\"sy0\">=</span> x<span class=\"sy0\">--;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d, %d, %d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4,3,3",
            "b) 3,3,3",
            "c) 2,3,3",
            "d) 4,4,3"
        ],
        "Answer": "Answer: c\nExplanation:  y = 3 and  z= 3 but\n x has decremented and become 2."
    },
    {
        "id": 451,
        "Question": "8. What will be output of the following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include &lt;stdio.h&gt;</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span>\n    b<span class=\"sy0\">=</span> a<span class=\"sy0\">++</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">++</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">++</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">++</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">++;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"a=%d <span class=\"es1\">\\n</span> b=%d\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span> \n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a = 6, b = 15",
            "b) a = 1, b = 3",
            "c) a = 1, b = 15",
            "d) a = 2, b = 4"
        ],
        "Answer": "Answer: a\nExplanation: B=1+2+3+4+5\nB=15\nBut finally a=6."
    },
    {
        "id": 452,
        "Question": "9. What will be output of the following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include &lt;stdio.h&gt;</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"nu0\">9</span><span class=\"sy0\">;</span>\n    a<span class=\"sy0\">=</span>b<span class=\"sy0\">++;</span>\n    b<span class=\"sy0\">=</span>a<span class=\"sy0\">++;</span>\n    b<span class=\"sy0\">=++</span>b<span class=\"sy0\">;</span> \n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d %d\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 9,9",
            "b) 10,10",
            "c) 9,10",
            "d) 10,9"
        ],
        "Answer": "Answer: b\nExplanation: A=9\nB=9\nB=10"
    },
    {
        "id": 453,
        "Question": "10. What will be output of the following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include &lt;stdio.h&gt;</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>  \n     <span class=\"kw4\">int</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">;</span>\n     b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\n     a <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>b <span class=\"sy0\">+</span> <span class=\"sy0\">++</span>b<span class=\"sy0\">;</span>\n     <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d%d\"</span><span class=\"sy0\">,</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 24,12",
            "b) 23,12",
            "c) 23,10",
            "d) 24,10"
        ],
        "Answer": "Answer: b\nExplanation: A = 11+12\nSo a=23\nB=12."
    },
    {
        "id": 454,
        "Question": "In C programming language, which of the following type of operators have the highest precedence?",
        "Options": [
            "a) Relational Operators",
            "b) Equality Operators",
            "c) Logical Operators",
            "d) Arithmetic Operators"
        ],
        "Answer": "Answer: d\nExplanation: No other operator has  higher precedence than arithmetic operator."
    },
    {
        "id": 455,
        "Question": "Which of the following operators has the highest precedence?",
        "Options": [
            "a) Unary +",
            "b) *",
            "c) >=",
            "d) =="
        ],
        "Answer": "Answer: a\nExplanation: Unary operators have max precedence in over all other arithmetic operators."
    },
    {
        "id": 456,
        "Question": "3. If i=1 j=2,k=3, then what is the value of the following expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">!((j + k) &gt; (i + 5))</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 6",
            "b) 5",
            "c) 1",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation:  !((2+3)>(1+5))\n!(5>6)\nSince the condition is false hence !(0)\nAnd complement of 0 is 1."
    },
    {
        "id": 457,
        "Question": "The expression 5 – 2 – 3 * 5 – 2 will evaluate to 18, if – is left associative and _____________",
        "Options": [
            "a) * has precedence over *",
            "b) * has precedence over –",
            "c) – has precedence over *",
            "d) – has precedence over –"
        ],
        "Answer": "Answer: c\nExplanation: if – has precedence over* and if it associates from the right."
    },
    {
        "id": 458,
        "Question": "Coercion _____________",
        "Options": [
            "a) Takes place over an assignment operator",
            "b) Operator has operands of various types",
            "c) None of the mentioned",
            "d) Takes place over an assignment operator & Operator has operands of various types"
        ],
        "Answer": "Answer: d\nExplanation: Conversion between compatible types."
    },
    {
        "id": 459,
        "Question": "Choose the correct statement.",
        "Options": [
            "a) Expressions evaluated at compile time",
            "b) String constants concatenated at compile time",
            "c) None of the mentioned",
            "d) Both of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The statements are true."
    },
    {
        "id": 460,
        "Question": "Which of the following operators takes only integer operands?",
        "Options": [
            "a) +",
            "b) *",
            "c) /",
            "d) %"
        ],
        "Answer": "Answer: d\nExplanation: Two integers are taken to be input."
    },
    {
        "id": 461,
        "Question": "Pick the operators that associate from the left.",
        "Options": [
            "a) +",
            "b) ,",
            "c) <",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: They are left associative."
    },
    {
        "id": 462,
        "Question": "Pick the operators that associate from the right.",
        "Options": [
            "a) ?:",
            "b) +=",
            "c) =",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\n Explanation: They are right associative."
    },
    {
        "id": 463,
        "Question": "Pick the operators that associate from left to right.",
        "Options": [
            "a) &&",
            "b) ?:",
            "c) ,",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: They left to right associative."
    },
    {
        "id": 464,
        "Question": "Which of the following correctly declares an array?",
        "Options": [
            "a) Int array[ 10]",
            "b) int array",
            "c) array{10}",
            "d) array array[ 10]"
        ],
        "Answer": "Answer: a\nExplanation: Correct declaration."
    },
    {
        "id": 465,
        "Question": "What is the index number of the last element of an array with 29 elements?",
        "Options": [
            "a) 29",
            "b) 28",
            "c) 0",
            "d) Programmer-Defined"
        ],
        "Answer": "Answer: b\nExplanation: The indexing in an array starts with zero hence we can say that the element. "
    },
    {
        "id": 466,
        "Question": "Which of the following is a two-dimensional array?",
        "Options": [
            "a) array array[20][20]",
            "b) int array[20][20]",
            "c) int array[20, 20]",
            "d) char array[20]"
        ],
        "Answer": "Answer: b\nExplanation: Double dimensional arrays are declared in this format. "
    },
    {
        "id": 467,
        "Question": "Which of the following correctly accesses the seventh element stored in tan?",
        "Options": [
            "a) tan[6]",
            "b) tan[7]",
            "c) tan(7)",
            "d) tan"
        ],
        "Answer": "Answer: a\nExplanation: The index no 6."
    },
    {
        "id": 468,
        "Question": "Which of the following gives the memory address of the first element in array tan?",
        "Options": [
            "a) tan[0]",
            "b) tan",
            "c) &tan",
            "d) tan [1]"
        ],
        "Answer": "Answer: b\nExplanation: The base address of the array is given by its name."
    },
    {
        "id": 469,
        "Question": "What will happen if in a C program you assign a value to an array element whose subscript exceeds the size of array?",
        "Options": [
            "a) The compiler would report an error",
            "b) May stop working abruptly if data gets overwritten",
            "c) None of the mentioned",
            "d) The element will be set to 0"
        ],
        "Answer": "Answer: b\nExplanation: It often happens that the program crashes."
    },
    {
        "id": 470,
        "Question": "7. What does the following declaration mean?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\"> int (*a)[10] a</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Pointer to an array",
            "b) None of the mentioned",
            "c) Array of 10 integers",
            "d) Pointer to an array & Array of 10 integers"
        ],
        "Answer": "Answer: a\nExplanation: Points to array."
    },
    {
        "id": 471,
        "Question": "8. What is the meaning of the following declaration?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">Int arr[20]</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Integer Array of size 20",
            "b) None of the mentioned",
            "c) Array of size 20",
            "d) Array of size 20 that can have higher integer address"
        ],
        "Answer": "Answer:  a\nExplanation: Declaration of an array."
    },
    {
        "id": 472,
        "Question": "9. What will be the size of below array elements?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">int a[20]</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 21",
            "b) 22",
            "c) 20",
            "d) 19"
        ],
        "Answer": "Answer:  c\nExplanation: The number in square brackets denotes size of an array."
    },
    {
        "id": 473,
        "Question": "10. What is meaning of the following?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">Int *ptr[20]</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Interger array of size 20 pointing to an integer Pointer",
            "b) None of the mentioned",
            "c) Array of integer pointer of size 20",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Array of pointers to integers. "
    },
    {
        "id": 474,
        "Question": "In which way can SAM be stored in an array?",
        "Options": [
            "a) char name[]=”SAM”",
            "b) char name[6]={‘S’,’A’,’M’}",
            "c) char name[6]={“S”,”A”,”M”}",
            "d) char name [6]={‘S’,’A’,’M’,’\\0’}"
        ],
        "Answer": "Answer: d\nExplanation: The array consists of the word SAM and also a NULL character."
    },
    {
        "id": 475,
        "Question": "Int RollNUm[30[4] is a?",
        "Options": [
            "a) 1-d Array",
            "b) 3-D Array",
            "c) 4- D Array",
            "d) 2-D Array"
        ],
        "Answer": "Answer: d\nExplanation: 2 [] brackets means a double dimensional array."
    },
    {
        "id": 476,
        "Question": "3. What will be output of the following code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">char</span> arr<span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"Network\"</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span>arr<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Network",
            "b) N",
            "c) network",
            "d) Garbage Value"
        ],
        "Answer": "Answer: d\nExplanation: Garbage value is printed."
    },
    {
        "id": 477,
        "Question": "4. What will be output of the following code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">char</span> arr<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"The African Queen\"</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span>arr<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) The African Queen",
            "b) The",
            "c) Queen",
            "d) Null"
        ],
        "Answer": "Answer: d\nExplanation: It gives a Null Value."
    },
    {
        "id": 478,
        "Question": "5. What will be output if you will execute following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">char</span> arr<span class=\"br0\">[</span><span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"MysticRiver\"</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>arr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 20",
            "b) 11",
            "c) 30",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The size of array is 20."
    },
    {
        "id": 479,
        "Question": "6. What will be output if you will execute following C code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> SIZE<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> expr<span class=\"sy0\">;</span>\n    <span class=\"kw4\">double</span> value<span class=\"br0\">[</span>SIZE<span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu16\">2.0</span><span class=\"sy0\">,</span><span class=\"nu16\">4.0</span><span class=\"sy0\">,</span><span class=\"nu16\">6.0</span><span class=\"sy0\">,</span><span class=\"nu16\">8.0</span><span class=\"sy0\">,</span><span class=\"nu16\">10.0</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>\n    expr<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">|</span><span class=\"nu0\">2</span><span class=\"sy0\">|</span><span class=\"nu0\">3</span><span class=\"sy0\">|</span><span class=\"nu0\">4</span><span class=\"sy0\">;</span>\n    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%f\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">[</span>expr<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2.00000",
            "b) 4.00000",
            "c) 6.00000",
            "d) Compilation error"
        ],
        "Answer": "Answer: d\nExplanation: No fixed value in [] brackets."
    },
    {
        "id": 480,
        "Question": "7. Comment on the following statement:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">  <span class=\"kw4\">int</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) An array “a” of pointers",
            "b) A pointer “a” to an array",
            "c) A ragged array",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It is a pointer to array a."
    },
    {
        "id": 481,
        "Question": "8. Comment on the 2 arrays regarding P and Q:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">int</span> <span class=\"sy0\">*</span>a1<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>\n<span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">(</span>a3<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\nP. <span class=\"me1\">Array</span> of pointers\nQ. <span class=\"me1\">Pointer</span> to an array</pre></div></div></div></div></div></div>",
        "Options": [
            "a) a1 is P, a2 is Q",
            "b) a1 is P, a2 is P",
            "c) a1 is Q, a2 is P",
            "d) a1 is Q, a2 is Q"
        ],
        "Answer": "Answer: b\nExplanation: p =a1\nAnd  a3 is alo p."
    },
    {
        "id": 482,
        "Question": "Which of the following is not possible statically in C?",
        "Options": [
            "a) Jagged Array",
            "b) Rectangular Array",
            "c) Cuboidal Array",
            "d) Multidimensional Array"
        ],
        "Answer": "Answer: a\nExplanation: Jagged array is not possible."
    },
    {
        "id": 483,
        "Question": "What is the max no. of dimensions an array may have?",
        "Options": [
            "a) 2",
            "b) 8",
            "c) 20",
            "d) No limit"
        ],
        "Answer": "Answer:  d\nExplanation: Dimension of an array can be any number."
    },
    {
        "id": 484,
        "Question": "Array passed as an argument to a function is interpreted as ______________",
        "Options": [
            "a) Address of the array",
            "b) None of the mentioned",
            "c) Base address",
            "d) No. of elements of the array"
        ],
        "Answer": "Answer: c\nExplanation: The base address is passed when the array is passed as an argument in a function."
    },
    {
        "id": 485,
        "Question": "1. Select the output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span> \n    <span class=\"kw4\">int</span> movie <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>movie <span class=\"sy0\">&amp;</span>lt<span class=\"sy0\">;&amp;</span>lt<span class=\"sy0\">;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> movie<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">8</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"D\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n      <span class=\"br0\">}</span>\n      Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) C",
            "d) D"
        ],
        "Answer": "Answer: c\nExplanation:  ‘default’ case can be put in anywhere.\nOutput: D. "
    },
    {
        "id": 486,
        "Question": "2. Select the output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span> <span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"1 and 2\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">3</span> to <span class=\"nu0\">10</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"3 to 10\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n    Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3 to 10 will be printed",
            "b) 1 and 2 will be printed",
            "c) error",
            "d) The code gives output as 3 to 10"
        ],
        "Answer": "Answer: c\nExplanation:\nOutput:\nHere i = 2,j = 4."
    },
    {
        "id": 487,
        "Question": "3. Select the output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> k<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n         <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>\n             <span class=\"sy0\">++</span>i<span class=\"sy0\">;</span>\n             <span class=\"sy0\">++</span>k<span class=\"sy0\">;</span>\n             <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n         <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span>\n             <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span>\n             <span class=\"sy0\">++</span>k<span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n         <span class=\"kw1\">default</span><span class=\"sy0\">:</span>\n             i <span class=\"sy0\">+=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span>\n             k <span class=\"sy0\">+=</span> i<span class=\"sy0\">;</span>\n             <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n     <span class=\"br0\">}</span>\n     Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"sy0\">+</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n     Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n <span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2 3 3",
            "b) 3 2 3",
            "c) 3 4 4",
            "d) 5 10 10"
        ],
        "Answer": "Answer: c\nOutput: 3\n4\n4\nExplanation: i – k = -1.So, case -1 will be executed only."
    },
    {
        "id": 488,
        "Question": "4. Select output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n     <span class=\"kw4\">int</span> <span class=\"kw4\">const</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n     <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">*</span> <span class=\"nu0\">5</span> <span class=\"sy0\">/</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span>\n     <span class=\"br0\">{</span>\n         <span class=\"kw1\">case</span> p<span class=\"sy0\">:</span> \n             Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n             <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n         <span class=\"kw1\">case</span> p <span class=\"sy0\">*</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span>\n             Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n             <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n         <span class=\"kw1\">case</span> p <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span>\n             Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n             <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n         <span class=\"kw1\">default</span><span class=\"sy0\">:</span> \n             Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"D\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n       <span class=\"br0\">}</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) C",
            "d) Compile time error"
        ],
        "Answer": "Answer: d\nExplanation: No constant variable."
    },
    {
        "id": 489,
        "Question": "5. Select output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">-</span> k<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span>\n            <span class=\"sy0\">++</span>i<span class=\"sy0\">;</span>\n            k <span class=\"sy0\">+=</span> j<span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">5</span> <span class=\"sy0\">:</span>\n            <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span>\n            k <span class=\"sy0\">-=</span> j<span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span>\n            i <span class=\"sy0\">+=</span> j<span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n     <span class=\"br0\">}</span>\n     Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"sy0\">+</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n     Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 3 1",
            "b) 2 3 4",
            "c) 5 3 4",
            "d) Compile time error"
        ],
        "Answer": "Answer: a\nExplanation: Solving expression  gives 1\nOutput: 1\n3\n1\n"
    },
    {
        "id": 490,
        "Question": "6. Select the output for following set of code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span>  i <span class=\"sy0\">=</span> <span class=\"nu0\">9</span> <span class=\"sy0\">,</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">9</span><span class=\"sy0\">:</span> <span class=\"nu0\">7</span><span class=\"sy0\">:</span>\n            j <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span>\n            i <span class=\"sy0\">-=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n    Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\n</span>\"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n  <span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 5 7",
            "b) 9 13",
            "c) Compile time error",
            "d) 9 7"
        ],
        "Answer": "Answer: c\nExplanation: Invalid expression."
    },
    {
        "id": 491,
        "Question": "7. Select the output for code :<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu17\">5.0f</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"harsh\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"amish\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> 5.0L<span class=\"sy0\">:</span> \n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"ANKIT\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"ashish\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n    Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) amish",
            "b) ANKIT",
            "c) harsh",
            "d) Compile time error"
        ],
        "Answer": "Answer: d\nExplanation: Only integers  are allowed .\n5.0f = (int)5.0f.\n5.0L =(int)5.0L."
    },
    {
        "id": 492,
        "Question": "8. Select output for code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>ar <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">21</span><span class=\"sy0\">,</span> <span class=\"nu0\">22</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ar<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span>\n            i<span class=\"sy0\">++;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span>\n            i <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span>\n            j <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span>\n            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> \n           i <span class=\"sy0\">%=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span>\n           j <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span>\n           <span class=\"kw1\">continue</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span> \n           <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n    Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 23",
            "b) 15",
            "c) Compile time error",
            "d) 12"
        ],
        "Answer": "Answer: c\nExplanation: Continue cannot be used.\n"
    },
    {
        "id": 493,
        "Question": "9. Select the output for following set of Code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">char</span> ch <span class=\"sy0\">=</span> Convert.<span class=\"me1\">ToChar</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span> <span class=\"sy0\">|</span> <span class=\"st0\">'b'</span> <span class=\"sy0\">|</span> <span class=\"st0\">'c'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ch<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'A'</span><span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'a'</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case A|case a\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'B'</span><span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'b'</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case B|case b\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'C'</span><span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'c'</span><span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'D'</span><span class=\"sy0\">:</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case D|case d\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n     <span class=\"br0\">}</span>\n     Console.<span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) case A | case a",
            "c) case B | case b",
            "d) case D | case d"
        ],
        "Answer": "Answer: d\nExplanation:  case D|case d"
    },
    {
        "id": 494,
        "Question": "10. Select the output for following set of Code.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span>string<span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">char</span> ch <span class=\"sy0\">=</span> <span class=\"st0\">'p'</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ch<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"st0\">'p'</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"coco\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es1\">\\t</span>\"</span> <span class=\"sy0\">+</span> Convert.<span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span>\n            Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"default\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw2\">break</span><span class=\"sy0\">;</span> \n     <span class=\"br0\">}</span>\n     Console.<span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"main\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) coco main",
            "b) coco 112",
            "c) coco 112 main",
            "d) compile time error"
        ],
        "Answer": "Answer: c\nExplanation: ASCII value of p is 112.\nOutput: coco 112 main."
    },
    {
        "id": 495,
        "Question": "1.  How many times will the following loop be executed?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">   ch <span class=\"sy0\">=</span> <span class=\"st0\">'b'</span><span class=\"sy0\">;</span>\n<span class=\"kw1\">while</span><span class=\"br0\">(</span>ch <span class=\"sy0\">&amp;</span>gt<span class=\"sy0\">;=</span> <span class=\"st0\">'a'</span> <span class=\"sy0\">&amp;&amp;</span> ch <span class=\"sy0\">&amp;</span>lt<span class=\"sy0\">;=</span> <span class=\"st0\">'z'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 25",
            "c) 26",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: Because there are 26 alphabets and so it runs for 26-1 times."
    },
    {
        "id": 496,
        "Question": "What will be printed when input is 2?",
        "Options": [
            "a) Two Three default",
            "b) Two",
            "c) Two default",
            "d) Two Two default"
        ],
        "Answer": "Answer: a\nExplanation: Because in between cases there is no break statement."
    },
    {
        "id": 497,
        "Question": "4. Consider the following C program. What is the Value of a?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"co2\">#include&lt;stdio.h&gt;</span>\n<span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">int</span> a<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"nu0\">5</span><span class=\"sy0\">;</span>\n    <span class=\"kw1\">switch</span><span class=\"br0\">(</span>a <span class=\"sy0\">=</span> a <span class=\"sy0\">%</span> b<span class=\"br0\">)</span>\n    <span class=\"br0\">{</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span>\n            a <span class=\"sy0\">=</span> a <span class=\"sy0\">-</span> b<span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span>\n            a <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span>\n            a <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span>\n        <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span>\n            a <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> b<span class=\"sy0\">;</span>\n        <span class=\"kw1\">default</span><span class=\"sy0\">:</span>\n            a <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n<span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 7",
            "b) 5",
            "c) 9",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Switch is more convenient to use as it avoids confusion in case of more nested structure."
    },
    {
        "id": 498,
        "Question": "6. What will be the output of the following Code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    <span class=\"kw4\">static</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">;</span>\n    <span class=\"kw1\">while</span><span class=\"br0\">(</span>a <span class=\"sy0\">&gt;</span> b<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a=0 b=0",
            "b) a=0 b=0",
            "c) a=1 b=1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Initially a=a%b gives 2. Then in case 2 a=a+b gives 2+5=7. Hence a=7."
    },
    {
        "id": 499,
        "Question": "7. Number of times the loop will run.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\"><span class=\"kw1\">for</span><span class=\"br0\">(</span>digit <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>digit <span class=\"sy0\">&amp;</span>lt<span class=\"sy0\">;</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span> digit<span class=\"sy0\">++</span><span class=\"br0\">)</span>\n<span class=\"br0\">{</span>\n    digit <span class=\"sy0\">=</span> digit <span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"sy0\">;</span>\n    digit<span class=\"sy0\">--;</span>\n<span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Infinite",
            "b) 9",
            "c) 0",
            "d) 4"
        ],
        "Answer": "Answer: b\nExplanation: Infinite loop."
    },
    {
        "id": 500,
        "Question": "The load instruction is mostly used to designate a transfer from memory to a processor register known as _______",
        "Options": [
            "a) Accumulator",
            "b) Instruction Register",
            "c) Program counter",
            "d) Memory address Register"
        ],
        "Answer": "Answer: a\nExplanation: Accumulator is the process register."
    },
    {
        "id": 501,
        "Question": "A group of bits that tell the computer to perform a specific operation is known as ________",
        "Options": [
            "a) Instruction code",
            "b) Micro-operation",
            "c) Accumulator",
            "d) Register"
        ],
        "Answer": "Answer: a\nExplanation: Instruction code is the set of specific tasks to be performed."
    },
    {
        "id": 502,
        "Question": "The time interval between adjacent bits is called the __________",
        "Options": [
            "a) Word-time",
            "b) Bit-time",
            "c) Turnaround time",
            "d) Slice time"
        ],
        "Answer": "Answer: b\nExplanation: Bit time is the interval time here."
    },
    {
        "id": 503,
        "Question": "A k-bit field can specify any one of __________",
        "Options": [
            "a) 3k registers",
            "b) 2k registers",
            "c) K2 registers",
            "d) K3 registers"
        ],
        "Answer": "Answer: b\nExplanation: 2k is the answer."
    },
    {
        "id": 504,
        "Question": "MIMD stands for __________",
        "Options": [
            "a) Multiple instruction multiple data",
            "b) Multiple instruction memory data",
            "c) Memory instruction multiple data",
            "d) Multiple information memory data"
        ],
        "Answer": "Answer: a\nExplanation: MIMD stands for multiple instructions multiple data."
    },
    {
        "id": 505,
        "Question": "Logic gates with a set of input and outputs are arrangement of ___________",
        "Options": [
            "a) Computational circuit",
            "b) Logic circuit",
            "c) Design circuits",
            "d) Register"
        ],
        "Answer": "Answer: a\nExplanation: The answer is computational circuit."
    },
    {
        "id": 506,
        "Question": "The average time required to reach a storage location in memory and obtain its contents is called __________",
        "Options": [
            "a) Latency time",
            "b) Access time",
            "c) Turnaround time",
            "d) Response time"
        ],
        "Answer": "Answer: b\nExplanation: Access time is the time from the start of one storage device access to the time when the next access can be started."
    },
    {
        "id": 507,
        "Question": "The BSA instruction is ___________",
        "Options": [
            "a) Branch and store accumulator",
            "b) Branch and save return address",
            "c) Branch and shift address",
            "d) Branch and show accumulator"
        ],
        "Answer": "Answer: b\nExplanation: BSA is branch and save return address."
    },
    {
        "id": 508,
        "Question": "A floating point number that has an O in the MSB of mantissa is said to have __________",
        "Options": [
            "a) Overflow",
            "b) Underflow",
            "c) Important number",
            "d) Undefined"
        ],
        "Answer": "Answer: b\nExplanation: It is an underflow condition."
    },
    {
        "id": 509,
        "Question": "Translation from symbolic program into Binary is done in __________",
        "Options": [
            "a) Two passes",
            "b) Directly",
            "c) Three passes",
            "d) Four passes"
        ],
        "Answer": "Answer: a\nExplanation: Two passes are required."
    },
    {
        "id": 510,
        "Question": "The instruction ‘ORG O’ is a ______",
        "Options": [
            "a) Machine Instruction",
            "b) Pseudo instruction",
            "c) High level instruction",
            "d) Memory instruction"
        ],
        "Answer": "Answer: b\nExplanation: It is a pseudo instruction."
    },
    {
        "id": 511,
        "Question": "‘Aging registers’ are _______",
        "Options": [
            "a) Counters which indicate how long ago their associated pages have been Referenced",
            "b) Registers which keep track of when the program was last accessed",
            "c) Counters to keep track of last accessed instruction",
            "d) Counters to keep track of the latest data structures referred"
        ],
        "Answer": "Answer: a\nExplanation: This is known as aging."
    },
    {
        "id": 512,
        "Question": "Memory unit accessed by content is called ______",
        "Options": [
            "a) Read only memory",
            "b) Programmable Memory",
            "c) Virtual Memory",
            "d) Associative Memory"
        ],
        "Answer": "Answer: d\nExplanation: Associative Emory is accessed by content."
    },
    {
        "id": 513,
        "Question": "_________ register keeps tracks of the instructions stored in program stored in memory.",
        "Options": [
            "a) AR (Address Register)",
            "b) XR (Index Register)",
            "c) PC (Program Counter)",
            "d) AC (Accumulator)"
        ],
        "Answer": "Answer: c\nExplanation: Program counter keeps a track."
    },
    {
        "id": 514,
        "Question": "N bits in operation code imply that there are ___________ possible distinct Operators.",
        "Options": [
            "a) 2n",
            "b) 2n",
            "c) n/2",
            "d) n2"
        ],
        "Answer": "Answer: b\nExplanation: 2n possible combinations."
    },
    {
        "id": 515,
        "Question": "A three input NOR gate gives logic high output only when _____________",
        "Options": [
            "a) One input is high",
            "b) One input is low",
            "c) Two input are low",
            "d) All input are high"
        ],
        "Answer": "Answer: d\nExplanation: All inputs are high."
    },
    {
        "id": 516,
        "Question": "The circuit converting binary data in to decimal is_____",
        "Options": [
            "a) Encoder",
            "b) Multiplexer",
            "c) Decoder",
            "d) Code converter"
        ],
        "Answer": "Answer: d\nExplanation: It is the code converter."
    },
    {
        "id": 517,
        "Question": "The multiplicand register & multiplier register of a hardware circuit implementing booth’s algorithm have (11101) & (1100). The result shall be ______",
        "Options": [
            "a) (812)10",
            "b) (-12)10",
            "c) (12)10",
            "d) (-812)10"
        ],
        "Answer": "Answer: a\nExplanation: On multiplying we get 81210."
    },
    {
        "id": 518,
        "Question": "PSW is saved in stack when there is a ________",
        "Options": [
            "a) Interrupt recognized",
            "b) Execution of RST instruction",
            "c) Execution of CALL instruction",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It can be interrupted. "
    },
    {
        "id": 519,
        "Question": "In computers, subtraction is carried out generally by __________",
        "Options": [
            "a) 1’s complement method",
            "b) 2’s complement method",
            "c) signed magnitude method",
            "d) BCD subtraction method"
        ],
        "Answer": "Answer: b\nExplanation: Subtraction done by 2’s complement."
    },
    {
        "id": 520,
        "Question": "The main memory in a Personal Computer (PC) is made of __________",
        "Options": [
            "a) Cache memory",
            "b) Static RAM",
            "c) Dynamic Ram",
            "d) Cache memory & RAM"
        ],
        "Answer": "Answer: d\nExplanation: It is made up of cache memory and RAM."
    },
    {
        "id": 521,
        "Question": "Cache memory works on the principle of _________",
        "Options": [
            "a) Locality of data                                    .",
            "b) Locality of memory",
            "c) Locality of reference",
            "d) Locality of reference & memory"
        ],
        "Answer": "Answer: c\nExplanation: Cache works on Locality of reference."
    },
    {
        "id": 522,
        "Question": "An n-bit microprocessor has __________",
        "Options": [
            "a) n-bit program counter",
            "b) n-bit address register",
            "c) n-bit ALU",
            "d) n-bit instruction register"
        ],
        "Answer": "Answer: d\nExplanation: N bit microprocessor has bit instruction register."
    },
    {
        "id": 523,
        "Question": "When CPU is executing a Program that is part of the Operating System, it is said to be in __________",
        "Options": [
            "a) Interrupt mode",
            "b) System mode",
            "c) Half mode",
            "d) Simplex mode"
        ],
        "Answer": "Answer: b\nExplanation: It is in System Mode."
    },
    {
        "id": 524,
        "Question": "Logic X-OR operation of (4ACO) H & (B53F) H results __________",
        "Options": [
            "a) AACB",
            "b) 0000",
            "c) FFFF",
            "d) ABCD"
        ],
        "Answer": "Answer: c\nExplanation: Xoring the two operands we get FFFF."
    },
    {
        "id": 525,
        "Question": "If the main memory is of 8K bytes and the cache memory is of 2K words. It uses associative mapping. Then each word of cache memory shall be __________",
        "Options": [
            "a) 11 bits",
            "b) 21 bits",
            "c) 16 bits",
            "d) 20 bits"
        ],
        "Answer": "Answer: c\nExplanation: Each should be 8*2=16 bits."
    },
    {
        "id": 526,
        "Question": "A Stack-organised Computer uses instruction of __________",
        "Options": [
            "a) Indirect addressing",
            "b) Two-addressing",
            "c) Zero addressing",
            "d) Index addressing"
        ],
        "Answer": "Answer: c\nExplanation: Zero addressing modes are used in stack organised computer."
    },
    {
        "id": 527,
        "Question": "In a program using subroutine call instruction, it is necessary ___________",
        "Options": [
            "a) Initialize program counter",
            "b) Clear the accumulator",
            "c) Reset the microprocessor",
            "d) Clear the instruction register"
        ],
        "Answer": "Answer: d\nExplanation: It is mandatory to clear the instruction register."
    },
    {
        "id": 528,
        "Question": "Virtual memory consists of _________",
        "Options": [
            "a) Static RAM",
            "b) Dynamic RAM",
            "c) Magnetic memory",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It does consist of static RAM."
    },
    {
        "id": 529,
        "Question": "In signed-magnitude binary division, if the dividend is (11100)2 and divisor is (10011)2 then the result is _________",
        "Options": [
            "a) (00100)2",
            "b) (10100)2",
            "c) (11001)2",
            "d) (01100)2"
        ],
        "Answer": "Answer: b\nExplanation: After division we get 20 which is 10100."
    },
    {
        "id": 530,
        "Question": "Generally Dynamic RAM is used as main memory in a computer system as it ____________",
        "Options": [
            "a) Consumes less power",
            "b) Has higher speed",
            "c) Has lower cell density",
            "d) Needs refreshing circuitry"
        ],
        "Answer": "Answer: b\nExplanation: Because of higher speed it is Dynamic."
    },
    {
        "id": 531,
        "Question": "Write Through technique is used in which memory for updating the data ___________",
        "Options": [
            "a) Virtual memory",
            "b) Main memory",
            "c) Auxiliary memory",
            "d) Cache memory"
        ],
        "Answer": "Answer: d\nExplanation: The answer is cache memory."
    },
    {
        "id": 532,
        "Question": "Cache memory acts between __________",
        "Options": [
            "a) CPU and RAM",
            "b) RAM and ROM",
            "c) CPU and Hard Disk",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It acts between CPU and RAM."
    },
    {
        "id": 533,
        "Question": "The circuit used to store one bit of data is known as __________",
        "Options": [
            "a) Encoder",
            "b) OR gate",
            "c) Flip Flop",
            "d) Decoder"
        ],
        "Answer": "Answer: c\nExplanation: Flip flop is 1 bit circuit."
    },
    {
        "id": 534,
        "Question": "Von Neumann architecture is __________",
        "Options": [
            "a) SISD",
            "b) SIMD",
            "c) MIMD",
            "d) MISD"
        ],
        "Answer": "Answer: a\nExplanation: It is single instruction single data."
    },
    {
        "id": 535,
        "Question": "In a vectored interrupt ____________",
        "Options": [
            "a) The branch address is assigned to a fixed location in memory",
            "b) The interrupting source supplies the branch information to the processor through an interrupt vector",
            "c) The branch address is obtained from a register in the processor",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It branches to process the interrupt."
    },
    {
        "id": 536,
        "Question": "In a memory-mapped I/O system, which of the following will not be there?",
        "Options": [
            "a) LDA",
            "b) IN",
            "c) ADD",
            "d) OUT"
        ],
        "Answer": "Answer: a\nExplanation: There is no LDA."
    },
    {
        "id": 537,
        "Question": "If memory access takes 20 ns with cache and 110 ns without it, then the ratio (cache uses a 10 ns memory) is __________",
        "Options": [
            "a) 93%",
            "b) 90%",
            "c) 88%",
            "d) 87%"
        ],
        "Answer": "Answer: b\nExplanation: The answer is 90%."
    },
    {
        "id": 538,
        "Question": "The addressing mode used in an instruction of the form ADD X Y is ________",
        "Options": [
            "a) Absolute",
            "b) Indirect",
            "c) Index",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: This addressing mode is indexed."
    },
    {
        "id": 539,
        "Question": " _________ register keeps track of the instructions stored in program stored in memory.",
        "Options": [
            "a) AR (Address Register)",
            "b) XR (Index Register)",
            "c) PC (Program Counter)",
            "d) AC (Accumulator)"
        ],
        "Answer": "Answer: c\nExplanation: Program Counter keeps track of the next instruction."
    },
    {
        "id": 540,
        "Question": "The idea of cache memory is based __________",
        "Options": [
            "a) On the property of locality of reference",
            "b) On the heuristic 90-10 rule",
            "c) On the fact that references generally tend to cluster",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Cache memory is based on the locality of references."
    },
    {
        "id": 541,
        "Question": "Which of the following is not a weighted code?",
        "Options": [
            "a) Decimal Number system",
            "b) Excess 3-cod",
            "c) Binary number System",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Excess 3 is not a weighted code."
    },
    {
        "id": 542,
        "Question": "The average time required to reach a storage location in memory and obtain its contents is called the _____",
        "Options": [
            "a) Seek time",
            "b) Turnaround time",
            "c) Access time",
            "d) Transfer time"
        ],
        "Answer": "Answer: c\nExplanation: Times used to access the contents."
    },
    {
        "id": 543,
        "Question": "(2FAOC) 16 is equivalent to __________",
        "Options": [
            "a) (195 084)10",
            "b) (001011111010 0000 1100)2",
            "c) (195 084)10 & (001011111010 0000 1100)2",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It is equivalent to (001011111010 0000 1100)2."
    },
    {
        "id": 544,
        "Question": "The circuit used to store one bit of data is known as_______",
        "Options": [
            "a) Register",
            "b) Encoder",
            "c) Decoder",
            "d) Flip Flop"
        ],
        "Answer": "Answer: d\nExplanation: 1 bit circuit is known as Flip Flop."
    },
    {
        "id": 545,
        "Question": "Computers use addressing mode techniques for ____________",
        "Options": [
            "a) Giving programming versatility to the user by providing facilities as pointers to memory counters for loop control",
            "b) To reduce number of bits in the field of instruction",
            "c) Specifying rules for modifying or interpreting address field of the instruction",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of these are addressing mode techniques."
    },
    {
        "id": 546,
        "Question": "What characteristic of RAM memory makes it not suitable for permanent storage?",
        "Options": [
            "a) Too slow",
            "b) Unreliable",
            "c) It is volatile",
            "d) Too bulky"
        ],
        "Answer": "Answer: c\nExplanation: Ram is volatile."
    },
    {
        "id": 547,
        "Question": "The amount of time required to read a block of data from a disk into memory is composed of seek time, rotational latency, and transfer time. Rotational latency refers to ______",
        "Options": [
            "a) The time it takes for the platter to make a full rotation",
            "b) The time it takes for the read-write head to move into position over the appropriate track",
            "c) The time it takes for the platter to rotate the correct sector under the head",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Rotational latency is the time taken to make full rotation."
    },
    {
        "id": 548,
        "Question": "Suppose that a bus has 16 data lines and requires 4 cycles of 250 nests each to transfer data. The bandwidth of this bus would be 2 Megabytes/sec. If the cycle time of the bus was reduced to 125 nsecs and the number of cycles required for transfer stayed the same what would the bandwidth of the bus?",
        "Options": [
            "a) 1 Megabyte/sec",
            "b) 4 Megabytes/sec",
            "c) 8 Megabytes/sec",
            "d) 2 Megabytes/sec"
        ],
        "Answer": "Answer: d\nExplanation: The bandwidth is 2 mb/s."
    },
    {
        "id": 549,
        "Question": "Floating point representation is used to store ____________",
        "Options": [
            "a) Boolean values",
            "b) Whole numbers",
            "c) Real integers",
            "d) Integers"
        ],
        "Answer": "Answer: c\nExplanation: They are real Integers."
    },
    {
        "id": 550,
        "Question": "SIMD represents an organization that ______________",
        "Options": [
            "a) Refers to a computer system capable of processing several programs at the same time",
            "b) Represents organization of single computer containing a control unit, processor unit and a memory unit",
            "c) Includes many processing units under the supervision of a common control unit",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SIMD includes processing units under the super vision of a common control."
    },
    {
        "id": 551,
        "Question": "In Reverse Polish notation, expression A*B+C*D is written as __________",
        "Options": [
            "a) AB*CD*+",
            "b) A*BCD*+",
            "c) AB*CD+*",
            "d) A*B*CD+"
        ],
        "Answer": "Answer: a\nExplanation: RPN is AB*CD*+."
    },
    {
        "id": 552,
        "Question": "In computers, subtraction is generally carried out by ______",
        "Options": [
            "a) 9’s complement",
            "b) 10’s complement",
            "c) 1’s complement",
            "d) 2’s complement"
        ],
        "Answer": "Answer: d\nExplanation: Subtraction is done by 2’s complement."
    },
    {
        "id": 553,
        "Question": "Assembly language ________",
        "Options": [
            "a) Uses alphabetic codes in place of binary numbers used in machine language",
            "b) Is the easiest language to write programs",
            "c) Need not be translated into machine language",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Uses binary numbers in machine language."
    },
    {
        "id": 554,
        "Question": "Choose the correct statement.",
        "Options": [
            "a) CFG is not LR",
            "b) Ambiguous Grammar can never be LR",
            "c) CFG is not LR & Ambiguous Grammar can never be LR",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Mentioned reason is true."
    },
    {
        "id": 555,
        "Question": "How is the parsing precedence relations defined?",
        "Options": [
            "a) None of the mentioned",
            "b) All of the mentioned",
            "c) To delimit the handle",
            "d) Only for a certain pair of terminals"
        ],
        "Answer": "Answer: b\nExplanation: The reason why the precedence operations is performed."
    },
    {
        "id": 556,
        "Question": "When will the relationship between ‘+’ and ‘-’ be <?",
        "Options": [
            "a) For unary minus",
            "b) Minus is right associative",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Both statements are true.\n"
    },
    {
        "id": 557,
        "Question": "When will the relationship between ‘<’ and ‘>’ be <?",
        "Options": [
            "a) >",
            "b) <",
            "c) =",
            "d) Undefined"
        ],
        "Answer": "Answer: d\nExplanation: Undefined. There is no existing relationship between the two."
    },
    {
        "id": 558,
        "Question": "The grammar S → aSa | bS | c is?",
        "Options": [
            "a) LL(1) but not LR(1)",
            "b) LR(1) but not LR(1)",
            "c) Both LL(1) but not LR(1) & LR(1) but not LR(1)",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation:\nFirst(aSa) = a\nFirst(bS) = b\nFirst(c) = c\nLR parsers are more powerful than LL (1) parsers and LR (1)."
    },
    {
        "id": 559,
        "Question": "Recursive descent parsing is an example of ____________",
        "Options": [
            "a) Top down parsing",
            "b) Bottom up parsing",
            "c) Predictive parsing",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Top down is the answer."
    },
    {
        "id": 560,
        "Question": "LR stands for ___________",
        "Options": [
            "a) Left to right",
            "b) Left to right reduction",
            "c) Right to left",
            "d) Right most derivation and Left to right and a in reverse"
        ],
        "Answer": "Answer: d\nExplanation: Right most derivation and left to right and in reverse is used for LR."
    },
    {
        "id": 561,
        "Question": "Which is the most powerful parser?",
        "Options": [
            "a) SLR",
            "b) LALR",
            "c) Canonical LR",
            "d) Operator-precedence"
        ],
        "Answer": "Answer: c\nExplanation: Canonical tops all other parsers."
    }
]
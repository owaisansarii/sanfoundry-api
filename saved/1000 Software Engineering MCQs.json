[
    {
        "id": 1,
        "Question": "Choose the correct option in terms of Issues related to professional responsibility",
        "Options": [
            "a) Confidentiality",
            "b) Intellectual property rights",
            "c) Both Confidentiality & Intellectual property rights",
            "d) Managing Client Relationships"
        ],
        "Answer": " Answer: c\nExplanation: Engineers should normally respect the confidentiality of their employers or clients irrespective of whether or not a formal confidentiality agreement has been signed.\nThey should be aware of local laws governing the use of intellectual property such  as patents, copyright, etc."
    },
    {
        "id": 2,
        "Question": "“Software engineers should not use their technical skills to misuse other people’s computers.”Here the term misuse refers to:",
        "Options": [
            "a) Unauthorized access to computer material",
            "b) Unauthorized modification of computer material",
            "c) Dissemination of viruses or other malware",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 3,
        "Question": "Explain what is meant by PRODUCT with reference to one of the eight principles as per the ACM/IEEE Code of Ethics ?",
        "Options": [
            "a) The product should be easy to use",
            "b) Software engineers shall ensure that their products and related modifications meet the highest professional standards possible",
            "c) Software engineers shall ensure that their products and related modifications satisfy the client",
            "d) It means that the product designed /created should be easily available"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 4,
        "Question": "Identify an ethical dilemma from the situations mentioned below:",
        "Options": [
            "a) Your employer releases a safety-critical system without finishing the testing of the system",
            "b) Refusing to undertake a project",
            "c) Agreement in principle with the policies of senior management",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 5,
        "Question": "Identify the correct statement: “Software engineers shall",
        "Options": [
            "a) act in a manner that is in the best interests of his expertise and favour.”",
            "b) act consistently with the public interest.”",
            "c) ensure that their products only meet the SRS.”",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Software engineers shall act in a manner that is in the best interests of their client and employer consistent with the public interest and shall ensure that their products and related modifications meet the highest professional standards possible.Thus options a & c are ruled out."
    },
    {
        "id": 6,
        "Question": "Select the incorrect statement: “Software engineers should",
        "Options": [
            "a) not knowingly accept work that is outside your competence.”",
            "b) not use your technical skills to misuse other people’s computers.”",
            "c) be dependent on their colleagues.”",
            "d) maintain integrity and independence in their professional judgment.”"
        ],
        "Answer": " Answer: c\nExplanation:None."
    },
    {
        "id": 7,
        "Question": "Efficiency in a software product does not include ________",
        "Options": [
            "a) responsiveness",
            "b) licensing",
            "c) memory utilization",
            "d) processing time"
        ],
        "Answer": " Answer: b\nExplanation: Licensing of a software product comes under corporate part of the software company."
    },
    {
        "id": 8,
        "Question": "As per an IBM report, “31%of the project get cancelled before they are completed, 53% overrun their cost estimates by an average of 189% and for every 100 projects, there are 94 restarts”.What is the reason for these statistics ?",
        "Options": [
            "a) Lack of adequate training in software engineering",
            "b) Lack of software ethics and understanding",
            "c) Management issues in the company",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Option b & c are a part of Software Engineering as a subject,hence option a covers them both."
    },
    {
        "id": 9,
        "Question": "The reason for software bugs and failures is due to",
        "Options": [
            "a) Software companies",
            "b) Software Developers",
            "c) Both Software companies and Developers",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Software companies are responsible for making policies and providing working atmosphere for the software development, so in turn these companies become a part of software development process.Bugs from developers side is no new thing. Thus option c answers the question."
    },
    {
        "id": 10,
        "Question": "Which of these are not among the eight principles followed by Software Engineering Code of Ethics and Professional Practice ?",
        "Options": [
            "a) PUBLIC",
            "b) PROFESSION",
            "c) PRODUCT",
            "d) ENVIRONMENT"
        ],
        "Answer": " Answer: d\nExplanation: Rest all are clauses for software ethics, environment does not focus on specific clause nor its of importace related to question."
    },
    {
        "id": 11,
        "Question": "What is a Software ?",
        "Options": [
            "a) Software is set of programs",
            "b) Software is documentation and configuration of data",
            "c) Software is set of programs, documentation & configuration of data",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Software is not just set of program but it is also associated documentation and configuration of data to make program run."
    },
    {
        "id": 12,
        "Question": "Which of these does not account for software failure ?",
        "Options": [
            "a) Increasing Demand",
            "b) Low expectation",
            "c) Increasing Supply",
            "d) Less reliable and expensive"
        ],
        "Answer": " Answer: c\nExplanation: Increasing supply will lead to more production and not failure."
    },
    {
        "id": 13,
        "Question": "What are attributes of good software ?",
        "Options": [
            "a) Software maintainability",
            "b) Software functionality",
            "c) Software development",
            "d) Software maintainability & functionality"
        ],
        "Answer": " Answer: d\nExplanation: Good software should deliver the required functinality, maintainability. Software development is not an attribute but a fundamental."
    },
    {
        "id": 14,
        "Question": "Which of these software engineering activities are not a part of software processes ?",
        "Options": [
            "a) Software dependence",
            "b) Software development",
            "c) Software validation",
            "d) Software specification"
        ],
        "Answer": " Answer: a\nExplanation: Software dependence is an attribute and not an engineering activity for process."
    },
    {
        "id": 15,
        "Question": "Which of these is incorrect ?",
        "Options": [
            "a) Software engineering belongs to Computer science",
            "b) Software engineering is a part of more general form of System Engineering",
            "c) Computer science belongs to Software engineering",
            "d) Software engineering is concerned with the practicalities of developing  and delivering useful software"
        ],
        "Answer": " Answer: c\nExplanation: Software engineering is a vast sub domain which comes under computer science which is main domain."
    },
    {
        "id": 16,
        "Question": "Which of these is true ?",
        "Options": [
            "a) Generic products and customized products are types of software products",
            "b) Generic products are produced by organization and sold to open market",
            "c) Customized products are commissioned by particular customer",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All of them are true."
    },
    {
        "id": 17,
        "Question": "Which of these does not affect different types of software  as a whole?",
        "Options": [
            "a) Heterogeneity",
            "b) Flexibility",
            "c) Business and social change",
            "d) Security"
        ],
        "Answer": " Answer: b\nExplanation: Option b & c are a part of Software Engineering as a subject,hence option a covers them both."
    },
    {
        "id": 18,
        "Question": "The fundamental notions of software engineering does not account for ?",
        "Options": [
            "a) Software processes",
            "b) Software Security",
            "c) Software reuse",
            "d) Software Validation"
        ],
        "Answer": " Answer: d\nExplanation: Software validation is an activity for software process and not the fundamental for engineering. "
    },
    {
        "id": 19,
        "Question": "Which of these is not true ?",
        "Options": [
            "a) Web has led to availability of software services and possibility of developing highly distributed service based systems",
            "b) Web based systems have led to degradation of programming languages",
            "c) Web brings concept of software as service",
            "d) Web based system should be developed and delivered incrementally"
        ],
        "Answer": " Answer: b\nExplanation: Web based systems has led to important advances in programming languages."
    },
    {
        "id": 20,
        "Question": "Build & Fix Model is suitable for programming exercises of ___________ LOC (Line of Code).",
        "Options": [
            "a) 100-200",
            "b) 200-400",
            "c) 400-1000",
            "d) above 1000"
        ],
        "Answer": " Answer: a\nExplanation: Build & Fix Model is suitable for small projects & programming exercises of 100 or 200 lines."
    },
    {
        "id": 21,
        "Question": "RAD stands for",
        "Options": [
            "a) Relative Application Development",
            "b) Rapid Application Development",
            "c) Rapid Application Document",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 22,
        "Question": "Which one of the following models is not suitable for accommodating any change?",
        "Options": [
            "a) Build & Fix Model",
            "b) Prototyping Model",
            "c) RAD Model",
            "d) Waterfall Model"
        ],
        "Answer": " Answer: d\nExplanation: Real projects rarely follow the sequential flow that the Waterfall Model proposes."
    },
    {
        "id": 23,
        "Question": "Which is not one of the types of prototype of Prototyping Model?",
        "Options": [
            "a) Horizontal Prototype",
            "b) Vertical Prototype",
            "c) Diagonal Prototype",
            "d) Domain Prototype"
        ],
        "Answer": " Answer: c\nExplanation: Their is no such thing as Diagonal Prototype whereas other options have their respective definitions."
    },
    {
        "id": 24,
        "Question": "Which one of the following is not a phase of Prototyping Model?",
        "Options": [
            "a) Quick Design",
            "b) Coding",
            "c) Prototype Refinement",
            "d) Engineer Product"
        ],
        "Answer": " Answer: b\nExplanation: A prototyping model generates only a working model of a system."
    },
    {
        "id": 25,
        "Question": "Which of the following statements regarding Build & Fix Model is wrong?",
        "Options": [
            "a) No room for structured design",
            "b) Code soon becomes unfixable & unchangeable",
            "c) Maintenance is practically not possible",
            "d) It scales up well to large projects"
        ],
        "Answer": " Answer: d\nExplanation: Build & Fix Model is suitable for 100-200 LOC"
    },
    {
        "id": 26,
        "Question": "RAD Model has",
        "Options": [
            "a) 2 phases",
            "b) 3 phase",
            "c) 5 phases",
            "d) 6 phases"
        ],
        "Answer": " Answer: c\nExplanation: RAD Model consists of five phases namely:Business modeling,Data modeling,Process modeling,Application generation and Testing & Turnover."
    },
    {
        "id": 27,
        "Question": "What is the major drawback of using RAD Model?",
        "Options": [
            "a) Highly specialized & skilled developers/designers are required",
            "b) Increases reusability of components",
            "c) Encourages customer/client feedback",
            "d) Increases reusability of components, Highly specialized & skilled developers/designers are required"
        ],
        "Answer": " Answer: d\nExplanation: The client may create an unrealistic product vision leading a team to over or under-develop functionality.Also, the specialized & skilled developers are not easily available."
    },
    {
        "id": 28,
        "Question": "SDLC stands for",
        "Options": [
            "a) Software Development Life Cycle",
            "b) System Development Life cycle",
            "c) Software Design Life Cycle",
            "d) System Design Life Cycle"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 29,
        "Question": "Which model can be selected if user is involved in all the phases of SDLC?",
        "Options": [
            "a) Waterfall Model",
            "b) Prototyping Model",
            "c) RAD Model",
            "d) both Prototyping Model & RAD Model"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 30,
        "Question": "Which one of the following is not an Evolutionary Process Model?",
        "Options": [
            "a) WINWIN Spiral Model",
            "b) Incremental Model",
            "c) Concurrent Development Model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 31,
        "Question": "The Incremental Model is a result of combination of elements of which two models?",
        "Options": [
            "a) Build & FIX Model & Waterfall Model",
            "b) Linear Model & RAD Model",
            "c) Linear Model & Prototyping Model",
            "d) Waterfall Model & RAD Model"
        ],
        "Answer": " Answer: c\nExplanation: Each linear sequence produces a deliverable “increment” of the software and particularly when we have to quickly deliver a limited functionality system."
    },
    {
        "id": 32,
        "Question": "What is the major advantage of using Incremental Model?",
        "Options": [
            "a) Customer can respond to each increment",
            "b) Easier to test and debug",
            "c) It is used when there is a need to get a product to the market early",
            "d) Easier to test and debug & It is used when there is a need to get a product to the market early"
        ],
        "Answer": " Answer: d\nExplanation: Incremental Model is generally easier to test and debug than other methods of software development because relatively smaller changes are made during each iteration and is popular particularly when we have to quickly deliver a limited functionality system.However, option “a” can be seen in other models as well like RAD model,hence option “d” answers the question."
    },
    {
        "id": 33,
        "Question": "The spiral model was originally proposed by",
        "Options": [
            "a) IBM",
            "b) Barry Boehm",
            "c) Pressman",
            "d) Royce"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 34,
        "Question": "The spiral model has two dimensions namely _____________ and ____________",
        "Options": [
            "a) diagonal, angular",
            "b) radial, perpendicular",
            "c) radial, angular",
            "d) diagonal, perpendicular"
        ],
        "Answer": " Answer: c\nExplanation: The radial dimension of the model represents the cumulative costs and the angular dimension represents the progress made in completing each cycle. Each loop of the spiral from X-axis clockwise through 360o represents one phase."
    },
    {
        "id": 35,
        "Question": "How is WINWIN Spiral Model different from Spiral Model?",
        "Options": [
            "a) It defines tasks required to define resources, timelines, and other project related information",
            "b) It defines a set of negotiation activities at the beginning of each pass around the spiral",
            "c) It defines tasks required to assess both technical and management risks",
            "d) It defines tasks required to construct, test, install, and provide user support"
        ],
        "Answer": " Answer: b\nExplanation: Except option “b” all other tasks/activities are present in Spiral Model as well."
    },
    {
        "id": 36,
        "Question": "Identify the disadvantage of Spiral Model.",
        "Options": [
            "a) Doesn’t work well for smaller projects",
            "b) High amount of risk analysis",
            "c) Strong approval and documentation control",
            "d) Additional Functionality can be added at a later date"
        ],
        "Answer": " Answer: a\nExplanation: All other options are the advantages of Spiral Model."
    },
    {
        "id": 37,
        "Question": "How is Incremental Model different from Spiral Model?",
        "Options": [
            "a) Progress can be measured for Incremental Model",
            "b) Changing requirements can be accommodated in Incremental Model",
            "c) Users can see the system early in Incremental Model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 38,
        "Question": "If you were to create client/server applications, which model would you go for?",
        "Options": [
            "a) WINWIN Spiral Model",
            "b) Spiral Model",
            "c) Concurrent Model",
            "d) Incremental Model"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 39,
        "Question": "Selection of a model is based on",
        "Options": [
            "a) Requirements",
            "b) Development team & Users",
            "c) Project type and associated risk",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Each model has to have some requirements, a team of developers, users and the risk involved in developing a project."
    },
    {
        "id": 40,
        "Question": "Which two models doesn’t allow defining requirements early in the cycle?",
        "Options": [
            "a) Waterfall & RAD",
            "b) Prototyping & Spiral",
            "c) Prototyping & RAD",
            "d) Waterfall & Spiral"
        ],
        "Answer": " Answer: b\nExplanation: Prototyping Model starts with a requirements analysis phase including techniques like FAST, QFD, Brainstorming.In case of Spiral model the first phase involves activities related to customer communication like determining objectives."
    },
    {
        "id": 41,
        "Question": "Which of the following life cycle model can be chosen if the development team has less experience on similar projects?",
        "Options": [
            "a) Spiral",
            "b) Waterfall",
            "c) RAD",
            "d) Iterative Enhancement Model"
        ],
        "Answer": " Answer: a\nExplanation: Relying on risk assessment/analysis provides more flexibility than required for many applications which overcomes the criteria of less experienced developers."
    },
    {
        "id": 42,
        "Question": "If you were a lead developer of a software company and you are asked to submit a project/product within a stipulated time-frame with no cost barriers, which model would you select?",
        "Options": [
            "a) Waterfall",
            "b) Spiral",
            "c) RAD",
            "d) Incremental"
        ],
        "Answer": " Answer: c\nExplanation: RAD model is inapplicable to develop cheaper products/software/projects as the cost of modeling, hiring highly skilled developers/designers and automated code generation is very high.But here the cost is not an issue, so one can select this model as it reduces development time."
    },
    {
        "id": 43,
        "Question": "Which two of the following models will not be able to give the desired outcome if user’s participation is not involved?",
        "Options": [
            "a) Waterfall & Spiral",
            "b) RAD & Spiral",
            "c) RAD & Waterfall",
            "d) RAD & Prototyping"
        ],
        "Answer": " Answer: d\nExplanation: Active Participation of user is involved in all the four phases of RAD model and in case of the Prototyping model we need user’s presence/involvement every time a new prototype is build or designed."
    },
    {
        "id": 44,
        "Question": "A company is developing an advance version of their current software available in the market, what model approach would they prefer ?",
        "Options": [
            "a) RAD",
            "b) Iterative Enhancement",
            "c) Both RAD & Iterative Enhancement",
            "d) Spiral"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 45,
        "Question": "Choose the correct option from given below:",
        "Options": [
            "a) Prototyping Model facilitates reusability of components",
            "b) RAD Model Model facilitates reusability of components",
            "c) Both RAD & Prototyping Model facilitates reusability of components",
            "d) None"
        ],
        "Answer": " Answer: b\nExplanation: Real projects rarely follow the sequential flow and iterations in this model are handled indirectly. This changes can cause confusion as the project proceeds thereby delaying the delivery date."
    },
    {
        "id": 46,
        "Question": "Identify a fourth generation language(4GL) from the given below.",
        "Options": [
            "a) FORTRAN",
            "b) COBOL",
            "c) Unix shell",
            "d) C++"
        ],
        "Answer": " Answer: c\nExplanation: Rest all are third generation languages(3GL)."
    },
    {
        "id": 47,
        "Question": "4GL is an example of ______________ processing.",
        "Options": [
            "a) White Box",
            "b) Black Box",
            "c) Functional",
            "d) Both Black Box & Functional"
        ],
        "Answer": " Answer: c\nExplanation: The sequence of activities mentioned in option c represents the Fourth Generation Techniques(4GT)Model."
    },
    {
        "id": 48,
        "Question": "The 4GT Model is a package of ______________",
        "Options": [
            "a) CASE Tools",
            "b) Software tools",
            "c) Software Programs",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Functional processing/testing is also referred to as black box testing in which contents of the black box are not known.Almost anything might be referred to as a black box:an algorithm or the human mind.Functionality of the black box is understood in terms of its inputs and outputs."
    },
    {
        "id": 49,
        "Question": "Which of the following is not a type of a 4GL? One originating ______________",
        "Options": [
            "a) on Lisp machine",
            "b) on report generators",
            "c) from database query languages",
            "d) from GUI creators"
        ],
        "Answer": " Answer: b\nExplanation: 4GT encompasses a broad array of software tools enabling the software engineer to specify the characteristics at a high level leading to an automatically generated source code based on these specifications."
    },
    {
        "id": 50,
        "Question": "Which of the following 4GLs invented at IBM and subsequently adopted by ANSI and ISO as the standard language for managing structured data?",
        "Options": [
            "a) SQL",
            "b) PROLOG",
            "c) C",
            "d) JAVA"
        ],
        "Answer": " Answer: a\nExplanation: Fifth-generation programming language are built on LISP."
    },
    {
        "id": 51,
        "Question": "Which of the following model has a major disadvantage in terms of the coding phase of a software life cycle model ?",
        "Options": [
            "a) Spiral Model",
            "b) Waterfall Model",
            "c) Rad Model",
            "d) 4GT Model"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 52,
        "Question": "Which one of the following is not a software process quality?",
        "Options": [
            "a) Productivity",
            "b) Portability",
            "c) Timeliness",
            "d) Visibility"
        ],
        "Answer": " Answer: b\nExplanation: Portability is a software product quality which means software can run on different hardware platforms or software environments."
    },
    {
        "id": 53,
        "Question": "_____________&_____________ are two kinds of software products.",
        "Options": [
            "a) CAD, CAM",
            "b) Firmware, Embedded",
            "c) Generic, Customised",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: rest all are sub categories/applications of option c."
    },
    {
        "id": 54,
        "Question": "Which one of the following is not an application of embedded software product?",
        "Options": [
            "a) keypad control of a security system",
            "b) pattern recognition game playing",
            "c) digital function of dashboard display in a car",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: For systems with a long life, maintenance costs may be several times development costs."
    },
    {
        "id": 55,
        "Question": "Purpose of process is to deliver software",
        "Options": [
            "a) in time",
            "b) with acceptable quality",
            "c) that is cost efficient",
            "d) both in time & with acceptable quality"
        ],
        "Answer": " Answer: b\nExplanation: Pattern recognition uses Artificial Intelligence (AI) software."
    },
    {
        "id": 56,
        "Question": "Which of the following activities of a Generic Process framework provides a feedback report?",
        "Options": [
            "a) Communication",
            "b) Planning",
            "c) Modeling & Construction",
            "d) Deployment"
        ],
        "Answer": " Answer: d\nExplanation: Cost of a software is a management issue & is not related to process activities."
    },
    {
        "id": 57,
        "Question": "Which one of the following is not an Umbrella Activity that complements the five process framework activities and help team manage and control progress, quality, change, and risk.",
        "Options": [
            "a) Reusability management",
            "b) Risk management",
            "c) Measurement",
            "d) User Reviews"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 58,
        "Question": "Four types of change are encountered during the support phase.Which one of the following is not one that falls into such category?",
        "Options": [
            "a) Translation",
            "b) Correction",
            "c) Adaptation",
            "d) Prevention"
        ],
        "Answer": " Answer: d\nExplanation: In Deployment the product is delivered to the customer who evaluates the product and provides feedback based on the evaluation."
    },
    {
        "id": 59,
        "Question": "Choose an internal software quality from given below:",
        "Options": [
            "a) scalability",
            "b) usability",
            "c) reusability",
            "d) reliability"
        ],
        "Answer": " Answer: b\nExplanation: As new people are added, people who were working must spend time educating the newcomers, thereby reducing the amount of time spent on productive development effort."
    },
    {
        "id": 60,
        "Question": "RUP stands for____________ created by a division of ____________",
        "Options": [
            "a) Rational Unified Program, IBM",
            "b) Rational Unified Process, Infosys",
            "c) Rational Unified Process, Microsoft",
            "d) Rational Unified Process, IBM"
        ],
        "Answer": " Answer: c\nExplanation: rest all are external qualities which are visible to the user."
    },
    {
        "id": 61,
        "Question": "The RUP is normally described from three perspectives-dynamic, static & practice.What does static perspective do ?",
        "Options": [
            "a) It shows the process activities that are enacted",
            "b) It suggests good practices to be used during the process",
            "c) It shows the phases of the model over time",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 62,
        "Question": "Which phase of the RUP is used to establish a business case for the system ?",
        "Options": [
            "a) Transition",
            "b) Elaboration",
            "c) Construction",
            "d) Inception"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 63,
        "Question": "Which one of the following is not a fundamental activity for software processes in software engineering ?",
        "Options": [
            "a) Software Verification",
            "b) Software Validation",
            "c) Software design and implementation",
            "d) Software evolution"
        ],
        "Answer": " Answer: b\nExplanation: A working program is only one part of a software configuration that includes many elements. Documentation provides a foundation for successful engineering and, more important, guidance for software support."
    },
    {
        "id": 64,
        "Question": "The longer a fault exists in software",
        "Options": [
            "a) the more tedious its removal becomes",
            "b) the more costly it is to detect and correct",
            "c) the less likely it is to be properly corrected",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 65,
        "Question": "Select the option that suits the Manifesto for Agile Software Development",
        "Options": [
            "a) Individuals and interactions",
            "b) Working software",
            "c) Customer collaboration",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: None."
    },
    {
        "id": 66,
        "Question": "Agile Software Development is based on",
        "Options": [
            "a) Incremental Development",
            "b) Iterative Development",
            "c) Linear Development",
            "d) Both Incremental and Iterative Development"
        ],
        "Answer": " Answer:d\nExplanation: The software is developed in increments with the customer specifying the requirements to be included in each increment and the highest priority is to satisfy the customer through early and continuous delivery of valuable software. They are iterative because they work on one iteration followed by improvements in next iteration"
    },
    {
        "id": 67,
        "Question": "Which on of the following is not an agile method?",
        "Options": [
            "a) XP",
            "b) 4GT",
            "c) AUP",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: The 4GT approach does not incorporate iteration and the continuous feedback,which is the fundamental aspect of an agile method."
    },
    {
        "id": 68,
        "Question": "How is plan driven development different from agile development ?",
        "Options": [
            "a) Outputs are decided through a process of negotiation during the software development process",
            "b) Specification, design, implementation and testing are interleaved",
            "c) Iteration occurs within activities",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: The aim of agile methods is to reduce overheads in the software process and to be able to respond quickly to changing requirements without excessive rework."
    },
    {
        "id": 69,
        "Question": "How many phases are there in Scrum ?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) Scrum is an agile method which means it does not have phases"
        ],
        "Answer": " Answer:c\nExplanation: A plan-driven approach to software engineering is based around separate development stages with the outputs to be produced at each of these stages planned in advance."
    },
    {
        "id": 70,
        "Question": "Which of the following does not apply to agility to a software process?",
        "Options": [
            "a) Uses incremental product delivery strategy",
            "b) Only essential work products are produced",
            "c) Eliminate the use of project planning and testing",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: There are three phases in Scrum.The initial phase is an outline planning phase followed by a series of sprint cycles and project closure phase."
    },
    {
        "id": 71,
        "Question": "Which three framework activities are present in Adaptive Software Development(ASD) ?",
        "Options": [
            "a) analysis, design, coding",
            "b) requirements gathering, adaptive cycle planning, iterative development",
            "c) speculation, collaboration, learning",
            "d) all of the mentioned"
        ],
        "Answer": " Answer:a\nExplanation: None."
    },
    {
        "id": 72,
        "Question": "In XP Increments are delivered to customers every _______ weeks.",
        "Options": [
            "a) One",
            "b) Two",
            "c) Three",
            "d) Four"
        ],
        "Answer": " Answer: b\nExplanation: Incremental development is supported through small, frequent system releases."
    },
    {
        "id": 73,
        "Question": "User requirements are expressed as __________ in Extreme Programming.",
        "Options": [
            "a) implementation tasks",
            "b) functionalities",
            "c) scenarios",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: XP follows a continuous integration approach.After any such integration, all the unit tests in the system must pass."
    },
    {
        "id": 74,
        "Question": "Is a customer involved test development and validation in XP ?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) It may vary from Customer to Customer",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Extreme Programming (XP) takes an ‘extreme’ approach to iterative development.New versions may be built several times per day, hence delivering the increment for approval every 2nd week after testing the new version."
    },
    {
        "id": 75,
        "Question": "Which four framework activities are found in the Extreme Programming(XP) ?",
        "Options": [
            "a) analysis, design, coding, testing",
            "b) planning, analysis, design, coding",
            "c) planning, design, coding, testing",
            "d) planning, analysis, coding, testing"
        ],
        "Answer": " Answer: c\nExplanation: User requirements are expressed as scenarios or user stories.These are written on cards and the development team break them down into implementation tasks. These tasks are the basis of schedule and cost estimates."
    },
    {
        "id": 76,
        "Question": "What are the types of requirements ?",
        "Options": [
            "a) Availability",
            "b) Reliability",
            "c) Usability",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the mentioned traits are beneficial for an effective product to be developed."
    },
    {
        "id": 77,
        "Question": "Select the developer-specific requirement ?",
        "Options": [
            "a) Portability",
            "b) Maintainability",
            "c) Availability",
            "d) Both Portability and Maintainability"
        ],
        "Answer": " Answer: d\nExplanation: Availability is user specific requirement."
    },
    {
        "id": 78,
        "Question": "Which one of the following is not a step of requirement engineering?",
        "Options": [
            "a) elicitation",
            "b) design",
            "c) analysis",
            "d) documentation"
        ],
        "Answer": " Answer: b\nExplanation: Requirement Elicitation, Requirement Analysis, Requirement Documentation and Requirement Review are the four crucial process steps of requirement engineering.Design is in itself a different phase of Software Engineering."
    },
    {
        "id": 79,
        "Question": "FAST stands for",
        "Options": [
            "a) Functional Application Specification Technique",
            "b) Fast Application Specification Technique",
            "c) Facilitated Application Specification Technique",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 80,
        "Question": "QFD stands for",
        "Options": [
            "a) quality function design",
            "b) quality function development",
            "c) quality function deployment",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 81,
        "Question": "The user system requirements are the parts of which document ?",
        "Options": [
            "a) SDD",
            "b) SRS",
            "c) DDD",
            "d) SRD"
        ],
        "Answer": " Answer: b\nExplanation: Use-case Actor is anything that needs to interact with the system, be it a person or another (external) system."
    },
    {
        "id": 82,
        "Question": "Which is one of the most important stakeholder from the following ?",
        "Options": [
            "a) Entry level personnel",
            "b) Middle level stakeholder",
            "c) Managers",
            "d) Users of the software"
        ],
        "Answer": " Answer: b\nExplanation: Software requirements specification (SRS), is a complete description of the behaviour of a system to be developed and may include a set of use cases that describe interactions the users will have with the software."
    },
    {
        "id": 83,
        "Question": "Which one of the following is a functional requirement ?",
        "Options": [
            "a) Maintainability",
            "b) Portability",
            "c) Robustness",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All are non-functional requirements representing quality of the system. Functional requirements describe what the software has to do."
    },
    {
        "id": 84,
        "Question": "Which one of the following is a requirement that fits in a developer’s module ?",
        "Options": [
            "a) Availability",
            "b) Testability",
            "c) Usability",
            "d) Flexibility"
        ],
        "Answer": " Answer: b\nExplanation: A developer needs to test his product before launching it into the market."
    },
    {
        "id": 85,
        "Question": "“Consider a system where, a heat sensor detects an intrusion and alerts the security company.” What kind of a requirement the system is providing ?",
        "Options": [
            "a) Functional",
            "b) Non-Functional",
            "c) Known Requirement",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Functional requirements describe what the software has to do."
    },
    {
        "id": 86,
        "Question": "Which of the following statements explains portability in non-functional requirements?",
        "Options": [
            "a) It is a degree to which software running on one platform can easily be converted to run on another platform",
            "b) It cannot be enhanced by using languages, OS’ and tools that are universally available and standardized",
            "c) The ability of the system to behave consistently in a user-acceptable manner when operating within the environment for which the system was intended",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Option c is termed as reliability and option e refers to efficiency."
    },
    {
        "id": 87,
        "Question": "Choose the incorrect statement with respect to Non-Functional Requirement(NFR).",
        "Options": [
            "a) Product-oriented Approach – Focus on system (or software) quality",
            "b) Process-oriented Approach – Focus on how NFRs can be used in the design process",
            "c) Quantitative Approach – Find measurable scales for the functionality attributes",
            "d) Qualitative Approach – Study various relationships between quality goals"
        ],
        "Answer": " Answer: a\nExplanation: The behavior of functional requirements may be expressed as services, tasks or functions the system is required to perform."
    },
    {
        "id": 88,
        "Question": "How many classification schemes have been developed for NFRs ?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) Five"
        ],
        "Answer": " Answer: c\nExplanation: Quantitative Approaches in NFRs are used to find measurable scales for the quality attributes like efficiency, flexibility, integrity, usability etc."
    },
    {
        "id": 89,
        "Question": "According to components of FURPS+, which of the following does not belong to S ?",
        "Options": [
            "a) Testability",
            "b) Speed Efficiency",
            "c) Serviceability",
            "d) Installability"
        ],
        "Answer": " Answer: d\nExplanation: Software Quality Tree [Boehm 1976], Roman [IEEE Computer 1985], Process-Product-External considerations [Sommerville 1992], Mc Call’s NFR list and Dimensions of Quality–Components of FURPS+ are the five classification schemes for NFRs.\n."
    },
    {
        "id": 90,
        "Question": "What are the four dimensions of Dependability ?",
        "Options": [
            "a) Usability, Reliability, Security, Flexibility",
            "b) Availability, Reliability, Maintainability, Security",
            "c) Availability, Reliability, Security, Safety",
            "d) Security, Safety, Testability, Usability"
        ],
        "Answer": " Answer: b\nExplanation: Speed Efficiency belong to Performance (P) in FURPS+ ."
    },
    {
        "id": 91,
        "Question": "Choose the correct statement on how NFRs integrates with Rational Unified Process ?",
        "Options": [
            "a) System responds within 4 seconds on average to local user requests and changes in the environment",
            "b) System responds within 4 seconds on average to remote user requests and changes in the environment",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Unlike hardware, software is reliable."
    },
    {
        "id": 92,
        "Question": "What is the first step of requirement elicitation ?",
        "Options": [
            "a) Identifying Stakeholder",
            "b) Listing out Requirements",
            "c) Requirements Gathering",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Stakeholders are the one who will invest in and use the product, so its essential to chalk out stakeholders first."
    },
    {
        "id": 93,
        "Question": "What are the types of requirement in Quality Function Deployment(QFD) ?",
        "Options": [
            "a) Known, Unknown, Undreamed",
            "b) User, Developer",
            "c) Functional, Non-Functional",
            "d) Normal, Expected, Exciting"
        ],
        "Answer": " Answer: c\nExplanation: Users are your customers, they will be using your product, thus making them most important of all."
    },
    {
        "id": 94,
        "Question": "What kind of approach was introduced for elicitation and modelling to give a functional view of the system ?",
        "Options": [
            "a) Object Oriented Design (by Booch)",
            "b) Use Cases (by Jacobson)",
            "c) Fusion (by Coleman)",
            "d) Object Modeling Technique (by Rumbaugh)"
        ],
        "Answer": " Answer: b\nExplanation: Requirements gathering captures viewpoint from different users followed by evaluation of those view points.Now comes the task of checking the relative importance of the requirements and finally to consolidate or bind together the information collected."
    },
    {
        "id": 95,
        "Question": "What are the kinds of actors used in OOSE ?",
        "Options": [
            "a) Primary",
            "b) Secondary",
            "c) Ternary",
            "d) Both Primary and Secondary"
        ],
        "Answer": " Answer: d\nExplanation: According to QFD, Normal, Expected and Exciting requirements maximizes customer satisfaction from the Software Engineering Process."
    },
    {
        "id": 96,
        "Question": "Why is Requirements Elicitation a difficult task ?",
        "Options": [
            "a) Problem of scope",
            "b) Problem of understanding",
            "c) Problem of volatility",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Use Case captures who does what with the system, for what purpose, without dealing with system internals."
    },
    {
        "id": 97,
        "Question": "What requirement gathering method developed at IBM in 1970s is used for managing requirement elicitation ?",
        "Options": [
            "a) JAD",
            "b) Traceability",
            "c) FAST",
            "d) Both JAD and Traceability"
        ],
        "Answer": " Answer: d\nExplanation: A primary actor is one having a goal requiring the assistance of the system whereas, a secondary actor is one from which system needs assistance.There is no such thing as ternary actor in Software Engineering."
    },
    {
        "id": 98,
        "Question": "How many Scenarios are there in elicitation activities ?",
        "Options": [
            "a) One",
            "b) Two",
            "c) Three",
            "d) Four"
        ],
        "Answer": " Answer: d\nExplanation: Users specify unnecessary technical detail that may confuse, rather than clarify overall system objectives.Also, the customers/users are not completely sure of what is needed, have a poor understanding of the capabilities and limitations of their computing environment and they do not understand that the requirements change over time."
    },
    {
        "id": 99,
        "Question": "Which of the following elicitation techniques is a viewpoint based method?",
        "Options": [
            "a) FODA",
            "b) QFD",
            "c) CORE",
            "d) IBIS"
        ],
        "Answer": " Answer: c\nExplanation: Controlled Requirements Expression(CORE) says that any system can be viewed from a number of view points and that a complete picture of system requirements can only emerge by putting together the various viewpoints."
    },
    {
        "id": 100,
        "Question": "___________ and ____________ are the two view points discussed in Controlled Requirements Expression (CORE).",
        "Options": [
            "a) Functional, Non-Functional",
            "b) User, Developer",
            "c) Known, Unknown",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The CORE sessions includes the discussion of functional and non-functional requirements."
    },
    {
        "id": 101,
        "Question": "What is the major drawback of CORE ?",
        "Options": [
            "a) Requirements are comprehensive",
            "b) NFRs are not given enough importance",
            "c) Role of analyst is passive",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: In CORE the requirement specification are put together by all users, customers and analysts, so a passive analyst will not get the requirements properly."
    },
    {
        "id": 102,
        "Question": "Choose a framework that corresponds to Issue Based Information System (IBIS).",
        "Options": [
            "a) Idea -> Question -> Argument",
            "b) Question -> Idea -> Argument",
            "c) Issue -> Position -> Justification",
            "d) Both Question -> Idea -> Argument and Issue -> Position -> Justification"
        ],
        "Answer": " Answer: d\nExplanation: IBIS is a simple and non-intrusive method that provides a framework for  resolving issues and gathering requirements."
    },
    {
        "id": 103,
        "Question": "How is CORE different from IBIS ?",
        "Options": [
            "a) Iterative in nature",
            "b) Redundancies are removed",
            "c) It is simple and an easier method to use",
            "d) Consistency problems are addressed in CORE"
        ],
        "Answer": " Answer: d\nExplanation: Preliminary data collection is done in CORE to get some broad level data on each view point to structure the view point and to check consistency from within and outside the viewpoints."
    },
    {
        "id": 104,
        "Question": "Which of the following Requirement Elicitation Techniques removes the poor understanding of application domain and lack of common terminology between the users and the analysts ?",
        "Options": [
            "a) FODA",
            "b) CORE",
            "c) IBIS",
            "d) Prototyping"
        ],
        "Answer": " Answer: a\nExplanation: Feature Oriented Domain Analysis (FODA) is defined as the process of identifying, collecting, organizing and representing relevant information in a domain ."
    },
    {
        "id": 105,
        "Question": "How many steps are involved in Feature Oriented Domain Analysis (FODA) ?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) Five"
        ],
        "Answer": " Answer: b\nExplanation: Context Analysis, Domain Modeling and Architecture Modeling are the three steps involved in Feature Oriented Domain Analysis (FODA)."
    },
    {
        "id": 106,
        "Question": "Which one of the following is not an actor in JAD sessions ?",
        "Options": [
            "a) User",
            "b) Tester",
            "c) Scribe",
            "d) Sponsor"
        ],
        "Answer": " Answer: a\nExplanation: IBIS is a more structured approach as it captures information which is consistent and important.On the other hand CORE gives importance to every view point even if it is obsolete."
    },
    {
        "id": 107,
        "Question": "What of the following is not an output of a JAD session ?",
        "Options": [
            "a) Context Diagrams",
            "b) DFDs",
            "c) ER model",
            "d) UML diagrams"
        ],
        "Answer": " Answer: b\nExplanation: A Tester’s role is seen in after coding phase rather than in elicitation phase."
    },
    {
        "id": 108,
        "Question": "How is brainstorming different from JAD ? Brainstorming sessions",
        "Options": [
            "a) last for about 2-3 hours",
            "b) last for about 2-3 days",
            "c) cover the technology used for the development",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Brainstorming is a group or individual creativity technique by which efforts are made to find a conclusion for a specific problem by gathering a list of ideas spontaneously contributed by its member(s).The idea is to quickly reach to an approved solution ASAP."
    },
    {
        "id": 109,
        "Question": "How is throwaway prototype different from evolutionary prototype ?",
        "Options": [
            "a) It involves successive steps",
            "b) It involves just one task",
            "c) The prototype is built with the idea that it will eventually be converted into final system",
            "d) It has a shorter development time"
        ],
        "Answer": " Answer: b\nExplanation: Except option b all other options represent the characteristics of an evolutionary prototype."
    },
    {
        "id": 110,
        "Question": "Keeping the requirements of QFD in mind which of the following is not an example of an Expected Requirement ?",
        "Options": [
            "a) Ease of software installation",
            "b) Overall operational correctness and reliability",
            "c) Specific system functions",
            "d) Quality graphical display"
        ],
        "Answer": " Answer: c\nExplanation: Expected requirements are so fundamental that a customer does not explicitly state them.System functions comes under the category of Normal requirements in QFD which is compulsory to be defined,hence is not an expected requirement. "
    },
    {
        "id": 111,
        "Question": "Which of the following Requirement Elicitation Techniques is applicable to messy, changing and ill-defined problem situations ?",
        "Options": [
            "a) Quality Function Deployment (QFD)",
            "b) Prototyping",
            "c) Soft Systems Methodology (SSM)",
            "d) Controlled Requirements Expression (CORE)"
        ],
        "Answer": " Answer: a\nExplanation: QFD involves heavy investment in initial stages, thus bounding the management to provide appropriate funding for the development process ."
    },
    {
        "id": 112,
        "Question": "To ensure that a given root definition is rigorous and comprehensive, The Lancaster team proposed several criteria that are summarized in the mnemonic CATWOE in Soft Systems Methodology (SSM).Which of the following alphabet is representing an entirely different meaning to SSM ?",
        "Options": [
            "a) C – Customer",
            "b) A – Actor",
            "c) T – Transformation",
            "d) E – ER Model"
        ],
        "Answer": " Answer: c\nExplanation: Soft systems methodology (SSM) is a systemic approach for tackling real-world problematic situations.It is a common misunderstanding that SSM is a methodology for dealing solely with ‘soft problems’ (problems which involve psychological, social, and cultural elements). SSM does not differentiate between ‘soft’ and ‘hard’ problems, it merely provides a different way of dealing with situations perceived as problematic."
    },
    {
        "id": 113,
        "Question": "Choose the disadvantage of using SSM as an elicitation technique.",
        "Options": [
            "a) It incorporates human element into design",
            "b) SSM is in its infant stage",
            "c) SSM is suitable for new systems",
            "d) Standard methodologies like Role Exploration, Issue Resolution and Reorganization support SSM"
        ],
        "Answer": " Answer: d\nExplanation: ‘E’ in CATWOE stands for Environmental constraints."
    },
    {
        "id": 114,
        "Question": "How many phases are there in Brainstorming ?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: SSM is still in its infancy.It is evolving and its industrial usage is low."
    },
    {
        "id": 115,
        "Question": "Who controls the FAST (Facilitated Application Specification Techniques) meeting ?",
        "Options": [
            "a) System Analyst",
            "b) Scribe",
            "c) Facilitator",
            "d) Manager"
        ],
        "Answer": " Answer: b\nExplanation: Preparation, Execution and Follow up are the three phases to be achieved for a successful brainstorming session. "
    },
    {
        "id": 116,
        "Question": "Which of the following is not a diagram studied in Requirement Analysis ?",
        "Options": [
            "a) Use Cases",
            "b) Entity Relationship Diagram",
            "c) State Transition Diagram",
            "d) Activity Diagram"
        ],
        "Answer": " Answer: d\nExplanation: Activity Diagram comes under the design phase of SDLC."
    },
    {
        "id": 117,
        "Question": "How many feasibility studies is conducted in Requirement Analysis ?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Economic feasibility (cost/benefit analysis), Technical feasibility (hardware/software/people, etc.) and Legal feasibility studies are done in Requirement Analysis."
    },
    {
        "id": 118,
        "Question": "How many phases are there in Requirement Analysis ?",
        "Options": [
            "a) Three",
            "b) Four",
            "c) Five",
            "d) Six"
        ],
        "Answer": " Answer: c\nExplanation: Problem Recognition, Evaluation and Synthesis (focus is on what not how), Modeling, Specification and Review are the  five phases."
    },
    {
        "id": 119,
        "Question": "Requirements analysis is critical to the success of a development project.",
        "Options": [
            "a) True",
            "b) False",
            "c) Depends upon the size of project",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  Requirements traceability is concerned with documenting the life of a requirement and providing bi-directional traceability between various associated requirements, hence requirements must be traceable."
    },
    {
        "id": 120,
        "Question": "_________ and _________ are the two issues of Requirement Analysis.",
        "Options": [
            "a) Performance, Design",
            "b) Stakeholder, Developer",
            "c) Functional, Non-Functional",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Requirements must be actionable, measurable, testable, related to identified business needs or opportunities, and defined to a level of detail sufficient for system design."
    },
    {
        "id": 121,
        "Question": "The requirements that result from requirements analysis are typically expressed from one of three perspectives or views.WhaT is that perspective or view ?",
        "Options": [
            "a) Developer",
            "b) User",
            "c) Non-Functional",
            "d) Physical"
        ],
        "Answer": " Answer: b\nExplanation: Option a and c are the types of requirements and not the issues of requirement analysis.."
    },
    {
        "id": 122,
        "Question": "Coad and Yourdon suggested _______ selection characteristics that should be used as an analyst considers each potential object for inclusion in the requirement analysis model.",
        "Options": [
            "a) Three",
            "b) Four",
            "c) Five",
            "d) Six"
        ],
        "Answer": " Answer: d\nExplanation: The perspectives or views have been described as the Operational, Functional, and Physical views.All three are necessary and must be coordinated to fully understand the customers’ needs and objectives."
    },
    {
        "id": 123,
        "Question": "Which of the following property does not correspond to a good Software Requirements Specification (SRS) ?",
        "Options": [
            "a) Verifiable",
            "b) Ambiguous",
            "c) Complete",
            "d) Traceable"
        ],
        "Answer": " Answer: b\nExplanation: The SRS should be unambiguous in nature which means each sentence in SRS should have a unique interpretation."
    },
    {
        "id": 124,
        "Question": "Which of the following property of SRS is depicted by the statement : “Conformity to a standard is maintained” ?",
        "Options": [
            "a) Correct",
            "b) Complete",
            "c) Consistent",
            "d) Modifiable"
        ],
        "Answer": " Answer: b\nExplanation: The SRS is complete full labeling and referencing of all figures, tables etc. and definition of all terms and units of measure is defined."
    },
    {
        "id": 125,
        "Question": "The SRS is said to be consistent if and only if",
        "Options": [
            "a) its structure and style are such that any changes to the requirements can be made easily while retaining the style and structure",
            "b) every requirement stated therein is one that the software shall meet",
            "c) every requirement stated therein is verifiable",
            "d) no subset of individual requirements described in it conflict with each other"
        ],
        "Answer": " Answer: d\nExplanation: Real world object may conflict with each other for example one requirement says that all lights should be red while the other states that all lights should green."
    },
    {
        "id": 126,
        "Question": "The SRS document is also known as _____________ specification.",
        "Options": [
            "a) black-box",
            "b) white-box",
            "c) grey-box",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The SRS acts as a communication media between the Customer, Analyst, system developers, maintainers etc. Thus it is a contract between Purchaser and Supplier. It is essentially written by a developer on the basis of customer’ need but in some cases it may be written by a customer as well. "
    },
    {
        "id": 127,
        "Question": "Which of the following is included in SRS ?",
        "Options": [
            "a) Cost",
            "b) Design Constraints",
            "c) Staffing",
            "d) Delivery Schedule"
        ],
        "Answer": " Answer: a\nExplanation: The system is considered as a black box whose internal details are not known that is, only its visible external (input/output) behavior is documented."
    },
    {
        "id": 128,
        "Question": "Which of the following is not included in SRS ?",
        "Options": [
            "a) Performance",
            "b) Functionality",
            "c) Design solutions",
            "d) External Interfaces"
        ],
        "Answer": " Answer: b\nExplanation: Design constraints include standards to be incorporated in the software, implementation language, resource limits, operating environment etc."
    },
    {
        "id": 129,
        "Question": "Consider the following Statement: “The output of a program shall be given within 10 secs of event X 10% of the time.”What characteristic of SRS is being depicted here ?",
        "Options": [
            "a) Consistent",
            "b) Verifiable",
            "c) Non-verifiable",
            "d) Correct"
        ],
        "Answer": " Answer: c\nExplanation: The SRS document concentrates on:”what needs to be done” and carefully avoids the solution (“how to do”) aspects."
    },
    {
        "id": 130,
        "Question": "Consider the following Statement: “The data set will contain an end of file character.”What characteristic of SRS is being depicted here ?",
        "Options": [
            "a) Consistent",
            "b) Non-verifiable",
            "c) Correct",
            "d) Ambiguous"
        ],
        "Answer": " Answer: c\nExplanation: The given sequence correctly resemble a standard SRS prototype as per IEEE. "
    },
    {
        "id": 131,
        "Question": "Consider the following Statement: “The product should have a good human interface.”What characteristic of SRS is being depicted here ?",
        "Options": [
            "a) Consistent",
            "b) Non-Verifiable",
            "c) Correct",
            "d) Ambiguous"
        ],
        "Answer": " Answer: b\nExplanation: An SRS is verifiable, if and only if, every requirement stated therein is verifiable.Here the given condition can be verified during testing phase."
    },
    {
        "id": 132,
        "Question": "Which two requirements are given priority during Requirement Management of a product ?",
        "Options": [
            "a) User and Developer",
            "b) Functional and Non-functional",
            "c) Enduring and Volatile",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Enduring requirements are core requirements & are related to main activity of the organization while volatile requirements are likely to change during software development life cycle or after delivery of the product."
    },
    {
        "id": 133,
        "Question": "Considering the example of issue/return of a book, cataloging etc. in a library management.What type of management requirement is being depicted here?",
        "Options": [
            "a) Enduring",
            "b) Volatile",
            "c) Both Enduring & Volatile",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: For library management system issue/return of a book, cataloging etc. are core activities and are stable for any system."
    },
    {
        "id": 134,
        "Question": "Why is Requirements Management Important ? It is due to the changes",
        "Options": [
            "a) to the environment",
            "b) in technology",
            "c) in customer’s expectations",
            "d) in all of the mentioned."
        ],
        "Answer": " Answer: d\nExplanation: Systems continue to be built as the advancement of new products being launched in the market and so does the market changes, the technology and in turn customer’s expectation."
    },
    {
        "id": 135,
        "Question": "Which of the following is not a Requirement Management workbench tool ?",
        "Options": [
            "a) RTM",
            "b) DOORS",
            "c) Rational Suite",
            "d) RDD 100"
        ],
        "Answer": " Answer: a\nExplanation: Quality makes no sense without reference to requirements, which means quality-oriented development is requirements-driven development, thus requirements management is a prerequisite for quality-oriented development."
    },
    {
        "id": 136,
        "Question": "Which of the following is a requirement management activity ?",
        "Options": [
            "a) Investigation",
            "b) Design",
            "c) Construction and Test",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Requirements traceability refers to the ability to describe and follow the life of a requirement in both forwards and backwards direction. Requirements can be traced from its origins, through its development and specification, to its subsequent deployment and use, and through periods of ongoing refinement and iteration in any of these phases."
    },
    {
        "id": 137,
        "Question": "What functionality of Requirement Management Tool (RMT) is depicted by the statement: “the tool should be able to automatically detect relations between artifacts. For example information retrieval techniques, monitoring of change history, naming schemas or model transformations.”",
        "Options": [
            "a) Automatic Link Detection",
            "b) Documentation Support",
            "c) Graphical Representation",
            "d) Automatic Link Creation and Change"
        ],
        "Answer": " Answer: b\nExplanation: Requirements Management needs continued funding throughout a project.Project funding is often limited at the onset of a project, restricted to those aspects of the project which are tangible and visible, and subsequently allocated in a phase-by-phase manner."
    },
    {
        "id": 138,
        "Question": "According to a statistical report: “over 30% of all software projects are cancelled before completion and over 70% of the remainder fail to deliver expected features”. What must be the reason for such a situation ?",
        "Options": [
            "a) Poor change management",
            "b) Poor requirements management",
            "c) Poor quality control",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Rational Suite is an environment tool for requirement management."
    },
    {
        "id": 139,
        "Question": "The Unified Modeling Language (UML) has become an effective standard for software modelling.How many different notations does it have ?",
        "Options": [
            "a) Three",
            "b) Four",
            "c) Six",
            "d) Nine"
        ],
        "Answer": " Answer: d\nExplanation: The different notations of UML includes the nine UML diagrams namely class, object, sequence, collaboration, activity, state-chart, component, deployment and use case diagrams."
    },
    {
        "id": 140,
        "Question": "Which model in system modelling depicts the dynamic behaviour of the system ?",
        "Options": [
            "a) Context Model",
            "b) Behavioral Model",
            "c) Data Model",
            "d) Object Model"
        ],
        "Answer": " Answer: b\nExplanation: Behavioral models are used to describe the dynamic behavior of an executing system. This can be modeled from the perspective of the data processed by the system or by the events that stimulate responses from a system."
    },
    {
        "id": 141,
        "Question": " Which model in system modelling depicts the static nature of the system ?",
        "Options": [
            "a) Behavioral Model",
            "b) Context Model",
            "c) Data Model",
            "d) Structural Model"
        ],
        "Answer": " Answer: d\nExplanation: Structural models show the organization and architecture of a system. These are used to define the static structure of classes in a system and their associations."
    },
    {
        "id": 142,
        "Question": "Which perspective in system modelling shows the system or data architecture.",
        "Options": [
            "a) Structural perspective",
            "b) Behavioral perspective",
            "c) External perspective",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Structural perspective is used to define the static structure of classes in a system and their associations."
    },
    {
        "id": 143,
        "Question": "The UML supports event-based modeling using ____________ diagrams.",
        "Options": [
            "a) Deployment",
            "b) Collaboration",
            "c) State chart",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Context models are used to illustrate the operational context of a system.They show what lies outside the system boundaries."
    },
    {
        "id": 144,
        "Question": "Which of the following diagram is not supported by UML considering Data-driven modeling ?",
        "Options": [
            "a) Activity",
            "b) Data Flow Diagram (DFD)",
            "c) State Chart",
            "d) Component"
        ],
        "Answer": " Answer: b\nExplanation: DFDs focus on system functions and do not recognize system objects."
    },
    {
        "id": 145,
        "Question": "_________________ allows us to infer that different members of classes have some common characteristics.",
        "Options": [
            "a) Realization",
            "b) Aggregation",
            "c) Generalization",
            "d) dependency"
        ],
        "Answer": " Answer: c\nExplanation: Generalization is an everyday technique that we use to manage complexity.This means that common information will be maintained in one place only."
    },
    {
        "id": 146,
        "Question": "______________ & ______________ diagrams of UML represent Interaction modeling.",
        "Options": [
            "a) Use Case, Sequence",
            "b) Class, Object",
            "c) Activity, State Chart",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Structural models of software display the organization of a system in terms of the components that make up that system and their relationships."
    },
    {
        "id": 147,
        "Question": "Which level of Entity Relationship Diagram (ERD) models all entities and relationships ?",
        "Options": [
            "a) Level 1",
            "b) Level 2",
            "c) Level 3",
            "d) Level 4"
        ],
        "Answer": " Answer: a\nExplanation: Use case modeling is mostly used to model interactions between a system and external actors.Sequence diagrams are used to model interactions between system components, although external agents may also be included."
    },
    {
        "id": 148,
        "Question": "___________ classes are used to create the interface that the user sees and interacts with as the software is used.",
        "Options": [
            "a) Controller",
            "b) Entity",
            "c) Boundary",
            "d) Business"
        ],
        "Answer": " Answer: b\nExplanation: Level 1 ERD models all data objects (entities) and their “connections” to one another while Level 3 ERD models all entities, relationships, and the attributes that provide further depth. Thus option b is correct. "
    },
    {
        "id": 149,
        "Question": "Which of the following statement is incorrect regarding the Class-responsibility-collaborator (CRC) modeling ?",
        "Options": [
            "a) All use-case scenarios (and corresponding use-case diagrams) are organized into categories in CRC modelling",
            "b) The review leader reads the use-case deliberately",
            "c) Only developers in the review (of the CRC model) are given a subset of the CRC model index cards",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The answer is self-explanatory."
    },
    {
        "id": 150,
        "Question": " The two dimensions of spiral model are",
        "Options": [
            "a) diagonal, angular",
            "b) radial, perpendicular",
            "c) radial, angular",
            "d) diagonal, perpendicular"
        ],
        "Answer": " Answer: c\nExplanation: The radial dimension depicts the cumulative costs and the angular dimension depicts the progress made in completing each cycle. Each loop of the spiral model represents a phase."
    },
    {
        "id": 151,
        "Question": "The Incremental Model is combination of elements of",
        "Options": [
            "a) Build & FIX Model & Waterfall Model",
            "b) Linear Model & RAD Model",
            "c) Linear Model & Prototyping Model",
            "d) Waterfall Model & RAD Model"
        ],
        "Answer": " Answer: c\nExplanation: Each linear sequence produces a deliverable “increment” of the software system, particularly needed in case of quick delivery of a limited functionality system.."
    },
    {
        "id": 152,
        "Question": "Model preferred to create client/server applications is",
        "Options": [
            "a) WINWIN Spiral Model",
            "b) Spiral Model",
            "c) Concurrent Model",
            "d) Incremental Model"
        ],
        "Answer": " Answer: c\nExplanation:  In case of client/server applications, the concurrent process model specifies activities in two dimensions: a system dimension and a component dimension. Hence Concurrency is achieved by these two activities occurring simultaneously and can be modeled using the state-oriented approach."
    },
    {
        "id": 153,
        "Question": "Identify the correct statement with respect to Evolutionary development:",
        "Options": [
            "a) Evolutionary development usually has two flavors; exploratory development, and throw-away prototyping",
            "b) Very large projects are usually done using  evolutionary development based approach",
            "c) It facilitates easy project management, through the high volume of documentation it generates",
            "d) Sometimes the construction of a throw-away prototype is not followed by a re- implementation of the software system using a more structured approach"
        ],
        "Answer": " Answer: a\nExplanation: Evolutionary development usually has two flavors; exploratory development, and\nthrow-away prototyping."
    },
    {
        "id": 154,
        "Question": "Spiral model was developed by",
        "Options": [
            "a) Victor Bisili",
            "b) Berry Boehm",
            "c) Bev Littlewood",
            "d) Roger Pressman"
        ],
        "Answer": " Answer: b\nExplanation: Berry Boehm in 1986 in his Article “A spiral model of software development and enhancement”."
    },
    {
        "id": 155,
        "Question": "Software evolution does not comprises:",
        "Options": [
            "a) Development activities",
            "b) Negotiating with client",
            "c) Maintenance activities",
            "d) Re-engineering activities"
        ],
        "Answer": " Answer: b\nExplanation: Software evolution refers to the study and management of the process of making changes to software over time. Thus it comprises rest three options."
    },
    {
        "id": 156,
        "Question": "Processes for evolving a software product depend on:",
        "Options": [
            "a) Type of software to be maintained",
            "b) Development processes used",
            "c) Skills and experience of the people involved",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Processes used for software evolution depend on all these factors."
    },
    {
        "id": 157,
        "Question": "Which technique is applied to ensure the continued evolution of legacy systems ?",
        "Options": [
            "a) Forward engineering",
            "b) Reverse Engineering",
            "c) Reengineering",
            "d) Reverse Engineering and Reengineering"
        ],
        "Answer": " Answer: d\nExplanation: Processes used for software evolution depend rely on these two techniques."
    },
    {
        "id": 158,
        "Question": "Program modularization and Source code translation are the activities of_____________",
        "Options": [
            "a) Forward engineering",
            "b) Reverse Engineering",
            "c) Reengineering",
            "d) Reverse Engineering and Reengineering"
        ],
        "Answer": " Answer: c\nExplanation: Reengineering is the examination and alteration of a subject system to reconstitute it in a new form and the subsequent implementation of the new form."
    },
    {
        "id": 159,
        "Question": "A sociotechnical system is a system that includes",
        "Options": [
            "a) people",
            "b) software",
            "c) hardware",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A sociotechnical system is a system that includes people, software, and hardware to show that you need to take a systems perspective on security and dependability."
    },
    {
        "id": 160,
        "Question": "Consider an example of a system which has a police command and control system that may include a geographical information system to provide details of the location of incidents. What kind of system the example represents?",
        "Options": [
            "a) Complex System",
            "b) Technical computer-based system",
            "c) Sociotechnical System",
            "d) Both Complex and Sociotechnical System"
        ],
        "Answer": " Answer: b\nExplanation: The application layer This layer delivers the application-specific functionality\nthat is required."
    },
    {
        "id": 161,
        "Question": "Which property of a sociotechnical system varies depending on how the component assemblies are arranged and connected?",
        "Options": [
            "a) security",
            "b) usability",
            "c) volume",
            "d) reliability"
        ],
        "Answer": " Answer: d\nExplanation: Complex systems are usually hierarchical and so include other systems."
    },
    {
        "id": 162,
        "Question": "Which property of a sociotechnical system depends on the technical system components, its operators, and its operating environment?",
        "Options": [
            "a) security",
            "b) usability",
            "c) volume",
            "d) reliability"
        ],
        "Answer": " Answer: c\nExplanation: The volume of a system (the total space occupied) varies depending on how the component assemblies are arranged and connected."
    },
    {
        "id": 163,
        "Question": "In a sociotechnical system, you need to consider reliability from perspectives namely:",
        "Options": [
            "a) only software reliability",
            "b) only hardware reliability",
            "c) hardware and software reliability",
            "d) hardware, software and operator reliability"
        ],
        "Answer": " Answer: b\nExplanation: Usability reflects how easy it is to use the system."
    },
    {
        "id": 164,
        "Question": "There are ________ overlapping stages in the lifetime of large and complex sociotechnical systems.",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": " Answer: d\nExplanation: In a sociotechnical system, you need to consider reliability from all three perspectives."
    },
    {
        "id": 165,
        "Question": "What are the two ways to view the human error of a sociotechnical system?",
        "Options": [
            "a) hardware and software approach",
            "b) management and users approach",
            "c) person and systems approach",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The stages are Procurement, Development and Operation."
    },
    {
        "id": 166,
        "Question": "A characteristic of a software system that can lead to a system error is known as?",
        "Options": [
            "a) Human error or mistake",
            "b) System fault",
            "c) System error",
            "d) System failure"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 167,
        "Question": "An erroneous system state that can lead to system behavior that is unexpected by system users is known as?",
        "Options": [
            "a) Human error or mistake",
            "b) System fault",
            "c) System error",
            "d) System failure"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 168,
        "Question": "An event that occurs at some point in time when the system does not deliver a service as expected by its users is called _____________",
        "Options": [
            "a) Human error or mistake",
            "b) System fault",
            "c) System error",
            "d) System failure"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 169,
        "Question": "A chemical plant system may detect excessive pressure and open a relief valve to reduce these pressures before an explosion occurs. What kind of dependability and security issue the example states?",
        "Options": [
            "a) Hazard avoidance",
            "b) Damage limitation",
            "c) Hazard detection",
            "d) Hazard detection and removal"
        ],
        "Answer": " Answer: d\nExplanation: The system is designed so that hazards are detected and removed before they result in an accident."
    },
    {
        "id": 170,
        "Question": "An aircraft engine normally includes automatic fire extinguishers.What kind of dependability and security issue the example states?",
        "Options": [
            "a) Hazard avoidance",
            "b) Damage limitation",
            "c) Hazard detection",
            "d) Hazard detection and removal"
        ],
        "Answer": " Answer: b\nExplanation: The system may include protection features that minimize the damage that may result from an accident."
    },
    {
        "id": 171,
        "Question": "An assessment of the worst possible damage that could result from a particular hazard is known as",
        "Options": [
            "a) Risk",
            "b) Hazard probability",
            "c) Hazard severity",
            "d) Mishap"
        ],
        "Answer": " Answer: c\nExplanation: Hazard severity can range from catastrophic, where many people are killed, to minor, where only minor damage results. When an individual death is a possibility, a reasonable assessment of hazard severity is ‘very high’."
    },
    {
        "id": 172,
        "Question": "which of the following terms is a measure of the probability that the system will cause an accident?",
        "Options": [
            "a) Risk",
            "b) Hazard probability",
            "c) Accident",
            "d) Damage"
        ],
        "Answer": " Answer: a\nExplanation: The risk is assessed by considering the hazard probability, the hazard severity, and the probability that the hazard will lead to an accident."
    },
    {
        "id": 173,
        "Question": "A weakness in a computer-based system that may be exploited to cause loss or harm is known as?",
        "Options": [
            "a) Vulnerability",
            "b) Attack",
            "c) Threat",
            "d) Exposure"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 174,
        "Question": "A password checking system that disallows user passwords that are proper names or words that are normally included in a dictionary is an example of ___________ with respect to security systems.",
        "Options": [
            "a) risk",
            "b) control",
            "c) attack",
            "d) asset"
        ],
        "Answer": " Answer: b\nExplanation: A control protective measure that reduces a system’s vulnerability."
    },
    {
        "id": 175,
        "Question": "How many stages are there in Risk-driven requirements specification?",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) six"
        ],
        "Answer": " Answer: b\nExplanation: These include Risk identification, Risk analysis, Risk reduction and Risk decomposition "
    },
    {
        "id": 176,
        "Question": "Consider a case where the system is unavailable and cannot deliver its services to users. What type of failure is being described here?",
        "Options": [
            "a) Loss of service",
            "b) Incorrect service delivery",
            "c) System/data corruption",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: One may separate this into loss of critical services and loss of non-critical services, where the consequences of a failure in non-critical services are less than the consequences of critical service failure."
    },
    {
        "id": 177,
        "Question": " Consider a case where the failure of the system causes damage to the system itself or it data. What type of failure is being described here?",
        "Options": [
            "a) Loss of service",
            "b) Incorrect service delivery",
            "c) System/data corruption",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 178,
        "Question": "POFOD stands for",
        "Options": [
            "a) Possibility of failure of  data",
            "b) Probability of failure of data",
            "c) Possibility of failure on demand",
            "d) Probability of failure on demand"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 179,
        "Question": "Which reliability metric sets out the probable number of system failures that are likely to be observed relative to a certain time period?",
        "Options": [
            "a) POFOD",
            "b) ROCOF",
            "c) AVAIL",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Rate of occurrence of failures (ROCOF) sets out the probable number of system failures that are likely to be observed relative to the number of system executions."
    },
    {
        "id": 180,
        "Question": "Which of the following is not a functional reliability requirement for a system?",
        "Options": [
            "a) Checking requirements",
            "b) Recovery requirements",
            "c) Redundancy requirements",
            "d) Ambiguous requirements"
        ],
        "Answer": " Answer: d\nExplanation: All the options are correct except option d."
    },
    {
        "id": 181,
        "Question": "At which stage of risk analysis specification, the additional security requirements take account of the technologies used in building the system and system design and implementation decisions?",
        "Options": [
            "a) Preliminary risk analysis",
            "b) Life-cycle risk analysis",
            "c) Operational risk analysis",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: To specify security requirements, one should identify the assets that are to be dealt with."
    },
    {
        "id": 182,
        "Question": "Which reliability requirements are concerned with maintaining copies of the system?",
        "Options": [
            "a) Checking requirements",
            "b) Recovery requirements",
            "c) Redundancy requirements",
            "d) Ambiguous requirements"
        ],
        "Answer": " Answer: a\nExplanation: In preliminary risk analysis stage, decisions on the detailed system requirements, the system design, or the implementation technology have not been made."
    },
    {
        "id": 183,
        "Question": "Which of the following examples does not involve dependability engineering ?",
        "Options": [
            "a) Medical Systems",
            "b) Power Systems",
            "c) Library Management",
            "d) Telecommunications"
        ],
        "Answer": " Answer: c\nExplanation: Software customers expect all software to be dependable. However, for non-critical applications such as certain management systems, they may be willing to accept some system failures."
    },
    {
        "id": 184,
        "Question": "What is the term for development process organised such that faults in the system are detected and repaired before delivery to the customer ?",
        "Options": [
            "a) Fault Avoidance",
            "b) Fault detection",
            "c) Fault tolerance",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In Fault Avoidance, the system is developed in such a way that human error is avoided and thus system faults are minimised."
    },
    {
        "id": 185,
        "Question": " What is the term for a system that is designed such that the faults in the delivered software do not result in system failure ?",
        "Options": [
            "a) Fault Avoidance",
            "b) Fault detection",
            "c) Fault tolerance",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 186,
        "Question": "Which process characteristic with respect to Dependability Engineering is mentioned by the statement: “The process should be understandable by people apart from process participants”?",
        "Options": [
            "a) Diverse",
            "b) Documentable",
            "c) Auditable",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It means that process standards are being followed and make suggestions for process improvement."
    },
    {
        "id": 187,
        "Question": "Which of the following is not a Protection system ?",
        "Options": [
            "a) System to stop a train if it passes a red light",
            "b) System to indicate not returning of the library book",
            "c) System to shut down a reactor if temperature/pressure are too high",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: A Protection system is a specialized system that is associated with some other control system, which can take emergency action if a failure occurs."
    },
    {
        "id": 188,
        "Question": "Which of the following is a Strategy to achieve Software diversity ?",
        "Options": [
            "a) Different programming languages",
            "b) Different design methods and tools",
            "c) Explicit specification of different algorithms",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The answer is self explanatory."
    },
    {
        "id": 189,
        "Question": "Which of the following is a bad practice of Dependable programming ?",
        "Options": [
            "a) Limit the visibility of information in a program",
            "b) Check array bounds",
            "c) Check all inputs for validity",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Diversity means to provide the same functionality in different ways so that critical components of a dependable system will not fail in the same way."
    },
    {
        "id": 190,
        "Question": "What is a Range check?",
        "Options": [
            "a) Check that the input does not exceed some maximum size e.g. 40 characters for a name",
            "b) Check that the input falls within a known range",
            "c) Use information about the input to check if it is reasonable rather than an extreme value",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Exception handling is a mechanism to provide some fault tolerance."
    },
    {
        "id": 191,
        "Question": "Which of the following is a layer of protection for Security ?",
        "Options": [
            "a) Platform-level protection",
            "b) Application-level protection",
            "c) Record-level protection",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: None."
    },
    {
        "id": 192,
        "Question": "What are security controls ?",
        "Options": [
            "a) Controls that are intended to ensure that attacks are unsuccessful",
            "b) Controls that are intended to detect and repel attacks",
            "c) Controls that are intended to support recovery from problems",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: Security engineering is concerned with maintenance as well as development of such systems."
    },
    {
        "id": 193,
        "Question": "Controls that are intended to repel attacks is analogous to ____________ in dependability engineering.",
        "Options": [
            "a) Fault avoidance",
            "b) Fault tolerance",
            "c) Fault detection",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: All the options define a security control property."
    },
    {
        "id": 194,
        "Question": "Controls that are intended to ensure that attacks are unsuccessful is analogous to ____________ in dependability engineering.",
        "Options": [
            "a) Fault avoidance",
            "b) Fault tolerance",
            "c) Fault detection",
            "d) Fault Recovery"
        ],
        "Answer": " Answer:b\nExplanation: Here the system is designed so that faults in the delivered software do not result in system failure."
    },
    {
        "id": 195,
        "Question": "What is Life cycle risk assessment ?",
        "Options": [
            "a) Risk assessment before the system has been deployed",
            "b) Risk assessment while the system is being developed",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:a\nExplanation: In Fault avoidance the system is developed in such a way that human error is avoided and thus system faults are minimised."
    },
    {
        "id": 196,
        "Question": "A system resource that has a value and has to be protected is known as",
        "Options": [
            "a) Asset",
            "b) Control",
            "c) Vulnerability",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:c\nExplanation: None."
    },
    {
        "id": 197,
        "Question": "The records of each patient that is receiving or has received treatment resembles which security concept ?",
        "Options": [
            "a) Asset",
            "b) Threat",
            "c) Vulnerability",
            "d) Control"
        ],
        "Answer": " Answer:a\nExplanation: The answer is self explanatory."
    },
    {
        "id": 198,
        "Question": "Circumstances that have potential to cause loss or harm is known as",
        "Options": [
            "a) Attack",
            "b) Threat",
            "c) Vulnerability",
            "d) Control"
        ],
        "Answer": " Answer:b\nExplanation: It is a security attack."
    },
    {
        "id": 199,
        "Question": "Which of the following is a technique covered in Static Analysis ?",
        "Options": [
            "a) Formal verification",
            "b) Model checking",
            "c) Automated program analysis",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  Static analysis techniques are system verification techniques that don’t involve executing a program."
    },
    {
        "id": 200,
        "Question": "Select the disadvantage of using Formal methods",
        "Options": [
            "a) Concurrent systems can be analysed to discover race conditions that might lead to deadlock",
            "b) Producing a mathematical specification requires a detailed analysis of the requirements",
            "c) They require the use of specialised notations that cannot be understood by domain experts",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 201,
        "Question": "Which of the following is incorrect with respect to Model Checking?",
        "Options": [
            "a) Model checking is particularly valuable for verifying concurrent systems",
            "b) Model checking is computationally very inexpensive",
            "c) The model checker explores all possible paths through the model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Formal methods are the ultimate static verification technique that may be used at different stages in the development process."
    },
    {
        "id": 202,
        "Question": "Choose the fault class in which the following automated static analysis check would fall:”Variables declared but never used”.",
        "Options": [
            "a) Control Faults",
            "b) Data Faults",
            "c) Input/Output Faults",
            "d) Interface faults"
        ],
        "Answer": " Answer: b\nExplanation: Model checking is very expensive.It is only practical to use it in the verification of small to medium sized critical systems."
    },
    {
        "id": 203,
        "Question": "Choose the fault class in which the following automated static analysis check would fall: “Unreachable code”.",
        "Options": [
            "a) Control Faults",
            "b) Data Faults",
            "c) Input/Output Faults",
            "d) Interface faults"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 204,
        "Question": "Choose the fault class in which the following automated static analysis check would fall:”Non-usage of the results of functions”.",
        "Options": [
            "a) Storage management faults",
            "b) Data Faults",
            "c) Input/Output Faults",
            "d) Interface faults"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 205,
        "Question": "Which level of Static Analysis allows specific rules that apply to a program to be checked ?",
        "Options": [
            "a) Characteristic error checking",
            "b) User-defined error checking",
            "c) Assertion checking",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 206,
        "Question": "Choose the fault class in which the following automated static analysis check would fall:”Pointer Arithmetic”.",
        "Options": [
            "a) Storage management faults",
            "b) Data Faults",
            "c) Input/Output Faults",
            "d) Interface faults"
        ],
        "Answer": " Answer: a\nExplanation: The static analyzer can discover areas of vulnerability such as buffer overflows or unchecked inputs"
    },
    {
        "id": 207,
        "Question": "Which is the first step in the software development life cycle ?",
        "Options": [
            "a) Analysis",
            "b) Design",
            "c) Problem/Opportunity Identification",
            "d) Development and Documentation"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 208,
        "Question": "Which tool is use for structured designing ?",
        "Options": [
            "a) Program flowchart",
            "b) Structure chart",
            "c) Data-flow diagram",
            "d) Module"
        ],
        "Answer": " Answer: b\nExplanation: A Structure Chart (SC) in software engineering and organizational theory, is a chart which shows the breakdown of a system to its lowest manageable levels."
    },
    {
        "id": 209,
        "Question": "A step by step instruction used to solve a problem is known as",
        "Options": [
            "a) Sequential structure",
            "b) A List",
            "c) A plan",
            "d) An Algorithm"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 210,
        "Question": "In the Analysis phase, the development of the ____________ occurs, which is a clear statement of the goals and objectives of the project.",
        "Options": [
            "a) documentation",
            "b) flowchart",
            "c) program specification",
            "d) design"
        ],
        "Answer": " Answer: c\nExplanation:  Program specification is the definition of what a computer program is expected to do."
    },
    {
        "id": 211,
        "Question": "Actual programming of software code is done during the ____________ step in the SDLC.",
        "Options": [
            "a) Maintenance and Evaluation",
            "b) Design",
            "c) Analysis",
            "d) Development and Documentation"
        ],
        "Answer": " Answer: d\nExplanation: The developer has to find in the technical documentation enough information to start coding."
    },
    {
        "id": 212,
        "Question": "Who designs and implement database structures.",
        "Options": [
            "a) Programmers",
            "b) Project managers",
            "c) Technical writers",
            "d) Database administrators"
        ],
        "Answer": " Answer: d\nExplanation: The role of database administrators includes the development and design of database strategies, system monitoring and improving database performance and capacity, and planning for future expansion requirements."
    },
    {
        "id": 213,
        "Question": "____________ is the process of translating a task into a series of commands that a computer will use to perform that task.",
        "Options": [
            "a) Project design",
            "b) Installation",
            "c) Systems analysis",
            "d) Programming"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 214,
        "Question": "Debugging is:",
        "Options": [
            "a) creating program code",
            "b) finding and correcting errors in the program code",
            "c) identifying the task to be computerized",
            "d) creating the algorithm"
        ],
        "Answer": " Answer: b\nExplanation: Debugging is a methodical process of finding and reducing the number of bugs, or defects, in a computer program or a piece of electronic hardware, thus making it behave as expected."
    },
    {
        "id": 215,
        "Question": "In Design phase, which is the primary area of concern ?",
        "Options": [
            "a) Architecture",
            "b) Data",
            "c) Interface",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Part of the design phase is to create structural and behavioral models of the system which is covered by architecture, data and the interface of the product."
    },
    {
        "id": 216,
        "Question": "The importance of software design can be summarized in a single word which is:",
        "Options": [
            "a) Efficiency",
            "b) Accuracy",
            "c) Quality",
            "d) Complexity"
        ],
        "Answer": " Answer: c\nExplanation: Software functional quality reflects how well it complies with or conforms to a given design, based on functional requirements or specifications."
    },
    {
        "id": 217,
        "Question": "Cohesion is a qualitative indication of the degree to which a module",
        "Options": [
            "a) can be written more compactly",
            "b) focuses on just one thing",
            "c) is able to complete its function in a timely manner",
            "d) is connected to other modules and the outside world"
        ],
        "Answer": " Answer: b\nExplanation: Cohesion of a single module/component is the degree to which its responsibilities form a meaningful unit."
    },
    {
        "id": 218,
        "Question": "Coupling is a qualitative indication of the degree to which a module",
        "Options": [
            "a) can be written more compactly",
            "b) focuses on just one thing",
            "c) is able to complete its function in a timely manner",
            "d) is connected to other modules and the outside world"
        ],
        "Answer": " Answer: d\nExplanation: Coupling between modules/components is their degree of mutual interdependence."
    },
    {
        "id": 219,
        "Question": "Java packages and Fortran subroutine are examples of__________",
        "Options": [
            "a) Functions",
            "b) Modules",
            "c) Classes",
            "d) Sub procedures"
        ],
        "Answer": " Answer: b\nExplanation: A modular system consist of well defined manageable units with well defined interfaces among the units."
    },
    {
        "id": 220,
        "Question": "Which of the property of software modularity is incorrect with respect to benefits software modularity?",
        "Options": [
            "a) Modules are robust",
            "b) Module can use other modules",
            "c) Modules Can be separately compiled and stored in a library",
            "d) Modules are mostly dependent"
        ],
        "Answer": " Answer: d\nExplanation: Modularity cannot bring benefits unless the modules are autonomous or independent."
    },
    {
        "id": 221,
        "Question": "_______________ is a measure of the degree of interdependence between modules.",
        "Options": [
            "a) Cohesion",
            "b) Coupling",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  Coupling or dependency is the degree to which each program module relies on each one of the other modules."
    },
    {
        "id": 222,
        "Question": "Which of the following is the best type of module coupling?",
        "Options": [
            "a) Control Coupling",
            "b) Stamp Coupling",
            "c) Data Coupling",
            "d) Content Coupling"
        ],
        "Answer": " Answer: c\nExplanation: The dependency between module A and B is said to be data coupled if their dependency is based on the fact they communicate by only passing of data."
    },
    {
        "id": 223,
        "Question": "Which of the following is the worst type of module coupling?",
        "Options": [
            "a) Control Coupling",
            "b) Stamp Coupling",
            "c) External Coupling",
            "d) Content Coupling"
        ],
        "Answer": " Answer: c\nExplanation: Content coupling occurs when module A changes data of module B or when control is passed from one module to the middle of another."
    },
    {
        "id": 224,
        "Question": "Which of the following is the worst type of module cohesion?",
        "Options": [
            "a) Logical Cohesion",
            "b) Temporal Cohesion",
            "c) Functional Cohesion",
            "d) Coincidental Cohesion"
        ],
        "Answer": " Answer: d\nExplanation: Coincidental cohesion exists in modules that contain instructions that have little or no relationship to one another."
    },
    {
        "id": 225,
        "Question": "Which of the following is the best type of module cohesion?",
        "Options": [
            "a) Functional Cohesion",
            "b) Temporal Cohesion",
            "c) Functional Cohesion",
            "d) Sequential Cohesion"
        ],
        "Answer": " Answer: a\nExplanation: Functional Cohesion is a type of cohesion in which the tasks performed by a software module all contribute to the performance of a single function."
    },
    {
        "id": 226,
        "Question": "In what type of coupling, the complete data structure is passed from one module to another?",
        "Options": [
            "a) Control Coupling",
            "b) Stamp Coupling",
            "c) External Coupling",
            "d) Content Coupling"
        ],
        "Answer": " Answer: a\nExplanation: If the software is not properly modularized, a host of seemingly trivial enhancement or changes will result into death of the project."
    },
    {
        "id": 227,
        "Question": "If all tasks must be executed in the same time-span, what type of cohesion is being exhibited?",
        "Options": [
            "a) Functional Cohesion",
            "b) Temporal Cohesion",
            "c) Functional Cohesion",
            "d) Sequential Cohesion"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 228,
        "Question": "Choose the option that does not define Function Oriented Software Design.",
        "Options": [
            "a) It consists of  module definitions",
            "b) Modules represent data abstraction",
            "c) Modules support functional abstraction",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: Option b defines an Object Oriented Design."
    },
    {
        "id": 229,
        "Question": "Which of the following is a complementary approach to function-oriented approach ?",
        "Options": [
            "a) Object oriented analysis",
            "b) Object oriented design",
            "c) Structured approach",
            "d) Both Object oriented analysis and design"
        ],
        "Answer": " Answer:d\nExplanation: None."
    },
    {
        "id": 230,
        "Question": "Function-oriented design techniques starts with functional requirements specified in",
        "Options": [
            "a) SDD",
            "b) SRS",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: None."
    },
    {
        "id": 231,
        "Question": "Structured Analysis is based on the principles of",
        "Options": [
            "a) Top-down decomposition approach",
            "b) Divide and conquer principle",
            "c) Graphical representation of results using DFDs",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: None."
    },
    {
        "id": 232,
        "Question": "Which of the following is/are true with respect to functions ?",
        "Options": [
            "a) A function such as “search-book” is represented using a circle",
            "b) Functions represent some activity",
            "c) Function symbol is known as a process symbol or a bubble in DFD",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: All the options are correct with respect to Function Oriented Software Design."
    },
    {
        "id": 233,
        "Question": "Which of the following is not a use of a CASE tool ?",
        "Options": [
            "a) Support structured analysis and design (SA/SD)",
            "b) Maintains the data dictionary",
            "c) Checks whether DFDs are balanced or not",
            "d) It complies with the available system"
        ],
        "Answer": " Answer:d\nExplanation: It takes long time to establish the system in order to comply with the available system."
    },
    {
        "id": 234,
        "Question": "What DFD notation is represented by the Rectangle?",
        "Options": [
            "a) Transform",
            "b) Data Store",
            "c) Function",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:b\nExplanation: None."
    },
    {
        "id": 235,
        "Question": "In DFDs, user interactions with the system is denoted by",
        "Options": [
            "a) Circle",
            "b) Arrow",
            "c) Rectangle",
            "d) Triangle"
        ],
        "Answer": " Answer:a\nExplanation: Structural decomposition is concerned with developing a model of the design which shows the dynamic structure."
    },
    {
        "id": 236,
        "Question": "SA/SD features are obtained from which of the methodologies?",
        "Options": [
            "a) Constantine and Yourdon methodology",
            "b) DeMarco and Yourdon methodology",
            "c) Gane and Sarson methodology",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 237,
        "Question": "Which of the following is not an activity of Structured Analysis (SA) ?",
        "Options": [
            "a) Functional decomposition",
            "b) Transformation of a textual problem description into a graphic model",
            "c) All the functions represented in the DFD are mapped to a module structure",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The module structure is the  software architecture."
    },
    {
        "id": 238,
        "Question": "To arrive at a form which is suitable for implementation in some programming language is the purpose of",
        "Options": [
            "a) Structured Analysis (SA)",
            "b) Structured Design (SD)",
            "c) Detailed Design (DD)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 239,
        "Question": "The context diagram is also known as",
        "Options": [
            "a) Level-0 DFD",
            "b) Level-1 DFD",
            "c) Level-2 DFD",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The results of structured analysis directly represents customer’s perception of the problem and uses customer’s terminology for naming different functions and data."
    },
    {
        "id": 240,
        "Question": "A directed arc or line in DFD represents",
        "Options": [
            "a) Data Store",
            "b) Data Process",
            "c) Data Flow",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Structured Analysis follows uses decomposition approach."
    },
    {
        "id": 241,
        "Question": "Which of the following is a function of CASE Tool?",
        "Options": [
            "a) Supporting Structured analysis and design (SA/SD)",
            "b) Maintaining the data dictionary",
            "c) Checking whether DFDs are balanced or not",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Context diagram captures the various entities external to the system interacting with it and data flow occurring between the system and the external entities."
    },
    {
        "id": 242,
        "Question": "Data Store Symbol in DFD represents a",
        "Options": [
            "a) Physical file",
            "b) Data Structure",
            "c) Logical file",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It resembles data flow in the direction of the arrow."
    },
    {
        "id": 243,
        "Question": "Choose the incorrect statement in terms of Objects.",
        "Options": [
            "a) Objects are abstractions of real-world",
            "b) Objects can’t manage themselves",
            "c) Objects encapsulate state and representation information",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Objects are independent."
    },
    {
        "id": 244,
        "Question": "What encapsulates both data and data manipulation functions ?",
        "Options": [
            "a) Object",
            "b) Class",
            "c) Super Class",
            "d) Sub Class"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 245,
        "Question": "Which of the following is a mechanism that allows several objects in an class hierarchy to have different methods with the same name?",
        "Options": [
            "a) Aggregation",
            "b) Polymorphism",
            "c) Inheritance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In polymorphism instances of each subclass will be free to respond to messages by calling their own version of the method."
    },
    {
        "id": 246,
        "Question": "Which of the following points related to Object-oriented development (OOD) is true?",
        "Options": [
            "a) OOA is concerned with developing an object model of the application domain",
            "b) OOD is concerned with developing an object-oriented system model to implement requirements",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Inherited object classes are not self-contained. They cannot be understood without reference to their super-classes."
    },
    {
        "id": 247,
        "Question": "How is generalization implemented in Object Oriented programming languages?",
        "Options": [
            "a) Inheritance",
            "b) Polymorphism",
            "c) Encapsulation",
            "d) Abstract Classes"
        ],
        "Answer": " Answer: c\nExplanation: The answer is in support with the OOD."
    },
    {
        "id": 248,
        "Question": "Which of the following is a disadvantage of OOD ?",
        "Options": [
            "a) Easier maintenance",
            "b) Objects may be \u000bunderstood as stand-alone entities",
            "c) Objects are potentially reusable components",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 249,
        "Question": "Which of the following describes”Is-a-Relationship” ?",
        "Options": [
            "a) Aggregation",
            "b) Inheritance",
            "c) Dependency",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options define the characteristics of OOD."
    },
    {
        "id": 250,
        "Question": "Object that collects data on request rather than autonomously is known as",
        "Options": [
            "a) Active Object",
            "b) Passive Object",
            "c) Multiple instance",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 251,
        "Question": "Objects are executed",
        "Options": [
            "a) sequentially",
            "b) in Parallel",
            "c) sequentially & Parallel",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: A passive object holds data, but does not initiate control."
    },
    {
        "id": 252,
        "Question": "How many layers are present in the OO design pyramid?",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) one"
        ],
        "Answer": " Answer: b\nExplanation: The four layers are: Subsystem layer, class and object layer, message layer and responsibilities layer "
    },
    {
        "id": 253,
        "Question": "Which of the following early OOD methods incorporates both a “micro development process” and a “macro development process.” ?",
        "Options": [
            "a) Booch method",
            "b) Rumbaugh method",
            "c) Wirfs-Brock method",
            "d) Coad and Yourdon method"
        ],
        "Answer": " Answer: a\nExplanation: The macro development process includes the architectural planning and micro developments process defines rules that govern the use of operations and attributes and the domain-specific\npolicies for memory management, error handling, and other infrastructure\nfunctions."
    },
    {
        "id": 254,
        "Question": "Grady Booch, James Rumbaugh, and Ivar Jacobson combined the best features of their individual object-oriented analysis into a new method for object oriented design known as",
        "Options": [
            "a) HTML",
            "b) XML",
            "c) UML",
            "d) SGML"
        ],
        "Answer": " Answer: c\nExplanation: The Unified Modeling Language (UML) has become\nwidely used throughout the industry as the standard approach to OOD."
    },
    {
        "id": 255,
        "Question": "A design description of an object is known as a class",
        "Options": [
            "a) instance",
            "b) object",
            "c) case",
            "d) both instance and object"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 256,
        "Question": "Which of the following is conceptually similar to objects?",
        "Options": [
            "a) PACKAGE",
            "b) PROC",
            "c) PRIVATE",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A package is a namespace that organizes a set of related classes and interfaces."
    },
    {
        "id": 257,
        "Question": "A design description in OOD includes",
        "Options": [
            "a) Protocol Description",
            "b) Implementation Description",
            "c) Type Description",
            "d) both Protocol and Implementation Description"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 258,
        "Question": "Which of the following is not an operation as per OOD algorithms and data structures?",
        "Options": [
            "a) operations that manipulate data in some way",
            "b) operations that perform a computation",
            "c) operations that check for syntax errors",
            "d) operations that monitor an object for the occurrence of a controlling event"
        ],
        "Answer": " Answer: c\nExplanation: Operations that check for syntax errors is concerned with the programming language used, so it will be handled by the compiler."
    },
    {
        "id": 259,
        "Question": "Which of the following is the task of project indicators:",
        "Options": [
            "a) help in assessment of status of ongoing project",
            "b) track potential risk",
            "c) help in assessment of status of ongoing project & track potential risk",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 260,
        "Question": "Which of the following does not affect the software quality and organizational performance?",
        "Options": [
            "a) Market",
            "b) Product",
            "c) Technology",
            "d) People"
        ],
        "Answer": " Answer: a\nExplanation: Market is a collection of competitors, stakeholders, users each having different views on the product. So it does not affect the software quality."
    },
    {
        "id": 261,
        "Question": "The intent of project metrics is:",
        "Options": [
            "a) minimization of development schedule",
            "b) for strategic purposes",
            "c) assessing project quality on ongoing basis",
            "d) minimization of development schedule and assessing project quality on ongoing basis"
        ],
        "Answer": " Answer: d\nExplanation: A project metric is a quantitative measure of the degree to which a system, component or process possesses an attribute."
    },
    {
        "id": 262,
        "Question": "Which of the following is not a direct measure of SE process?",
        "Options": [
            "a) Efficiency",
            "b) Cost",
            "c) Effort Applied",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Efficiency is an indirect measure."
    },
    {
        "id": 263,
        "Question": "Which of the following is an indirect measure of product?",
        "Options": [
            "a) Quality",
            "b) Complexity",
            "c) Reliability",
            "d) All of the Mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the mentioned options are indirect measures of a product."
    },
    {
        "id": 264,
        "Question": "In size oriented metrics, metrics are developed based on the ___________________",
        "Options": [
            "a) number of Functions",
            "b) number of user inputs",
            "c) number of lines of code",
            "d) amount of memory usage"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 265,
        "Question": "Which of the following is not an information domain required for determining function point in FPA ?",
        "Options": [
            "a) Number of user Input",
            "b) Number of user Inquiries",
            "c) Number of external Interfaces",
            "d) Number of errors"
        ],
        "Answer": " Answer: d\nExplanation: FPA includes five domains namely input, output, inquiries, interface and logical files."
    },
    {
        "id": 266,
        "Question": "Usability can be measured in terms of:",
        "Options": [
            "a) Intellectual skill to learn the system",
            "b) Time required to become moderately efficient in system usage",
            "c) Net increase in productivity",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 267,
        "Question": "A graphical technique for finding if changes and variation in metrics data are meaningful is known as",
        "Options": [
            "a) DRE (Defect Removal Efficiency)",
            "b) Function points analysis",
            "c) Control Chart",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Others options are formulas."
    },
    {
        "id": 268,
        "Question": "Defects removal efficiency (DRE)depends on:",
        "Options": [
            "a) E – errors found before software delivery",
            "b) D – defects found after delivery to user",
            "c) Both E and D",
            "d) Varies with project"
        ],
        "Answer": " Answer: c\nExplanation: DRE = E / (E + d)."
    },
    {
        "id": 269,
        "Question": "Which metric gives the idea about the contents on a web page ?",
        "Options": [
            "a) Word Token",
            "b) Word Count",
            "c) Word Size",
            "d) Word Length"
        ],
        "Answer": " Answer: a\nExplanation: Static web pages are just for information purposes."
    },
    {
        "id": 270,
        "Question": "How is the complexity of a web page related to link count ?",
        "Options": [
            "a) Directly",
            "b) Indirectly",
            "c) No relation",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The word count metric gives the total number of words on a web page."
    },
    {
        "id": 271,
        "Question": "Number of dynamic web pages provides an idea about________ for a web page that is to be built.",
        "Options": [
            "a) size",
            "b) complexity",
            "c) effort",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: If link count is more, complexity will be more."
    },
    {
        "id": 272,
        "Question": "Which of the following web engineering metric measures the extent of relatedness between two or more web pages ?",
        "Options": [
            "a) Number of Static Content Objects",
            "b) Number of Dynamic Content Objects",
            "c) Web Page Similarity",
            "d) Number of Internal Page Links"
        ],
        "Answer": " Answer: a\nExplanation: More the link count, more the complexity and the web page dependence factor will increase."
    },
    {
        "id": 273,
        "Question": "Which of the following is not a classification of the web engineering metric, Web Page Similarity ?",
        "Options": [
            "a) Content based",
            "b) Link based",
            "c) Usage based",
            "d) Traffic based"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 274,
        "Question": "Link based measures rely on ___________ structure of a web graph to obtain related pages.",
        "Options": [
            "a) Embedded",
            "b) Hyperlink",
            "c) Dynamic",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 275,
        "Question": "Which of the following is not a web engineering project metric ?",
        "Options": [
            "a) Number of Static Content Objects",
            "b) Number of Dynamic Content Objects",
            "c) Number of Inherited Objects",
            "d) Word Count"
        ],
        "Answer": " Answer: d\nExplanation: Similarity between two web pages is not judged upon its traffic activity."
    },
    {
        "id": 276,
        "Question": "Which of the following is not a metric for design model?",
        "Options": [
            "a) Interface design metrics",
            "b) Component-level metrics",
            "c) Architectural metrics",
            "d) Complexity metrics"
        ],
        "Answer": " Answer: d\nExplanation: Complexity metrics measure the logical complexity of source code."
    },
    {
        "id": 277,
        "Question": "Statement and branch coverage metrics are  part of",
        "Options": [
            "a) Analysis Model",
            "b) Testing",
            "c) Design Model",
            "d) Source Code"
        ],
        "Answer": " Answer: b\nExplanation: These metrics lead to the design of test cases that provide program coverage."
    },
    {
        "id": 278,
        "Question": "Function Points in software engineering was first proposed by",
        "Options": [
            "a) Booch",
            "b) Boehm",
            "c) Albrecht",
            "d) Jacobson"
        ],
        "Answer": " Answer: c\nExplanation: First proposed by Albrecht in 1979, hundreds of books and papers have been written on functions points since then."
    },
    {
        "id": 279,
        "Question": "How many Information Domain Values are used for Function Point Computation?",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) six"
        ],
        "Answer": " Answer: c\nExplanation: The five values are: External Inputs, External Outputs, External Inquiries, Internal Logical Files and External Interface Files."
    },
    {
        "id": 280,
        "Question": "Function Point Computation is given by the formula",
        "Options": [
            "a) FP = [count total * 0.65] + 0.01 * sum(Fi)",
            "b) FP = count total * [0.65 + 0.01 * sum(Fi)].",
            "c) FP = count total * [0.65 + 0.01] * sum(Fi)",
            "d) FP = [count total * 0.65 + 0.01] * sum(Fi)"
        ],
        "Answer": " Answer: b\nExplanation: Option b is the correct formula for Function Point Computation."
    },
    {
        "id": 281,
        "Question": "Architectural Design Metrics are ___________ in nature.",
        "Options": [
            "a) Black Box",
            "b) White Box",
            "c) Gray Box",
            "d) Green Box"
        ],
        "Answer": " Answer: a\nExplanation: They are “black box” in that they do not require any knowledge of the inner workings of a particular software component."
    },
    {
        "id": 282,
        "Question": "Structural complexity of a module i is given as S(i) = f*f (i). What does f symbolizes here?",
        "Options": [
            "a) “fan check-out” of module i",
            "b) “fan check-in” of module i",
            "c) “fan in” of module i",
            "d) “fan out” of module i"
        ],
        "Answer": " Answer: d\nExplanation: Fan out is number of modules directly invoked by module i."
    },
    {
        "id": 283,
        "Question": "SMI stands for",
        "Options": [
            "a) Software Mature Indicator",
            "b) Software Maturity Index",
            "c) Software Mature Index",
            "d) Software Maturity Indicator"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 284,
        "Question": "SMI = [Mt – (Fa + Fc + Fd)]/Mt. Here Mt is the number of modules",
        "Options": [
            "a) in the current release",
            "b) in the current release that have been changed",
            "c) from the preceding release that were deleted in the current release",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: As the SMI approaches 1.0, the software product begins to stabilize."
    },
    {
        "id": 285,
        "Question": "The amount of time that the software is available for use is known as",
        "Options": [
            "a) Reliability",
            "b) Usability",
            "c) Efficiency",
            "d) Functionality"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 286,
        "Question": "Usability in metric analysis is defined as the degree to which the software",
        "Options": [
            "a) stated needs",
            "b) is easy to use",
            "c) makes optimal use of system resources",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 287,
        "Question": "Size and Complexity are a part of",
        "Options": [
            "a) Product Metrics",
            "b) Process Metrics",
            "c) Project Metrics",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Product Metrics describe the characteristics of product."
    },
    {
        "id": 288,
        "Question": "Cost and schedule are a part of",
        "Options": [
            "a) Product Metrics",
            "b) Process Metrics",
            "c) Project Metrics",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Project Metrics describe the project characteristics and execution."
    },
    {
        "id": 289,
        "Question": "Number of errors found per person hours expended is an example of a",
        "Options": [
            "a) measurement",
            "b) measure",
            "c) metric",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Metric is a quantitative measure of the degree to which a system, component, or process possesses a given attribute."
    },
    {
        "id": 290,
        "Question": "Which of the following is not categorized under Product Operation of McCall’s Software Quality Factors?",
        "Options": [
            "a) Flexibility",
            "b) Reliability",
            "c) Usability",
            "d) Integrity"
        ],
        "Answer": " Answer: a\nExplanation: Flexibility is a part of Product revision as per McCall’s Software Quality Factors."
    },
    {
        "id": 291,
        "Question": "The arc-to-node ratio is given as r = a/n. What does ‘a’ represent in the ratio?",
        "Options": [
            "a) maximum number of nodes at any level",
            "b) longest path from the root to a leaf",
            "c) number of modules",
            "d) lines of control"
        ],
        "Answer": " Answer: d\nExplanation: ‘a’ represents the arcs or the lines of control."
    },
    {
        "id": 292,
        "Question": "Which of the following is not categorized under Component-Level Design Metrics?",
        "Options": [
            "a) Complexity Metrics",
            "b) Cohesion Metrics",
            "c) Morphology Metrics",
            "d) Coupling Metrics"
        ],
        "Answer": " Answer: c\nExplanation: Morphology metrics are a part of High level design metrics."
    },
    {
        "id": 293,
        "Question": "Percentage of modules that were inspected is a part of",
        "Options": [
            "a) Product Metrics",
            "b) Process Metrics",
            "c) Project Metrics",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 294,
        "Question": "MTTC falls the the category of",
        "Options": [
            "a) correctness",
            "b) integrity",
            "c) maintainability",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Measurement is the act of obtaining a measure."
    },
    {
        "id": 295,
        "Question": "Identify the correct option with reference to Software Quality Metrics.",
        "Options": [
            "a) Integrity = [Sigma(1 – threat)] * (1 – security)",
            "b) Integrity = [1 – Sigma(threat)] * (1 – security)",
            "c) Integrity = [1 – threat * Sigma(1 – security)].",
            "d) Integrity = Sigma[1 – threat * (1 – security)]."
        ],
        "Answer": " Answer: c\nExplanation: Mean time to change (MTTC) is the time it takes to analyze the change request, design an appropriate modification, implement the change, test it, and distribute the change to all users."
    },
    {
        "id": 296,
        "Question": "Which of the following is not project management goal?",
        "Options": [
            "a) Keeping overall costs within budget",
            "b) Delivering the software to the customer at the agreed time",
            "c) Maintaining a happy and well-functioning development team",
            "d) Avoiding customer complaints"
        ],
        "Answer": " Answer: d\nExplanation: Projects need to be managed because professional software engineering is always subject to organizational budget and schedule constraints. "
    },
    {
        "id": 297,
        "Question": "Which of the following is not considered as a risk in project management?",
        "Options": [
            "a) Specification delays",
            "b) Product competition",
            "c) Testing",
            "d) Staff turnover"
        ],
        "Answer": " Answer: b\nExplanation: Risk management involves anticipating risks that might affect the project schedule or the quality of the software being developed, and then taking action to avoid these risks."
    },
    {
        "id": 298,
        "Question": "The process each manager follows during the life of a project is known as",
        "Options": [
            "a) Project Management",
            "b) Manager life cycle",
            "c) Project Management Life Cycle",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Testing is a part of project, thus it can’t be categorized as risk."
    },
    {
        "id": 299,
        "Question": "A 66.6% risk is considered as",
        "Options": [
            "a) very low",
            "b) low",
            "c) moderate",
            "d) high"
        ],
        "Answer": " Answer: c\nExplanation: A proven methodical life cycle is necessary to repeatedly implement and manage projects successfully."
    },
    {
        "id": 300,
        "Question": "Which of the following is/are main parameters that you should use when computing the costs of a software development project?",
        "Options": [
            "a) travel and training costs",
            "b) hardware and software costs",
            "c) effort costs (the costs of paying software engineers and managers)",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The probability of the risk might be assessed as very low (<10%), low (10–25%), moderate (25–50%), high (50–75%), or very high (>75%)."
    },
    {
        "id": 301,
        "Question": "Quality planning is the process of developing a quality plan for",
        "Options": [
            "a) team",
            "b) project",
            "c) customers",
            "d) project manager"
        ],
        "Answer": " Answer: d\nExplanation: Estimation involves working out how much effort is required to complete each activity and, from this, calculating the total cost of activities."
    },
    {
        "id": 302,
        "Question": "Which of the following is incorrect activity for the configuration management of a software system?",
        "Options": [
            "a) Internship management",
            "b) Change management",
            "c) Version management",
            "d) System management"
        ],
        "Answer": " Answer: b\nExplanation:  The quality plan should set out the desired software qualities and describe how these are to be assessed."
    },
    {
        "id": 303,
        "Question": "Identify the sub-process of process improvement",
        "Options": [
            "a) Process introduction",
            "b) Process analysis",
            "c) De-processification",
            "d) Process distribution"
        ],
        "Answer": " Answer: a\nExplanation: Configuration management policies and processes define how to record and process proposed system changes, how to decide what system components to change, how to manage different versions of the system and its components, and how to distribute changes to customers. "
    },
    {
        "id": 304,
        "Question": "Which of the following is an important factor that can affect the accuracy and efficacy of estimates?",
        "Options": [
            "a) Project size",
            "b) Planning process",
            "c) Project complexity",
            "d) Degree of structural uncertainty"
        ],
        "Answer": " Answer: a\nExplanation: As size increases, the interdependence among various elements of the software grows rapidly. "
    },
    {
        "id": 305,
        "Question": "What describes the data and control to be processed?",
        "Options": [
            "a) Planning process",
            "b) Software scope",
            "c) External hardware",
            "d) Project complexity"
        ],
        "Answer": " Answer: b\nExplanation: Functions described in the statement of scope are evaluated and in some cases refined to provide more detail prior to the beginning of estimation."
    },
    {
        "id": 306,
        "Question": "A number of independent investigators have developed a team-oriented approach to requirements gathering that can be applied to establish the scope of a project called",
        "Options": [
            "a) JAD",
            "b) CLASS",
            "c) FAST",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Facilitated application specification techniques\n(FAST), this approach encourages the creation of a joint team of customers\nand developers who work together to identify the problem, propose elements\nof the solution, negotiate different approaches, and specify a preliminary set of\nrequirements."
    },
    {
        "id": 307,
        "Question": "CLSS stands for",
        "Options": [
            "a) conveyor line sorting system",
            "b) conveyor line sorting software",
            "c) conveyor line sorting speed",
            "d) conveyor line sorting specification"
        ],
        "Answer": " Answer: a\nExplanation: The conveyor line sorting system (CLSS) sorts boxes moving along a conveyor line. Each box is identified by a barcode that contains a part number and is sorted into one of six bins at the end of the line."
    },
    {
        "id": 308,
        "Question": "The project planner examines the statement of scope and extracts all important software functions which is known as",
        "Options": [
            "a) Association",
            "b) Decomposition",
            "c) Planning process",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None"
    },
    {
        "id": 309,
        "Question": "The environment that supports the software project is called",
        "Options": [
            "a) CLSS",
            "b) SEE",
            "c) FAST",
            "d) CBSE"
        ],
        "Answer": " Answer: b\nExplanation: Software engineering environment (SEE), incorporates hardware and software."
    },
    {
        "id": 310,
        "Question": "Which of the following is not an option to achieve reliable cost and effort estimate?",
        "Options": [
            "a) Base estimates on similar projects that have already been completed",
            "b) Use one or more empirical models for software cost and effort estimation",
            "c) Use relatively simple decomposition techniques to generate project cost and effort estimates",
            "d) The ability to translate the size estimate into human effort, calendar time, and dollars"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 311,
        "Question": "What can be used to complement decomposition techniques and offer a potentially valuable estimation approach in their own right?",
        "Options": [
            "a) Automated estimation tools",
            "b) Empirical estimation models",
            "c) Decomposition techniques",
            "d) Both Automated estimation tools and Empirical estimation models"
        ],
        "Answer": " Answer: b\nExplanation: An estimation model for computer software uses empirically derived formulas to predict effort as a function of LOC or FP. "
    },
    {
        "id": 312,
        "Question": "Which of the following is not achieved by an automated estimation tools?",
        "Options": [
            "a) Predicting staffing levels",
            "b) Predicting software cost",
            "c) Predicting software schedules",
            "d) Predicting clients demands"
        ],
        "Answer": " Answer: d\nExplanation: Demands can vary from client to client."
    },
    {
        "id": 313,
        "Question": "Which of the following are parameters involved in computing the total cost of a software development project?",
        "Options": [
            "a) Hardware and software costs",
            "b) Effort costs",
            "c) Travel and training costs",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All these are accounted for in estimating a software development cost. "
    },
    {
        "id": 314,
        "Question": " Which of the following costs is not part of the total effort cost?",
        "Options": [
            "a) Costs of networking and communications",
            "b) Costs of providing heating and lighting office space",
            "c) Costs of lunch time food",
            "d) Costs of support staff"
        ],
        "Answer": " Answer: c\nExplanation: This is a incurred by the employees."
    },
    {
        "id": 315,
        "Question": "What is related to the overall functionality of the delivered software?",
        "Options": [
            "a) Function-related metrics",
            "b) Product-related metrics",
            "c) Size-related metrics",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Productivity is expressed in terms of the amount of useful functionality produced in some given time. Function points and object points\nare the best-known metrics of this type."
    },
    {
        "id": 316,
        "Question": "A _________ is developed using historical cost information that relates some software metric to the project cost.",
        "Options": [
            "a) Algorithmic cost modelling",
            "b) Expert judgement",
            "c) Estimation by analogy",
            "d) Parkinson’s Law"
        ],
        "Answer": " Answer: a\nExplanation: The model uses a basic regression formula with parameters that are derived from historical project data and current as well as future project characteristics."
    },
    {
        "id": 317,
        "Question": "Which technique is applicable when other projects in the same analogy application domain have been completed?",
        "Options": [
            "a) Algorithmic cost modelling",
            "b) Expert judgement",
            "c) Estimation by analogy",
            "d) Parkinson’s Law"
        ],
        "Answer": " Answer: a\nExplanation: Function-point and object-point estimates are easier to produce than estimates of code size but are often still inaccurate."
    },
    {
        "id": 318,
        "Question": "Which model assumes that systems are created from reusable components, scripting or database programming?",
        "Options": [
            "a) An application-composition model",
            "b) A post-architecture model",
            "c) A reuse model",
            "d) An early design model"
        ],
        "Answer": " Answer: c\nExplanation: The cost of a new project is estimated by analogy with these completed projects."
    },
    {
        "id": 319,
        "Question": "Which of the following states that work expands to fill the time available.",
        "Options": [
            "a) CASE tools",
            "b) Pricing to win",
            "c) Parkinson’s Law",
            "d) Expert judgement"
        ],
        "Answer": " Answer: a\nExplanation: It is designed to make estimates of prototype development."
    },
    {
        "id": 320,
        "Question": "Which model is used during early stages of the system design after the requirements have been established?",
        "Options": [
            "a) An application-composition model",
            "b) A post-architecture model",
            "c) A reuse model",
            "d) An early design model"
        ],
        "Answer": " Answer: c\nExplanation: The cost is determined by available resources rather than by objective assessment. If the software has to be delivered in 12 months and 5 people are available, the effort required is estimated to be 60 person-months. "
    },
    {
        "id": 321,
        "Question": "Which  model is used to compute the effort required to integrate reusable components or program code that is automatically generated by design or program translation tools?",
        "Options": [
            "a) An application-composition model",
            "b) A post-architecture model",
            "c) A reuse model",
            "d) An early design model"
        ],
        "Answer": " Answer: d\nExplanation: Estimates are based on function points, which are then converted to number of lines of source code. The formula follows the standard form discussed above with a simplified set of seven multipliers."
    },
    {
        "id": 322,
        "Question": "Which of the following uses empirically derived formulas to predict effort as a function of LOC or FP?",
        "Options": [
            "a) FP-Based Estimation",
            "b) Process-Based Estimation",
            "c) COCOMO",
            "d) Both FP-Based Estimation and COCOMO"
        ],
        "Answer": " Answer: d\nExplanation: Function points and COCOMO are used to evaluate effort."
    },
    {
        "id": 323,
        "Question": "COCOMO stands for",
        "Options": [
            "a) Constructive cost model",
            "b) Comprehensive cost model",
            "c) Constructive cost estimation model",
            "d) Complete cost estimation model"
        ],
        "Answer": " Answer: b\nExplanation: The Empirical data is derived from a limited sample of projects. For this reason, no estimation model is appropriate for all classes of software and in all development environments."
    },
    {
        "id": 324,
        "Question": "Which version of COCOMO states that once requirements have been stabilized, the basic software architecture has been established?",
        "Options": [
            "a) Early design stage model",
            "b) Post-architecture-stage model",
            "c) Application composition model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 325,
        "Question": "Which model was used during the early stages of software engineering, when prototyping of user interfaces, consideration of software and system interaction, assessment of performance, and evaluation of technology maturity were paramount.",
        "Options": [
            "a) Early design stage model",
            "b) Post-architecture-stage model",
            "c) Application composition model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 326,
        "Question": "Which one is not a size measure for software product?",
        "Options": [
            "a) LOC",
            "b) Halstead’s program length",
            "c) Function Count",
            "d) Cyclomatic Complexity"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 327,
        "Question": "7.COCOMO was developed initially by",
        "Options": [
            "a) B.Beizer",
            "b) Rajiv Gupta",
            "c) B.W.Bohem",
            "d) Gregg Rothermal"
        ],
        "Answer": " Answer: d\nExplanation: It is the part of white box testing."
    },
    {
        "id": 328,
        "Question": "Estimation of size for a project is dependent on",
        "Options": [
            "a) Cost",
            "b) Time",
            "c) Schedule",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Barry Boehm introduced a hierarchy of software estimation models bearing the name COCOMO, for COnstructive COst MOdel."
    },
    {
        "id": 329,
        "Question": "COCOMO-II was developed at",
        "Options": [
            "a) University of Texas",
            "b) University of Southern California",
            "c) MIT",
            "d) IIT-Kanpur"
        ],
        "Answer": " Answer: d\nExplanation: Estimation depends on factors such as Function points and LOC."
    },
    {
        "id": 330,
        "Question": "Which one is not a stage of COCOMO-II?",
        "Options": [
            "a) Early design estimation model",
            "b) Application Composition estimation model",
            "c) Comprehensive cost estimation model",
            "d) Post architecture estimation model"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 331,
        "Question": "What all has to be identified as per risk identification?",
        "Options": [
            "a) Threats",
            "b) Vulnerabilities",
            "c) Consequences",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Risk identification states what could cause a potential loss."
    },
    {
        "id": 332,
        "Question": "Which one is not a risk management activity?",
        "Options": [
            "a) Risk assessment",
            "b) Risk generation",
            "c) Risk control",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Risk management activities would never want a new risk to be generated."
    },
    {
        "id": 333,
        "Question": "What is the product of the probability of incurring a loss due to the risk and the potential magnitude of that loss?",
        "Options": [
            "a) Risk exposure",
            "b) Risk prioritization",
            "c) Risk analysis",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 334,
        "Question": "What threatens the quality and timeliness of the software to be produced?",
        "Options": [
            "a) Known risks",
            "b) Business risks",
            "c) Project risks",
            "d) Technical risks"
        ],
        "Answer": " Answer: d\nExplanation: Technical risks identify potential design, implementation, interface, verification, and maintenance problems."
    },
    {
        "id": 335,
        "Question": "What threatens the viability of the software to be built?",
        "Options": [
            "a) Known risks",
            "b) Business risks",
            "c) Project risks",
            "d) Technical risks"
        ],
        "Answer": " Answer: b\nExplanation: Business risks often jeopardize the project or the product."
    },
    {
        "id": 336,
        "Question": "Which of the following is not a business risk?",
        "Options": [
            "a) building an excellent product or system that no one really wants",
            "b) losing the support of senior management due to a change in focus or change in people",
            "c) lack of documented requirements or software scope",
            "d) losing budgetary or personnel commitment"
        ],
        "Answer": " Answer: c\nExplanation: This is not considered as a business risk."
    },
    {
        "id": 337,
        "Question": "Which of the following is a systematic attempt to specify threats to the project plan?",
        "Options": [
            "a) Risk identification",
            "b) Performance risk",
            "c) Support risk",
            "d) Risk projection"
        ],
        "Answer": " Answer: d\nExplanation: By identifying known and predictable risks, the project manager takes a first step toward avoiding them when possible and controlling them when necessary."
    },
    {
        "id": 338,
        "Question": "Which risks are associated with the overall size of the software to be built or modified?",
        "Options": [
            "a) Business impact risks",
            "b) Process definition risks",
            "c) Product size risks",
            "d) Development environment risks"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 339,
        "Question": "Which risks are associated with constraints imposed by management or the marketplace?",
        "Options": [
            "a) Business impact risks",
            "b) Process definition risks",
            "c) Product size risks",
            "d) Development environment risks"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 340,
        "Question": "Which of the following term is best defined by the statement:”the degree of uncertainty that the product will meet its requirements and be fit for its intended use.”?",
        "Options": [
            "a) Performance risk",
            "b) Cost risk",
            "c) Support risk",
            "d) Schedule risk"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 341,
        "Question": "Risk management is one of the most important jobs for a",
        "Options": [
            "a) Client",
            "b) Investor",
            "c) Production team",
            "d) Project manager"
        ],
        "Answer": " Answer: d\nExplanation: Risk management involves anticipating risks that might affect the project schedule or the quality of the software being developed, and then taking action to avoid these risks."
    },
    {
        "id": 342,
        "Question": "Which of the following risk is the failure of a purchased component to perform as expected?",
        "Options": [
            "a) Product risk",
            "b) Project risk",
            "c) Business risk",
            "d) Programming risk"
        ],
        "Answer": " Answer: a\nExplanation: Risks that affect the quality or performance of the software being developed."
    },
    {
        "id": 343,
        "Question": "Which of the following term is best defined by the statement: “There will be a change of organizational management with different priorities.”?",
        "Options": [
            "a) Staff turnover",
            "b) Technology change",
            "c) Management change",
            "d) Product competition"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 344,
        "Question": "Which of the following term is best defined by the statement: “The underlying technology on which the system is built is superseded by new technology.”?",
        "Options": [
            "a) Technology change",
            "b) Product competition",
            "c) Requirements change",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Technology changes are common in the competitive environment of software engineering."
    },
    {
        "id": 345,
        "Question": "What assess the risk and your plans for risk mitigation and revise these when you learn more about the risk?",
        "Options": [
            "a) Risk monitoring",
            "b) Risk planning",
            "c) Risk analysis",
            "d) Risk identification"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 346,
        "Question": "Which of the following risks are derived from the organizational environment where the software is being developed?",
        "Options": [
            "a) People risks",
            "b) Technology risks",
            "c) Estimation risks",
            "d) Organizational risks"
        ],
        "Answer": " Answer: d\nExplanation: These risks are at management level."
    },
    {
        "id": 347,
        "Question": "Which of the following risks are derived from the software or hardware technologies that are used to develop the system?",
        "Options": [
            "a) Managerial risks",
            "b) Technology risks",
            "c) Estimation risks",
            "d) Organizational risks"
        ],
        "Answer": " Answer: b\nExplanation: The risks associated with technology might affect the product development."
    },
    {
        "id": 348,
        "Question": "Which of the following term is best defined by the statement: “Derive traceability information to maximize information hiding in the design.”?",
        "Options": [
            "a) Underestimated development time",
            "b) Organizational restructuring",
            "c) Requirements changes",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Tracing the requirements can help us understand the risk. "
    },
    {
        "id": 349,
        "Question": "Which of the following strategies means that the impact of the risk will be reduced?",
        "Options": [
            "a) Avoidance strategies",
            "b) Minimization strategies",
            "c) Contingency plans",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 350,
        "Question": "Why is decomposition technique required?",
        "Options": [
            "a) Software project estimation is a form of problem solving",
            "b) Developing a cost and effort estimate for a software project is too complex",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: For these reasons, we decompose the problem, re-characterizing it as a set of smaller problems."
    },
    {
        "id": 351,
        "Question": "If a Direct approach to software project sizing is taken, size can be measured in",
        "Options": [
            "a) LOC",
            "b) FP",
            "c) LOC and FP",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Estimation uses one or both forms of partitioning."
    },
    {
        "id": 352,
        "Question": "Which software project sizing approach develop estimates of the information domain characteristics?",
        "Options": [
            "a) Function point sizing",
            "b) Change sizing",
            "c) Standard component sizing",
            "d) Fuzzy logic sizing"
        ],
        "Answer": " Answer: a\nExplanation: LOC or Line of Code is a direct measure to estimate project size."
    },
    {
        "id": 353,
        "Question": "The expected value for the estimation variable (size), S, can be computed as a weighted average of the optimistic(Sopt), most likely (Sm), and pessimistic (Spess) estimates given as",
        "Options": [
            "a) EV = (Sopt + 4Sm + Spess)/4",
            "b) EV = (Sopt + 4Sm + Spess)/6",
            "c) EV = (Sopt + 2Sm + Spess)/6",
            "d) EV = (Sopt + 2Sm + Spess)/4"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 354,
        "Question": "How many forms exists of Barry Boehm’s COCOMO Model?",
        "Options": [
            "a) Two",
            "b) Three",
            "c) Four",
            "d) No form exists"
        ],
        "Answer": " Answer: b\nExplanation:  This assumes that there is a very small probability that the actual size result will fall outside the optimistic or pessimistic values."
    },
    {
        "id": 355,
        "Question": "Who suggested the four different approaches to the sizing problem?",
        "Options": [
            "a) Putnam",
            "b) Myers",
            "c) Boehm",
            "d) Putnam and Myers"
        ],
        "Answer": " Answer: b\nExplanation:  The three forms include the basic, intermediate and advanced COCOMO model."
    },
    {
        "id": 356,
        "Question": "A make-buy decision is based on whether",
        "Options": [
            "a) The software may be purchased off-the-shelf",
            "b) “Full-experience” or “Partial-experience” software components should be used",
            "c) Customer-built software should be developed",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 357,
        "Question": "Which of the following is not one of the five information domain characteristics of Function Point (FP) decomposition?",
        "Options": [
            "a) External inputs",
            "b) External outputs",
            "c) External process",
            "d) External inquiries"
        ],
        "Answer": " Answer: a\nExplanation: Managers are faced with a make-buy decision in such situations."
    },
    {
        "id": 358,
        "Question": "Programming language experience is a part of which factor of COCOMO cost drivers?",
        "Options": [
            "a) Personnel Factor",
            "b) Product Factor",
            "c) Platform Factor",
            "d) Project Factor"
        ],
        "Answer": " Answer: d\nExplanation: None.."
    },
    {
        "id": 359,
        "Question": "If an Indirect approach is taken, then the sizing approach is represented as",
        "Options": [
            "a) LOC",
            "b) FP",
            "c) Fuzzy Logic",
            "d) LOC and FP"
        ],
        "Answer": " Answer: c\nExplanation:  External inputs, external outputs, external inquiries, internal logical files, external interface files are the five domains."
    },
    {
        "id": 360,
        "Question": "Which of the following is not an effective software project management focus?",
        "Options": [
            "a) people",
            "b) product",
            "c) popularity",
            "d) process"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 361,
        "Question": "PM-CMM stands for",
        "Options": [
            "a) people management capability maturity model",
            "b) process management capability maturity model",
            "c) product management capability maturity model",
            "d) project management capability maturity model"
        ],
        "Answer": " Answer: c\nExplanation: Effective software project management focuses on the four P’s: people, product,   process, and project."
    },
    {
        "id": 362,
        "Question": "Which of the following is not a project manager’s activity?",
        "Options": [
            "a) project control",
            "b) project management",
            "c) project planning",
            "d) project design"
        ],
        "Answer": " Answer: a\nExplanation: The people management maturity model defines the following key practice areas for software people: recruiting, selection, performance management, training, compensation, career development, organization and work design, and team/culture development."
    },
    {
        "id": 363,
        "Question": "A software ________ provides the framework from which a comprehensive plan for software development can be established.",
        "Options": [
            "a) people",
            "b) product",
            "c) process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The design part of any project management is done by the project team."
    },
    {
        "id": 364,
        "Question": "Who defines the business issues that often have significant influence on the project?",
        "Options": [
            "a) Practitioners",
            "b) Project managers",
            "c) Senior managers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A small number of framework activities are applicable to all software projects, regardless of their size or complexity."
    },
    {
        "id": 365,
        "Question": "Who delivers the technical skills that are necessary to engineer a product or an application?",
        "Options": [
            "a) Practitioners",
            "b) Project managers",
            "c) Senior managers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 366,
        "Question": "Which of the following paradigm attempts to structure a team in a manner that achieves some of the controls associated with the closed paradigm but also much of the innovation that occurs when using the random paradigm?",
        "Options": [
            "a) asynchronous paradigm",
            "b) open paradigm",
            "c) closed paradigm",
            "d) synchronous paradigm"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 367,
        "Question": "Which of the following is a people-intensive activity?",
        "Options": [
            "a) Problem solving",
            "b) Organization",
            "c) Motivation",
            "d) Project management"
        ],
        "Answer": " Answer: b\nExplanation: Open paradigm team structures are well suited to the solution of complex problems but may not perform as efficiently as other teams."
    },
    {
        "id": 368,
        "Question": "Which paradigm structures a team loosely and depends on individual initiative of the team members?",
        "Options": [
            "a) random paradigm",
            "b) open paradigm",
            "c) closed paradigm",
            "d) synchronous paradigm"
        ],
        "Answer": " Answer: d\nExplanation: For this reason, competent practitioners often make poor team leaders."
    },
    {
        "id": 369,
        "Question": "Which of the following is not an approach to software cost estimation?",
        "Options": [
            "a) Empirical",
            "b) Heuristic",
            "c) Analytical",
            "d) Critical"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 370,
        "Question": "Which paradigm relies on the natural compartmentalization of a problem and organizes team members to work on pieces of the problem with little active communication among themselves?",
        "Options": [
            "a) random paradigm",
            "b) open paradigm",
            "c) closed paradigm",
            "d) synchronous paradigm"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 371,
        "Question": "Who interacts with the software once it is released for production use?",
        "Options": [
            "a) End-users",
            "b) Client",
            "c) Project (technical) managers",
            "d) Senior managers"
        ],
        "Answer": " Answer: a\nExplanation: A product is always built to satisfy an end-user."
    },
    {
        "id": 372,
        "Question": "Which of the following is not an effective project manager trait?",
        "Options": [
            "a) Problem solving",
            "b) Managerial identity",
            "c) Influence and team building",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All are key traits of an effective project manager."
    },
    {
        "id": 373,
        "Question": "Which type of software engineering team has a defined leader who coordinates specific tasks and secondary leaders that have responsibility for sub tasks?",
        "Options": [
            "a) Controlled decentralized (CD)",
            "b) Democratic decentralized (DD)",
            "c) Controlled centralized (CC)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Problem solving remains a group activity, but implementation of solutions is partitioned among subgroups by the team leader."
    },
    {
        "id": 374,
        "Question": "Commitments to unrealistic time and resource estimates may result in",
        "Options": [
            "a) project delay",
            "b) poor quality work",
            "c) project failure",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 375,
        "Question": "Which software engineering team has no permanent leader?",
        "Options": [
            "a) Controlled decentralized (CD)",
            "b) Democratic decentralized (DD)",
            "c) Controlled Centralized (CC)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Here Communication among team members is horizontal."
    },
    {
        "id": 376,
        "Question": "Which of the following is not a project factor that should be considered when planning the structure of software engineering teams?",
        "Options": [
            "a) The difficulty of the problem to be solved",
            "b) High frustration caused by personal, business, or technological factors that causes friction among team members",
            "c) The degree of sociability required for the project",
            "d) The rigidity of the delivery date"
        ],
        "Answer": " Answer: c\nExplanation: Development is irrelevant of social quotient."
    },
    {
        "id": 377,
        "Question": "Which of the following is a collection of project coordination technique?",
        "Options": [
            "a) Formal approaches",
            "b) Formal, interpersonal procedures",
            "c) Informal, interpersonal procedures",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 378,
        "Question": "Which activity sits at the core of software requirements analysis?",
        "Options": [
            "a) Problem decomposition",
            "b) Partitioning",
            "c) Problem elaboration",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: During the scoping activity decomposition is applied in two major areas: the functionality that must be delivered and the process that will be used to deliver it."
    },
    {
        "id": 379,
        "Question": "Which of the following is not a sign that indicates that an information systems project is in jeopardy?",
        "Options": [
            "a) Software people don’t understand their customers needs",
            "b) Changes are managed poorly",
            "c) Sponsorship is gained",
            "d) Users are resistant"
        ],
        "Answer": " Answer: c\nExplanation: Other options are contradictory to the question."
    },
    {
        "id": 380,
        "Question": "SPMP stands for",
        "Options": [
            "a) Software Project Manager’s Plan",
            "b) Software Project Management Plan",
            "c) Software Product Management Plan",
            "d) Software Product Manager’s Plan"
        ],
        "Answer": " Answer: b\nExplanation: After planning is complete, documenting of the plans is done in a Software Project Management Plan(SPMP) document."
    },
    {
        "id": 381,
        "Question": "Which of the following is the reason that software is delivered late?",
        "Options": [
            "a) Changing customer requirements that are not reflected in schedule changes",
            "b) Technical difficulties that could not have been foreseen in advance",
            "c) Human difficulties that could not have been foreseen in advance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 382,
        "Question": "Which of the following is an activity that distributes estimated effort across the planned project duration by allocating the effort to specific software engineering tasks?",
        "Options": [
            "a) Software Macroscopic schedule",
            "b) Software Project scheduling",
            "c) Software Detailed schedule",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 383,
        "Question": "Every task that is scheduled should be assigned to a specific team member is termed as",
        "Options": [
            "a) Compartmentalization",
            "b) Defined milestones",
            "c) Defined responsibilities",
            "d) Defined outcomes"
        ],
        "Answer": " Answer: c\nExplanation: These responsibilities are domain specific."
    },
    {
        "id": 384,
        "Question": "What is a collection of software engineering work tasks, milestones, and deliverables that must be accomplished to complete a particular project?",
        "Options": [
            "a) Task set",
            "b) Degree of milestone",
            "c) Adaptation criteria",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 385,
        "Question": "Ensuring that no more than the allocated number of people are allocated at any given time in Software Scheduling is known as",
        "Options": [
            "a) Time Allocation",
            "b) Effort Validation",
            "c) Defined Milestone",
            "d) Effort Distribution"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 386,
        "Question": "What is used to determine the recommended degree of rigor with which the software process should be applied on a project?",
        "Options": [
            "a) Degree of Rigor",
            "b) Adaptation criteria",
            "c) Task Set",
            "d) Both degree of Rigor and adaptation criteria"
        ],
        "Answer": " Answer: b\nExplanation: Four different degrees of rigor are: casual, structured, strict, and quick reaction."
    },
    {
        "id": 387,
        "Question": "What evaluates the risk associated with the technology to be implemented as part of project scope?",
        "Options": [
            "a) Concept scoping",
            "b) Preliminary concept planning",
            "c) Technology risk assessment",
            "d) Customer reaction to the concept"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 388,
        "Question": "Which of the following is not an adaptation criteria for software projects?",
        "Options": [
            "a) Size of the project",
            "b) Customers Complaints",
            "c) Project staff",
            "d) Mission criticality"
        ],
        "Answer": " Answer: b\nExplanation: These can vary from client to client."
    },
    {
        "id": 389,
        "Question": "Which of the following is a project scheduling method that can be applied to software development?",
        "Options": [
            "a) PERT",
            "b) CPM",
            "c) CMM",
            "d) Both PERT and CPM"
        ],
        "Answer": " Answer: d\nExplanation: Program evaluation and review technique (PERT) and critical path method (CPM) are two project scheduling methods that can be applied to software development."
    },
    {
        "id": 390,
        "Question": "A technique for performing quantitative analysis of progress is known as",
        "Options": [
            "a) BCWS",
            "b) EVA",
            "c) BAC",
            "d) CBSE"
        ],
        "Answer": " Answer: b\nExplanation: The earned value system provides a common value scale for every task, regardless of the type of work being performed. The total hours to do the whole project are estimated, and every task is given an earned value based on its estimated percentage of the total."
    },
    {
        "id": 391,
        "Question": "What is the recommended distribution of effort for a project?",
        "Options": [
            "a) 40-20-40",
            "b) 50-20-30",
            "c) 30-40-30",
            "d) 50-30-20"
        ],
        "Answer": " Answer: a\nExplanation: A recommended distribution of effort across the software process is 40% (analysis and design), 20% (coding), and 40% (testing)‏."
    },
    {
        "id": 392,
        "Question": "A project usually has a timeline chart which was developed by",
        "Options": [
            "a) Henry Gantt",
            "b) Barry Boehm",
            "c) Ivar Jacabson",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Timeline chart, also called a Gantt chart was invented by Henry Gantt, an industrial engineer in 1917 ."
    },
    {
        "id": 393,
        "Question": "Which of the following categories is part of the output of software process?",
        "Options": [
            "a) computer programs",
            "b) documents that describe the computer programs",
            "c) data",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None "
    },
    {
        "id": 394,
        "Question": "Which is a software configuration management concept that helps us to control change without seriously impeding justifiable change?",
        "Options": [
            "a) Baselines",
            "b) Source code",
            "c) Data model",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A baseline is analogous to the kitchen doors in the restaurant. Before a software configuration item becomes a baseline, change may be made quickly and informally."
    },
    {
        "id": 395,
        "Question": "Software Configuration Management can be administered in several ways. These include",
        "Options": [
            "a) A single software configuration management team for the whole organization",
            "b) A separate configuration management team for each project",
            "c) Software Configuration Management distributed among the project members",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None"
    },
    {
        "id": 396,
        "Question": "What combines procedures and tools to manage different versions of configuration objects that are created during the software process?",
        "Options": [
            "a) Change control",
            "b) Version control",
            "c) SCIs",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Configuration management allows a user to specify alternative configurations of the software system through the selection of appropriate versions."
    },
    {
        "id": 397,
        "Question": "What complements the formal technical review by assessing a configuration object for characteristics that are generally not considered during review?",
        "Options": [
            "a) Software configuration audit",
            "b) Software configuration management",
            "c) Baseline",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 398,
        "Question": "Which of the following is the process of assembling program components, data, and libraries, and then compiling and linking these to create an executable system?",
        "Options": [
            "a) System building",
            "b) Release management",
            "c) Change management",
            "d) Version management"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 399,
        "Question": "Which of the following option is not tracked by configuration management tools?",
        "Options": [
            "a) Tracking of change proposals",
            "b) Storing versions of system components",
            "c) Tracking the releases of system versions to customers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options are tracked."
    },
    {
        "id": 400,
        "Question": "Which of the following is not a Software Configuration Management Activity?",
        "Options": [
            "a) Configuration item identification",
            "b) Risk management",
            "c) Release management",
            "d) Branch management"
        ],
        "Answer": " Answer: b\nExplanation: Risk management is an entirely different domain."
    },
    {
        "id": 401,
        "Question": "The definition and use of configuration management standards is essential for quality certification in",
        "Options": [
            "a) ISO 9000",
            "b) CMM",
            "c) CMMI",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: It is defined in all the mentioned options."
    },
    {
        "id": 402,
        "Question": "What involves preparing software for external release and keeping track of the system versions that have been released for customer use?",
        "Options": [
            "a) System building",
            "b) Release management",
            "c) Change management",
            "d) Version management"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 403,
        "Question": "Which of the following process ensures that versions of systems and components are recorded and maintained?",
        "Options": [
            "a) Codeline",
            "b) Configuration control",
            "c) Version",
            "d) Workspace"
        ],
        "Answer": " Answer: b\nExplanation: In configuration control changes are managed and all versions of components are identified and stored for the lifetime."
    },
    {
        "id": 404,
        "Question": "Which of the following process is concerned with analyzing the costs and benefits of proposed changes?",
        "Options": [
            "a) Change management",
            "b) Version management",
            "c) System building",
            "d) Release management"
        ],
        "Answer": " Answer: a\nExplanation: It involves approving those changes that are worthwhile, and tracking which components in the system have been changed."
    },
    {
        "id": 405,
        "Question": "Which of the following is not a Version management feature?",
        "Options": [
            "a) Version and release identification",
            "b) Build script generation",
            "c) Project support",
            "d) Change history recording"
        ],
        "Answer": " Answer: b\nExplanation: All other options are a part of version management."
    },
    {
        "id": 406,
        "Question": "Which method recommends that very frequent system builds should be carried out with automated testing to discover software problems?",
        "Options": [
            "a) Agile method",
            "b) Parallel compilation method",
            "c) Large systems method",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In keeping with the agile methods notion of making many small changes, continuous integration involves rebuilding the mainline frequently, after small source code changes have been made."
    },
    {
        "id": 407,
        "Question": "Which of the following is not a build system feature?",
        "Options": [
            "a) Minimal recompilation",
            "b) Documentation generation",
            "c) Storage management",
            "d) Reporting"
        ],
        "Answer": " Answer: c\nExplanation: To reduce the storage space required by multiple versions of components that differ only slightly, version management systems usually provide storage management facilities."
    },
    {
        "id": 408,
        "Question": "Which of the following is a collection of component versions that make up a system?",
        "Options": [
            "a) Version",
            "b) Codeline",
            "c) Baseline",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Baselines are controlled, which means that the versions of the components making up the system cannot be changed."
    },
    {
        "id": 409,
        "Question": "Which of the following is a configuration item?",
        "Options": [
            "a) Design & Test specification",
            "b) Source code",
            "c) Log information",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A configuration item is an approved and accepted deliverable, changes have to be made through formal procedure."
    },
    {
        "id": 410,
        "Question": "Which of the following is a part of system release?",
        "Options": [
            "a) electronic and paper documentation describing the system",
            "b) packaging and associated publicity that have been designed for that release",
            "c) an installation program that is used to help install the system on target hardware",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Release creation is the process of creating the collection of files and documentation that includes all of the components of the system release."
    },
    {
        "id": 411,
        "Question": "A sequence of baselines representing different versions of a system is known as",
        "Options": [
            "a) System building",
            "b) Mainline",
            "c) Software Configuration Item(SCI)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 412,
        "Question": "Which of the following term is best defined by the statement “The creation of a new codeline from a version in an existing codeline”?",
        "Options": [
            "a) Branching",
            "b) Merging",
            "c) Codeline",
            "d) Mainline"
        ],
        "Answer": " Answer: a\nExplanation: The code may then be developed independently."
    },
    {
        "id": 413,
        "Question": "Software Maintenance includes",
        "Options": [
            "a) Error corrections",
            "b) Enhancements of capabilities",
            "c) Deletion of obsolete capabilities",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 414,
        "Question": "Maintenance is classified into how many categories ?",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": " Answer: c\nExplanation: Adaptive, corrective, perfective and preventive are the four types of software maintenance."
    },
    {
        "id": 415,
        "Question": "The modification of the software to match changes in the ever changing environment, falls under which category of software maintenance?",
        "Options": [
            "a) Corrective",
            "b) Adaptive",
            "c) Perfective",
            "d) Preventive"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 416,
        "Question": "How many phases are there in Taute Maintenance Model?",
        "Options": [
            "a) six",
            "b) seven",
            "c) eight",
            "d) nine"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 417,
        "Question": "What type of software testing is generally used in Software Maintenance?",
        "Options": [
            "a) Regression Testing",
            "b) System Testing",
            "c) Integration Testing",
            "d) Unit Testing"
        ],
        "Answer": " Answer: a\nExplanation: All other options are known as levels of software testing which further have types of software testing."
    },
    {
        "id": 418,
        "Question": "Selective retest techniques may be more economical than the “retest-all”technique.How many selective retest techniques are there?",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": " Answer: a\nExplanation: As regression testing is performed many times over the life of the software product, it becomes a costly affair."
    },
    {
        "id": 419,
        "Question": "Which selective retest technique selects every test case that causes a modified program to produce a different output than its original version?",
        "Options": [
            "a) Coverage",
            "b) Minimization",
            "c) Safe",
            "d) Maximization"
        ],
        "Answer": " Answer: b\nExplanation: The three categories include: Coverage, Minimization and Safe techniques."
    },
    {
        "id": 420,
        "Question": "______________ measures the ability of a regression test selection technique to handle realistic applications.",
        "Options": [
            "a) Efficiency",
            "b) Precision",
            "c) Generality",
            "d) Inclusiveness"
        ],
        "Answer": " Answer: c\nExplanation: Safe techniques do not focus on coverage criteria, instead they select every test case that cause a modified program to produce different output than its original version."
    },
    {
        "id": 421,
        "Question": "Which regression test selection technique exposes faults caused by modifications?",
        "Options": [
            "a) Efficiency",
            "b) Precision",
            "c) Generality",
            "d) Inclusiveness"
        ],
        "Answer": " Answer: c\nExplanation: Generality measures the ability of a technique to handle realistic and diverse language constructs, arbitrarily complex modifications, and realistic testing applications."
    },
    {
        "id": 422,
        "Question": "The process of generating analysis and design documents is known as",
        "Options": [
            "a) Software engineering",
            "b) Software re-engineering",
            "c) Reverse engineering",
            "d) Re-engineering"
        ],
        "Answer": " Answer: c\nExplanation: Reverse engineering is the process followed in order to find difficult, unknown and hidden information about a software system.."
    },
    {
        "id": 423,
        "Question": "What is a software patch?",
        "Options": [
            "a) Required or Critical Fix",
            "b) Emergency Fix",
            "c) Daily or routine Fix",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: A software patch is an emergency fix which is worked upon the obsolete version whenever a vulnerability is encountered."
    },
    {
        "id": 424,
        "Question": "Which one of the following is not a maintenance model?",
        "Options": [
            "a) Waterfall model",
            "b) Reuse-oriented model",
            "c) Iterative enhancement model",
            "d) Quick fix model"
        ],
        "Answer": " Answer: a\nExplanation: Waterfall model is a software development model."
    },
    {
        "id": 425,
        "Question": "What does ACT stands for in In Boehm model for software maintenance?",
        "Options": [
            "a) Actual change track",
            "b) Annual change track",
            "c) Annual change traffic",
            "d) Actual change traffic"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 426,
        "Question": "Choose the suitable options with respect to regression testing.",
        "Options": [
            "a) It helps in development of software",
            "b) It helps in maintenance of software",
            "c) It helps in development & maintenance of software",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Regression testing preserves the quality and reliability of software and ensures the software’s continued operation."
    },
    {
        "id": 427,
        "Question": "What are legacy systems?",
        "Options": [
            "a) new systems",
            "b) old systems",
            "c) under-developed systems",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Legacy systems are the existing systems which may require some modification or maintenance."
    },
    {
        "id": 428,
        "Question": "Which of the following manuals is not a user documentation?",
        "Options": [
            "a) Beginner’s Guide",
            "b) Installation guide",
            "c) Reference Guide",
            "d) SRS"
        ],
        "Answer": " Answer: d\nExplanation: SRS provides information on exact requirements of system as agreed between user and developers."
    },
    {
        "id": 429,
        "Question": "Which of the following manuals is a user documentation?",
        "Options": [
            "a) SRS -Software Requirement Specification",
            "b) SDD -Software Design Document",
            "c) System Overview",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: System overview provides general description of the system’s functions."
    },
    {
        "id": 430,
        "Question": "The process of transforming a model into source code is known as",
        "Options": [
            "a) Forward engineering",
            "b) Reverse engineering",
            "c) Re-engineering",
            "d) Reconstructing"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 431,
        "Question": "How many stages are there in Iterative-enhancement model used during software maintenance?",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": " Answer: b\nExplanation: The stages include: analysis of existing system, characterize proposed modifications, redesign and implement current version."
    },
    {
        "id": 432,
        "Question": "Which of the following is a field related to certification ?",
        "Options": [
            "a) Person",
            "b) Process",
            "c) Product",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: During software certification all given options are targeted."
    },
    {
        "id": 433,
        "Question": "Which of the following is a software process certification ?",
        "Options": [
            "a) JAVA Certified",
            "b) IBM Certified",
            "c) ISO-9000",
            "d) Microsoft Certified"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 434,
        "Question": "Which standard is followed in aviation industry ?",
        "Options": [
            "a) CTRADO-172B",
            "b) RTCADO-178B",
            "c) RTRADO-178B",
            "d) CTCADO-178B"
        ],
        "Answer": " Answer: b\nExplanation: RTCADO-178B is a popular aviation standard that has become a defacto standard."
    },
    {
        "id": 435,
        "Question": "How many levels, does the DO-178B certification targeted by RTCADO-178B has ?",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": " Answer: d\nExplanation: The levels are A, B, C, D, E."
    },
    {
        "id": 436,
        "Question": "Third Party Certification for software standards is based on",
        "Options": [
            "a) Ul 1998, Second Edition",
            "b) UT 1998, Second Edition",
            "c) Ul 1992, Second Edition",
            "d) Ul 1996, Second Edition"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 437,
        "Question": "What are the goals to gain Laboratory Accreditation ?",
        "Options": [
            "a) Increase availability of testing services through third-party laboratories",
            "b) Increase availability of testing market to encourage development of software testing industry",
            "c) Reduce cost by increasing supply of testing services",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The goal is to promote development of competitive market, hence option d."
    },
    {
        "id": 438,
        "Question": "National Voluntary Laboratory Accreditation Program approve accreditation in",
        "Options": [
            "a) Environmental standards",
            "b) Computers and electronics",
            "c) Product testing",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: National Voluntary Laboratory Accreditation Program Works with other national metrology institutes to establish criteria for mutual recognition of test results."
    },
    {
        "id": 439,
        "Question": "CSTE stands for",
        "Options": [
            "a) Certified Software Technology",
            "b) Certified Software Tester",
            "c) Certified Software Trainee",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 440,
        "Question": "CSQA stands for",
        "Options": [
            "a) Certified Software Quality Analyst",
            "b) Certified Software Quality Approved",
            "c) Certified Software Quality Acclaimed",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 441,
        "Question": "Which of the following companies provide certifications for their own products?",
        "Options": [
            "a) CISCO",
            "b) ORACLE",
            "c) Microsoft",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 442,
        "Question": "“Robustness” answers which of the following description?",
        "Options": [
            "a) CASE tools be used to support the process activities",
            "b) Process errors are avoided or trapped before they result in product errors",
            "c) Defined process is acceptable and usable by the engineers responsible for producing the software",
            "d) Process continues in spite of unexpected problems"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 443,
        "Question": "“Understandability” answers which of the following description?",
        "Options": [
            "a) The extent to which the process is explicitly defined",
            "b) Process errors are avoided or trapped before they result in product errors",
            "c) Defined process is acceptable and usable by the engineers responsible for producing the software product",
            "d) Process continues in spite of unexpected problems"
        ],
        "Answer": " Answer: b\nExplanation: The definition is of a system development process."
    },
    {
        "id": 444,
        "Question": "How many stages are there in process improvement?",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) six"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 445,
        "Question": "In which stage of process improvement bottlenecks and weaknesses are identified?",
        "Options": [
            "a) Process measurement",
            "b) Process analysis",
            "c) Process change",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Process measurement, analysis and change are the three stages."
    },
    {
        "id": 446,
        "Question": "Prototypes and 4GL business systems are categorized under which process?",
        "Options": [
            "a) Informal",
            "b) Managed",
            "c) Methodical",
            "d) Supported"
        ],
        "Answer": " Answer: b\nExplanation: In Process analysis the current process is assessed and bottlenecks and weaknesses are identified."
    },
    {
        "id": 447,
        "Question": "The documentation of a process which records the tasks, the roles and the entities used is called",
        "Options": [
            "a) Process metric",
            "b) Process analysis",
            "c) Process modelling",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Here the development team chose their own way of working."
    },
    {
        "id": 448,
        "Question": "What is a tangible output of an activity that is predicted in a project plan?",
        "Options": [
            "a) Deliverable",
            "b) Activity",
            "c) Condition",
            "d) Process"
        ],
        "Answer": " Answer: c\nExplanation: Process models may be presented from different perspectives."
    },
    {
        "id": 449,
        "Question": "What is often undefined and is left to the ingenuity of the project managers and engineers?",
        "Options": [
            "a) Role",
            "b) Exception",
            "c) Activity",
            "d) Process"
        ],
        "Answer": " Answer: b\nExplanation: It is always best to start process analysis with an existing model. People then may extend and change this."
    },
    {
        "id": 450,
        "Question": "Which of the following is not a part of process change?",
        "Options": [
            "a) Introducing new practices, methods or processes",
            "b) Introducing new team members to existing project",
            "c) Introducing or removing deliverable",
            "d) Introducing new roles or responsibilities"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 451,
        "Question": "The CMMI assessment is based on a x-point scale. What is the value of x?",
        "Options": [
            "a) 0",
            "b) 2",
            "c) 4",
            "d) 6"
        ],
        "Answer": " Answer: b\nExplanation: Exceptions are often undefined and it is left to the ingenuity of the project managers and engineers to handle the exception."
    },
    {
        "id": 452,
        "Question": "Which of the following is not included in failure costs?",
        "Options": [
            "a) rework",
            "b) repair",
            "c) failure mode analysis",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Failure costs are those that would disappear if no defects appeared before shipping a product to customers."
    },
    {
        "id": 453,
        "Question": "Which requirements are the foundation from which quality is measured?",
        "Options": [
            "a) Hardware",
            "b) Software",
            "c) Programmers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Lack of conformance to requirements is lack of quality."
    },
    {
        "id": 454,
        "Question": "Which of the following is not a SQA plan for a project?",
        "Options": [
            "a) evaluations to be performed",
            "b) amount of technical work",
            "c) audits and reviews to be performed",
            "d) documents to be produced by the SQA group"
        ],
        "Answer": " Answer: b\nExplanation: All other options support a SQA plan."
    },
    {
        "id": 455,
        "Question": "Degree to which design specifications are followed in manufacturing the product is called",
        "Options": [
            "a) Quality Control",
            "b) Quality of conformance",
            "c) Quality Assurance",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 456,
        "Question": "Which of the following is not included in External failure costs?",
        "Options": [
            "a) testing",
            "b) help line support",
            "c) warranty work",
            "d) complaint resolution"
        ],
        "Answer": " Answer: a\nExplanation: External failure costs are associated with defects found after the product has been shipped to the customer."
    },
    {
        "id": 457,
        "Question": "Which of the following is not an appraisal cost in SQA?",
        "Options": [
            "a) inter-process inspection",
            "b) maintenance",
            "c) quality planning",
            "d) testing"
        ],
        "Answer": " Answer: c\nExplanation: It is associated prevention cost."
    },
    {
        "id": 458,
        "Question": "Who identifies, documents, and verifies that corrections have been made to the software?",
        "Options": [
            "a) Project manager",
            "b) Project team",
            "c) SQA group",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 459,
        "Question": "The primary objective of formal technical reviews is to find _________ during the process so that they do not become defects after release of the software.",
        "Options": [
            "a) errors",
            "b) equivalent faults",
            "c) failure cause",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Errors lead to faults"
    },
    {
        "id": 460,
        "Question": "What is not included in prevention costs?",
        "Options": [
            "a) quality planning",
            "b) formal technical reviews",
            "c) test equipment",
            "d) equipment calibration and maintenance"
        ],
        "Answer": " Answer: d\nExplanation: The cost of quality includes all costs incurred in the pursuit of quality or in performing quality-related activities."
    },
    {
        "id": 461,
        "Question": "CMM stands for",
        "Options": [
            "a) Capability Management Module",
            "b) Conservative Maturity Model",
            "c) Capability Maturity Module",
            "d) Capability Maturity Model"
        ],
        "Answer": " Answer: d\nExplanation: The Capability Maturity Model for Software describes the principles and practices underlying software process maturity and is intended to help software organizations improve the maturity of their software processes in terms of an evolutionary path from ad hoc, chaotic processes to mature, disciplined software processes. "
    },
    {
        "id": 462,
        "Question": "According to ISO 9001, the causes of nonconforming product should be",
        "Options": [
            "a) deleted",
            "b) eliminated",
            "c) identified",
            "d) eliminated and identified"
        ],
        "Answer": " Answer: b\nExplanation: The ISO 9000 series of standards is a set of documents."
    },
    {
        "id": 463,
        "Question": ".CO policy in CMM means",
        "Options": [
            "a) The leadership practices in Commitment to Perform",
            "b) The organizational structure (groups) practices in Ability to Perform",
            "c) The policy practices in Commitment to Perform",
            "d) The planning practices in Commitment to Perform"
        ],
        "Answer": " Answer: d\nExplanation:  ISO 9001 requires that the causes of nonconforming product to be identified. Potential causes of nonconforming product are eliminated."
    },
    {
        "id": 464,
        "Question": "ISO 9001 is not concerned with ____________ of quality records.",
        "Options": [
            "a) collection",
            "b) maintenance",
            "c) verification",
            "d) dis-positioning"
        ],
        "Answer": " Answer: c\nExplanation:  CMM have certain policy practices covered under .CO policy."
    },
    {
        "id": 465,
        "Question": "Which of the following is not a maturity level in CMM?",
        "Options": [
            "a) Design",
            "b) Repeatable",
            "c) Managed",
            "d) Optimizing"
        ],
        "Answer": " Answer: c\nExplanation: The practices defining the quality records to be maintained in the CMM are distributed throughout the key process areas in the various Activities Performed practices."
    },
    {
        "id": 466,
        "Question": "In CMM, the life cycle activities of requirements analysis, design, code, and test are described in",
        "Options": [
            "a) Software Product Engineering",
            "b) Software Quality Assurance",
            "c) Software Subcontract Management",
            "d) Software Quality Management"
        ],
        "Answer": " Answer: a\nExplanation: The CMM is organized into five maturity levels as namely: Initial, Repeatable, Defined, Managed and  Optimizing."
    },
    {
        "id": 467,
        "Question": "Which of the following requires design control measures, such as holding and recording design reviews and qualification tests?",
        "Options": [
            "a) CMM",
            "b) ISO 9001",
            "c) ISO 9000-3",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In CMM planning these activities is described in Software Project Planning, however the life cycle activities of requirements analysis, design, code, and test are described in Software Product Engineering."
    },
    {
        "id": 468,
        "Question": "The CMM emphasizes",
        "Options": [
            "a) continuous process improvement",
            "b) the need to record information",
            "c) the need to accept quality system",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: ISO 9000-3 states that the supplier should carry out reviews to ensure the requirements are met and design methods are correctly carried out."
    },
    {
        "id": 469,
        "Question": "_______ states that, where appropriate, adequate statistical techniques are identified and used to verify the acceptability of process capability and product characteristics.",
        "Options": [
            "a) ISO 9001",
            "b) ISO 9000-4",
            "c) CMM",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:  b\nExplanation:  CMM emphasizes the need to record information for later use in the process and for improvement of the process."
    },
    {
        "id": 470,
        "Question": "A ________ view shows the system hardware and how software components are distributed across the processors in the system.",
        "Options": [
            "a) physical",
            "b) logical",
            "c) process",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In architectural design you design a system organization satisfying the functional and non-functional requirements of a system. "
    },
    {
        "id": 471,
        "Question": "The UML was designed for describing _________",
        "Options": [
            "a) object-oriented systems",
            "b) architectural design",
            "c) SRS",
            "d) Both object-oriented systems and Architectural design"
        ],
        "Answer": " Answer: a\nExplanation: A physical view is implemented by system engineers implementing the system hardware."
    },
    {
        "id": 472,
        "Question": "Which of the following view shows that the system is composed of interacting processes at run time?",
        "Options": [
            "a) physical",
            "b) development",
            "c) logical",
            "d) process"
        ],
        "Answer": " Answer: d\nExplanation: The UML was designed for describing object-oriented systems and, at the architectural design stage, you often want to describe systems at a higher level of abstraction."
    },
    {
        "id": 473,
        "Question": "Which of the following is an architectural conflict?",
        "Options": [
            "a) Using large-grain components improves performance but reduces maintainability",
            "b) Introducing redundant data improves availability but makes security more difficult",
            "c) Localizing safety-related features usually means more communication so degraded performance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This view is useful for making judgments about non-functional system characteristics such as performance and availability."
    },
    {
        "id": 474,
        "Question": "Which of the following is not included in Architectural design decisions?",
        "Options": [
            "a) type of application",
            "b) distribution of the system",
            "c) architectural styles",
            "d) testing the system"
        ],
        "Answer": " Answer: d\nExplanation: High availability architecture can be affected by several design factors that are required to be maintained to ensure that no single points of failure exist in such design."
    },
    {
        "id": 475,
        "Question": "Which of the following pattern is the basis of interaction management in many web-based systems?",
        "Options": [
            "a) architecture",
            "b) repository pattern",
            "c) model-view-controller",
            "d) different operating system"
        ],
        "Answer": " Answer: d\nExplanation:  Architectural design decisions include decisions on the type of application, the distribution of the system, the architectural styles to be used, and the ways in which the architecture should be documented and evaluated."
    },
    {
        "id": 476,
        "Question": "What describes how a set of interacting components can share data?",
        "Options": [
            "a) model-view-controller",
            "b) architecture pattern",
            "c) repository pattern",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Systems in the same domain often have similar architectures that reflect domain concepts."
    },
    {
        "id": 477,
        "Question": "Which view in architectural design shows the key abstractions in the system as objects or object classes?",
        "Options": [
            "a) physical",
            "b) development",
            "c) logical",
            "d) process"
        ],
        "Answer": " Answer: c\nExplanation: Model-View-Controller pattern is the basis of interaction management in many web-based systems. "
    },
    {
        "id": 478,
        "Question": "Which of the following is a type of Architectural Model?",
        "Options": [
            "a) Static structural model",
            "b) Dynamic process model",
            "c) Distribution model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The majority of systems that use large amounts of data are organized around a shared database or repository."
    },
    {
        "id": 479,
        "Question": "Which of these following sensor is a useful as part of a burglar alarm system for commercial buildings?",
        "Options": [
            "a) Movement detector",
            "b) Door sensor",
            "c) Window sensor",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A burglar alarm system for commercial buildings include movement detectors in individual rooms, door sensors that detect corridor doors opening, and window sensors on ground-floor windows that can detect when a window has been opened. "
    },
    {
        "id": 480,
        "Question": "Which of the following is not real-time architectural patterns that are commonly used?",
        "Options": [
            "a) Asynchronous communication",
            "b) Observe and React",
            "c) Environmental Control",
            "d) Process Pipeline"
        ],
        "Answer": " Answer: a\nExplanation: These patterns can be combined and you will often see more than one of them in a single system."
    },
    {
        "id": 481,
        "Question": "A monitoring system examines its environment through",
        "Options": [
            "a) operating system",
            "b) communication",
            "c) set of sensors",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If some exceptional event or sensor state is detected by the system, the monitoring system takes some action. Often, this involves raising an alarm to draw an operator’s attention to the event."
    },
    {
        "id": 482,
        "Question": "Which of the following is applicable on software radio?",
        "Options": [
            "a) Environmental Control",
            "b) Process Pipeline",
            "c) Distributed system",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: A software radio accepts incoming packets of digital data representing the radio transmission and transforms these into a sound signal that people can listen to."
    },
    {
        "id": 483,
        "Question": "An example of a system that may use a process pipeline is a high-speed",
        "Options": [
            "a) data distributing system",
            "b) data acquisition system",
            "c) data collector system",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Data acquisition systems collect data from sensors for subsequent processing and analysis."
    },
    {
        "id": 484,
        "Question": "Which of the following is an example of a controller for a car braking system?",
        "Options": [
            "a) Observe and React",
            "b) Process Pipeline",
            "c) Environmental Control",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A monitoring system examines its environment through a set of sensors and, usually, displays the state of the environment in some way."
    },
    {
        "id": 485,
        "Question": "ETL stands for",
        "Options": [
            "a) Data Extraction Transformation & Loading",
            "b) Data Execution Transformation & Loading",
            "c) Extraction Transformation & Loading",
            "d) Execution Transformation & Loading"
        ],
        "Answer": " Answer: d\nExplanation: An anti-skid braking system in a car monitors the car’s wheels and brake system ."
    },
    {
        "id": 486,
        "Question": "Control systems may make use of the Environmental Control pattern, which is a general control pattern that includes _________processes.",
        "Options": [
            "a) sensor",
            "b) actuator",
            "c) pipeline",
            "d) both sensor and actuator"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 487,
        "Question": "________ can be associated with a separate processor or core, so that the processing steps can be carried out in parallel.",
        "Options": [
            "a) Process Pipeline",
            "b) Environmental Control",
            "c) Observe and React",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Such patterns are quite common in Environmental Control Systems."
    },
    {
        "id": 488,
        "Question": "Which of the following examples is/are models of application architectures?",
        "Options": [
            "a) a means of assessing components for reuse",
            "b) a design checklist",
            "c) a vocabulary for talking about types of applications",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Application architectures encapsulate the principal characteristics of a class of systems. "
    },
    {
        "id": 489,
        "Question": "ERP stands for",
        "Options": [
            "a) Enterprise Research Planning",
            "b) Enterprise Resource Planning",
            "c) Enterprise Resource Package",
            "d) Enterprise Research Package"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 490,
        "Question": "Which of the following type describes application architectures?",
        "Options": [
            "a) Transaction processing applications",
            "b) Language processing systems",
            "c) Client management systems",
            "d) Transaction processing applications and Language processing systems"
        ],
        "Answer": " Answer: d\nExplanation: Transaction processing applications are database-centered applications that process user requests for information and update the information in a database, while language processing systems are systems in which the user’s intentions are expressed in a formal language."
    },
    {
        "id": 491,
        "Question": "All the operations in a transaction need to be completed before the database changes are made ________",
        "Options": [
            "a) functional",
            "b) available to the users",
            "c) permanent",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: This ensures that failure of operations within the transaction does not lead to inconsistencies in the database."
    },
    {
        "id": 492,
        "Question": "Systems that involve interaction with a shared database can be considered as.",
        "Options": [
            "a) software-based",
            "b) transaction-based",
            "c) server-based",
            "d) client-based"
        ],
        "Answer": " Answer: b\nExplanation: Such systems with a shared database are also referred to as transaction based information systems."
    },
    {
        "id": 493,
        "Question": "What translates a natural or an artificial language into another representation of that language and, for programming languages also execute the resulting code?",
        "Options": [
            "a) ERP systems",
            "b) Transaction-based information systems",
            "c) Language processing systems",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: In software engineering, compilers translate an artificial programming language into machine code."
    },
    {
        "id": 494,
        "Question": "Which of the following is/are commonly used architectural pattern(s)?",
        "Options": [
            "a) Model-View-Controller",
            "b) Layered Architecture",
            "c) Client–server",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Properties such as performance, security, and availability are influenced by the architecture used."
    },
    {
        "id": 495,
        "Question": "A language-processing systems may translate an XML data description into",
        "Options": [
            "a) a machine code",
            "b) an alternative XML representation",
            "c) machine code and alternative XML representation",
            "d) a software module"
        ],
        "Answer": " Answer: d\nExplanation: Commonly used architectural patterns include Model-View-Controller, Layered Architecture, Repository, Client–server, and Pipe and Filter. "
    },
    {
        "id": 496,
        "Question": "Transaction processing systems may be organized as a _________ architecture with system components responsible for input, processing, and output.",
        "Options": [
            "a) Repository",
            "b) Client–server",
            "c) Model-View-Controller",
            "d) Pipe and Filter"
        ],
        "Answer": " Answer: c\nExplanation: Such is the property and function of language processing system."
    },
    {
        "id": 497,
        "Question": "At Conceptual level Class diagrams should include",
        "Options": [
            "a) operations only",
            "b) attributes only",
            "c) both operations and attributes",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The Unified Modeling Language includes a set of graphic notation techniques to create visual models of object-oriented software-intensive systems."
    },
    {
        "id": 498,
        "Question": "Select the statement true for activity diagrams.",
        "Options": [
            "a) They can be used to discover parallel activities",
            "b) They are used to depict workflow for a particular business activity",
            "c) Activity diagram do not tell who does what and are difficult to trace back to object models",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In software engineering, a class diagram in the Unified Modeling Language (UML) is a type of static structure diagram that describes the structure of a system by showing the system’s classes, their attributes, operations, and the relationships among objects."
    },
    {
        "id": 499,
        "Question": "Constraints can be represented in UML by",
        "Options": [
            "a) {text}",
            "b) [text].",
            "c) Constraint",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Activity diagrams are graphical representations of workflows of step wise activities and actions with support for choice, iteration and concurrency."
    },
    {
        "id": 500,
        "Question": "What is an object?",
        "Options": [
            "a) An object is an instance of a class",
            "b) An object includes encapsulation of data",
            "c) An object is not an instance of a class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Constraints are represented by {text string}."
    },
    {
        "id": 501,
        "Question": "What is an abstract class?",
        "Options": [
            "a) A class that has direct instances, but whose descendants may have direct instances",
            "b) A class that has direct instances, but whose descendants may not have direct instances",
            "c) A class that has no direct instances, but whose descendants may have direct instances",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: An object is an instance of a class."
    },
    {
        "id": 502,
        "Question": "Which of the following are the valid relationships in Use Case Diagrams",
        "Options": [
            "a) Generalization",
            "b) Include",
            "c) Extend",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: An abstract type is a type in a nominative type system which cannot be instantiated directly."
    },
    {
        "id": 503,
        "Question": "Which of the following statement(s) is true about interaction diagrams?",
        "Options": [
            "a) Interaction diagrams are at their best when they deal with one main design flow and not multiple variants that can happen",
            "b) Interaction diagrams are good at designing part or all of one use case’s functionality across multiple objects",
            "c) Interaction diagrams allow the analyst to show iteration and conditional execution for messaging between objects",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Generalization, include, extend all of these are valid relationships in use case diagrams."
    },
    {
        "id": 504,
        "Question": "UML interfaces are used to:",
        "Options": [
            "a) specify required services for types of objects",
            "b) program in Java, but not in C++ or Smalltalk",
            "c) define executable logic to reuse across classes",
            "d) define an API for all classes"
        ],
        "Answer": " Answer: d\nExplanation: Interaction diagram is used to describe some type of interactions among the different elements in the model. So this interaction is a part of dynamic behaviour of the system."
    },
    {
        "id": 505,
        "Question": "Referring to the attached diagram, the arrow indicates:",
        "Options": [
            "a) Navigability",
            "b) Dependency",
            "c) Association",
            "d) Refers to"
        ],
        "Answer": " Answer: a\nExplanation: An interface is like a template design for a class that contains no data or implementation; only definitions for methods, properties etc."
    },
    {
        "id": 506,
        "Question": "Which of the following is a building block of UML?",
        "Options": [
            "a) Things",
            "b) Relationships",
            "c) Diagrams",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All are the building blocks of UML which are further sub-categorized."
    },
    {
        "id": 507,
        "Question": "Classes and interfaces are a part of",
        "Options": [
            "a) Structural things",
            "b) Behavioral things",
            "c) Grouping things",
            "d) Annotational things"
        ],
        "Answer": " Answer: a\nExplanation: Structural things are mostly static parts of a model, representing elements that are either conceptual or physical."
    },
    {
        "id": 508,
        "Question": "3.What is a collection of operations that specify a service of a class or component?",
        "Options": [
            "a) Use Case",
            "b) Actor",
            "c) Interface",
            "d) Relationship"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 509,
        "Question": "What is a physical element that exists at runtime in UML?",
        "Options": [
            "a) A node",
            "b) An interface",
            "c) An activity",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A node represents a computational resource."
    },
    {
        "id": 510,
        "Question": "What can be requested from any object of the class to affect behavior?",
        "Options": [
            "a) object",
            "b) attribute",
            "c) operation",
            "d) instance"
        ],
        "Answer": " Answer: c\nExplanation: An operation is the implementation of a service that can be requested from any object of the class to affect behavior."
    },
    {
        "id": 511,
        "Question": "Which things are dynamic parts of UML models?",
        "Options": [
            "a) Structural things",
            "b) Behavioral things",
            "c) Grouping things",
            "d) Annotational things"
        ],
        "Answer": " Answer: b\nExplanation: These are the verbs of a model, representing behavior over time and space."
    },
    {
        "id": 512,
        "Question": "Which diagram in UML emphasizes the time-ordering of messages?",
        "Options": [
            "a) Activity",
            "b) Sequence",
            "c) Collaboration",
            "d) Class"
        ],
        "Answer": " Answer: b\nExplanation: This diagram is a model describing how groups of objects collaborate in some behavior over time."
    },
    {
        "id": 513,
        "Question": "If you are working on real-time process control applications or systems that involve concurrent processing, you would use a",
        "Options": [
            "a) Activity diagram",
            "b) Sequence diagram",
            "c) Statechart diagram",
            "d) Object diagram"
        ],
        "Answer": " Answer: b\nExplanation: Sequence Diagram is responsible for this."
    },
    {
        "id": 514,
        "Question": "Which diagram shows the configuration of run-time processing elements?",
        "Options": [
            "a) Deployment diagram",
            "b) Component diagram",
            "c) Node diagram",
            "d) ER-diagram"
        ],
        "Answer": " Answer: c\nExplanation: A statechart diagram shows a state machine, consisting of states, transitions, events, and activities."
    },
    {
        "id": 515,
        "Question": "Which things in UML are the explanatory parts of UML models?",
        "Options": [
            "a) Structural things",
            "b) Behavioral things",
            "c) Grouping things",
            "d) Annotational things"
        ],
        "Answer": " Answer: a\nExplanation: A Deployment diagram shows the configuration of run-time processing elements and the software components, processes, and objects."
    },
    {
        "id": 516,
        "Question": "Which of the following term is best defined by the statement:”a structural relationship that specifies that objects of one thing are connected to objects of another”?",
        "Options": [
            "a) Association",
            "b) Aggregation",
            "c) Realization",
            "d) Generalization"
        ],
        "Answer": " Answer: d\nExplanation: It include a note which is simply a symbol for rendering constraints and comments attached to an element or a collection of elements."
    },
    {
        "id": 517,
        "Question": "What refers to the value associated with a specific attribute of an object and to any actions or side?",
        "Options": [
            "a) Object",
            "b) State",
            "c) Interface",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 518,
        "Question": "Which of the following UML diagrams has a static view?",
        "Options": [
            "a) Collaboration",
            "b) Use case",
            "c) State chart",
            "d) Activity"
        ],
        "Answer": " Answer: b\nExplanation: A use case diagrams captures only the functionality of the system whereas a dynamic model/view captures the functions as well as the action."
    },
    {
        "id": 519,
        "Question": "Which diagram in UML shows a complete or partial view of the structure of a modeled system at a specific time?",
        "Options": [
            "a) Sequence Diagram",
            "b) Collaboration Diagram",
            "c) Class Diagram",
            "d) Object Diagram"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 520,
        "Question": "Interaction Diagram is a combined term for",
        "Options": [
            "a) Sequence Diagram + Collaboration Diagram",
            "b) Activity Diagram + State Chart Diagram",
            "c) Deployment Diagram + Collaboration Diagram",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The figure is self explanatory. A component is a modular, significant and replaceable part of the system that packages implementation and exposes a set of interfaces. "
    },
    {
        "id": 521,
        "Question": "Which of the following diagram is time oriented?",
        "Options": [
            "a) Collaboration",
            "b) Sequence",
            "c) Activity",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  b\nExplanation: The generalization relationship is also known as the inheritance relationship. In the figure Square is the subclass of superclass shape."
    },
    {
        "id": 522,
        "Question": "How many diagrams are here in Unified Modelling Language?",
        "Options": [
            "a) six",
            "b) seven",
            "c) eight",
            "d) nine"
        ],
        "Answer": " Answer: d\nExplanation: The nine UML diagrams include use-case, sequence, collaboration, activity, state-chart, deployment, class, object and component."
    },
    {
        "id": 523,
        "Question": "Which of the following is not needed to develop a system design from concept to detailed object-oriented design?",
        "Options": [
            "a) Designing system architecture",
            "b) Developing design models",
            "c) Specifying interfaces",
            "d) Developing a debugging system"
        ],
        "Answer": " Answer: d\nExplanation: The debugging system is a part of testing phase."
    },
    {
        "id": 524,
        "Question": "Which of the following is a dynamic model that shows how the system interacts with its environment as it is used?",
        "Options": [
            "a) system context model",
            "b) interaction model",
            "c) environmental model",
            "d) both system context and interaction"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 525,
        "Question": "Which of the following is a structural model that demonstrates the other systems in the environment of the system being developed?",
        "Options": [
            "a) system context model",
            "b) interaction model",
            "c) environmental model",
            "d) both system context and interaction"
        ],
        "Answer": " Answer: a\nExplanation: The context model of a system may be represented using associations. Associations simply show that there are some relationships between the entities involved in the association."
    },
    {
        "id": 526,
        "Question": "Which of the following come under system control?",
        "Options": [
            "a) Reconfigure",
            "b) Shutdown",
            "c) Powersave",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  Functionalities are governed by the system."
    },
    {
        "id": 527,
        "Question": "We use _________ where various parts of system use are identified and analyzed in turn.",
        "Options": [
            "a) tangible entities",
            "b) scenario-based analysis",
            "c) design-based analysis",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Use a scenario-based analysis where various scenarios of system use are identified and analyzed in turn. "
    },
    {
        "id": 528,
        "Question": "Which model describes the static structure of the system using object classes and their relationships?",
        "Options": [
            "a) Sequence model",
            "b) Subsystem model",
            "c) Dynamic model",
            "d) Structural model"
        ],
        "Answer": " Answer: d\nExplanation: Important relationships that may be documented at this stage are generalization (inheritance) relationships, uses/used-by relationships, and composition relationships."
    },
    {
        "id": 529,
        "Question": "Which model shows the flow of object interactions?",
        "Options": [
            "a) Sequence model",
            "b) Subsystem model",
            "c) Dynamic model",
            "d) Both Sequence and Dynamic model"
        ],
        "Answer": " Answer: a\nExplanation: Sequence model are represented using a UML sequence or a collaboration diagram and are dynamic models."
    },
    {
        "id": 530,
        "Question": "If the system state is Shutdown then it can respond to which of the following message?",
        "Options": [
            "a) restart()",
            "b) reconfigure()",
            "c) powerSave()",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A restart() message causes a transition to normal operation. Both the powerSave() and reconfigure() messages cause a transition to a state in which the system reconfigures itself."
    },
    {
        "id": 531,
        "Question": "Which message is received so that the system moves to the Testing state, then the Transmitting state, before returning to the Running state?",
        "Options": [
            "a) signalStatus()",
            "b) remoteControl()",
            "c) reconfigure()",
            "d) reportStatus()"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 532,
        "Question": "Which of the following is not the primary objectives in the analysis model?",
        "Options": [
            "a) describing the customer complaints",
            "b) establishing a basis for the creation of a software design",
            "c) defining a set of requirements that can be validated once the software is built",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options are covered in analysis model. "
    },
    {
        "id": 533,
        "Question": "A description of each function presented in the DFD is contained in a ________",
        "Options": [
            "a) data flow",
            "b) process specification",
            "c) control specification",
            "d) data store"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 534,
        "Question": "Which diagram indicates the behaviour of the system as a consequence of external events?",
        "Options": [
            "a) data flow diagram",
            "b) state transition diagram",
            "c) control specification diagram",
            "d) workflow diagram"
        ],
        "Answer": " Answer: b\nExplanation: The state transition diagram represents the various modes of behavior (called states) of the system and the manner in which transitions are made from state to state."
    },
    {
        "id": 535,
        "Question": "A data model contains",
        "Options": [
            "a) data object",
            "b) attributes",
            "c) relationships",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  The data model consists of three interrelated pieces of information: the data object,\nthe attributes that describe the data object, and the relationships that connect data objects to one another."
    },
    {
        "id": 536,
        "Question": "_________ defines the properties of a data object and take on one of the three different characteristics.",
        "Options": [
            "a) data object",
            "b) attributes",
            "c) relationships",
            "d) data object and attributes"
        ],
        "Answer": " Answer: b\nExplanation: They can be used to name an instance of the data object, describe the instance, or  make reference to another instance in another table."
    },
    {
        "id": 537,
        "Question": "The __________ of a relationship is 0 if there is no explicit need for the relationship to occur or the relationship is optional.",
        "Options": [
            "a) modality",
            "b) cardinality",
            "c) entity",
            "d) structured analysis"
        ],
        "Answer": " Answer: a\nExplanation: The modality is 1 if an occurrence of the relationship is mandatory, else 0 for optional relationship."
    },
    {
        "id": 538,
        "Question": "A _________ is a graphical representation that depicts information flow and the transforms that are applied as data moves from input to output.",
        "Options": [
            "a) data flow diagram",
            "b) state transition diagram",
            "c) control specification",
            "d) workflow diagram"
        ],
        "Answer": " Answer: b\nExplanation: The basic form of a data flow diagram, also known as a data flow graph or a bubble chart."
    },
    {
        "id": 539,
        "Question": "The __________ enables the software engineer to develop models of the information domain and functional domain at the same time",
        "Options": [
            "a) data flow diagram",
            "b) state transition diagram",
            "c) control specification",
            "d) activity diagram"
        ],
        "Answer": " Answer: a\nExplanation: Standard flow of condition check. "
    },
    {
        "id": 540,
        "Question": "The __________ contains a state transition diagram that is a sequential specification of behavior.",
        "Options": [
            "a) data flow diagram",
            "b) state transition diagram",
            "c) control specification",
            "d) workflow diagram"
        ],
        "Answer": " Answer: a\nExplanation: As the DFD is refined into greater levels of detail, the analyst performs an implicit functional decomposition of the system, thereby accomplishing the fourth operational analysis principle for function."
    },
    {
        "id": 541,
        "Question": "Which of the following is not a construct?",
        "Options": [
            "a) sequence",
            "b) condition",
            "c) repetition",
            "d) selection"
        ],
        "Answer": " Answer: d\nExplanation:  Sequence implements processing steps that are essential in the specification of any algorithm. Condition provides the facility for selected processing based on some logical occurrence, and repetition allows for looping. "
    },
    {
        "id": 542,
        "Question": "2.Which of the following steps is applied to develop a decision table?",
        "Options": [
            "a) List all actions that can be associated with a specific procedure",
            "b) List all conditions during execution of the procedure",
            "c) Define rules by indicating what action(s) occurs for a set of conditions",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  A decision table includes action stub and a condition stub with a set of rules."
    },
    {
        "id": 543,
        "Question": "_________ is a pidgin(simplified version of a language that develops as a means of communication between two or more groups that do not have a language in common)",
        "Options": [
            "a) program design language",
            "b) structured English",
            "c) pseudocode",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The difference between PDL and a real programming language lies in the use of narrative text embedded directly within PDL statements."
    },
    {
        "id": 544,
        "Question": "Which of the following term is best defined by the statement:”The ability to represent local and global data is an essential element of component-level design.”?",
        "Options": [
            "a) Data representation",
            "b) Logic verification",
            "c) “Code-to” ability",
            "d) Automatic processing"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 545,
        "Question": "A software component",
        "Options": [
            "a) Implements some functionality",
            "b) Has explicit dependencies through provides and required interfaces",
            "c) Communicates through its interfaces only",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options identify with features of a software component."
    },
    {
        "id": 546,
        "Question": "Which diagram evolved from a desire to develop a procedural design representation that would not allow violation of the structured constructs?",
        "Options": [
            "a) State transition diagram",
            "b) Box diagram",
            "c) ER diagram",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 547,
        "Question": "A __________ executes the loop task first, then tests a condition and repeats the task until the condition fails.",
        "Options": [
            "a) repeat until",
            "b) condition",
            "c) do while tests",
            "d) if then-else"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 548,
        "Question": "Which of the following is not a characteristics of box diagram?",
        "Options": [
            "a) functional domain",
            "b) arbitrary transfer of control is impossible",
            "c) recursion is easy to represent",
            "d) providing a notation that translates actions and conditions"
        ],
        "Answer": " Answer: d\nExplanation: This functionality is covered by UML diagrams. "
    },
    {
        "id": 549,
        "Question": "The________ is represented as two processing boxes connected by an line (arrow) of control.",
        "Options": [
            "a) Repetition",
            "b) Sequence",
            "c) Condition",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 550,
        "Question": "Which of the following term is best defined by the statement “Notation that can be input directly into a computer-based development system offers significant benefits.”?",
        "Options": [
            "a) Machine readability",
            "b) Maintainability",
            "c) Structure enforcement",
            "d) Overall simplicity"
        ],
        "Answer": " Answer: a\nExplanation: Readability is processing input."
    },
    {
        "id": 551,
        "Question": "Which of the following is golden rule for interface design?",
        "Options": [
            "a) Place the user in control",
            "b) Reduce the user’s memory load",
            "c) Make the interface consistent",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: These golden rules actually form the basis for a set of user interface design principles that guide this important software design activity. "
    },
    {
        "id": 552,
        "Question": "Which of the following is not a design principle that allow the user to maintain control?",
        "Options": [
            "a) Provide for flexible interaction",
            "b) Allow user interaction to be interrupt-able and undo-able",
            "c) Show technical internals from the casual user",
            "d) Design for direct interaction with objects that appear on the screen"
        ],
        "Answer": " Answer: c\nExplanation: The user interface should move the user into the virtual world of the application."
    },
    {
        "id": 553,
        "Question": "Which of the following is not a user interface design process?",
        "Options": [
            "a) User, task, and environment analysis and modeling",
            "b) Interface design",
            "c) Knowledgeable, frequent users",
            "d) Interface validation"
        ],
        "Answer": " Answer: c\nExplanation: These are the end user for whom the product is being built."
    },
    {
        "id": 554,
        "Question": "When users are involved in complex tasks, the demand on __________ can be significant.",
        "Options": [
            "a) short-term memory",
            "b) shortcuts",
            "c) objects that appear on the screen",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The interface should be designed to reduce the requirement to remember past actions and results."
    },
    {
        "id": 555,
        "Question": "Which of the following option is not considered by the Interface design?",
        "Options": [
            "a) the design of interfaces between software components",
            "b) the design of interfaces between the software and human producers and consumers of information",
            "c) the design of the interface between two computers",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None"
    },
    {
        "id": 556,
        "Question": "A software might allow a user to interact via",
        "Options": [
            "a) keyboard commands",
            "b) mouse movement",
            "c) voice recognition commands",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the mentioned input mediums are available today."
    },
    {
        "id": 557,
        "Question": "What incorporates data, architectural, interface, and procedural representations of the software?",
        "Options": [
            "a) design model",
            "b) user’s model",
            "c) mental image",
            "d) system image"
        ],
        "Answer": " Answer: a\nExplanation: The statement is true."
    },
    {
        "id": 558,
        "Question": "What establishes the profile of end-users of the system?",
        "Options": [
            "a) design model",
            "b) user’s model",
            "c) mental image",
            "d) system image"
        ],
        "Answer": " Answer: a\nExplanation: The requirements specification may establish certain constraints that help to define the user of the system, but the interface design is often only incidental to the design model. "
    },
    {
        "id": 559,
        "Question": "What combines the outward manifestation of the computer-based system , coupled with all supporting information that describe system syntax and semantics?",
        "Options": [
            "a) mental image",
            "b) interface design",
            "c) system image",
            "d) interface validation"
        ],
        "Answer": " Answer: b\nExplanation: To build an effective user interface, all design should begin with an understanding of the intended users, including their profiles of their age, physical abilities, education, etc."
    },
    {
        "id": 560,
        "Question": "What do you understand by V&V in software testing?",
        "Options": [
            "a) Verified Version",
            "b) Version Validation",
            "c) Verification and Validation",
            "d) Version Verification"
        ],
        "Answer": " Answer: c\nExplanation: V&V generally refers to any activity that attempts to ensure that the software will function as required."
    },
    {
        "id": 561,
        "Question": "Which granularity level of testing checks the behavior of module cooperation?",
        "Options": [
            "a) Unit Testing",
            "b) Integration Testing",
            "c) Acceptance Testing",
            "d) Regression Testing"
        ],
        "Answer": " Answer: b\nExplanation: Static Analysis Techniques are based solely on the (manual or automated) examination of project documentation of software models and code."
    },
    {
        "id": 562,
        "Question": "Which test refers to the retesting of a unit, integration and system after modification, in order to ascertain that the change has not introduced new faults?",
        "Options": [
            "a) Regression Test",
            "b) Smoke Test",
            "c) Alpha Test",
            "d) Beta Test"
        ],
        "Answer": " Answer: b\nExplanation: Integration testing is the phase in software testing in which individual software modules are combined and tested as a group."
    },
    {
        "id": 563,
        "Question": "Which of the following is a black box testing strategy?",
        "Options": [
            "a) All Statements Coverage",
            "b) Control Structure Coverage",
            "c) Cause-Effect Graphs",
            "d) All Paths Coverage"
        ],
        "Answer": " Answer: a\nExplanation: Regression test seeks to uncover new software bugs in existing functional and non-functional areas of a system after changes have been made to them."
    },
    {
        "id": 564,
        "Question": "A set of inputs, execution preconditions and expected outcomes is known as a",
        "Options": [
            "a) Test plan",
            "b) Test case",
            "c) Test document",
            "d) Test Suite"
        ],
        "Answer": " Answer: c\nExplanation: Rest are test strategies of white box testing."
    },
    {
        "id": 565,
        "Question": "In which test design each input is tested at both ends of its valid range and just outside its valid range?",
        "Options": [
            "a) Boundary value testing",
            "b) Equivalence class partitioning",
            "c) Boundary value testing AND Equivalence class partitioning",
            "d) Decision tables"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 566,
        "Question": "When does the testing process stops?",
        "Options": [
            "a) When resources (time and budget) are over",
            "b) When some coverage is reached",
            "c) When quality criterion is reached",
            "d) Testing never ends"
        ],
        "Answer": " Answer: a\nExplanation: Boundary value analysis is a software testing technique in which tests are designed to include representatives of boundary values."
    },
    {
        "id": 567,
        "Question": "Which of the following is not a part of a test design document?",
        "Options": [
            "a) Test Plan",
            "b) Test Design Specification",
            "c) Test Case Specification",
            "d) Test Log"
        ],
        "Answer": " Answer: b\nExplanation: A white box test is mostly applicable at unit and integration testing level."
    },
    {
        "id": 568,
        "Question": "Specifying a set of test cases or test paths for each item to be tested at that level is known as",
        "Options": [
            "a) Test case generation",
            "b) Test case design",
            "c) ALL of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: As software testing is an exhaustive process, when the quality assurance is established and the product is ready to be delivered, testing is stopped."
    },
    {
        "id": 569,
        "Question": "PRD stands for",
        "Options": [
            "a) Product Requirement Document",
            "b) Project Requirement Document",
            "c) Product Restrictions Document",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Test log is a part of testing result document."
    },
    {
        "id": 570,
        "Question": "Which mechanism is applied to use a design pattern in an OO system?",
        "Options": [
            "a) Inheritance",
            "b) Composition",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Using inheritance, an existing design pattern becomes a template for a new subclass.Composition is a concept that leads to aggregate objects."
    },
    {
        "id": 571,
        "Question": "The use of design patterns for the development of object-oriented software has important implications for",
        "Options": [
            "a) Component-based software engineering",
            "b) Reusability in general",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Design patterns allow the designer to create the system architecture by integrating reusable components."
    },
    {
        "id": 572,
        "Question": "Which of the following is a design pattern?",
        "Options": [
            "a) Behavioral",
            "b) Structural",
            "c) Abstract Factory",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 573,
        "Question": "You want to minimize development cost by reusing methods? Which design pattern would you choose?",
        "Options": [
            "a) Adapter Pattern",
            "b) Singleton Pattern",
            "c) Delegation pattern",
            "d) Immutable Pattern"
        ],
        "Answer": " Answer: d\nExplanation: All the options are design patterns so option d."
    },
    {
        "id": 574,
        "Question": "You want to avoid multiple inheritance. Which design pattern would you choose?",
        "Options": [
            "a) Abstraction-Occurrence Pattern",
            "b) Player-Role Pattern",
            "c) General Hierarchy Pattern",
            "d) Singleton Pattern"
        ],
        "Answer": " Answer: c\nExplanation: The delegation pattern is a design pattern in OOP where an object, instead of performing one of its stated tasks, delegates that task to an associated helper object."
    },
    {
        "id": 575,
        "Question": "The recurring aspects of designs are called design",
        "Options": [
            "a) patterns",
            "b) documents",
            "c) structures",
            "d) methods"
        ],
        "Answer": " Answer: b\nExplanation: The answer is self-explanatory."
    },
    {
        "id": 576,
        "Question": "Which pattern prevents one from creating more than one instance of a variable?",
        "Options": [
            "a) Factory Method",
            "b) Singleton",
            "c) Observer",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A pattern is the outline of a reusable solution to a general problem encountered in a particular context."
    },
    {
        "id": 577,
        "Question": "Which design pattern defines one-to-many dependency among objects?",
        "Options": [
            "a) Singleton pattern",
            "b) Facade Pattern",
            "c) Observer pattern",
            "d) Factory method pattern"
        ],
        "Answer": " Answer: a\nExplanation: Each design pattern has a name and use of each pattern has consequences."
    },
    {
        "id": 578,
        "Question": "In factory method pattern, the framework must instantiate classes but it only knows about the abstract classes, which it cannot initiate. How would one solve this problem?",
        "Options": [
            "a) encapsulating the knowledge of which document subclass to is to be created and",
            "b) moving this knowledge out of the framework",
            "c) instantiating the application specific documents without knowing their class",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In singleton pattern, the class itself is made responsible for keeping track of its instance.Thus it ensures that no more than one instance is created."
    },
    {
        "id": 579,
        "Question": "The open source movement has meant that there is a huge reusable code base available at",
        "Options": [
            "a) free of cost",
            "b) low cost",
            "c) high cost",
            "d) short period of time"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 580,
        "Question": "Consider the example and categorize it accordingly, “A pattern-matching system developed as part of a text-processing system may be reused in a database management system”.",
        "Options": [
            "a) Application system reuse",
            "b) Component reuse",
            "c) Object and function reuse",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The open source movement has meant that there is a huge reusable code base available at low cost. This may be in the form of program libraries or entire applications."
    },
    {
        "id": 581,
        "Question": "COTS stands for",
        "Options": [
            "a) Commercial Off-The-Shelf systems",
            "b) Commercial Off-The-Shelf states",
            "c) Commercial Off-The-System state",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Components of an application, ranging in size from subsystems to single objects, may be reused."
    },
    {
        "id": 582,
        "Question": "COTS product reuse means",
        "Options": [
            "a) Class and function libraries that implement commonly used abstractions are available for reuse",
            "b) Shared components are woven into an application at different places when the program is compiled",
            "c) Large-scale systems that encapsulate generic business functionality and rules are configured for an organization",
            "d) Systems are developed by configuring and integrating existing application systems"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 583,
        "Question": ".NET are specific to which platform?",
        "Options": [
            "a) Java",
            "b) Mac-OS",
            "c) Microsoft",
            "d) LINUX"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 584,
        "Question": "Which of the following is a generic structure that is extended to create a more specific subsystem or application?",
        "Options": [
            "a) Software reuse",
            "b) Object-oriented programming language",
            "c) Framework",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: NET Framework (pronounced dot net) is a software framework developed by Microsoft that runs primarily on Microsoft Windows."
    },
    {
        "id": 585,
        "Question": "“An ordering system may be adapted to cope with a centralized ordering process in one company and a distributed process in another.” Which category the example belong to?",
        "Options": [
            "a) Process specialization",
            "b) Platform specialization",
            "c) Environment specialization",
            "d) Functional specialization"
        ],
        "Answer": " Answer: c\nExplanation: Frameworks are implemented as a collection of concrete and abstract object classes in an object-oriented programming language."
    },
    {
        "id": 586,
        "Question": "What are generic application systems that may be designed to support a particular business type, activity, or sometimes a complete enterprise?",
        "Options": [
            "a) COTS-solution systems",
            "b) COTS-integrated systems",
            "c) ERP systems",
            "d) Both COTS-solution and COTS-integrated systems"
        ],
        "Answer": " Answer: a\nExplanation: In process specialization, the system is adapted to cope with specific business processes."
    },
    {
        "id": 587,
        "Question": "Which of the following is not an advantages of software reuse?",
        "Options": [
            "a) lower costs",
            "b) faster software development",
            "c) high effectiveness",
            "d) lower risks"
        ],
        "Answer": " Answer: a\nExplanation: None "
    },
    {
        "id": 588,
        "Question": "ERP stands for",
        "Options": [
            "a) Effective Reuse Planning",
            "b) Enterprise Resource Planning",
            "c) Effective Research Planning",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Effectiveness depends on how one reuses the existing product."
    },
    {
        "id": 589,
        "Question": "Which framework class include standards and classes that support component communication and information exchange?",
        "Options": [
            "a) System infrastructure frameworks",
            "b) Middleware integration frameworks",
            "c) Enterprise application frameworks",
            "d) MVC"
        ],
        "Answer": " Answer: b\nExplanation: Enterprise Resource Planning systems are examples of large-scale COTS reuse."
    },
    {
        "id": 590,
        "Question": "Which of the following is not a benefit of software reuse?",
        "Options": [
            "a) Standards compliance",
            "b) Increased Reliability",
            "c) Reduced Process risk",
            "d) Maintaining a component library"
        ],
        "Answer": " Answer: c\nExplanation: There can be thousands of components in a frameworks whose maintenance is quite difficult. "
    },
    {
        "id": 591,
        "Question": "In which of the following language the frameworks will not work?",
        "Options": [
            "a) C#",
            "b) Ruby",
            "c) PHP",
            "d) Java"
        ],
        "Answer": " Answer: c\nExplanation: Frameworks available in all of the commonly used object-oriented programming languages."
    },
    {
        "id": 592,
        "Question": "Which frameworks support the development of system infrastructures such as communications, user interfaces, and compilers?",
        "Options": [
            "a) Middleware integration frameworks",
            "b) System infrastructure framework",
            "c) Enterprise application frameworks",
            "d) Web application frameworks"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 593,
        "Question": "The MVC pattern was originally proposed in the 1980s as an approach to",
        "Options": [
            "a) Web application frameworks",
            "b) Middleware integration frameworks",
            "c) Web application frameworks",
            "d) GUI design"
        ],
        "Answer": " Answer: d\nExplanation: The MVC pattern was originally proposed in the 1980s as an approach to GUI design that allowed for multiple presentations of an object and separate styles of interaction with each of these presentations."
    },
    {
        "id": 594,
        "Question": "MVC framework includes",
        "Options": [
            "a) Observer pattern",
            "b) Strategy pattern",
            "c) Composite pattern",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: MVC framework includes the Observer pattern, the Strategy pattern, the Composite pattern, and a number of others ."
    },
    {
        "id": 595,
        "Question": "Which category the following statement belongs,”Classes to create and manage sessions are usually part of a WAF”?",
        "Options": [
            "a) Session management",
            "b) Security",
            "c) User interaction",
            "d) Database support"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 596,
        "Question": "Which framework’s applications are difficult to deal with?",
        "Options": [
            "a) MVC pattern",
            "b) Web application frameworks",
            "c) Debugging framework",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Debugging framework based applications is difficult because you may not understand how the framework methods interact. This is a general problem with reusable software ."
    },
    {
        "id": 597,
        "Question": "Which category the following statement belongs,”Frameworks don’t usually include a database but rather assume that a separate database such as MySQl”?",
        "Options": [
            "a) Session management",
            "b) Security",
            "c) User interaction",
            "d) Database support"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 598,
        "Question": "Which option supports the statement:”Most web frameworks now provide AJAX support”?",
        "Options": [
            "a) Session Management",
            "b) Security",
            "c) User interaction",
            "d) Database support"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 599,
        "Question": "Frameworks are an effective approach to reuse, but are _________ to introduce into software development processes.",
        "Options": [
            "a) difficult",
            "b) expensive",
            "c) unreliable",
            "d) difficult and expensive"
        ],
        "Answer": " Answer: d\nExplanation: Frameworks can be difficult and expensive to evaluate available frameworks to choose the most appropriate one."
    },
    {
        "id": 600,
        "Question": "Which of the following option is not provided by formal methods?",
        "Options": [
            "a) providing frameworks",
            "b) verifying systems",
            "c) provide investors",
            "d) both providing frameworks and verifying systems"
        ],
        "Answer": " Answer: d\nExplanation: A method is formal if it has a sound mathematical basis, typically given by a formal specification language."
    },
    {
        "id": 601,
        "Question": "___________ are statements that can be interpreted in a number of ways.",
        "Options": [
            "a) Contradictions",
            "b) Ambiguities",
            "c) Vagueness",
            "d) Comments"
        ],
        "Answer": " Answer: a\nExplanation: As the name indicates, these statements may be interpreted differently as per user."
    },
    {
        "id": 602,
        "Question": "What defines the circumstances in which a particular operation is valid?",
        "Options": [
            "a) Contradictions",
            "b) Post-condition",
            "c) Vagueness",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A precondition defines the circumstances in which a particular operation is valid."
    },
    {
        "id": 603,
        "Question": "Which of the following is a way of making a statement about the elements of a set that is true for every member of the set?",
        "Options": [
            "a) Set",
            "b) Sequence",
            "c) Universal quantification",
            "d) Both Set and  Sequence"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 604,
        "Question": "Which of the following occurs often due to the bulkiness of a system specification document?",
        "Options": [
            "a) Contradictions",
            "b) Ambiguities",
            "c) Vagueness",
            "d) Incompleteness"
        ],
        "Answer": " Answer: c\nExplanation: Achieving a high level of precision consistently is an almost impossible task."
    },
    {
        "id": 605,
        "Question": "The _________ of a formal specification language is often based on a syntax that is derived from standard set theory notation and predicate calculus.",
        "Options": [
            "a) semantic domain",
            "b) syntactic domain",
            "c) sequence",
            "d) set"
        ],
        "Answer": " Answer: b\nExplanation: None"
    },
    {
        "id": 606,
        "Question": "Which of the following provides a concise, unambiguous, and consistent method for documenting system requirements?",
        "Options": [
            "a) CMM",
            "b) ISO-9001",
            "c) CASE tools",
            "d) Formal methods"
        ],
        "Answer": " Answer: d\nExplanation: Formal methods provide a concise, unambiguous, and consistent method for documenting system requirements."
    },
    {
        "id": 607,
        "Question": "The ____________ of a specification language indicates how the language represents system requirements.",
        "Options": [
            "a) semantic domain",
            "b) syntactic domain",
            "c) sequence",
            "d) set"
        ],
        "Answer": " Answer: a\nExplanation: For example, a programming language has a set of formal semantics that enables the software developer to specify algorithms that transform input to output."
    },
    {
        "id": 608,
        "Question": "Which of the following is essential for success, when formal methods are used for the first time?",
        "Options": [
            "a) Expert training",
            "b) Consulting",
            "c) Prerequisite knowledge",
            "d) Both Expert training and Consulting"
        ],
        "Answer": " Answer: d\nExplanation: The answer is self-explanatory."
    },
    {
        "id": 609,
        "Question": "Who was first to proposed the Cleanroom philosophy in software engineering ?",
        "Options": [
            "a) Mills",
            "b) Dyer",
            "c) Linger",
            "d) All of the Mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The Cleanroom philosophy was first proposed for software engineering by Mills, Dyer, and Linger during the 1980s. "
    },
    {
        "id": 610,
        "Question": "How does Cleanroom software engineering differs from the conventional and object-oriented views ?",
        "Options": [
            "a) It makes explicit use of statistical quality control",
            "b) It verifies design specification using a mathematically based proof of correctness",
            "c) It relies heavily on statistical use testing to uncover high-impact errors",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 611,
        "Question": "Cleanroom software engineering complies with the operational analysis principles by using a method called known as",
        "Options": [
            "a) box structure specification",
            "b) referential transparency",
            "c) degenerative error correction",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Box structures are descriptions of functions that exhibit properties essential for effective system specification and design."
    },
    {
        "id": 612,
        "Question": "What encapsulates state data and services in a manner that is analogous to objects?",
        "Options": [
            "a) State box",
            "b) Clean box",
            "c) White box",
            "d) Black box"
        ],
        "Answer": " Answer: a\nExplanation: In this specification view, inputs to the state box (stimuli) and outputs (responses) are represented."
    },
    {
        "id": 613,
        "Question": "MTTF stands for",
        "Options": [
            "a) mean-time-to-function",
            "b) mean-time-to-failure",
            "c) manufacture-time-to-function",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 614,
        "Question": "The transition functions that are implied by the state box are defined in",
        "Options": [
            "a) Yellow box",
            "b) Clear box",
            "c) White box",
            "d) Black box"
        ],
        "Answer": " Answer: b\nExplanation: Stated simply, a clear box contains the procedural design for the state box."
    },
    {
        "id": 615,
        "Question": "Which of the following is not included in the certification approach?",
        "Options": [
            "a) Creation of usage scenarios",
            "b) Specific usage file",
            "c) Generation of test cases from the servers end.",
            "d) Reliability"
        ],
        "Answer": " Answer: c\nExplanation: This is a part of testing phase and can be as exhaustive as possible."
    },
    {
        "id": 616,
        "Question": "The __________ specifies the behavior of a system or a part of a system.",
        "Options": [
            "a) Yellow box",
            "b) Clear box",
            "c) White box",
            "d) Black box"
        ],
        "Answer": " Answer: d\nExplanation: The system (or part) responds to specific stimuli (events) by applying a set of transition rules that map the stimulus into a response."
    },
    {
        "id": 617,
        "Question": "Which of the following is required for Certification for cleanroom software engineering?",
        "Options": [
            "a) Sampling model",
            "b) Component model",
            "c) Certification model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 618,
        "Question": "Which of the following Cleanroom process teams develops set of statistical test to exercise software after development?",
        "Options": [
            "a) Specification team",
            "b) Development team",
            "c) Certification team",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  The philosophy focuses on defect avoidance rather than defect removal."
    },
    {
        "id": 619,
        "Question": "Which of the following is a feature of CBSE?",
        "Options": [
            "a) It increases quality",
            "b) CBSE shortens delivery time",
            "c) CBSE increases productivity",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This definition is essentially based on standards so that a software unit that conforms to these standards is a component. "
    },
    {
        "id": 620,
        "Question": "A component model defines standards for",
        "Options": [
            "a) properties",
            "b) methods",
            "c) mechanisms",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: CBSE increases quality, especially evolvability and maintainability. Other options are also favor CBSE."
    },
    {
        "id": 621,
        "Question": "Which of the following is not an example of component technology?",
        "Options": [
            "a) EJB",
            "b) COM+",
            "c) .NET",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The answer is self explanatory."
    },
    {
        "id": 622,
        "Question": "Which of the following term is best defined by the statement:”The operations on each side of the interface have the same name but their parameter types or the number of parameters are different.”?",
        "Options": [
            "a) Parameter incompatibility",
            "b) Operation incompleteness",
            "c) Operation incompatibility",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A component model defines standards for properties individual components must satisfy and methods and mechanisms for composing components."
    },
    {
        "id": 623,
        "Question": "Which of the following term is best defined by the statement: “The names of the operations in the ‘provides’ and ‘requires’ interfaces are different.”?",
        "Options": [
            "a) Parameter incompatibility",
            "b) Operation incompleteness",
            "c) Operation incompatibility",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options supports the implementation, assembly, deployment, execution of components."
    },
    {
        "id": 624,
        "Question": "A _________ defines a set of standards for components, including interface standards, usage standards, and deployment standards.",
        "Options": [
            "a) Component-based software engineering",
            "b) Component composition",
            "c) Component model",
            "d) Component interfaces"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 625,
        "Question": "When composing reusable components that have not been written for your application, you may need to write adaptors or ‘glue code’ to reconcile the different __________",
        "Options": [
            "a) Component modules",
            "b) Component composition",
            "c) Component model",
            "d) Component interfaces"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 626,
        "Question": "10.____________ is a reuse-based approach to defining, implementing, and composing loosely coupled independent components into systems.",
        "Options": [
            "a) Component-based software engineering",
            "b) Component composition",
            "c) Component model",
            "d) Component interfaces"
        ],
        "Answer": " Answer: c\nExplanation: The implementation of the component model provides a set of common services that may be used by all components. "
    },
    {
        "id": 627,
        "Question": "Which of the following term is best defined by the statement “In a distributed system, several processes may operate at the same time on separate computers on the network.”?",
        "Options": [
            "a) Concurrency",
            "b) Openness",
            "c) Resource sharing",
            "d) Fault tolerance"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 628,
        "Question": "Which of the following is not a dimension of scalability?",
        "Options": [
            "a) Size",
            "b) Distribution",
            "c) Manageability",
            "d) Interception"
        ],
        "Answer": " Answer: d\nExplanation: Interception is a communication conception."
    },
    {
        "id": 629,
        "Question": "A distributed system must defend itself against",
        "Options": [
            "a) Modification",
            "b) Interruption",
            "c) Fabrication",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 630,
        "Question": "QoS stands for",
        "Options": [
            "a) Quality of security",
            "b) Quality of system",
            "c) Quality of service",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: QoS is particularly critical when the system is dealing with time-critical data such as sound or video streams."
    },
    {
        "id": 631,
        "Question": "In Java,_________ are comparable with, though not identical to, RPCs.",
        "Options": [
            "a) Remote Method Invocations",
            "b) Operating System",
            "c) Client–server computing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The RMI framework handles the invocation of remote methods in a Java program."
    },
    {
        "id": 632,
        "Question": "_________ depend on there being a clear separation between the presentation of information and the computations that create and process that information.",
        "Options": [
            "a) Master-slave architectures",
            "b) Client–server systems",
            "c) Two-tier client–server architecture",
            "d) Both Master-slave architectures AND Client–server systems"
        ],
        "Answer": " Answer: b\nExplanation: One should design the architecture of distributed client–server systems so that they are structured into several logical layers, with clear interfaces between these layers."
    },
    {
        "id": 633,
        "Question": "Which architecture is used when there is a high volume of transactions to be processed by the server?",
        "Options": [
            "a) Multi-tier client–server architecture",
            "b) Master-slave architecture",
            "c) Distributed component architecture",
            "d) Peer-to-peer architecture"
        ],
        "Answer": " Answer: a\nExplanation: Multi-tier systems may be used when applications need to access and use data from different databases."
    },
    {
        "id": 634,
        "Question": "Which architecture are reliant on middle-ware?",
        "Options": [
            "a) Multi-tier client–server architecture",
            "b) Master-slave architecture",
            "c) Distributed component architecture",
            "d) Peer-to-peer architecture"
        ],
        "Answer": " Answer: c\nExplanation: It allows the system designer to delay decisions on where and how services should be provided."
    },
    {
        "id": 635,
        "Question": "__________ is a way of providing functionality on a remote server with client access through a web browser.",
        "Options": [
            "a) SaaS",
            "b) SOA",
            "c) Configurability",
            "d) Both SaaS and Configurability"
        ],
        "Answer": " Answer: a\nExplanation: The server maintains the user’s data and state during an interaction session. "
    },
    {
        "id": 636,
        "Question": "Which architecture decentralized architectures in which there are no distinguished clients and servers?",
        "Options": [
            "a) Multi-tier client–server architecture",
            "b) Master-slave architecture",
            "c) Distributed component architecture",
            "d) Peer-to-peer architecture"
        ],
        "Answer": " Answer: d\nExplanation: Peer-to-peer (p2p) systems are decentralized systems in which computations may be carried out by any node on the network."
    },
    {
        "id": 637,
        "Question": "Service Oriented Architecture (SOA) is",
        "Options": [
            "a) Strongly Coupled",
            "b) Loosely Coupled",
            "c) Strongly Cohesive",
            "d) Loosely Cohesive"
        ],
        "Answer": " Answer: b\nExplanation: SOA is the architectural style that supports loosely coupled services to enable business flexibility."
    },
    {
        "id": 638,
        "Question": "Which of the following is an essential principle of an architecture?",
        "Options": [
            "a) Consistency",
            "b) Reliability",
            "c) Scalability",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Architecture implies a consistent and coherent design approach."
    },
    {
        "id": 639,
        "Question": "How is SOA different from OO Architecture ?",
        "Options": [
            "a) Strong coupling among objects",
            "b) Communications are prescriptive rather than being descriptive",
            "c) Data is separated from a service or behavior",
            "d) Data and methods are integrated into a single object"
        ],
        "Answer": " Answer: c\nExplanation: The order mentioned is appropriate to build a SOA "
    },
    {
        "id": 640,
        "Question": "Which architecture will be built on top of a SOA ?",
        "Options": [
            "a) The Application Architecture",
            "b) The Service Architecture",
            "c) The Component Architecture",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A service-oriented architecture is essentially a collection of services which communicate with each other."
    },
    {
        "id": 641,
        "Question": "Which of the following utilities is not a part of Application Service Layer ?",
        "Options": [
            "a) Policy implementation",
            "b) QoS",
            "c) Security",
            "d) Verify invoice"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 642,
        "Question": "Which of the following utilities is not a part of Business Service Layer ?",
        "Options": [
            "a) Task centric service",
            "b) Wrapper Services",
            "c) Get account info",
            "d) Entity centric service"
        ],
        "Answer": " Answer: d\nExplanation: It is a part of Business service layer."
    },
    {
        "id": 643,
        "Question": "Which architecture describes the various elements that support the implementation of services.",
        "Options": [
            "a) The Application Architecture",
            "b) The Service Architecture",
            "c) The Component Architecture",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: It is a part of Application service layer."
    },
    {
        "id": 644,
        "Question": "Which of the following is a category of a stimuli?",
        "Options": [
            "a) Periodic stimuli",
            "b) Software stimuli",
            "c) Hardware stimuli",
            "d) Management stimuli"
        ],
        "Answer": " Answer: a\nExplanation:  Periodic stimuli occur at predictable time intervals. For example, the system may examine a sensor every 50 milliseconds and take action depending on that sensor value."
    },
    {
        "id": 645,
        "Question": "Which of the following activities may be included in a real-time software design process?",
        "Options": [
            "a) Platform selection",
            "b) Timing analysis",
            "c) Process design",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  All these can be implemented."
    },
    {
        "id": 646,
        "Question": "Which of the following is not a real-time architectural pattern",
        "Options": [
            "a) Observe and React",
            "b) Environmental Control",
            "c) Embedded System",
            "d) Process Pipeline"
        ],
        "Answer": " Answer: c\nExplanation: Embedded systems’ patterns are process-oriented rather than object- or component-oriented ."
    },
    {
        "id": 647,
        "Question": "RTOS stands for",
        "Options": [
            "a) real-life operating system",
            "b) real-time operating system",
            "c) real-time operating software",
            "d) real-life operating software"
        ],
        "Answer": " Answer: b\nExplanation: Embedded applications are built on top of a real-time operating system (RTOS)."
    },
    {
        "id": 648,
        "Question": "The times by which stimuli must be processed and some response produced by the system is known as",
        "Options": [
            "a) Compile time",
            "b) Frequency",
            "c) Deadlines",
            "d) Execution time"
        ],
        "Answer": " Answer: c\nExplanation: If the system does not meet a deadline then, it results in a system failure; in a soft real-time system, it results in degraded system service ."
    },
    {
        "id": 649,
        "Question": "The switch to backup power must be completed within a deadline of",
        "Options": [
            "a) 50 ms",
            "b) 55 ms",
            "c) 70 ms",
            "d) 100 ms"
        ],
        "Answer": " Answer: a\nExplanation: The time required to  power failure stimuli is 50 millisecond."
    },
    {
        "id": 650,
        "Question": "An example of a system that may use a process pipeline is a _________",
        "Options": [
            "a) High-speed data acquisition system",
            "b) Failure of a power supply in an embedded system",
            "c) Both High-speed data acquisition system AND Failure of a power supply in an embedded system",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Data acquisition systems collect data from sensors for subsequent processing and analysis. These systems are used in situations where the sensors are collecting a lot of data from the system’s environment and it isn’t possible or necessary to process that data in real time."
    },
    {
        "id": 651,
        "Question": "The average execution time of the power monitor process should be less than",
        "Options": [
            "a) 1ms",
            "b) 10ms",
            "c) 100ms",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  This is the case for Aperiodic stimuli"
    },
    {
        "id": 652,
        "Question": "Which of the following diagrams can help spot points cuts?",
        "Options": [
            "a) Class diagram",
            "b) Object diagram",
            "c) Sequence diagram",
            "d) ER diagram"
        ],
        "Answer": " Answer: b\nExplanation: In AOSE, sequence diagrams can help spot where pointcuts need to be set."
    },
    {
        "id": 653,
        "Question": "Which of the following is represented as an aspect that requests a login name and password?",
        "Options": [
            "a) Class",
            "b) Object",
            "c) User authentication",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: User authentication may be represented as an aspect that requests a login name and password. This can be automatically woven into the program wherever authentication is required."
    },
    {
        "id": 654,
        "Question": "Research and development in aspect-orientation has primarily focused on",
        "Options": [
            "a) software re-engineering",
            "b) artificial programming",
            "c) aspect-oriented programming",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Aspect-oriented programming languages such as AspectJ have been developed that extend object-oriented programming to include aspects."
    },
    {
        "id": 655,
        "Question": "Which of the following is a key principle of software design and implementation?",
        "Options": [
            "a) Separation of concerns",
            "b) Writing aspects",
            "c) Finding code complexity",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The separation of concerns is a key principle of software design and implementation. It means that you should organize your software so that each element in the program (class, method, procedure, etc.) does one thing and one thing only."
    },
    {
        "id": 656,
        "Question": "Which of the following is not a type of stakeholder concern?",
        "Options": [
            "a) Functional concerns",
            "b) Quality of service concerns",
            "c) Policy concern",
            "d) Non-functional concern"
        ],
        "Answer": " Answer: a\nExplanation: The core concerns of a system are those functional concerns that relate to its primary purpose."
    },
    {
        "id": 657,
        "Question": "Which of the following concerns best suits the following statement:”Internet banking system includes new customer requirements, account Requirements, customer management requirements, security requirements, recovery requirements etc.” ?",
        "Options": [
            "a) Functional concerns",
            "b) Quality of service concerns",
            "c) System concerns",
            "d) Cross-cutting concerns"
        ],
        "Answer": " Answer: d\nExplanation: Cross-cutting concerns, which is based on an example of an Internet banking system. This system has requirements relating to new customers such as credit checking and address verification."
    },
    {
        "id": 658,
        "Question": "Which of the following is core concern in  medical record management system?",
        "Options": [
            "a) maintaining records of patients",
            "b) diagnose and treatments",
            "c) consultations",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 659,
        "Question": "An event in an executing program where the advice associated with an aspect may be executed is known as",
        "Options": [
            "a) aspect",
            "b) join point",
            "c) join point model",
            "d) pointcut"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 660,
        "Question": "The incorporation of advice code at the specified join points by an aspect weaver is called”.",
        "Options": [
            "a) aspect",
            "b) join point",
            "c) join point model",
            "d) weaving"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 661,
        "Question": "Which of the following is needed by Maintenance staff?",
        "Options": [
            "a) A specific type of equipment",
            "b) Maintenance record for each and every equipment item",
            "c) Check in/check out equipment for maintenance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options are essential for effective maintenance."
    },
    {
        "id": 662,
        "Question": "The ________ is connected to servers (typically powerful workstations or PCs) that play a dual role.",
        "Options": [
            "a) Database",
            "b) Software",
            "c) Hardware",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A root system, sometimes a mainframe, serves as the repository for corporate data plays a dual role."
    },
    {
        "id": 663,
        "Question": "Which of the following term is best defined by the statement:”The client sends structured query language (SQL) requests to the server which are transmitted as messages across the net”?",
        "Options": [
            "a) File servers",
            "b) Database servers",
            "c) Client servers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: SQL is a database language."
    },
    {
        "id": 664,
        "Question": "Which subsystem implements the requirements defined by the application?",
        "Options": [
            "a) UI",
            "b) DBMS",
            "c) Application subsystem",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: This subsystem implements the requirements defined by the application within the context of the domain in which the application operates."
    },
    {
        "id": 665,
        "Question": "Which test do you infer from the following statement: “The coordination and data management functions of the server are tested.”?",
        "Options": [
            "a) Server tests",
            "b) Application function tests",
            "c) Transaction tests",
            "d) Network communication tests"
        ],
        "Answer": " Answer: a\nExplanation: None"
    },
    {
        "id": 666,
        "Question": "Which of the following presentation is explained in the following statement:”An extension of the distributed presentation approach, primary database and application logic remain on the server, and data sent by the server is used by the client to prepare the user presentation.”?",
        "Options": [
            "a) Local Presentation",
            "b) Distributed presentation",
            "c) Remote presentation",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 667,
        "Question": "“A client is assigned all user presentation tasks and the processes associated with data entry”.Which option supports the client’s situation?",
        "Options": [
            "a) Distributed logic",
            "b) Distributed presentation",
            "c) Remote presentation",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The server is assigned database management tasks, the processes for client queries, and enterprise-wide applications."
    },
    {
        "id": 668,
        "Question": "What is used to pass SQL requests and associated data from one component to another?",
        "Options": [
            "a) Client/server SQL interaction",
            "b) Remote procedure calls",
            "c) SQL Injection",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This mechanism is limited to relational database management system (RDBMS) applications."
    },
    {
        "id": 669,
        "Question": "When a client application invokes a method contained within an object elsewhere in the system, CORBA uses dynamic invocation to",
        "Options": [
            "a) obtain pertinent information about the desired method from the interface repository",
            "b) create a data structure with parameters to be passed to the object",
            "c) create a request for the object",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The request is then passed to the ORB core—an implementation-specific part of the network operating system that manages requests, and the request is fulfilled. "
    },
    {
        "id": 670,
        "Question": "Which of the following services is not provided by an object?",
        "Options": [
            "a) Activating & Deactivating Objects",
            "b) Security features",
            "c) Files implementing the entities identified within the ERD",
            "d) Registering object implementation"
        ],
        "Answer": " Answer: c\nExplanation: An ERD is not a part of UML."
    },
    {
        "id": 671,
        "Question": "Which of the following term is best defined by the statement:”When one object invokes another independent object, a message is passed between the two objects.”?",
        "Options": [
            "a) Control couple",
            "b) Application object",
            "c) Data couple",
            "d) Database object"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 672,
        "Question": "CORBA stands for",
        "Options": [
            "a) Common Object Request Build Architecture",
            "b) Common Object Request Broker Architecture",
            "c) Common Object Request Break Architecture",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 673,
        "Question": "Which web app attribute is defined by the statement:”A large number of users may access the WebApp at one time”?",
        "Options": [
            "a) Unpredictable load",
            "b) Performance",
            "c) Concurrency",
            "d) Network intensiveness"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 674,
        "Question": "Which web app attribute is defined by the statement:”The quality and aesthetic nature of content remains an important determinant of the quality of a WebApp”?",
        "Options": [
            "a) Availability",
            "b) Data driven",
            "c) Content sensitive",
            "d) Continuous evolution"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 675,
        "Question": "If the user queries a collection of large databases and extracts information from the webapp, the webapp is categorized under",
        "Options": [
            "a) Service oriented app",
            "b) Database access app",
            "c) Portal app",
            "d) Data warehousing app"
        ],
        "Answer": " Answer: d\nExplanation: The Data Warehouse is a stable, read-only database that combines information from separate systems into one, easy-to-access location."
    },
    {
        "id": 676,
        "Question": "Which process model should be used in virtually all situations of web engineering?",
        "Options": [
            "a) Incremental Model",
            "b) Waterfall Model",
            "c) Spiral Model",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The web engineering process must accommodate incremental delivery, frequent changes and short timeline."
    },
    {
        "id": 677,
        "Question": "Which analysis is a part of Analysis model of the web engineering process framework?",
        "Options": [
            "a) Content Analysis",
            "b) Interaction Analysis",
            "c) Functional Analysis",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Analysis model establishes a basis for design which requires all the mentioned options."
    },
    {
        "id": 678,
        "Question": "Which of the following statements are incorrect with reference to web-based systems? Web-based systems",
        "Options": [
            "a) should be unscalable",
            "b) must be able to cope with uncertain, random heavy demands on services",
            "c) must be secure",
            "d) are subject to assorted legal, social, and ethical scrutiny"
        ],
        "Answer": " Answer: b\nExplanation: They are different due to the nature and distinct requirements of Web-based systems."
    },
    {
        "id": 679,
        "Question": "What category of web-based system would you assign to electronic shopping?",
        "Options": [
            "a) Informational",
            "b) Interactive",
            "c) Transaction-oriented",
            "d) Workflow-oriented"
        ],
        "Answer": " Answer: a\nExplanation: In web-based systems, more emphasis is on “look and feel” of the product."
    },
    {
        "id": 680,
        "Question": "What category of web-based system would you assign to discussion groups?",
        "Options": [
            "a) Collaborative work",
            "b) Online communities",
            "c) Web portals",
            "d) Workflow-oriented"
        ],
        "Answer": " Answer: b\nExplanation: Web-based systems are typically constrained to a short development time making it difficult to apply the same levels of formal planning and testing used in software development."
    },
    {
        "id": 681,
        "Question": "W3C stands for",
        "Options": [
            "a) World Wide Web Consortium",
            "b) World Wide Web Collaboration",
            "c) World Wide Web Community",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Web-based systems should be scalable."
    },
    {
        "id": 682,
        "Question": "Which of the following is a risk associated with using hypertext in web applications?",
        "Options": [
            "a) Loss of sense of locality and direction",
            "b) Cognitive overload for users",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It involves usage of transaction management of database systems."
    },
    {
        "id": 683,
        "Question": "What are the problems with re-structuring?",
        "Options": [
            "a) Loss of comments",
            "b) Loss of documentation",
            "c) Heavy computational demands",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Restructuring doesn’t help with poor modularisation where related components are dispersed throughout the code."
    },
    {
        "id": 684,
        "Question": "Which of the following is not a module type?",
        "Options": [
            "a) Object modules",
            "b) Hardware modules",
            "c) Functional modules",
            "d) Process support modules"
        ],
        "Answer": " Answer: a\nExplanation: Except option a all other are module types."
    },
    {
        "id": 685,
        "Question": "Reverse engineering of data focuses on",
        "Options": [
            "a) Internal data structures",
            "b) Database structures",
            "c) ALL of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 686,
        "Question": "Which of the following is not an example of a business process?",
        "Options": [
            "a) designing a new product",
            "b) hiring an employee",
            "c) purchasing services",
            "d) testing software"
        ],
        "Answer": " Answer: b\nExplanation: Forward engineering refers to taking a high-level model and using it to build a more complex lower-level implementation."
    },
    {
        "id": 687,
        "Question": "Which of the following is a data problem?",
        "Options": [
            "a) hardware problem",
            "b) record organisation problems",
            "c) heavy computational demands",
            "d) loss of comments"
        ],
        "Answer": " Answer: d\nExplanation: It is a part of development phase."
    },
    {
        "id": 688,
        "Question": "When does one decides to re-engineer a product?",
        "Options": [
            "a) when tools to support restructuring are disabled",
            "b) when system crashes frequently",
            "c) when hardware or software support becomes obsolete",
            "d) subsystems of a larger system require few maintenance"
        ],
        "Answer": " Answer: b\nExplanation: Records representing the same entity may be organised differently in different programs."
    },
    {
        "id": 689,
        "Question": "Which of the following is not a business goal of re-engineering ?",
        "Options": [
            "a) Cost reduction",
            "b) Time reduction",
            "c) Maintainability",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Re-engineering involves putting in the effort to make the system easier to maintain."
    },
    {
        "id": 690,
        "Question": "Which of these benefits can be achieved when software is restructured?",
        "Options": [
            "a) Higher quality programs",
            "b) Reduced maintenance effort",
            "c) Software easier to test",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: No such goal is mentioned which is not a business goal, so option d is correct here."
    },
    {
        "id": 691,
        "Question": "BPR stands for",
        "Options": [
            "a) Business process re-engineering",
            "b) Business product re-engineering",
            "c) Business process requirements",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The answer is self explanatory."
    },
    {
        "id": 692,
        "Question": "Source code translation is a part of which re-engineering technique?",
        "Options": [
            "a) Data re-engineering",
            "b) Refactoring",
            "c) Restructuring",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Data re-engineering involves analyzing and reorganizing the data structures in a program."
    },
    {
        "id": 693,
        "Question": "In reverse engineering process, what refers to the sophistication of the design information that can be extracted from the source code?",
        "Options": [
            "a) interactivity",
            "b) completeness",
            "c) abstraction level",
            "d) direction level"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 694,
        "Question": "In reverse engineering, what refers to the level of detail that is provided at an abstraction level?",
        "Options": [
            "a) interactivity",
            "b) completeness",
            "c) abstraction level",
            "d) directionality"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 695,
        "Question": "The core of reverse engineering is an activity called",
        "Options": [
            "a) restructure code",
            "b) directionality",
            "c) extract abstractions",
            "d) interactivity"
        ],
        "Answer": " Answer: c\nExplanation: The engineer must evaluate the old program and extract a meaningful specification of the processing that is performed, the user interface that is applied, and the program data structures or database that is used."
    },
    {
        "id": 696,
        "Question": "What have become de rigueur for computer-based products and systems of every type?",
        "Options": [
            "a) GUIs",
            "b) Candidate keys",
            "c) Object model",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Therefore, the redevelopment of user interfaces has become one of the most common types of re-engineering activity. But before a user interface can be rebuilt, reverse engineering should occur."
    },
    {
        "id": 697,
        "Question": "Forward engineering is also known as",
        "Options": [
            "a) extract abstractions",
            "b) renovation",
            "c) reclamation",
            "d) both renovation and reclamation"
        ],
        "Answer": " Answer: d\nExplanation: Forward engineering, also called renovation or reclamation , not only recovers design information from existing software, but uses this information to alter or reconstitute the existing system in an effort to improve its overall quality."
    },
    {
        "id": 698,
        "Question": "Reverse engineering is the process of deriving the system design and specification from its",
        "Options": [
            "a) GUI",
            "b) Database",
            "c) Source code",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None"
    },
    {
        "id": 699,
        "Question": "Which of the following steps may not be used to define the existing data model as a precursor to re-engineering a new database model:",
        "Options": [
            "a) Build an initial object model",
            "b) Determine candidate keys",
            "c) Refine the tentative classes",
            "d) Discover user interfaces"
        ],
        "Answer": " Answer: a\nExplanation: This is accomplished by examining the program code with the intent of grouping related program variables."
    },
    {
        "id": 700,
        "Question": "Much of the information necessary to create a behavioral model can be obtained by observing the external manifestation of the existing",
        "Options": [
            "a) candidate keys",
            "b) interface",
            "c) database structure",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Once information defined in the preceding steps is known, a series of transformations can be applied to map the old database structure into a new database structure. "
    },
    {
        "id": 701,
        "Question": "Extracting data items and objects, to get information on data flow, and to understand the existing data structures that have been implemented is sometimes called",
        "Options": [
            "a) data analysis",
            "b) directionality",
            "c) data extraction",
            "d) client applications"
        ],
        "Answer": " Answer: b\nExplanation: The GUI or the interface provides the base for the behavioral model."
    },
    {
        "id": 702,
        "Question": "Transformation of a system from one representational form to another is known as",
        "Options": [
            "a) Re-factoring",
            "b) Restructuring",
            "c) Forward engineering",
            "d) Both Re-factoring and Restructuring"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 703,
        "Question": "Which of the following is not an objective of reverse engineering?",
        "Options": [
            "a) to reduce maintenance effort",
            "b) to cope with complexity",
            "c) to avoid side effects",
            "d) to assist migration to a CASE environment"
        ],
        "Answer": " Answer: b\nExplanation:  Re engineering is a  process of analysis and change whereby a system is modified by first reverse engineering and then forward engineering."
    },
    {
        "id": 704,
        "Question": "Which of the following is software engineer’s primary characteristics?",
        "Options": [
            "a) A collection of useful tools that will help in every step of building a product",
            "b) An organized layout that enables tools to be found quickly and used efficiently",
            "c) A skilled artisan who understands how to use the tools in an effective manner",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 705,
        "Question": "Database management software serves as a foundation for the establishment of a CASE database (repository) that we call",
        "Options": [
            "a) project database",
            "b) system database",
            "c) analysis and design tools",
            "d) prototyping tools"
        ],
        "Answer": " Answer: a\nExplanation: Given the emphasis on configuration objects, database management tools for CASE are evolving from relational database management systems to object oriented database management systems."
    },
    {
        "id": 706,
        "Question": "What enables a software engineer to defined screen layout rapidly for interactive applications?",
        "Options": [
            "a) Analysis and design tools",
            "b) Tool kit",
            "c) Screen painters",
            "d) PRO/SIM tools"
        ],
        "Answer": " Answer: c\nExplanation: More sophisticated CASE prototyping tools enable the creation of a data design, coupled with both screen and report layouts."
    },
    {
        "id": 707,
        "Question": "_________tools assist in the planning, development, and control in CASE.",
        "Options": [
            "a) Dynamic measurement",
            "b) Data acquisition",
            "c) Test management",
            "d) Cross-functional tools"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 708,
        "Question": "Which tools cross the bounds of the preceding categories?",
        "Options": [
            "a) Data acquisition",
            "b) Dynamic measurement",
            "c) Cross-functional tools",
            "d) Simulation"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 709,
        "Question": "Which environment demands specialized testing tools that exercise the graphical user interface and the network communications requirements for client and server?",
        "Options": [
            "a) Dynamic analysis",
            "b) Client/Server",
            "c) Re-engineering",
            "d) Test management"
        ],
        "Answer": " Answer: b\nExplanation: A client/server architecture is GUI based."
    },
    {
        "id": 710,
        "Question": "Which tools are used to modify online database systems?",
        "Options": [
            "a) Reverse engineering specification tools",
            "b) Code restructuring and analysis tools",
            "c) Test management tools",
            "d) online system re-engineering tools"
        ],
        "Answer": " Answer: d\nExplanation: For example these tools convert IDMS or DB2 files into entity-relationship format."
    },
    {
        "id": 711,
        "Question": "Which is the definition of objects in the database that leads directly to a standard approach for the creation of software engineering documents.",
        "Options": [
            "a) Document standardization",
            "b) Data integrity",
            "c) Information sharing",
            "d) Data/data integration"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 712,
        "Question": "Which of the following term is best defined by the statement: “CASE tools and the target applications are isolated from physical storage so they are not affected when the hardware configuration is changed.”?",
        "Options": [
            "a) Non-redundant data storage",
            "b) Data independence",
            "c) Data dependence",
            "d) Ad Hhoc data queries and reports"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 713,
        "Question": "Which of the following term is best define by the statement:”Each object is stored only once, but is accessible by all CASE tools that need it.”?",
        "Options": [
            "a) Non-redundant data storage",
            "b) Data independence",
            "c) Transaction control",
            "d) Ad Hoc data queries and reports"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 714,
        "Question": "CASE stands for",
        "Options": [
            "a) Cost Aided Software Engineering",
            "b) Computer Aided Software Engineering",
            "c) Control Aided Software Engineering",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  CASE tools purpose is to make the work of software development and maintenance easier and more reliable."
    },
    {
        "id": 715,
        "Question": "Which of the following is not a type of CASE tool?",
        "Options": [
            "a) Lower",
            "b) Classic",
            "c) Real",
            "d) Middle"
        ],
        "Answer": " Answer: b\nExplanation:  CASE tools support the developer when performing one or more phases of the software life cycle and/or support software maintenance."
    },
    {
        "id": 716,
        "Question": "What stores all changes and info related to the project from development through maintenance in CASE tools?",
        "Options": [
            "a) Database",
            "b) Repository",
            "c) Registers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  Lower and Upper CASE tools support analysis and design."
    },
    {
        "id": 717,
        "Question": "What kind of support is provided by the Repository Query CASE tool?",
        "Options": [
            "a) Editing text and diagrams",
            "b) Display of parts of the design texts",
            "c) Cross referencing queries and requirements tracing",
            "d) Display of parts of the design texts AND Cross referencing queries and requirements tracing"
        ],
        "Answer": " Answer: b\nExplanation:  The main component of real CASE tools is the repository which stores all changes."
    },
    {
        "id": 718,
        "Question": "What kind of support is provided by the Code Generation CASE tool?",
        "Options": [
            "a) Cross referencing queries and requirements tracing",
            "b) Transformation of design records into application software",
            "c) Compiling, interpreting or applying interactive debugging code",
            "d) Transformation of design records into application software AND Compiling, interpreting or applying interactive debugging code"
        ],
        "Answer": " Answer: d\nExplanation:  None."
    },
    {
        "id": 719,
        "Question": "What kind of support is provided by the Code Editing CASE tool?",
        "Options": [
            "a) Management of design documents and software code versions",
            "b) Transformation of design records into application software",
            "c) Compiling, interpreting or applying interactive debugging code",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:  Code Generation tool aids in transformation of design records into prototypes or application software compatible with a given software development language."
    },
    {
        "id": 720,
        "Question": "Which of the following is a drawback of using CASE tool?",
        "Options": [
            "a) Standardization of notations and diagrams",
            "b) Communication between development team member",
            "c) Costs associated with the use of the tool",
            "d) Reduction of time and effort"
        ],
        "Answer": " Answer: b\nExplanation:  Classic CASE tools include interactive debuggers and compilers which do not serve the required purpose."
    },
    {
        "id": 721,
        "Question": "CASE tools are mainly used while developing which of the following methodologies?",
        "Options": [
            "a) RAD",
            "b) JAD",
            "c) OO Approach",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  None."
    },
    {
        "id": 722,
        "Question": "Which of the following is not a phase of “bathtub curve” of hardware reliability?",
        "Options": [
            "a) Useful Life",
            "b) Burn-in",
            "c) Wear-out",
            "d) Time"
        ],
        "Answer": " Answer: d\nExplanation: Time is the horizontal dimension on which the bathtub curve is built and not the phase."
    },
    {
        "id": 723,
        "Question": "How is reliability and failure intensity related to each other?",
        "Options": [
            "a) direct relation",
            "b) inverse relation",
            "c) no relation",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: As the reliability increases, failure intensity decreases."
    },
    {
        "id": 724,
        "Question": "How many product quality factors are proposed in McCall quality model?",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 11",
            "d) 8"
        ],
        "Answer": " Answer: b\nExplanation: McCall quality model has three product quality factors namely: Product revision, Product operation, Product Transition ."
    },
    {
        "id": 725,
        "Question": "Which one of the following is not a software quality model?",
        "Options": [
            "a) ISO 9000",
            "b) McCall model",
            "c) Boehm model",
            "d) ISO 9126"
        ],
        "Answer": " Answer: a\nExplanation: ISO-9000 series of standards is a set of document dealing with quality systems that can be used for quality assurance purposes."
    },
    {
        "id": 726,
        "Question": "What is MTTF ?",
        "Options": [
            "a) Maximum time to failure",
            "b) Mean time to failure",
            "c) Minimum time to failure",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 727,
        "Question": "How is software reliability defined?",
        "Options": [
            "a) time",
            "b) efficiency",
            "c) quality",
            "d) speed"
        ],
        "Answer": " Answer: a\nExplanation: Software Reliability mainly concerned with the time component. It can be seen in various models like Basic Execution Time Model and Logarithmic Poisson Execution Time Model."
    },
    {
        "id": 728,
        "Question": "Suitability, Accuracy, Interoperability, and security are what type quality attribute of ISO 9126 ?",
        "Options": [
            "a) Reliability",
            "b) Efficiency",
            "c) Functionality",
            "d) Usability"
        ],
        "Answer": " Answer: c\nExplanation: All the Characteristics mentioned in the question are related to achievement of the basic purpose for which the software is being engineered, which is functionality."
    },
    {
        "id": 729,
        "Question": "Time Behavior and Resource Behavior fall under which quality attribute of ISO 9126 ?",
        "Options": [
            "a) Reliability",
            "b) Efficiency",
            "c) Functionality",
            "d) Usability"
        ],
        "Answer": " Answer: b\nExplanation: The Characteristics mentioned in the question are related to the relationship between the level of performance of the software and the amount of resources used, under stated conditions. "
    },
    {
        "id": 730,
        "Question": "NHPP stands for",
        "Options": [
            "a) Non Homogeneous Poisson Product",
            "b) Non-Hetrogeneous Poisson Product",
            "c) Non-Hetrogeneous Poisson Process",
            "d) Non Homogeneous Poisson Process"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 731,
        "Question": "The CMM model is a technique to",
        "Options": [
            "a) automatically maintain the software reliability",
            "b) improve the software process.",
            "c) test the software",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Capability Maturity Model (CMM) is a strategy for improving the software process, irrespective of the actual life cycle model used."
    },
    {
        "id": 732,
        "Question": "What type of fault remains in the system for some period and then disappears?",
        "Options": [
            "a) Permanent",
            "b) Transient",
            "c) Intermittent",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: For example many faults in communication systems are transient in nature."
    },
    {
        "id": 733,
        "Question": "Which of the following approaches are used to achieve reliable systems?",
        "Options": [
            "a) Fault prevention",
            "b) Fault removal",
            "c) Fault tolerance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the options lead to formation of a reliable system."
    },
    {
        "id": 734,
        "Question": "A system maintaining its integrity while accepting a temporary halt in its operation is said to be in a state of",
        "Options": [
            "a) Full Fault Tolerance",
            "b) Graceful Degradation",
            "c) Fail Soft",
            "d) Fail Safe"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 735,
        "Question": "Which of the following Error Detection checks is not a part of Application detection?",
        "Options": [
            "a) Hardware checks",
            "b) Timing checks",
            "c) Reversal checks",
            "d) Coding checks"
        ],
        "Answer": " Answer: a\nExplanation: Hardware is a part of environment detection check."
    },
    {
        "id": 736,
        "Question": "Exception handling is a type of",
        "Options": [
            "a) forward error recovery mechanism",
            "b) backward error recovery mechanism",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Exception handling is a forward error recovery mechanism, as there is no roll back to a previous state; instead control is passed to the handler so that recovery procedures can be initiated."
    },
    {
        "id": 737,
        "Question": "Non-occurrence of improper alteration of information is known as",
        "Options": [
            "a) Available Dependability",
            "b) Confidential Dependability",
            "c) Maintainable Dependability",
            "d) Integral Dependability"
        ],
        "Answer": " Answer: d\nExplanation: Integrity is to keep the original content safe from alteration."
    },
    {
        "id": 738,
        "Question": "In N-version programming which is the independent generation of N, the value of N is",
        "Options": [
            "a) greater than 1",
            "b) less than 1",
            "c) greater than 2",
            "d) less than 2"
        ],
        "Answer": " Answer: c\nExplanation: N-version programming (NVP), also known as multiversion programming or multiple-version dissimilar software, is a method or process in software engineering where multiple functionally equivalent programs are independently generated from the same initial specifications."
    },
    {
        "id": 739,
        "Question": "All fault-tolerant techniques rely on",
        "Options": [
            "a) Integrity",
            "b) Dependability",
            "c) Redundancy",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 740,
        "Question": "It is imperative for a communicating processes to reach consistent recovery points to avoid the _________ effect, with backward error recovery mechanism.",
        "Options": [
            "a) Static",
            "b) Dynamic",
            "c) Domino",
            "d) Whirlpool"
        ],
        "Answer": " Answer: c\nExplanation: All fault-tolerant techniques rely on extra elements introduced into the system to detect & recover from faults."
    },
    {
        "id": 741,
        "Question": "Which one is not a software quality model?",
        "Options": [
            "a) ISO 9000",
            "b) McCall model",
            "c) Boehm model",
            "d) ISO 9126"
        ],
        "Answer": " Answer: a\nExplanation: ISO 9000 is software certification."
    },
    {
        "id": 742,
        "Question": "How many levels are present in CMM?",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) six"
        ],
        "Answer": " Answer: c\nExplanation: The five levels are: initial, repeatable, defined, managed, optimizing."
    },
    {
        "id": 743,
        "Question": "Which level of CMM is for process management?",
        "Options": [
            "a) Initial",
            "b) Repeatable",
            "c) Defined",
            "d) Optimizing"
        ],
        "Answer": " Answer: d\nExplanation: It is a characteristic of processes at this level that the focus is on continually improving process performance through both incremental and innovative technological changes/improvements."
    },
    {
        "id": 744,
        "Question": "In ISO 9126, time behavior and resource utilization are a part of",
        "Options": [
            "a) maintainability",
            "b) portability",
            "c) efficiency",
            "d) usability"
        ],
        "Answer": " Answer: c\nExplanation: A set of attributes that bear on the relationship between the level of performance of the software and the amount of resources used, under stated conditions."
    },
    {
        "id": 745,
        "Question": "Which of the following is not a Probabilistic Model?",
        "Options": [
            "a) Error seeding",
            "b) NHPP",
            "c) Input domain",
            "d) Halstead’s software metric"
        ],
        "Answer": " Answer: d\nExplanation: Halstead’s software metric is a deterministic model."
    },
    {
        "id": 746,
        "Question": "Software reliability is defined with respect to",
        "Options": [
            "a) time",
            "b) bugs",
            "c) failures",
            "d) quality"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 747,
        "Question": "Failure In Time (FIT) is another way of reporting",
        "Options": [
            "a) MTTR",
            "b) MTTF",
            "c) MTSF",
            "d) MTBF"
        ],
        "Answer": " Answer: d\nExplanation: FIT reports the number of expected failures per one billion hours of operation for a device. This term is used particularly by the semiconductor industry but is also used by component manufacturers ."
    },
    {
        "id": 748,
        "Question": "MTTF stands for",
        "Options": [
            "a) Minimum time to failure",
            "b) Mean time to failure",
            "c) Maximum time to failure",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 749,
        "Question": "IMC Networks is a leading ________ certified manufacturer of optical networking and LAN/WAN connectivity solutions for enterprise, telecommunications and service provider applications.",
        "Options": [
            "a) Telco Systems",
            "b) D-Link",
            "c) Arista Networks",
            "d) ISO 9001"
        ],
        "Answer": " Answer: a\nExplanation: In an operational system, repair generally means replacing a failed hardware part. Thus, hardware MTTR could be viewed as mean time to replace a failed hardware module."
    },
    {
        "id": 750,
        "Question": "Which of the following term describes testing?",
        "Options": [
            "a) Finding broken code",
            "b) Evaluating deliverable to find errors",
            "c) A stage of all projects",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  b\nExplanation:  Software testing is the process of evaluation a software item to detect differences between given input and expected output."
    },
    {
        "id": 751,
        "Question": "What is Cyclomatic complexity?",
        "Options": [
            "a) Black box testing",
            "b) White box testing",
            "c) Yellow box testing",
            "d) Green box testing"
        ],
        "Answer": " Answer:  b\nExplanation:  Cyclomatic complexity measures the amount of decision logic in the program module.Cyclomatic complexity gives the minimum number of paths that can generate all possible paths through the module."
    },
    {
        "id": 752,
        "Question": "Lower and upper limits are present in which chart?",
        "Options": [
            "a) Run chart",
            "b) Bar chart",
            "c) Control chart",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  a\nExplanation:  A run chart is used to monitor the behavior of a variable over time for a process or system. Run charts graphically display cycles, trends, shifts, or non-random patterns in behavior over time. It contains lower and upper limits."
    },
    {
        "id": 753,
        "Question": "Maintenance testing is performed using which methodology?",
        "Options": [
            "a) Retesting",
            "b) Sanity testing",
            "c) Breadth test and depth test",
            "d) Confirmation testing"
        ],
        "Answer": " Answer:  c\nExplanation:  Maintenance Testing is done on the already deployed software. The deployed software needs to be enhanced, changed or migrated to other hardware. The Testing done during this enhancement, change and migration cycle is known as maintenance testing."
    },
    {
        "id": 754,
        "Question": "White Box techniques are also classified as",
        "Options": [
            "a) Design based testing",
            "b) Structural testing",
            "c) Error guessing technique",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  b\nExplanation:  The structural testing is the testing of the structure of the system or component. Structural testing is often referred to as ‘white box’ or ‘glass box’ or ‘clear-box testing’ because in structural testing we are interested in what is happening ‘inside the system/application’."
    },
    {
        "id": 755,
        "Question": "Exhaustive testing is",
        "Options": [
            "a) always possible",
            "b) practically possible",
            "c) impractical but possible",
            "d) impractical and impossible"
        ],
        "Answer": " Answer:  c\nExplanation: Exhaustive testing is the testing where we execute single test case for multiple test data.It means if we are using single test case for different product or module under manual testing.\ntesting ."
    },
    {
        "id": 756,
        "Question": "Which of the following is/are White box technique?",
        "Options": [
            "a) Statement Testing",
            "b) Decision Testing",
            "c) Condition Coverage",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:  d\nExplanation:  Statement testing, decision testing, condition coverage all of them uses white box technique."
    },
    {
        "id": 757,
        "Question": "What are the various Testing Levels?",
        "Options": [
            "a) Unit Testing",
            "b) System Testing",
            "c) Integration Testing",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:  d\nExplanation:  Unit, system, integration testing all of them are levels in testing."
    },
    {
        "id": 758,
        "Question": "Boundary value analysis belong to?",
        "Options": [
            "a) White Box Testing",
            "b) Black Box Testing",
            "c) White Box & Black Box Testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  b\nExplanation:  Boundary value analysis is based on testing at the boundaries between partitions and checks the output with expected output."
    },
    {
        "id": 759,
        "Question": "Alpha testing is done at",
        "Options": [
            "a) Developer’s end",
            "b) User’s end",
            "c) Developer’s & User’s end",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  a\nExplanation:  Alpha testing takes place at the developer’s end. Developers observe the users and note problems. Alpha testing is testing of an application when development is about to complete. Minor design changes can still be made as a result of alpha testing."
    },
    {
        "id": 760,
        "Question": "The testing in which code is checked",
        "Options": [
            "a) Black box testing",
            "b) White box testing",
            "c) Red box testing",
            "d) Green box testing"
        ],
        "Answer": " Answer: b\nExplanation: White-box testing is a method of testing software that tests internal structures or workings of an application, as opposed to its functionality ."
    },
    {
        "id": 761,
        "Question": "Testing done without planning and Documentation is called",
        "Options": [
            "a) Unit testing",
            "b) Regression testing",
            "c) Adhoc testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Adhoc testing is used term for software testing performed without planning and documentation. The tests are intended to be run only once, unless a defect is discovered."
    },
    {
        "id": 762,
        "Question": "Acceptance testing is also known as",
        "Options": [
            "a) Grey box testing",
            "b) White box testing",
            "c) Alpha Testing",
            "d) Beta testing"
        ],
        "Answer": " Answer: d\nExplanation: Acceptance testing is a test conducted to determine if the requirements of a specification or contract are met and is done by users."
    },
    {
        "id": 763,
        "Question": "Which of the following is non-functional testing?",
        "Options": [
            "a) Black box testing",
            "b) Performance testing",
            "c) Unit testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Performance testing is in general testing performed to determine how a system performs in terms of responsiveness and stability under a particular workload."
    },
    {
        "id": 764,
        "Question": "Beta testing is done at",
        "Options": [
            "a) User’s end",
            "b) Developer’s end",
            "c) User’s & Developer’s end",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In beta testing the user evaluates the product and gives his feedback."
    },
    {
        "id": 765,
        "Question": "SPICE stands for",
        "Options": [
            "a) Software Process Improvement and Compatibility Determination",
            "b) Software Process Improvement and Control Determination",
            "c) Software Process Improvement and Capability Determination",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: SPICE stands for Software Process Improvement and Control Determination."
    },
    {
        "id": 766,
        "Question": "Unit testing is done by",
        "Options": [
            "a) Users",
            "b) Developers",
            "c) Customers",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Unit testing is a method by which individual units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures are tested to determine if they are fit for use."
    },
    {
        "id": 767,
        "Question": "Behavioral testing is",
        "Options": [
            "a) White box testing",
            "b) Black box testing",
            "c) Grey box testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Black-box testing is a method of software testing that examines the functionality of an application without peering into its internal structures or workings. "
    },
    {
        "id": 768,
        "Question": "Which of the following is black box testing",
        "Options": [
            "a) Basic path testing",
            "b) Boundary value analysis",
            "c) Code path analysis",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Boundary value analysis is a software testing technique in which tests are designed to include representatives of boundary values."
    },
    {
        "id": 769,
        "Question": "Which of the following is not used in measuring the size of the software",
        "Options": [
            "a) KLOC",
            "b) Function Points",
            "c) Size of module",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: KLOC and function points both can be used as size measurement for measuring the size of the software."
    },
    {
        "id": 770,
        "Question": "Which of the following is not a software testing generic characteristics?",
        "Options": [
            "a) Different testing techniques are appropriate at different points in time",
            "b) Testing is conducted by the developer of the software or an independent test group",
            "c) Testing and debugging are different activities, but debugging must be accommodated in any testing strategy",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Software Testing is a set of such activities."
    },
    {
        "id": 771,
        "Question": "ITG stands for",
        "Options": [
            "a) instantaneous test group",
            "b) integration testing group",
            "c) individual testing group",
            "d) independent test group"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 772,
        "Question": "By collecting ________ during software testing, it is possible to develop meaningful guidelines to halt the testing process.",
        "Options": [
            "a) Failure intensity",
            "b) Testing time",
            "c) Metrics",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The role of an independent test group (ITG) is to remove the inherent problems\nassociated with letting the builder test the thing that has been built."
    },
    {
        "id": 773,
        "Question": "Which of the  following issues must be addressed if a successful software testing strategy is to be implemented?",
        "Options": [
            "a) Use effective formal technical reviews as a filter prior to testing",
            "b) Develop a testing plan that emphasizes “rapid cycle testing.”",
            "c) State testing objectives explicitly",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It answers questions like: “When are we done with testing?”."
    },
    {
        "id": 774,
        "Question": "Test cases should uncover errors like",
        "Options": [
            "a) Nonexistent loop termination",
            "b) Comparison of different data types",
            "c) Incorrect logical operators or precedence",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All the mentioned options are carried out for the purpose."
    },
    {
        "id": 775,
        "Question": "Which of the following errors should not be tested when error handling is evaluated?",
        "Options": [
            "a) Error description is unintelligible",
            "b) Error noted does not correspond to error encountered",
            "c) Error condition causes system intervention prior to error handling",
            "d) Error description provide enough information to assist in the location of the cause of the error"
        ],
        "Answer": " Answer: a\nExplanation: Test cases should uncover errors such as all the explained options and much more."
    },
    {
        "id": 776,
        "Question": "What is normally considered as an adjunct to the coding step",
        "Options": [
            "a) Integration testing",
            "b) Unit testing",
            "c) Completion of Testing",
            "d) Regression Testing"
        ],
        "Answer": " Answer: a\nExplanation: Actually, error description does not provide enough information to assist in the location of the cause of the error."
    },
    {
        "id": 777,
        "Question": "Which of the following is not regression test case?",
        "Options": [
            "a) A representative sample of tests that will exercise all software functions",
            "b) Additional tests that focus on software functions that are likely to be affected by the change",
            "c) Tests that focus on the software components that have been changed",
            "d) Low-level components are combined into clusters that perform a specific software sub-function"
        ],
        "Answer": " Answer: b\nExplanation: After source level code has been developed, reviewed, and verified for correspondence to component level design, unit test case design begins."
    },
    {
        "id": 778,
        "Question": "Which testing is an integration testing approach that is commonly used when “shrink-wrapped” software products are being developed?",
        "Options": [
            "a) Regression Testing",
            "b) Integration testing",
            "c) Smoke testing",
            "d) Validation testing"
        ],
        "Answer": " Answer: d\nExplanation: Regression testing may be conducted manually, by re-executing a subset of all test cases or using automated capture or playback tools"
    },
    {
        "id": 779,
        "Question": "In which testing level the focus is on customer usage?",
        "Options": [
            "a) Alpha Testing",
            "b) Beta Testing",
            "c) Validation Testing",
            "d) Both Alpha and Beta"
        ],
        "Answer": " Answer: c\nExplanation: Smoke testing is designed as a pacing mechanism for time-critical projects, allowing the software team to assess its project on a frequent basis."
    },
    {
        "id": 780,
        "Question": "2.The construction of object-oriented software begins with the creation of",
        "Options": [
            "a) design model",
            "b) analysis model",
            "c) code levels",
            "d) both design and analysis model"
        ],
        "Answer": " Answer: a\nExplanation: It is necessary to test an OO system at a variety of different levels in an effort to uncover errors that may occur as classes collaborate with one another and subsystems communicate across architectural layers. "
    },
    {
        "id": 781,
        "Question": "Which testing integrates the set of classes required to respond to one input or event for the system?",
        "Options": [
            "a) cluster testing",
            "b) thread-based testing",
            "c) use-based testing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: It is due to the evolutionary nature of the OO software engineering paradigm, these models begin as relatively informal representations of system requirements and evolve into detailed models of classes, class connections and relationships, system design and allocation, and object design."
    },
    {
        "id": 782,
        "Question": "Which of the following is one of the steps in the integration testing of OO software?",
        "Options": [
            "a) cluster testing",
            "b) thread-based testing",
            "c) use-based testing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Each thread is integrated and tested individually. Regression testing is applied to ensure that no side effects occur."
    },
    {
        "id": 783,
        "Question": "__________ methods can be used to drive validations tests",
        "Options": [
            "a) Yellow-box testing",
            "b) Black-box testing",
            "c) White-box testing",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Here, a cluster of collaborating classes is exercised by designing test cases that attempt to uncover errors in the collaborations."
    },
    {
        "id": 784,
        "Question": "Which of the following is a part of testing OO code?",
        "Options": [
            "a) Validation tests",
            "b) Integration tests",
            "c) Class tests",
            "d) System tests"
        ],
        "Answer": " Answer: b\nExplanation: Black-box testing methods are as appropriate for OO systems as they are for systems developed using conventional software engineering methods."
    },
    {
        "id": 785,
        "Question": "The object of ___________within an OO system is to design tests that have a high likelihood of uncovering plausible bugs.",
        "Options": [
            "a) Fault-based testing",
            "b) Integration testing",
            "c) Use-based testing",
            "d) Scenario-based testing"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 786,
        "Question": "What refers to the externally observable structure of an OO program?",
        "Options": [
            "a) Deep structure",
            "b) Surface structure",
            "c) Core structure",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The object of fault-based testing within an OO system is to design tests that have a high likelihood of uncovering plausible faults."
    },
    {
        "id": 787,
        "Question": "_____________ categorizes class operations based on the generic function that each performs.",
        "Options": [
            "a) Category-based partitioning",
            "b) Attribute-based partitioning",
            "c) State-based partitioning",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Surface structure refers to the externally observable structure of an OO program which is immediately obvious to an end-user."
    },
    {
        "id": 788,
        "Question": "Which of the following is black-box oriented and can be accomplished by applying the same black-box methods discussed for conventional software?",
        "Options": [
            "a) Conventional testing",
            "b) OO system validation testing",
            "c) Test case design",
            "d) Both Conventional testing and OO system validation testing"
        ],
        "Answer": " Answer: a\nExplanation: For example, operations in the account class can be categorized in initialization operations (open, setup), computational operations (deposit,withdraw) etc."
    },
    {
        "id": 789,
        "Question": "In which of the following testing strategies, a smallest testable unit is the encapsulated class or object?",
        "Options": [
            "a) Unit testing",
            "b) Integration testing",
            "c) System testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 790,
        "Question": "Which of the following testing types is not a part of system testing?",
        "Options": [
            "a) Recovery testing",
            "b) Stress testing",
            "c) System testing",
            "d) Random testing"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 791,
        "Question": "What is testing process’ first goal?",
        "Options": [
            "a) Bug prevention",
            "b) Testing",
            "c) Execution",
            "d) Analyses"
        ],
        "Answer": " Answer: a\nExplanation: Its better to prevent a bug rather than putting time in its testing and removal. "
    },
    {
        "id": 792,
        "Question": "Software mistakes during coding are known as",
        "Options": [
            "a) errors",
            "b) failures",
            "c) bugs",
            "d) defects"
        ],
        "Answer": " Answer: c\nExplanation: A software bug is an error, flaw, failure, or fault in a computer program or system that causes it to produce an incorrect or unexpected result."
    },
    {
        "id": 793,
        "Question": "Name an evaluation technique to assess the quality of test cases.",
        "Options": [
            "a) Mutation analysis",
            "b) Validation",
            "c) Verification",
            "d) Performance analysis"
        ],
        "Answer": " Answer: a\nExplanation: Mutation analysis is used to design new software tests and evaluate the quality of existing software tests."
    },
    {
        "id": 794,
        "Question": "Test should be conducted for every possible",
        "Options": [
            "a) data",
            "b) case",
            "c) variable",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: It increases the scope for code inspection."
    },
    {
        "id": 795,
        "Question": "Which of the following is not a part of bug report?",
        "Options": [
            "a) Test case",
            "b) Output",
            "c) Software Version",
            "d) LOC"
        ],
        "Answer": " Answer: d\nExplanation: Line of code(LOC) is immaterial during testing, as it is an exhaustive process."
    },
    {
        "id": 796,
        "Question": "Which of the following is not a part of Execution Flow during debugging?",
        "Options": [
            "a) Step Over",
            "b) Step Into",
            "c) Step Up",
            "d) Step Out"
        ],
        "Answer": " Answer: c\nExplanation: Step Into executes code, Step Out continues execution until bound value and Step Over is to execute code without stopping."
    },
    {
        "id": 797,
        "Question": "Cyclomatic Complexity method comes under which testing method.",
        "Options": [
            "a) Yellow box",
            "b) White box",
            "c) Gray box",
            "d) Black box"
        ],
        "Answer": " Answer: b\nExplanation: Cyclomatic Complexity tells us about the number of independent paths in a program which is covered in white box testing."
    },
    {
        "id": 798,
        "Question": "Which is a black box testing technique appropriate to all levels of testing?",
        "Options": [
            "a) Acceptance testing",
            "b) Regression testing",
            "c) Equivalence partitioning",
            "d) Quality assurance"
        ],
        "Answer": " Answer: c\nExplanation: Equivalence partitioning is a software testing technique that divides the input data of a software unit into partitions of equivalent data from which test cases can be derived."
    },
    {
        "id": 799,
        "Question": "Which of the following is the way of ensuring that the tests are actually testing code?",
        "Options": [
            "a) Control structure testing",
            "b) Complex path testing",
            "c) Code coverage",
            "d) Quality assurance of software"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 800,
        "Question": "Effective testing will reduce _______ cost.",
        "Options": [
            "a) maintenance",
            "b) design",
            "c) coding",
            "d) documentation"
        ],
        "Answer": " Answer: a\nExplanation: Remaining options are a part of development process."
    },
    {
        "id": 801,
        "Question": "Which of the following is a common pointwer problem?",
        "Options": [
            "a) Data sharing errors",
            "b) Accessing data elements of the wrong type",
            "c) Attempting to use memory areas after freeing them",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: These are the common errors programmers make while coding."
    },
    {
        "id": 802,
        "Question": "Standard Enforcer is a",
        "Options": [
            "a) Static Testing Tool",
            "b) Dynamic Testing",
            "c) Static & Dynamic Testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Static Testing tools are those that perform analysis of the the program without executing them at all."
    },
    {
        "id": 803,
        "Question": "Many applications using static analysis find 0.1-0.2% NCSS. NCSS stands for",
        "Options": [
            "a) Non-Code Source Statement",
            "b) Non Comment Source Sentence",
            "c) Non-Comment Source Statement",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 804,
        "Question": "Which testing tool does a simple job of enforcing standards in a uniform way of many programs?",
        "Options": [
            "a) Static Analyzer",
            "b) Code Inspector",
            "c) Standard Enforcer",
            "d) Both Code Inspector & Standard Enforcer"
        ],
        "Answer": " Answer: d\nExplanation: A standard enforcer is just like a code inspector, except that the rules are generally simpler. Standard enforcer looks at only single statements while the static analyzer looks at whole programs. "
    },
    {
        "id": 805,
        "Question": "Software Testing with real data in real environment is known as",
        "Options": [
            "a) alpha testing",
            "b) beta testing",
            "c) regression testing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Beta testing is the last stage of testing, and normally can involve sending the product to beta test sites outside the company for real-world exposure or offering the product for a free trial download over the Internet."
    },
    {
        "id": 806,
        "Question": "Which of the following testing tools examine program systematically & automatically ?",
        "Options": [
            "a) Code Inspector",
            "b) Static Analyzer",
            "c) Standard Enforcer",
            "d) Coverage Analyzer"
        ],
        "Answer": " Answer: b\nExplanation: A static analyzer operates from a pre-computed database o descriptive information derived from the source text of the program."
    },
    {
        "id": 807,
        "Question": "Which testing tool is responsible for documenting programs ?",
        "Options": [
            "a) Test/File Generator",
            "b) Test Harness System",
            "c) Test Archiving Systems",
            "d) Coverage Analyzer"
        ],
        "Answer": " Answer: c\nExplanation: The answer is self-explanatory."
    },
    {
        "id": 808,
        "Question": "Beta Testing is done by",
        "Options": [
            "a) Developers",
            "b) Testers",
            "c) Users",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 809,
        "Question": "Debugging Program is a program which runs concurrently with the program under test & provide commands to",
        "Options": [
            "a) examine memory & registers",
            "b) stop execution at a particular point",
            "c) search for references for particular variables, constant and registers",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: This tool looks at only single statements."
    },
    {
        "id": 810,
        "Question": "Execution Verifier is a dynamic tool that is also known as",
        "Options": [
            "a) Test File Generator",
            "b) Coverage Analyzer",
            "c) Output Comparator",
            "d) Test Harness System"
        ],
        "Answer": " Answer: d\nExplanation: Debugging is a methodical process of finding and reducing the number of bugs, or defects, in a computer program or a piece of electronic hardware, thus making it behave as expected."
    },
    {
        "id": 811,
        "Question": "Why is software difficult to build ?",
        "Options": [
            "a) Controlled changes",
            "b) Lack of reusability",
            "c) Lack of monitoring",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Monitoring is a key aspect which requires much attention for a successful build."
    },
    {
        "id": 812,
        "Question": "Which of the following  is not a conflict in software development team?",
        "Options": [
            "a) Simultaneous updates",
            "b) Shared and common code",
            "c) Versions",
            "d) Graphics issues"
        ],
        "Answer": " Answer: d\nExplanation: These are part of design, which can be handled by the design team."
    },
    {
        "id": 813,
        "Question": "Which of the following lasts for the duration of the project and covers the development process?",
        "Options": [
            "a) Monitoring all key parameters like cost, schedule, risks",
            "b) Taking corrective actions when needed",
            "c) Providing information on the development process in terms of metrics",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 814,
        "Question": "Which of the following is not a typical environment in communication facilitation ?",
        "Options": [
            "a) Multiple teams",
            "b) Multiple user groups",
            "c) Multiple fests",
            "d) Multiple locations"
        ],
        "Answer": " Answer: c\nExplanation: The answer is not related to the question."
    },
    {
        "id": 815,
        "Question": "Which of the following is a software process ?",
        "Options": [
            "a) Analysis and design",
            "b) Configuration and management",
            "c) Business modeling",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 816,
        "Question": "Which of the following is not included in Issues Meetings?",
        "Options": [
            "a) Issues gathered the day before",
            "b) Regular schedule of meeting",
            "c) Discussion with business",
            "d) Attendance"
        ],
        "Answer": " Answer: c\nExplanation: Discussion with business is planning in QA Meetings."
    },
    {
        "id": 817,
        "Question": "Which of the following  is not a part of Software Configuration Management Basics?",
        "Options": [
            "a) Identification",
            "b) Version",
            "c) Auditing and Reviewing",
            "d) Status Accounting"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 818,
        "Question": "What is a collection of software elements treated as a unit for the purposes of SCM?",
        "Options": [
            "a) Software Configuration Item",
            "b) Baseline",
            "c) Configuration",
            "d) Configuration Control Board"
        ],
        "Answer": " Answer: a\nExplanation: Software Configuration Item is a collection of software elements treated as a unit for the purposes of SCM."
    },
    {
        "id": 819,
        "Question": "What is one or more software configuration items that have been formally reviewed and agreed upon and serve as a basis for further development?",
        "Options": [
            "a) Configuration",
            "b) Baseline",
            "c) Software",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Baseline – One or more software configuration items that have been formally reviewed and agreed upon and serve as a basis for further development."
    },
    {
        "id": 820,
        "Question": "What is validating the completeness of a product?",
        "Options": [
            "a) Identification",
            "b) Software",
            "c) Auditing and Reviewing",
            "d) Status Accounting"
        ],
        "Answer": " Answer: c\nExplanation:  Auditing and Reviewing is validating the completeness of a product and that SCM procedures are being followed."
    },
    {
        "id": 821,
        "Question": "What is group with the responsibility for reviewing and approving changes to baselines?",
        "Options": [
            "a) Software Configuration Item",
            "b) Baseline",
            "c) Configuration",
            "d) Configuration Control Board"
        ],
        "Answer": " Answer: d\nExplanation: Configuration Control Board (CCB) is the group with the responsibility for reviewing and approving changes to baselines."
    },
    {
        "id": 822,
        "Question": "What is a specific instance of a baseline or configuration item?",
        "Options": [
            "a) Software",
            "b) Configuration",
            "c) Version",
            "d) Status Accounting"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 823,
        "Question": "SCM stands for",
        "Options": [
            "a) Software Control Management",
            "b) Software Configuration Management",
            "c) Software Concept Management",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In software engineering, software configuration management (SCM) is the task of tracking and controlling changes in the software, part of the larger cross-discipline field of configuration management."
    },
    {
        "id": 824,
        "Question": "When code is made available to others, it goes in a/an",
        "Options": [
            "a) hard drive",
            "b) access-controlled library",
            "c) servers",
            "d) access control"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 825,
        "Question": "Which of the following is not a main phase in Configuration Management (CM) Process?",
        "Options": [
            "a) CM Planning",
            "b) Executing the CM process",
            "c) CM audits",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All are main phases of CM."
    },
    {
        "id": 826,
        "Question": "What allows different projects to use the same source files at the same time?",
        "Options": [
            "a) Version Control",
            "b) Access control",
            "c) CM Process",
            "d) Version Control and Access control"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 827,
        "Question": "Which of the following is not a change management process?",
        "Options": [
            "a) Log the changes",
            "b) Estimate impact on effort and schedule",
            "c) Review impact with stakeholders",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: It allows software engineers to continue development along a branch even when a line of development is frozen."
    },
    {
        "id": 828,
        "Question": "What is one or more software configuration items that have been formally reviewed and agreed upon and serve as a basis for further development?",
        "Options": [
            "a) Baseline",
            "b) Cumulative changes",
            "c) CM",
            "d) Change Control"
        ],
        "Answer": " Answer: d\nExplanation: All are required for a change."
    },
    {
        "id": 829,
        "Question": "How are baselines verified?",
        "Options": [
            "a) By reviews",
            "b) By inspections",
            "c) By testing of code",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 830,
        "Question": "Which of the following is a example of Configuration Items ?",
        "Options": [
            "a) SCM procedures",
            "b) Source code",
            "c) Software design descriptions",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In configuration management, a “baseline” is an agreed-to description of the attributes of a product, at a point in time, which serves as a basis for defining change."
    },
    {
        "id": 831,
        "Question": "CCB stands for",
        "Options": [
            "a) Change Control Board",
            "b) Change Control Baseline",
            "c) Cumulative Changes in Baseline",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Testing verifies the agreed-to description."
    },
    {
        "id": 832,
        "Question": "What information is required to process a change to a baseline?",
        "Options": [
            "a) Reasons for making the changes",
            "b) A description of the proposed changes",
            "c) List of other items affected by the changes",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All are covered in CM."
    },
    {
        "id": 833,
        "Question": "Quality Management in software engineering is also known as",
        "Options": [
            "a) SQA",
            "b) SQM",
            "c) SQI",
            "d) SQA and SQM"
        ],
        "Answer": " Answer: a\nExplanation: Quality Management is also called software quality assurance (SQA) which serves as an umbrella activity that is applied throughout the software process."
    },
    {
        "id": 834,
        "Question": "Quality also can be looked at in terms of user satisfaction which includes",
        "Options": [
            "a) A compliant product",
            "b) Good quality output",
            "c) Delivery within budget and schedule",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This focuses on how well the implementation follows the design and how well the resulting system meets its requirements ."
    },
    {
        "id": 835,
        "Question": "Inspections and testing are what kinds of Quality Costs?",
        "Options": [
            "a) Prevention",
            "b) Internal Failure",
            "c) External Failure",
            "d) Appraisal"
        ],
        "Answer": " Answer: d\nExplanation: Inspections, equipment calibration, maintenance and testing appraisal costs is quality management."
    },
    {
        "id": 836,
        "Question": "According to Pareto’s principle, x% of defects can be traced to y% of all causes. What are the values of x and y?",
        "Options": [
            "a) 60, 40",
            "b) 70, 30",
            "c) 80, 20",
            "d) No such principle exists"
        ],
        "Answer": " Answer: c\nExplanation: The Pareto principle (also known as the 80–20 rule) states that, for many events, roughly 80% of the effects come from 20% of the causes."
    },
    {
        "id": 837,
        "Question": "What is Six Sigma?",
        "Options": [
            "a) It is the most widely used strategy for statistical quality assurance",
            "b) The “Six Sigma” refers to six standard deviations",
            "c) It is the most widely used strategy for statistical quality assurance AND The “Six Sigma” refers to six standard deviations",
            "d) A Formal Technical Review(FTR) guideline for quality walkthrough or inspection"
        ],
        "Answer": " Answer: c\nExplanation: The Six Sigma uses data and statistical analysis to measure and improve a company’s operational performance ."
    },
    {
        "id": 838,
        "Question": "Which of the following is not a core step of Six Sigma?",
        "Options": [
            "a) Define",
            "b) Control",
            "c) Measure",
            "d) Analyse"
        ],
        "Answer": " Answer: b\nExplanation: It is an additional step added for existing processes and can be done in parallel."
    },
    {
        "id": 839,
        "Question": "Non-conformance to software requirements is known as",
        "Options": [
            "a) Software availability",
            "b) Software reliability",
            "c) Software failure",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Given a set of valid requirements, all software failures can be traced to design or implementation problems."
    },
    {
        "id": 840,
        "Question": "What kind of quality cost is incurred when an error is detected in a product prior to shipment?",
        "Options": [
            "a) Prevention",
            "b) Internal Failure",
            "c) External Failure",
            "d) Appraisal"
        ],
        "Answer": " Answer: b\nExplanation: Software reliability uses statistical analysis to determine the likelihood that a software failure will occur; however, the failure may not necessarily result in a hazard or mishap."
    },
    {
        "id": 841,
        "Question": "The degree to which the design specifications are followed during manufacturing is known as",
        "Options": [
            "a) Quality of design",
            "b) Quality of conformance",
            "c) Quality of testing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Translation gap between the client and the developer often leads to software defects."
    },
    {
        "id": 842,
        "Question": "According to ISO 9001, inspection and testing comes under which management responsibility?",
        "Options": [
            "a) Process control",
            "b) Document control",
            "c) Control of nonconforming products",
            "d) Servicing"
        ],
        "Answer": " Answer: b\nExplanation: This includes rework, repair, and failure mode analysis."
    }
]
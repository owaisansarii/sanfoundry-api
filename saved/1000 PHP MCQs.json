[
    {
        "id": 1,
        "Options": [
            "a) Both i) and iii)",
            "b) Both ii) and iv)",
            "c) Only ii)",
            "d) Both i) and ii)"
        ],
        "Answer": "Answer: d\nExplanation: PHP previously stood for Personal Home Page now stands for Hypertext Preprocessor.\n"
    },
    {
        "id": 2,
        "Question": "PHP files have a default file extension of_______",
        "Options": [
            "a) .html",
            "b) .xml",
            "c) .php",
            "d) .ph"
        ],
        "Answer": "Answer: c\nExplanation: To run a php file on the server, it should be saved as AnyName.php\n"
    },
    {
        "id": 3,
        "Question": "What should be the correct syntax to write a PHP code?",
        "Options": [
            "a) < php    >",
            "b) < ? php   ?>",
            "c) <?   ?>",
            "d) <?php   ?>"
        ],
        "Answer": "Answer: c\nExplanation: Every section of PHP code starts and ends by turning on and off PHP tags to let the server know that it needs to execute the PHP in between them.\n"
    },
    {
        "id": 4,
        "Question": "",
        "Options": [
            "a) Only iv)",
            "b) i), ii), iii) and iv)",
            "c) i), ii) and iii)",
            "d) Only iii)"
        ],
        "Answer": "Answer: b\nExplanation: Any of the above editors can be used to type php code and run it.\n"
    },
    {
        "id": 5,
        "Question": "",
        "Options": [
            "a) i), ii), iii) and iv)",
            "b) Only ii)",
            "c) ii) and iii)",
            "d) ii), iii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: To run PHP code you need to have PHP and a web server, both IIS and Apache are web servers. You can choose either one according to your platform.\n"
    },
    {
        "id": 6,
        "Question": "Which version of PHP introduced Try/catch Exception?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 6",
            "d) PHP 5 and later"
        ],
        "Answer": "Answer: d\nExplanation: PHP 5 version and later versions added support for Exception Handling.\n"
    },
    {
        "id": 7,
        "Question": "",
        "Options": [
            "a) Only ii)",
            "b) i), iii) and iv)",
            "c) ii), iii) and iv)",
            "d) Both ii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: /* */ can also be use to comment just a single line although it is used for paragraphs. // and # are used only for single line comment.\n"
    },
    {
        "id": 8,
        "Question": "8. Which of the following PHP statement/statements will store 111 in variable num?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">    i<span class=\"br0\">)</span> int <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">111</span><span class=\"sy0\">;</span>\n    ii<span class=\"br0\">)</span> int mum <span class=\"sy0\">=</span> <span class=\"nu0\">111</span><span class=\"sy0\">;</span>\n    iii<span class=\"br0\">)</span> <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">111</span><span class=\"sy0\">;</span>\n    iv<span class=\"br0\">)</span> <span class=\"nu0\">111</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Both i) and ii)",
            "b) i), ii), iii) and iv)",
            "c) Only iii)",
            "d) Only i)"
        ],
        "Answer": "Answer: c\nExplanation: You need not specify the datatype in php.\n"
    },
    {
        "id": 9,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span>  <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$num</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"+\"</span><span class=\"sy0\">.</span> <span class=\"re0\">$num1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 1+2",
            "c) 1.+.2",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: .(dot) is used to combine two parts of the statement. Example ($num . “Hello World”)  will output 1Hello World.\n"
    },
    {
        "id": 10,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span>  <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"2\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$num</span><span class=\"sy0\">+</span><span class=\"re0\">$num1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 1+2",
            "c) Error",
            "d) 12"
        ],
        "Answer": "Answer: a\nExplanation: The numbers inside the double quotes are considered as integers and not string, therefore the value 3 is printed and not 1+2.\n "
    },
    {
        "id": 11,
        "Question": "1. Which is the right way of declaring a variable in PHP?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">i<span class=\"br0\">)</span> $3hello\nii<span class=\"br0\">)</span> <span class=\"re0\">$_hello</span>\niii<span class=\"br0\">)</span> <span class=\"re0\">$this</span>\niv<span class=\"br0\">)</span> <span class=\"re0\">$This</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Only ii)",
            "b) Only iii)",
            "c) ii), iii) and iv)",
            "d) ii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: A variable in PHP can not start with a number, also $this is mainly used to refer properties of a class so we can’t use $this as a user define variable name.\n"
    },
    {
        "id": 12,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$foo</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'Bob'</span><span class=\"sy0\">;</span>              </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$bar</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><span class=\"re0\">$foo</span><span class=\"sy0\">;</span>              </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$bar</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"My name is <span class=\"es4\">$bar</span>\"</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$bar</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$foo</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) My name is BobBob",
            "c) My name is BobMy name is Bob",
            "d) My name is Bob Bob"
        ],
        "Answer": "Answer: c\nExplanation: Firstly, the line $bar = &$foo; will reference $foo via $bar. So $bar is assigned value Bob. Therefore  $bar = “My name is $bar”;  will print My name is Bob($bar=Bob as said before).\n"
    },
    {
        "id": 13,
        "Question": "3. Which of the following PHP statements will output Hello World on the screen?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">i<span class=\"br0\">)</span> <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\nii<span class=\"br0\">)</span> <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\niii<span class=\"br0\">)</span> <span class=\"kw3\">printf</span> <span class=\"br0\">(</span><span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\niv<span class=\"br0\">)</span> <span class=\"kw3\">sprintf</span> <span class=\"br0\">(</span><span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) i) and ii)",
            "b) i), ii) and iii)",
            "c) i), ii), iii) and iv)",
            "d) i), ii) and iv)"
        ],
        "Answer": "Answer: b\nExplanation: echo(), print() and printf() all three can be used to output a statement onto the screen. The sprintf() statement is functionally identical to printf() except that the output is assigned to a string rather than rendered to the browser.\n"
    },
    {
        "id": 14,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$color</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"maroon\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var</span> <span class=\"sy0\">=</span> <span class=\"re0\">$color</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$var</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) Error",
            "c) $var",
            "d) r"
        ],
        "Answer": "Answer: d\nExplanation: PHP treats strings in the same fashion as arrays, allowing for specific characters to be accessed via array offset notation. In an array, index always starts from 0. So in the line $var = $color[2]; if we count from start ‘r’ comes at index 2. So the output will be r.\n"
    },
    {
        "id": 15,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$score</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1234</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$scoreboard</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw3\">array</span><span class=\"br0\">)</span> <span class=\"re0\">$score</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$scoreboard</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) Error",
            "c) 1234",
            "d) 2"
        ],
        "Answer": "Answer: c\nExplanation: The (array) is a cast operator which is used for converting values from other data types to array.\n"
    },
    {
        "id": 16,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"25 students\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$more</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$total</span> <span class=\"sy0\">+</span> <span class=\"re0\">$more</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$total</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 35 students",
            "c) 35",
            "d) 25 students"
        ],
        "Answer": "Answer: c\nExplanation: The integer value at the beginning of the original $total string is used in the calculation. However if it begins with anything but a numerical value, the value will be 0.\n"
    },
    {
        "id": 17,
        "Question": "Which of the below statements is equivalent to $add += $add?",
        "Options": [
            "a) $add = $add",
            "b) $add = $add +$add",
            "c) $add = $add + 1",
            "d) $add = $add + $add + 1"
        ],
        "Answer": "Answer: b\nExplanation: a += b is an addition assignment whose outcome is a = a + b. Same can be done with subtraction, multiplication, division etc.\n"
    },
    {
        "id": 18,
        "Question": "Which statement will output $x on the screen?",
        "Options": [
            "a) echo “\\$x”;",
            "b) echo “$$x”;",
            "c) echo “/$x”;",
            "d) echo “$x;”;"
        ],
        "Answer": "Answer: a\nExplanation: A backslash is used so that the dollar sign is treated as a normal string character rather than prompt PHP to treat $x as a variable. The backslash used in this manner is known as escape character.\n"
    },
    {
        "id": 19,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> track<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    static <span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$count</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    track<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    track<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    track<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 123",
            "b) 111",
            "c) 000",
            "d) 011"
        ],
        "Answer": "Answer: a\nExplanation: Because $count is static, it retains its previous value each time the function is executed.\n"
    },
    {
        "id": 20,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"clue\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$a</span> <span class=\"sy0\">.=</span> <span class=\"st0\">\"get\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$a</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) get",
            "b) true",
            "c) false",
            "d) clueget"
        ],
        "Answer": "Answer: d\nExplanation: ‘.’ is a concatenation operator. $a. = “get” is same as $a=$a.”get” where $a is having value of “clue” in the previous statement. So the output will be clueget.\n"
    },
    {
        "id": 21,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span> <span class=\"sy0\">===</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5 === 5",
            "b) Error",
            "c) 1",
            "d) False"
        ],
        "Answer": "Answer: c\nExplanation: === operator returns 1 if $a and $b are equivalent and $a and $b have the same type.\n"
    },
    {
        "id": 22,
        "Question": "Which of the below symbols is a newline character?",
        "Options": [
            "a) \\r",
            "b) \\n",
            "c) /n",
            "d) /r"
        ],
        "Answer": "Answer: b\nExplanation: PHP treats \\n as a newline character.\n"
    },
    {
        "id": 23,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st_h\">'What is her age? \\n She is $num years old'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Only i)",
            "b) i), ii) and iv)",
            "c) ii), iii) and iv)",
            "d) i), ii), iii) and iv)"
        ],
        "Answer": "Answer: a\nExplanation: When a string is enclosed within single quotes both variables and escape sequences will not be interpreted when the string is parsed.\n"
    },
    {
        "id": 24,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$team</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"arsenal\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$team</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">case</span> <span class=\"st0\">\"manu\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"I love man u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">case</span> <span class=\"st0\">\"arsenal\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"I love arsenal\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">case</span> <span class=\"st0\">\"manc\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"I love manc\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I love arsenal",
            "b) Error",
            "c) I love arsenalI love manc",
            "d) I love arsenalI love mancI love manu"
        ],
        "Answer": "Answer: d\nExplanation: All are conditional statements supported by PHP as all are used to evaluate different conditions during a program and take decisions based on whether these conditions evaluate to true of false.\n"
    },
    {
        "id": 25,
        "Question": "",
        "Options": [
            "a) i) and ii)",
            "b) i), ii) and iii)",
            "c) i), ii), iii) and iv)",
            "d) Only iv)"
        ],
        "Answer": "Answer: c\nExplanation: If a break statement isn’t present, all subsequent case blocks will execute until a break statement is located.\n"
    },
    {
        "id": 26,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$user</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Ashley\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bale\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Shrek\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Blank\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span>\t<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Shrek\"</span><span class=\"br0\">)</span> <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">printf</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) AshleyBale",
            "b) AshleyBaleBlank",
            "c) ShrekBlank",
            "d) Shrek"
        ],
        "Answer": "Answer: c\nExplanation: All are supported looping statements in PHP as they can repeat the same block of code a given number of times, or until a certain condition is met.\n"
    },
    {
        "id": 27,
        "Question": "If $a = 12 what will be returned when ($a == 12) ? 5 : 1 is executed?",
        "Options": [
            "a) 12",
            "b) 1",
            "c) Error",
            "d) 5"
        ],
        "Answer": "Answer: b\nExplanation: The continue statement causes execution of the current loop iteration to end and commence at the beginning of the next iteration.\n"
    },
    {
        "id": 28,
        "Question": "9. What will be the value of $a and $b after the function call in the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> doSomething<span class=\"br0\">(</span> <span class=\"sy0\">&amp;</span><span class=\"re0\">$arg</span> <span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$return</span> <span class=\"sy0\">=</span> <span class=\"re0\">$arg</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$arg</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"re0\">$return</span><span class=\"sy0\">;</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> doSomething<span class=\"br0\">(</span> <span class=\"re0\">$a</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a is 3 and b is 4",
            "b) a is 4 and b is 3",
            "c) Both are 3",
            "d) Both are 4"
        ],
        "Answer": "Answer: d\nExplanation: ?: is known as ternary operator. If condition is true then the part just after the ? is executed else the part after : .\n"
    },
    {
        "id": 29,
        "Question": "Who is the father of PHP?",
        "Options": [
            "a) Rasmus Lerdorf",
            "b) Willam Makepiece",
            "c) Drek Kolkevi",
            "d) List Barely"
        ],
        "Answer": "Answer: b\nExplanation: $a is 4 and $b is 3. The former because $arg is passed by reference, the latter because the return value of the function is a copy of the initial value of the argument.\n"
    },
    {
        "id": 30,
        "Question": "How to define a function in PHP?",
        "Options": [
            "a) function {function body}",
            "b) data type functionName(parameters) {function body}",
            "c) functionName(parameters) {function body}",
            "d) function functionName(parameters) {function body}"
        ],
        "Answer": "Answer: d\nExplanation: PHP allows us to create our own user-defined functions. Any name ending with an open and closed parenthesis is a function. The keyword function is always used to begin a function.\n"
    },
    {
        "id": 31,
        "Question": "Type Hinting was introduced in which version of PHP?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.3",
            "d) PHP 6"
        ],
        "Answer": "Answer: b\nExplanation: PHP 5 introduced the feature of type hinting. With the help of type hinting, we can specify the expected data type of an argument in a function declaration. First valid types can be the class names for arguments that receive objects and the other are array for those that receive arrays.\n"
    },
    {
        "id": 32,
        "Question": "3. Which type of function call is used in line 8 in the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> calc<span class=\"br0\">(</span><span class=\"re0\">$price</span><span class=\"sy0\">,</span> <span class=\"re0\">$tax</span><span class=\"br0\">)</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$price</span> <span class=\"sy0\">+</span> <span class=\"re0\">$tax</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$pricetag</span> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$taxtag</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    calc<span class=\"br0\">(</span><span class=\"re0\">$pricetag</span><span class=\"sy0\">,</span> <span class=\"re0\">$taxtag</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Call By Value",
            "b) Call By Reference",
            "c) Default Argument Value",
            "d) Type Hinting"
        ],
        "Answer": "Answer: a\nExplanation: If we call a function by value, we actually pass the values of the arguments which are stored or copied into the formal parameters of the function. Hence, the original values are unchanged only the parameters inside the function changes.\n"
    },
    {
        "id": 33,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> calc<span class=\"br0\">(</span><span class=\"re0\">$price</span><span class=\"sy0\">,</span> <span class=\"re0\">$tax</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$price</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$price</span> <span class=\"sy0\">*</span> <span class=\"re0\">$tax</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$total</span>\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    calc<span class=\"br0\">(</span><span class=\"nu0\">42</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 0",
            "c) 42",
            "d) 84"
        ],
        "Answer": "Answer: c\nExplanation: You can designate certain arguments as optional by placing them at the end of the list and assigning them a default value of nothing.\n"
    },
    {
        "id": 34,
        "Question": "5. Which of the following are valid function names?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">i<span class=\"br0\">)</span> <span class=\"kw2\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nii<span class=\"br0\">)</span> €<span class=\"br0\">(</span><span class=\"br0\">)</span>\niii<span class=\"br0\">)</span> <span class=\"sy0\">.</span><span class=\"kw2\">function</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\niv<span class=\"br0\">)</span> <span class=\"re0\">$function</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Only i)",
            "b) Only ii)",
            "c) i) and  ii)",
            "d) iii) and iv)"
        ],
        "Answer": "Answer: b\nExplanation: A valid function name can start with a letter or underscore, followed by any number of letters, numbers, or underscores. According to the specified regular expression ([a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*), a function name like this one is valid.\n"
    },
    {
        "id": 35,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am b'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> \t<span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am a'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am a",
            "b) I am bI am a",
            "c) Error",
            "d) I am a Error"
        ],
        "Answer": "Answer: a\nExplanation: The output will be “I am a” as we are calling a(); so the statement outside the block of function b() will be called.\n"
    },
    {
        "id": 36,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am b'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> \t<span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am a'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am b",
            "b) I am bI am a",
            "c) Error",
            "d) I am a Error"
        ],
        "Answer": "Answer: c\nExplanation: The output will be Fatal error: Call to undefined function b(). You cannot call a function which is inside a function without calling the outside function first. It should be a(); then b();\n"
    },
    {
        "id": 37,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$op2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"blabla\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> foo<span class=\"br0\">(</span><span class=\"re0\">$op1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"re0\">$op1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"re0\">$op2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    foo<span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) helloblabla",
            "b) Error",
            "c) hello",
            "d) helloblablablabla"
        ],
        "Answer": "Answer: c\nExplanation: If u want to put some variables in function that was not passed by it, you must use “global”. Inside the function type global $op2.\n"
    },
    {
        "id": 38,
        "Question": "A function in PHP which starts with __ (double underscore) is known as __________",
        "Options": [
            "a) Magic Function",
            "b) Inbuilt Function",
            "c) Default Function",
            "d) User Defined Function"
        ],
        "Answer": "Answer: a\nExplanation: PHP functions that start with a double underscore – a “__” – are called magic functions in PHP. They are functions that are always defined inside classes, and are not stand-alone functions.\n"
    },
    {
        "id": 39,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> foo<span class=\"br0\">(</span><span class=\"re0\">$msg</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$msg</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"foo\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var1</span><span class=\"br0\">(</span><span class=\"st0\">\"will this work\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) $msg",
            "c) 0",
            "d) Will this work"
        ],
        "Answer": "Answer: d\nExplanation: It is possible to call a function using a variable which stores the function name.\n"
    },
    {
        "id": 40,
        "Question": "Which of the following PHP functions accepts any number of parameters?",
        "Options": [
            "a) func_get_argv()",
            "b) func_get_args()",
            "c) get_argv()",
            "d) get_argc()"
        ],
        "Answer": "Answer: b\nExplanation: func_get_args() returns an array of arguments provided. One can use func_get_args() inside the function to parse any number of passed parameters. Here is an example:\n\n\n\t\n\nfunction foo(){    $args = func_get_args();    foreach ($args as $k => $v)    {         echo \"arg\".($k+1).\": $v\\n\";      }}foo();/* will print nothing */ foo(\"Hello\");/* will print Hello */ foo(\"Hello\",\"World\",\"Bye\");/* will print Hello World Bye */\n\n\n"
    },
    {
        "id": 41,
        "Question": "Which one of the following PHP functions can be used to find files?",
        "Options": [
            "a) glob()",
            "b) file()",
            "c) fold()",
            "d) get_file()"
        ],
        "Answer": "Answer: a\nExplanation: The function glob() returns an array of filenames or directories which matches a specified pattern. The function returns an array of files/directories, or it will return FALSE on failure. Here is an example-\n\n\n\t\n\n        \n\n// get all php files AND txt files      $files = glob('*.{php,txt}', GLOB_BRACE);      print_r($files);      /* output looks like:     Array     (         [0] => phptest.php         [1] => pi.php         [2] => post_output.php        .        .        .    )\n\n\n"
    },
    {
        "id": 42,
        "Question": "Which of the following PHP functions can be used to get the current memory usage?",
        "Options": [
            "a) get_usage()",
            "b) get_peak_usage()",
            "c) memory_get_usage()",
            "d) memory_get_peak_usage()"
        ],
        "Answer": "Answer: c\nExplanation: memory_get_usage() returns the amount of memory, in bytes, that’s currently being allocated to the PHP script. We can set the parameter ‘real_usage’ to TRUE to get total memory allocated from system, including unused pages. If it is not set or FALSE then only the used memory is reported. To get the highest amount of memory used at any point, we can use the memory_get_peak_usage() function.\n"
    },
    {
        "id": 43,
        "Question": "Which of the following PHP functions can be used for generating unique ids?",
        "Options": [
            "a) uniqueid()",
            "b) id()",
            "c) md5()",
            "d) mdid()"
        ],
        "Answer": "Answer: a\nExplanation: The function uniqueid() is used to generate a unique ID based on the microtime (current time in microseconds). The ID generated from the function uniqueid() is not optimal, as it is based on the system time. To generate an ID which is extremely difficult to predict we can use the md5() function.\n"
    },
    {
        "id": 44,
        "Question": "Which one of the following functions can be used to compress a string?",
        "Options": [
            "a) zip_compress()",
            "b) zip()",
            "c) compress()",
            "d) gzcompress()"
        ],
        "Answer": "Answer: d\nExplanation: The function gzcompress() compresses the string using the ZLIB data format. One can achieve upto 50% size reduction using this function. The gzuncompress() function is used to uncompress the string.\n"
    },
    {
        "id": 45,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">chr</span><span class=\"br0\">(</span><span class=\"nu0\">52</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: d\nExplanation: The chr() function returns a character from the specified ASCII value. We can specify ASCII value in decimal, octal, or hex values. The Octal values are defined as a leading 0, while hex values are defined as a leading 0x. Since the ASCII value of 4 is 52, thus 4 was displayed.\n"
    },
    {
        "id": 46,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ord</span> <span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 106",
            "b) 103",
            "c) 104",
            "d) 209"
        ],
        "Answer": "Answer: c\nExplanation: The ord() function returns the ASCII value of the first character of a string. The ASCII value of h is 104, thus 104 was displayed.\n"
    },
    {
        "id": 47,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"st0\">\"i love my country\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I love my country",
            "b) i love my Country",
            "c) I love my Country",
            "d) I Love My Country"
        ],
        "Answer": "Answer: b\nExplanation: The wordwrap() function wraps a string into new lines when it reaches a specific length.\n"
    },
    {
        "id": 48,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> lcfirst<span class=\"br0\">(</span><span class=\"st0\">\"welcome to India\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) welcome to India",
            "b) welcome to india",
            "c) Welcome to India",
            "d) Welcome to india"
        ],
        "Answer": "Answer: d\nExplanation: The ucwords() function converts the first character of each word in a string to uppercase.\n"
    },
    {
        "id": 49,
        "Question": "PHP’s numerically indexed array begin with position ___________",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 0",
            "d) -1"
        ],
        "Answer": "Answer: c\nExplanation: Like all the other programming languages, the first element of an array always starts with ‘0’.\n"
    },
    {
        "id": 50,
        "Question": "2. Which of the following are correct ways of creating an array?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">i<span class=\"br0\">)</span> state<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"karnataka\"</span><span class=\"sy0\">;</span>\nii<span class=\"br0\">)</span> <span class=\"re0\">$state</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"karnataka\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\niii<span class=\"br0\">)</span> <span class=\"re0\">$state</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"karnataka\"</span><span class=\"sy0\">;</span>\niv<span class=\"br0\">)</span>  <span class=\"re0\">$state</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"karnataka\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) iii) and iv)",
            "b) ii) and iii)",
            "c) Only i)",
            "d) ii), iii) and iv)"
        ],
        "Answer": "Answer: a\nExplanation: A variable name should start with $ symbol which is not present in i) and you need not put the square brackets when you use the array() constructor.\n"
    },
    {
        "id": 51,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$states</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Karnataka\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw3\">array</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">(</span><span class=\"st0\">\"population\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"11,35,000\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"capital\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Bangalore\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"Tamil Nadu\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span> <span class=\"st0\">\"population\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"17,90,000\"</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"capital\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Chennai\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$states</span><span class=\"br0\">[</span><span class=\"st0\">\"Karnataka\"</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"st0\">\"population\"</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Karnataka 11,35,000",
            "b) 11,35,000",
            "c) population 11,35,000",
            "d) Karnataka population"
        ],
        "Answer": "Answer: b\nExplanation: In the following PHP code, the variable states are treated as a multidimensional array and accordingly traverse it to get the value of ‘Karnataka’s population’.\n"
    },
    {
        "id": 52,
        "Question": "Which of the following PHP function will return true if a variable is an array or false if it is not an array?",
        "Options": [
            "a) this_array()",
            "b) is_array()",
            "c) do_array()",
            "d) in_array()"
        ],
        "Answer": "Answer: b\nExplanation: The function is_array() is an inbuilt function in PHP which is used to check whether a variable is an array or not. Its prototype follows: boolean is_array(mixed variable).\n"
    },
    {
        "id": 53,
        "Question": "Which in-built function will add a value to the end of an array?",
        "Options": [
            "a) array_unshift()",
            "b) into_array()",
            "c) inend_array()",
            "d) array_push()"
        ],
        "Answer": "Answer: d\nExplanation: array_push adds a value to the end of an array, returning the total count of elements in the array after the new value has been added.\n"
    },
    {
        "id": 54,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$state</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"Karnataka\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Goa\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Tamil Nadu\"</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"Andhra Pradesh\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">array_search</span> <span class=\"br0\">(</span><span class=\"st0\">\"Tamil Nadu\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$state</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) 1",
            "c) False",
            "d) 2"
        ],
        "Answer": "Answer: d\nExplanation: The array_search() function searches an array for a specified value, returning its key if located and FALSE otherwise.\n"
    },
    {
        "id": 55,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"orange\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"banana\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">next</span><span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">next</span><span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) orangebanana",
            "b) appleorange",
            "c) orangeorange",
            "d) appleapple"
        ],
        "Answer": "Answer: a\nExplanation: The next() function returns the value of the next element in the array. In the first ‘next($fruits)’ call, it will print orange which is next to apple and so on.\n"
    },
    {
        "id": 56,
        "Question": "Which of the following function is used to get the value of the previous element in an array?",
        "Options": [
            "a) last()",
            "b) before()",
            "c) prev()",
            "d) previous()"
        ],
        "Answer": "Answer: c\nExplanation: The prev() function returns the previous element in the array.\n"
    },
    {
        "id": 57,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"orange\"</span><span class=\"sy0\">,</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"pear\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"mango\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"banana\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 5",
            "d) 6"
        ],
        "Answer": "Answer: d\nExplanation: The function count() will return the number of elements in an array. The parameter 1 counts the array recursively i.e it will count all the elements of multidimensional arrays.\n"
    },
    {
        "id": 58,
        "Question": "Which function returns an array consisting of associative key/value pairs?",
        "Options": [
            "a) count()",
            "b) array_count()",
            "c) array_count_values()",
            "d) count_values()"
        ],
        "Answer": "Answer: c\nExplanation: The function array_count_values() will count all the values of an array. It will return an associative array, where the keys will be the original array’s values, and the values are the number of occurrences.\n"
    },
    {
        "id": 59,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$cars</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Volvo\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BMW\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Toyota\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"I like \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\", \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\" and \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I like Volvo, Toyota and BMW",
            "b) I like Volvo, BMW and Toyota",
            "c) I like BMW, Volvo and Toyota",
            "d) I like Toyota, BMW and Volvo"
        ],
        "Answer": " Answer: d\nExplanation: The order of elements defined. In the echo statement when we call the elements of array using its index, it will be printed accordingly. As index ‘0’ indicates ‘Volvo’, ‘1’ for ‘BMW’ and ‘2’ for Toyota’.\n"
    },
    {
        "id": 60,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$fname</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Peter\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Ben\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Joe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$age</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"35\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"37\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"43\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_combine</span><span class=\"br0\">(</span><span class=\"re0\">$age</span><span class=\"sy0\">,</span> <span class=\"re0\">$fname</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array (Peter Ben Joe)",
            "b) Array ([Peter] => 35 [Ben] => 37 [Joe] => 43)",
            "c) Array (35 37 43)",
            "d) Array ([35] => Peter [37] => Ben [43] => Joe)"
        ],
        "Answer": " Answer: d\nExplanation: Here “keys” array is $age and “values” array is $fname. The function array_combine() will create an array by using the elements from one “keys” array and one “values” array. So when variable c is called, it will print keys and values.\n"
    },
    {
        "id": 61,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span><span class=\"sy0\">=</span><span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Cat\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Dog\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Dog\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span><span class=\"sy0\">=</span><span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Cat\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Tiger\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$c</span><span class=\"sy0\">=</span><span class=\"kw3\">array_combine</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_count_values</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [A] => 5 [Cat] => 2 [Dog] => 2 [Tiger] => 1 )",
            "b) Array ( [A] => 2 [Cat] => 2 [Dog] => 1 [Tiger] => 1 )",
            "c) Array ( [A] => 6 [Cat] => 1 [Dog] => 2 [Tiger] => 1 )",
            "d) Array ( [A] => 2 [Tiger] => 1 )"
        ],
        "Answer": " Answer: d\nExplanation: The function The array_count_values() counts all the values of an array and the The function array_combine() will create an array by using the elements from one “keys” array and one “values” array.\n"
    },
    {
        "id": 62,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"e\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"f\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"g\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"h\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"orange\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a3</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"i\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"orange\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a4</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_merge</span><span class=\"br0\">(</span><span class=\"re0\">$a2</span><span class=\"sy0\">,</span> <span class=\"re0\">$a3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_diff</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$a4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$result</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [d] => yellow )",
            "b) Array ( [i] => orange )",
            "c) Array ( [h] => orange )",
            "d) Array ( [d] => yellow [h] => orange )"
        ],
        "Answer": " Answer: a\nExplanation: The array_diff() function compares the values of two (or more) arrays, and returns the differences. This function compares the values of two (or more) arrays, and return an array that contains the entries from array1 that are not present in other arrays (array2, array3, etc).\n"
    },
    {
        "id": 63,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"green\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a3</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_merge</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$a2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a4</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_combine</span><span class=\"br0\">(</span><span class=\"re0\">$a4</span><span class=\"sy0\">,</span> <span class=\"re0\">$a3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [a] => blue [b] => yellow [c] => red [d] => green )",
            "b) Array ( [0] => blue [1] => yellow [2] => red [3] => green )",
            "c) Array ( [0] => red [1] => green [2] => blue [3] => yellow )",
            "d) Array ( [a] => red [b] => green [c] => blue [d] => yellow )"
        ],
        "Answer": " Answer: d\nExplanation: The function array_merge() merges one or more arrays into one array. If in the function array_merge(), two or more array elements have the same key, the last one overrides the others. The function array_combine() will create an array by using the elements from one “keys” array and one “values” array. The program is the basic combined application of array_combine() and array_merge().\n"
    },
    {
        "id": 64,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$names</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Sam\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bob\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Jack\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"is the brother of \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\" and \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sam is the brother of Bob and Jack",
            "b) Samis the brother of Bob and Bob",
            "c) Sam is the brother of Jack and Bob",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: The function array_shift() removes the first element from an array, and it returns the value of the removed element and the function array_pop() deletes the last element of an array. So “a” => “India”, “c” => “China” will be deleted and “b” => “Brazil” will be printed.\n"
    },
    {
        "id": 65,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$names</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Sam\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bob\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Jack\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"st0\">\"is the brother of \"</span><span class=\"sy0\">.</span><span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"st0\">\" and \"</span><span class=\"sy0\">.</span><span class=\"re0\">$names</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"st0\">\".\"</span><span class=\"sy0\">.</span><span class=\"re0\">$brother</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sam is the brother of Bob and Bob) $brother",
            "b) Sam is the brother of Bob and Bob)",
            "c) $brother",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Usage of array_fill() and array_merge() functions.\n"
    },
    {
        "id": 66,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$place</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"NYC\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Paris\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">array_pop</span><span class=\"br0\">(</span><span class=\"re0\">$place</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$place1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Paris\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$place</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_merge</span><span class=\"br0\">(</span><span class=\"re0\">$place</span><span class=\"sy0\">,</span> <span class=\"re0\">$place1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$place</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => LA [1] => Paris [2] => Paris )",
            "b) Array ( [0] => NYC [1] => LA [2] => Paris)",
            "c) Array ( [0] => NYC [1] => LA [2] => Paris [3] => Paris )",
            "d) Array ( [0] => LA [1] => Paris )"
        ],
        "Answer": " Answer: b\nExplanation: Simple definition of array and using it in a string. We have used $names[1] twice and hence Bob appears twice.\n"
    },
    {
        "id": 67,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"re0\">$age</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Harry\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"21\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Ron\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"23\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Malfoy\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"21\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw3\">array_pop</span><span class=\"br0\">(</span><span class=\"re0\">$age</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_change_key_case</span><span class=\"br0\">(</span><span class=\"re0\">$age</span><span class=\"sy0\">,</span> CASE_UPPER<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [Harry] => 21 [Ron] => 23 [Malfoy] => 21 )",
            "b) Array ( [HARRY] => 21 [RON] => 23 [MALFOY] => 21 )",
            "c) Array ( [HARRY] => 21 [RON] => 23 )",
            "d) Array ( [Harry] => 21 [Ron] => 23 )"
        ],
        "Answer": " Answer: c\nExplanation: The function array_pop() will delete the last element of an array. So Malfoy => 21 will be deleted and the function array_change_key_case() will change all keys in an array to lowercase or uppercase.\n"
    },
    {
        "id": 68,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_flip</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$result</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [red] => red [green] => green [blue] => blue [yellow] => yellow )",
            "b) Array ( [a] => a [b] => b [c] => c [d] => d )",
            "c) Array ( [red] => a [green] => b [blue] => c [yellow] => d )",
            "d) Array ( [a] => red [b] => green [c] => blue [d] => yellow )"
        ],
        "Answer": " Answer: c\nExplanation: The function array_flip() flips/exchanges all keys with their associated values in an array. So, in the above program “a” will be flipped with “red”, “b” will be flipped with “green” and so on.\n"
    },
    {
        "id": 69,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"e\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"f\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"g\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"blue\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_intersect</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$a2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$result</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [a] => red [b] => green [c] => blue )",
            "b) Array ( [a] => red [b] => green [c] => blue [d] => yellow )",
            "c) Array ( [e] => red [f] => green [g] => blue )",
            "d) Array ( [a] => red [b] => green [c] => blue [d] => yellow [e] => red [f] => green [g] => blue )"
        ],
        "Answer": " Answer: a\nExplanation: The function array_intersect() compares the values of two (or more) arrays, and returns the matches. So, in the above program values of a1 and a2 will be compared and the values present in both the arrays will be the returned.\n"
    },
    {
        "id": 70,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"kw3\">array_product</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 024",
            "b) 120",
            "c) 010",
            "d) 060"
        ],
        "Answer": " Answer: b\nExplanation: The array_product() function calculates and returns the product of an array.\n"
    },
    {
        "id": 71,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Jaguar\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Land Rover\"</span><span class=\"sy0\">,</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st0\">\"c\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Audi\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span> <span class=\"sy0\">=&gt;</span> <span class=\"st0\">\"Maseratti\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"kw3\">array_search</span><span class=\"br0\">(</span><span class=\"st0\">\"Audi\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) b",
            "c) c",
            "d) d"
        ],
        "Answer": " Answer: c\nExplanation: The array_search() function searches for the element and returns the key of that element.\n"
    },
    {
        "id": 72,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$city_west</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"NYC\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"London\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$city_east</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Mumbai\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Beijing\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span>array_replace<span class=\"br0\">(</span><span class=\"re0\">$city_west</span><span class=\"sy0\">,</span> <span class=\"re0\">$city_east</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [1] => Mumbai [0] => Beijing )",
            "b) Array ( [0] => NYC [1] => London )",
            "c) Array ( [1] => NYC [0] => London )",
            "d) Array ( [0] => Mumbai [1] => Beijing )"
        ],
        "Answer": " Answer: d\nExplanation: The function array_replace() replaces the values of the first array with the values from following arrays. So, in the above program the values of city_west will be replaced with city_east.\n"
    },
    {
        "id": 73,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$people</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Peter\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Susan\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Edmund\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Lucy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"kw3\">pos</span><span class=\"br0\">(</span><span class=\"re0\">$people</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Lucy",
            "b) Peter",
            "c) Susan",
            "d) Edmund"
        ],
        "Answer": " Answer: b\nExplanation: The pos() function returns the value of the current element in an array, and since no operation has been done, the current element is the first element.\n"
    },
    {
        "id": 74,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$number</span> <span class=\"sy0\">=</span> <span class=\"kw3\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$number</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => 0 [1] => 1 [2] => 2 [3] => 3 [4] => 4 [5] => 5 )",
            "b) Array ( [0] => 0 [1] => 0 [2] => 0 [3] => 0 [4] => 0 [5] => 0 )",
            "c) Array ( [0] => 5 [1] => 5 [2] => 5 [3] => 5 [4] => 5 [5] => 5 )",
            "d) Array ( [0] => 0 [5] => 5 )"
        ],
        "Answer": " Answer: a\nExplanation: The range() function creates an array containing a range of elements.\n"
    },
    {
        "id": 75,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$array</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"green\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">array_push</span><span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"sy0\">,</span> <span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$array</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => red [1] => green [2] => blue [3] => yellow )",
            "b) Array ( [0] => blue [1] => yellow [2] => red [3] => green )",
            "c) Array ( [0] => red [1] => green )",
            "d) Array ( [0] => blue [1] => yellow )"
        ],
        "Answer": " Answer: a\nExplanation: The function array_push() inserts one or more elements to the end of an array. So, in the above program blue and yellow will be inserted after previous values.\n"
    },
    {
        "id": 76,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$cars</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Volvo\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BMW\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Toyota\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"I like \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\", \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\" and \"</span> <span class=\"sy0\">.</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">.</span> <span class=\"st0\">\".\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I like Volvo BMW and Toyota.",
            "b) I like Volvo, BMW and Toyota)",
            "c) I like Volvo, BMW and Toyota.",
            "d) I like. Volvo.,. BMW. and.  Toyota)"
        ],
        "Answer": " Answer: b\nExplanation: The array() function is used to create an array. Each elements are assigned ab index as the rule of an array. So, calling $cars[0] will print element at index 0 and so on.\n"
    },
    {
        "id": 77,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$age</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Peter\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"35\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Ben\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"37\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Joe\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"43\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_change_key_case</span><span class=\"br0\">(</span><span class=\"re0\">$age</span><span class=\"sy0\">,</span> CASE_UPPER<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [Peter] => 35 [Ben] => 37 [Joe] => 43 )",
            "b) Array ( [peter] => 35 [ben] => 37 [joe] => 43 )",
            "c) Array ( [PETER] => 35 [BEN] => 37 [JOE] => 43 )",
            "d) Array ( [PeTeR] => 35 [BeN] => 37 [Joe] => 43 )"
        ],
        "Answer": " Answer: c\nExplanation: The array_change_key_case() function changes all keys in an array to lowercase or uppercase.\n"
    },
    {
        "id": 78,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$cars</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Volvo\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BMW\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Toyota\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Honda\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Mercedes\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Opel\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_chunk</span><span class=\"br0\">(</span><span class=\"re0\">$cars</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => Array ( [1] => Volvo [2] => BMW ) [1] => Array ( [1] => Toyota [2] => Honda ) [2] => Array ( [1] => Mercedes [2] => Opel ) )",
            "b) Array ( [1] => Array ( [1] => Volvo [2] => BMW ) [2] => Array ( [1] => Toyota [2] => Honda ) [3] => Array ( [1] => Mercedes [2] => Opel ) )",
            "c) Array ( [0] => Array ( [0] => Volvo [1] => Volvo ) [1] => Array ( [0] => BMW [1] => BMW ) [2] => Array ( [0] => Toyota [1] => Toyota ) )",
            "d) Array ( [0] => Array ( [0] => Volvo [1] => BMW ) [1] => Array ( [0] => Toyota [1] => Honda ) [2] => Array ( [0] => Mercedes [1] => Opel ) )"
        ],
        "Answer": " Answer: d\nExplanation: The array_chunk() function splits an array into chunks of new arrays.\n"
    },
    {
        "id": 79,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$fname</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Peter\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Ben\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Joe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$age</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"35\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"37\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"43\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_combine</span><span class=\"br0\">(</span><span class=\"re0\">$fname</span><span class=\"sy0\">,</span> <span class=\"re0\">$age</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$c</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( Peter Ben Joe )",
            "b) Array ( [Peter] => 35 [Ben] => 37 [Joe] => 43 )",
            "c) Array ( 35 37 43 )",
            "d) Array ( “[Peter] => 35” “[Ben] => 37” “[Joe] => 43” )"
        ],
        "Answer": " Answer: b\nExplanation: The array_combine() function creates an array by using the elements from one “keys” array and one “values” array.\n"
    },
    {
        "id": 80,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Cat\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Dog\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Dog\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_count_values</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [A] => 2 [Cat] => 1 [Dog] => 2 )",
            "b) Array ( [A] => 2 [Cat] => 2 [Dog] => 1 )",
            "c) Array ( [A] => 1 [Cat] => 1 [Dog] => 2 )",
            "d) Array ( [A] => 2 [Cat] => 1 [Dog] => 1)"
        ],
        "Answer": " Answer: a\nExplanation: The array_count_values() function counts all the values of an array.\n"
    },
    {
        "id": 81,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"d\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"e\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"f\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"g\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"blue\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_diff</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$a2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$result</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [d] => yellow )",
            "b) Array ( [c] => blue )",
            "c) Array ( [a] => red )",
            "d) Array ( [e] => yellow )"
        ],
        "Answer": " Answer: a\nExplanation: The array_diff() function compares the values of two (or more) arrays, and returns the differences.\n"
    },
    {
        "id": 82,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"green\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"blue\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"yellow\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">array_merge</span><span class=\"br0\">(</span><span class=\"re0\">$a1</span><span class=\"sy0\">,</span> <span class=\"re0\">$a2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => red [1] => green)",
            "b) Array ( [0] => blue [1] => yellow [2] => red [3] => green )",
            "c) Array ( [0] => red [1] => green [2] => blue [3] => yellow )",
            "d) Array ( [0] => blue [1] => yellow )"
        ],
        "Answer": " Answer: d\nExplanation: The array_fill() function fills an array with values.\n"
    },
    {
        "id": 83,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"b\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"c\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"blue\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"kw3\">array_shift</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) green",
            "b) red",
            "c) redArray( [c] => green [c] => blue )",
            "d) redArray( [b] => green [c] => blue )"
        ],
        "Answer": " Answer: c\nExplanation: The array_merge() function merges one or more arrays into one array.\n"
    },
    {
        "id": 84,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"red\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"blue\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">array_pop</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => red [1] => green )",
            "b) Array ( [0] => green [1] => blue )",
            "c) Array ( [0] => red [1] => blue )",
            "d) Array ( [0] => blue [1] => blue )"
        ],
        "Answer": " Answer: d\nExplanation: The array_shift() function removes the first element from an array, and returns the value of the removed element.\n"
    },
    {
        "id": 85,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"mango\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"pear\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"peach\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_flip</span><span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) mango",
            "b) error",
            "c) peach",
            "d) 0"
        ],
        "Answer": "Answer: b\nExplanation: As we are flipping the values, $fruits[“mango”] = 0, $fruits[“apple”] = 1 and so on.\n"
    },
    {
        "id": 86,
        "Question": "Which of the functions is used to sort an array in descending order?",
        "Options": [
            "a) sort()",
            "b) asort()",
            "c) rsort()",
            "d) dsort()"
        ],
        "Answer": "Answer: c\nExplanation: The function sort() will sort the  arrays in ascending order, the function rsort() will sort arrays in descending order. While the function asort() will sort associative arrays in ascending order, according to the value.\n"
    },
    {
        "id": 87,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"mango\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"peach\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"pear\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">asort</span> <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    printr <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [1] => apple [0] => mango [2] => peach [3] => pear )",
            "b) Array ( [0] => apple [1] => mango [2] => peach [3] => pear )",
            "c) Error",
            "d) Array ( [1] => apple [0] => mango [3] => peach [2] => pear )"
        ],
        "Answer": "Answer: c\nExplanation: The program will give an error i.e. uncaught error: call to undefined function printr(). As the correct function is print_r().\n"
    },
    {
        "id": 88,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$arr</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"picture1.JPG\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"picture2.jpg\"</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"Picture10.jpg\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"picture20.jpg\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">sort</span><span class=\"br0\">(</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$arr</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => picture1.JPG [1] => Picture10.jpg [2] => picture2.jpg [3] => picture20.jpg )",
            "b) Array ( [0] => picture1.JPG [1] => picture2.jpg [2] => Picture10.jpg [3] => picture20.jpg )",
            "c) Array ( [0] => Picture10.jpg [1] => picture1.JPG [2] => picture2.jpg [3] => picture20.jpg )",
            "d) Array ( [0] => Picture10.jpg [1] => picture1.JPG [2] => picture20.jpg [3] => picture2.jpg )"
        ],
        "Answer": "Answer: c\nExplanation: The function sort() in PHP sorts an indexed array in  ascending order. While sorting, each character is compared with the others and sorted using ASCII values.\n"
    },
    {
        "id": 89,
        "Question": "Which function should we use to sort the array in natural order?",
        "Options": [
            "a) dsort()",
            "b) casesort()",
            "c) natcasesort()",
            "d) naturalsort()"
        ],
        "Answer": "Answer: c\nExplanation: The function natcasesort() in PHP sorts an array by using a “natural order” algorithm. All the values keep their original keys. Eg: In a natural algorithm, as the number 2 is less than the number 10. But in computer sorting, 10 is less than 2, because the first number in “10” is less than 2. The function is case-insensitive.\n"
    },
    {
        "id": 90,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$face</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"J\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Q\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"K\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$number</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"2\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"3\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"4\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"5\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"6\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"7\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"8\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"9\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"10\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$cards</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_merge</span> <span class=\"br0\">(</span><span class=\"re0\">$face</span><span class=\"sy0\">,</span> <span class=\"re0\">$number</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$cards</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => A [1] => J [2] => Q [3] => K [4] => 2 [5] => 3 [6] => 4 [7] => 5 [8] => 6 [9] => 7 [10] => 8 [11] => 9 [12] => 10 )",
            "b) Array ( [0] => A [1] => 2 [2] => J [3] => 3 [4] => Q [5] => 4 [6] => K [7] => 5 [8] => 6 [9] => 7 [10] => 8 [11] => 9 [12] => 10 )",
            "c) Error",
            "d) Array ( [0] => 2 [1] => 3 [2] => 4 [3] => 5 [4] => 6 [5] => 7 [6] => 8 [7] => 9 [8] => 10 [9] => A [10] => J [11] => Q [12] => K )"
        ],
        "Answer": "Answer: a\nExplanation: The array_merge() function merges one or more arrays into one array. The resulting array will begin with the first input array parameter, appending each subsequent array parameter in the order of appearance.\n"
    },
    {
        "id": 91,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"mango\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"peach\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"pear\"</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"orange\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$subset</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_slice</span> <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$subset</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => peach )",
            "b) Array ( [0] => apple [1] => mango [2] => peach )",
            "c) Array ( [0] => apple [1] => mango )",
            "d) Array ( [0] => peach [1] => pear [2] => orange )"
        ],
        "Answer": "Answer: d\nExplanation: The array_slice() function returns a section of an array based on a starting and ending offset value.\n"
    },
    {
        "id": 92,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$fruits</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"apple\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"mango\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"peach\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"pear\"</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">\"orange\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$subset</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_splice</span> <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$fruits</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Array ( [0] => apple [1] => mango [2] => peach )",
            "c) Array ( [0] => apple [1] => mango )",
            "d) Array ( [0] => pear [1] => orange )"
        ],
        "Answer": "Answer: c\nExplanation: The array_splice() function removes all elements of an array found within a specified range.\n"
    },
    {
        "id": 93,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$number</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"4\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">array_sum</span> <span class=\"br0\">(</span><span class=\"re0\">$number</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4hello2",
            "b) 4",
            "c) 2",
            "d) 6"
        ],
        "Answer": "Answer: d\nExplanation: The array_sum() function add all the values of the input array together, returning the final sum. If a string datatype is found, it’ll be ignored.\n"
    },
    {
        "id": 94,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$array1</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"KA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"LA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"MA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"TA\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$array2</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"KA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"IA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"CA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"GA\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"TA\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$inter</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array_intersect</span> <span class=\"br0\">(</span><span class=\"re0\">$array1</span><span class=\"sy0\">,</span> <span class=\"re0\">$array2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"re0\">$inter</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => KA [1] => LA [2] => CA [3] => MA [4] => TA [5] => IA [6] => GA )",
            "b) Array ( [0] => KA [2] => CA [4] => TA )",
            "c) Array ( [1] => IA [3] => GA )",
            "d) Array ( [1] => LA [3] => MA )"
        ],
        "Answer": "Answer: b\nExplanation: The array_intersect() function returns a key preserved array consisting only of those values present in the first array that are also present in each of the other input arrays.\n"
    },
    {
        "id": 95,
        "Question": "The practice of separating the user from the true inner workings of an application through well-known interfaces is known as _________",
        "Options": [
            "a) Polymorphism",
            "b) Inheritance",
            "c) Encapsulation",
            "d) Abstraction"
        ],
        "Answer": "Answer: c\nExplanation: In object-oriented PHP encapsulation is a concept of wrapping up or binding up the data members and methods in a single module.\n"
    },
    {
        "id": 96,
        "Question": "Which of the following term originates from the Greek language that means “having multiple forms,” defines OOP’s ability to redefine, a class’s characteristics?",
        "Options": [
            "a) Abstraction",
            "b) Polymorphism",
            "c) Inheritance",
            "d) Differential"
        ],
        "Answer": "Answer: b\nExplanation: The word polymorphism is derived from Greek word poly which means “many” and morphism which means the property which helps us to assign more than one property.\n"
    },
    {
        "id": 97,
        "Question": "The practice of creating objects based on predefined classes is often referred to as ______________",
        "Options": [
            "a) class creation",
            "b) object creation",
            "c) object instantiation",
            "d) class instantiation"
        ],
        "Answer": "Answer: d\nExplanation: In object-oriented programming, classes are the blueprints of php objects. Classes do not actually become objects until instantiation is done. When someone instantiates a class, it creates an instance of it, thus creating the object. In other words, instantiation is the process of creating an instance of an object in memory.\n"
    },
    {
        "id": 98,
        "Question": "Which one of the following property scopes is not supported by PHP?",
        "Options": [
            "a) friendly",
            "b) final",
            "c) public",
            "d) static"
        ],
        "Answer": "Answer: a\nExplanation: PHP supports five class property scopes: public, private, protected, final and static.\n"
    },
    {
        "id": 99,
        "Question": "Which one of the following can be used to instantiate an object in PHP assuming class name to be Foo?",
        "Options": [
            "a) $obj = new $foo;",
            "b) $obj = new foo;",
            "c) $obj = new foo ();",
            "d) obj = new foo ();"
        ],
        "Answer": "Answer: c\nExplanation: To create a new object in PHP we can use the new statement to instantiate a class.\n"
    },
    {
        "id": 100,
        "Question": "Which one of the following is the right way to define a constant?",
        "Options": [
            "a) constant PI = “3.1415”;",
            "b) const $PI = “3.1415”;",
            "c) constant PI = ‘3.1415’;",
            "d) const PI = ‘3.1415’;"
        ],
        "Answer": "Answer: d\nExplanation: Class constants are created like: const NAME = ‘VALUE’;\n"
    },
    {
        "id": 101,
        "Question": "Which one of the following is the right way to call a class constant, given that the class is mathFunction?",
        "Options": [
            "a) echo PI;",
            "b) echo mathFunction->PI;",
            "c) echo mathFunction::PI;",
            "d) echo mathFunction=PI;"
        ],
        "Answer": "Answer: c\nExplanation: The Scope Resolution Operator “::” is a token that allows access to static, constant, and overridden properties or methods of a class.\n"
    },
    {
        "id": 102,
        "Question": "Which one of the following is the right way to invoke a method?",
        "Options": [
            "a) $object->methodName();",
            "b) object->methodName();",
            "c) object::methodName();",
            "d) $object::methodName();"
        ],
        "Answer": "Answer: a\nExplanation: “->” is a dynamic class method invocation in PHP.\n"
    },
    {
        "id": 103,
        "Options": [
            "a) Only ii)",
            "b) Only iv)",
            "c) i) and ii)",
            "d) iii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: In case of public methods, you can forgo explicitly declaring the scope and just declare the method like you would a function.\n"
    },
    {
        "id": 104,
        "Question": "",
        "Options": [
            "a) Only ii)",
            "b) Only iv)",
            "c) ii) and iv)",
            "d) Only i)"
        ],
        "Answer": "Answer: a\nExplanation: PHP supports six method scopes: public, private, final, static, protected and abstract. But it does not support friendly.\n"
    },
    {
        "id": 105,
        "Question": "Which method scope prevents a method from being overridden by a subclass?",
        "Options": [
            "a) Abstract",
            "b) Protected",
            "c) Final",
            "d) Static"
        ],
        "Answer": "Answer: c\nExplanation: When we declare a method is as final then it is not possible to override that method. Methods should not be overridden due to some security or any other reasons.\n"
    },
    {
        "id": 106,
        "Options": [
            "a) ii)",
            "b) ii) and iii)",
            "c) i), ii), iii) and iv)",
            "d) ii), iii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: If a class name and the function name is similar then the function is known as constructor. Constructor is automatically called when an object will be initialized. Constructors can accept parameters. Constructors can call class methods or other functions. Class constructors can call on other constructors.\n"
    },
    {
        "id": 107,
        "Question": "PHP recognizes constructors by the name _________",
        "Options": [
            "a) classname()",
            "b) _construct()",
            "c) function _construct()",
            "d) function __construct()"
        ],
        "Answer": "Answer: d\nExplanation: A double underscore followed by the construct keyword. Its syntax is function __construct ([ argument1, argument2,…..]) { Class Initialization code }.\n"
    },
    {
        "id": 108,
        "Question": "Which version of PHP introduced the instanceof keyword?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.3",
            "d) PHP 6"
        ],
        "Answer": "Answer: b\nExplanation: Using instanceof keyword we can determine whether an object is an instance of a class. $manager = new Employee() … if ($manager instanceof Employee) echo “True”;\n"
    },
    {
        "id": 109,
        "Question": "Which one of the following functions is used to determine whether a class exists?",
        "Options": [
            "a) exist()",
            "b) exist_class()",
            "c) class_exist()",
            "d) __exist()"
        ],
        "Answer": "Answer: c\nExplanation: The class_exist() function returns true or false according to whether the class exists within the currently executing script content.\n"
    },
    {
        "id": 110,
        "Question": "Which one of the following functions is used to determine object type?",
        "Options": [
            "a) obj_type()",
            "b) type()",
            "c) is_a()",
            "d) is_obj()"
        ],
        "Answer": "Answer: c\nExplanation: The is_a() function returns true if object belongs to a class type or if it belongs to a class that is a child of that class. Or else false is returned.\n"
    },
    {
        "id": 111,
        "Question": "Which one of the following keyword is used to inherit our subclass into a superclass?",
        "Options": [
            "a) extends",
            "b) implements",
            "c) inherit",
            "d) include"
        ],
        "Answer": "Answer: a\nExplanation: When we extend a class then the subclass will inherit all the public and protected methods from the parent class.\nThe keyword implements are used with interfaces. With inheritance, we use the keyword extends.\n"
    },
    {
        "id": 112,
        "Question": "8. In the following PHP code, what is/are the properties?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">class</span> Example </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">public</span> <span class=\"re0\">$name</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> Sample<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"This is an example\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) echo “This is an example”;",
            "b) public $name;",
            "c) class Example",
            "d) function sample()"
        ],
        "Answer": "Answer: b\nExplanation: Above code is an example of ‘classes’ in PHP.  Classes are the blueprints of objects. Classes are the programmer-defined data type, which includes the local methods and the local variables. Class is a collection of objects which has properties and behaviour.\n"
    },
    {
        "id": 113,
        "Question": "Which keyword is used to refer to properties or methods within the class itself?",
        "Options": [
            "a) private",
            "b) public",
            "c) protected",
            "d) $this"
        ],
        "Answer": "Answer: d\nExplanation: In PHP, the self and ‘this’ keyword are used to refer the class members within the scope of a class itself. The class members can be either variables or functions.\n"
    },
    {
        "id": 114,
        "Question": "Which keyword allows class members (methods and properties) to be used without needing to instantiate a new instance of the class?",
        "Options": [
            "a) protected",
            "b) final",
            "c) static",
            "d) private"
        ],
        "Answer": "Answer: c\nExplanation: Sometimes it is very handy to access the methods and properties in terms of a class rather than an object. But this can be done through static keyword. Any method declared as ‘static’ can be accessed without the creation of an object.\n"
    },
    {
        "id": 115,
        "Options": [
            "a) i)",
            "b) ii)",
            "c) i) and ii)",
            "d) iii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: The advanced OOP features are: Object cloning, Inheritance, Interfaces, Abstract classes, and Namespaces.\n"
    },
    {
        "id": 116,
        "Question": "Which version of PHP introduced the advanced concepts of OOP?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.3",
            "d) PHP 6"
        ],
        "Answer": "Answer: b\nExplanation: Advanced concepts of OOP were introduced in PHP version 5.\n"
    },
    {
        "id": 117,
        "Question": "Which one of the following is the right way to clone an object?",
        "Options": [
            "a) _clone(targetObject);",
            "b) destinationObject = clone targetObject;",
            "c) destinationObject = _clone(targetObject);",
            "d) destinationObject = clone(targetObject);"
        ],
        "Answer": "Answer: b\nExplanation: You can clone an object by prefacing it with the clone keyword. A copy of an object is created by using the clone keyword. $copy_of_object = clone $object;\n"
    },
    {
        "id": 118,
        "Question": "",
        "Options": [
            "a) Only i)",
            "b) ii), iii) and iv)",
            "c) Only iii)",
            "d) ii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: The class whose properties are inherited by child class is called Base Class or Parent class.\n"
    },
    {
        "id": 119,
        "Question": "If one intends to create a model that will be assumed by a  number of closely related objects, which class must be used?",
        "Options": [
            "a) Normal class",
            "b) Static class",
            "c) Abstract class",
            "d) Interface"
        ],
        "Answer": "Answer: a\nExplanation: The abstract classes are the classes in which at least one method need to be abstract. Abstract classes in PHP are declared with the help of abstract keyword.\n"
    },
    {
        "id": 120,
        "Question": "If your object must inherit behavior from a number of sources you must use a/an",
        "Options": [
            "a) Interface",
            "b) Object",
            "c) Abstract class",
            "d) Static class"
        ],
        "Answer": "Answer: c\nExplanation: The abstract classes are the classes in which at least one method need to be abstract. Abstract classes in PHP are declared with the help of keyword abstract. The use of class abstract are that all base classes implementing abstract class should give implementation of abstract methods declared in parent class.\n"
    },
    {
        "id": 121,
        "Question": "Which method is used to tweak an object’s cloning behavior?",
        "Options": [
            "a) clone()",
            "b) __clone()",
            "c) _clone",
            "d) object_clone()"
        ],
        "Answer": "Answer: a\nExplanation: An interface in PHP consists of methods that have no implementations, i.e. the interface methods are abstract methods. The methods in the interfaces must have public visibility scope. The interfaces are different from classes as the class can inherit from one class only whereas the class can implement one or more interfaces.\n"
    },
    {
        "id": 122,
        "Question": "Which feature allows us to call more than one method or function of the class in single instruction?",
        "Options": [
            "a) Typecasting",
            "b) Method Including",
            "c) Method adding",
            "d) Method chaining"
        ],
        "Answer": "Answer: b\nExplanation: A copy of an object is created by using the clone keyword, which calls the object’s __clone() method.\n"
    },
    {
        "id": 123,
        "Question": "Which magic method is used to implement overloading in PHP?",
        "Options": [
            "a) __call",
            "b) __invoke",
            "c) __wakeup",
            "d) __unset"
        ],
        "Answer": "Answer: d\nExplanation: When many methods are called in a single instruction in PHP, it is called method chaining. Following is a basic example of method chaining in php:\n\n\n$a = new Order();\n$a->CreateOrder()->sendOrderEmail()->createShipment();\n\n\n"
    },
    {
        "id": 124,
        "Question": "How many error levels are available in PHP?",
        "Options": [
            "a) 14",
            "b) 15",
            "c) 16",
            "d) 17"
        ],
        "Answer": "Answer: c\nExplanation: Whenever the PHP engine encounters any problem that prevents a script from running properly it generates an error message. There are sixteen error levels and each level is represented by an integer value and an associated constant.\n"
    },
    {
        "id": 125,
        "Question": "What is the description of Error level E_ERROR?",
        "Options": [
            "a) Fatal run-time error",
            "b) Near-fatal error",
            "c) Compile-time error",
            "d) Fatal Compile-time error"
        ],
        "Answer": "Answer: a\nExplanation: E_ERROR is a fatal run-time error, that can’t be recovered from and the execution of the script is stopped immediately.\n"
    },
    {
        "id": 126,
        "Question": "Which version of PHP introduced E_STRICT Error level?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: b\nExplanation: E_STRICT is PHP version portability suggestions. It is not strictly an error, but it is triggered whenever PHP encounters code that could lead to problems or forward incompatibilities.\n"
    },
    {
        "id": 127,
        "Question": "Which character does the error_reporting directive use to represent the logical operator NOT?",
        "Options": [
            "a) /",
            "b) !",
            "c) ~",
            "d) ^"
        ],
        "Answer": "Answer: c\nExplanation: The twidle (~) character is used to represent the logical operator NOT.\n"
    },
    {
        "id": 128,
        "Question": "Say you want to report error concerned about fatal run-time, fatal compile-time error and core error which statement would you use?",
        "Options": [
            "a) error_reporting = E_ALL",
            "b) error_reporting = E_ERROR | E_PARSE | E_CORE_ERROR",
            "c) error_reporting = E_ERROR | E_COMPILE_WARNING | E_CORE_ERROR",
            "d) error_reporting = E_ERROR | E_COMPILE_ERROR | E_CORE_ERROR"
        ],
        "Answer": "Answer: d\nExplanation: E_ERROR is a fatal run-time error, that can’t be recovered from. E_COMPILE_ERROR is a fatal error that occurs while the script was being compiled. And E_CORE_ERROR is a fatal error that occurs during the PHP’s engine initial startup.\n"
    },
    {
        "id": 129,
        "Question": "Which version introduced the function error_get_last()?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: c\nExplanation: This function returns an associative array consisting of the type, message, file, and line of the last occurring error.\n"
    },
    {
        "id": 130,
        "Question": "Which of the following statements causes PHP to disregard repeated error messages that occur within the same file and on the same line?",
        "Options": [
            "a) ignore_repeated_errors",
            "b) ignore_repeat_error",
            "c) repeatedly_ignore_error",
            "d) repeated_error_ignore"
        ],
        "Answer": "Answer: a\nExplanation: ignore_repeated_errors will not log repeated messages. The repeated errors must occur in the same file on the same line unless ignore_repeated_source is set to true.\n"
    },
    {
        "id": 131,
        "Question": "Which function initializes the constants necessary for using the openlog(), clodelog(), and syslog() functions?",
        "Options": [
            "a) define_variable()",
            "b) define_log_variable()",
            "c) log_variable()",
            "d) define_syslog_variable()"
        ],
        "Answer": "Answer: d\nExplanation: If you’re running PHP version 5.2.X or older, you need to execute this function before using any of the following logging functions.\n"
    },
    {
        "id": 132,
        "Question": "Which logging option’s description is if an error occurs when writing to the syslog, send output to the system console?",
        "Options": [
            "a) LOG_CONS",
            "b) LOG_NDELAY",
            "c) LOG_ODELAY",
            "d) LOG_PERROR"
        ],
        "Answer": "Answer: a\nExplanation: If there is an error while sending data to the system logger, LOG_CONS will write directly to the system console.\n"
    },
    {
        "id": 133,
        "Question": "Which function is responsible for sending a custom message to the system log?",
        "Options": [
            "a) systemlog()",
            "b) syslog()",
            "c) log_system()",
            "d) sys_log()"
        ],
        "Answer": "Answer: b\nExplanation: The function syslog() generates a log message that will be distributed by the system logger.\n"
    },
    {
        "id": 134,
        "Question": "Which version of PHP was added with Exception handling?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.3",
            "d) PHP 6"
        ],
        "Answer": "Answer: b\nExplanation: Exception handling was added to PHP with the version 5 release, and further enhanced with version 5.3.\n"
    },
    {
        "id": 135,
        "Question": "How many methods are available for the exception class?",
        "Options": [
            "a) 5",
            "b) 6",
            "c) 7",
            "d) 8"
        ],
        "Answer": "Answer: c\nExplanation: The seven methods are: getCode(), getFile(), getLine(), getMessage(), getPrevious(), getTrace(), getTraceAsString().\n"
    },
    {
        "id": 136,
        "Question": "Which version added the method getPrevious()?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.1",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: d\nExplanation: The function getPrevious() returns previous exception.\n"
    },
    {
        "id": 137,
        "Question": "Which of the following statements invoke the exception class?",
        "Options": [
            "a) throws new Exception();",
            "b) throw new Exception();",
            "c) new Exception();",
            "d) new throws Exception();"
        ],
        "Answer": "Answer: b\nExplanation: throw new Exception(); trigger an exception and each “throw” must have at least one “catch”.\n"
    },
    {
        "id": 138,
        "Question": "Which one of the following is the right description for the method getMessage()?",
        "Options": [
            "a) Returns the message if it is passed to the constructor",
            "b) Returns the message if it is passed to the class",
            "c) Returns the message if it is passed to the file",
            "d) Returns the message if it is passed to the object"
        ],
        "Answer": "Answer: a\nExplanation: The function getMessage() gets the exception message. It returns the message if it is passed to the constructor.\n"
    },
    {
        "id": 139,
        "Question": "You can extend the exception base class, but you cannot override any of the preceding methods because the are declared as__________",
        "Options": [
            "a) protected",
            "b) final",
            "c) static",
            "d) private"
        ],
        "Answer": "Answer: b\nExplanation: Marking a method as final prevents it from being overridden by a subclass.\n"
    },
    {
        "id": 140,
        "Question": "What does SPL stand for?",
        "Options": [
            "a) Standard PHP Library",
            "b) Source PHP Library",
            "c) Standard PHP List",
            "d) Source PHP List"
        ],
        "Answer": "Answer: a\nExplanation: The standard PHP library(SPL) extends PHP by offering ready-made solutions to commonplace tasks such as file access, iteration of various sorts etc.\n"
    },
    {
        "id": 141,
        "Question": "How many predefined exceptions does SPL provide access to?",
        "Options": [
            "a) 13",
            "b) 14",
            "c) 15",
            "d) 16"
        ],
        "Answer": "Answer: a\nExplanation: It provides 13 exceptions: BadFunctionCallException, BadMethodCallException, DomainException, InvalidArgumentException, LengthException, LogicException, OutOfBoundsException, OutOfRangeException, OverflowException, RangeException, RuntimeException, UnderflowException, UnexpectedValueException.\n"
    },
    {
        "id": 142,
        "Options": [
            "a) Only ii)",
            "b) Only iii)",
            "c) i), ii), iii) and iv)",
            "d) Only iv)"
        ],
        "Answer": "Answer: c\nExplanation: There are total 13 types of predefined exceptions SPL provide access to. BadFunctionCallException,BadMethodCallExceptio,  LogicException, DomainException are also included in the exceptions.\n"
    },
    {
        "id": 143,
        "Question": "",
        "Options": [
            "a) i)",
            "b) i) and iii)",
            "c) i) and ii)",
            "d) i), ii), iii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: The exception is thrown if a value is not a valid key. This represents errors that cannot be detected at compile time. OutOfBoundException, OutOfRangeException, OverflowException, UnderflowException are valid exceptions in PHP.\n"
    },
    {
        "id": 144,
        "Options": [
            "a) Only ii)",
            "b) ii) and iii)",
            "c) Only iii)",
            "d) i), ii), iii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: The web applications receives external input. External input/data can be: User input from a form, Cookies, Web services data, Server variables and, Database query results.\n"
    },
    {
        "id": 145,
        "Question": "How many types of filtering are present in PHP?",
        "Options": [
            "a) 3",
            "b) 2",
            "c) 4",
            "d) None"
        ],
        "Answer": "Answer: b\nExplanation: There are two main types of filtering: validation and sanitization.\n"
    },
    {
        "id": 146,
        "Question": "Which one of the following filter is used to filter several variables with the same or different filters?",
        "Options": [
            "a) filter_var_array()",
            "b) filter_var()",
            "c) filter_input",
            "d) filter_input_array"
        ],
        "Answer": "Answer: a\nExplanation: The function filter_var_array() can get multiple variables and it optionally filters them. The function is useful for filtering many values without calling filter_var().\n"
    },
    {
        "id": 147,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"123\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw3\">filter_var</span><span class=\"br0\">(</span><span class=\"re0\">$num</span><span class=\"sy0\">,</span> FILTER_VALIDATE_INT<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"st0\">\"Integer is not valid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"st0\">\"Integer is valid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) No output is returned",
            "b) Integer is not valid",
            "c) Integer is valid",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The function filter_var() can validate and sanitize data. This function filters a single variable with a specified filter.\n"
    },
    {
        "id": 148,
        "Question": "Which one of the following does not describe a validating filter?",
        "Options": [
            "a) Are used to allow or disallow specific characters in a string",
            "b) Are used to validate user input",
            "c) Strict format rules",
            "d) Returns the expected type on success or FALSE on failure"
        ],
        "Answer": "Answer: a\nExplanation: Validate filter are used to validate user input, it have strict format rules and it returns the expected type on success or FALSE on failure but ‘are used to allow or disallow specific characters in a string’ describes sanitizing filters.\n"
    },
    {
        "id": 149,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var</span><span class=\"sy0\">=</span><span class=\"nu0\">300</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$int_options</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"options\"</span><span class=\"sy0\">=&gt;</span><span class=\"kw3\">array</span> <span class=\"br0\">(</span><span class=\"st0\">\"min_range\"</span><span class=\"sy0\">=&gt;</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">\"max_range\"</span><span class=\"sy0\">=&gt;</span><span class=\"nu0\">256</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw3\">filter_var</span><span class=\"br0\">(</span><span class=\"re0\">$var</span><span class=\"sy0\">,</span> FILTER_VALIDATE_INT<span class=\"sy0\">,</span> <span class=\"re0\">$int_options</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"st0\">\"Integer is not valid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"st0\">\"Integer is valid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) No output is returned",
            "b) Integer is not valid",
            "c) Integer is valid",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Since the integer is “300” it is not in the specified range, and the output of the code above will be: “Integer is not valid”.\n"
    },
    {
        "id": 150,
        "Question": "If the input variable is a string like this “http://www.saåånfoøøundry.com/”, the $url variable after the sanitizing will look like?",
        "Options": [
            "a) http://www.saåånfoøøundry.com/",
            "b) http://www.saaanfoooundry.com/",
            "c) http://www.saånfoøundry.com/",
            "d) https://www.sanfoundry.com/"
        ],
        "Answer": "Answer: d\nExplanation: Sanitize is nothing but take away invalid characters so therefore the invalid characters like å and ø will be removed.\n"
    },
    {
        "id": 151,
        "Question": "Which one of the following filter checks if the variable of the specified type exists?",
        "Options": [
            "a) filter_has_var",
            "b) filter_var",
            "c) filter_id",
            "d) filter_var_array"
        ],
        "Answer": "Answer: a\nExplanation: The filter filter_has_var checks if the variable of the specified type exists. Whereas the function filter_id() returns filter ID of a specified filter name. The function filter_var() can validate and sanitize data. The function filter_var_array() can get multiple variables and it optionally filters them.\n"
    },
    {
        "id": 152,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$value</span> <span class=\"sy0\">=</span> <span class=\"st_h\">'car'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"kw3\">filter_var</span><span class=\"br0\">(</span><span class=\"re0\">$value</span><span class=\"sy0\">,</span> FILTER_VALIDATE_BOOLEAN<span class=\"sy0\">,</span> FILTER_NULL_ON_FAILURE<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) FALSE",
            "b) TRUE",
            "c) NULL",
            "d) ERROR"
        ],
        "Answer": "Answer: c\nExplanation: There is an undocumented filter flag for FILTER_VALIDATE_BOOLEAN. The documentation implies that it will return NULL if the value doesn’t match the allowed true/false values. However this doesn’t happen unless you give it the FILTER_NULL_ON_FAILURE flag.\n"
    },
    {
        "id": 153,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> convertSpace<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"kw3\">str_replace</span><span class=\"br0\">(</span><span class=\"st0\">\"_\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$string</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$string</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Peter_is_a_great_guy!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">filter_var</span><span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"sy0\">,</span> FILTER_CALLBACK<span class=\"sy0\">,</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"options\"</span><span class=\"sy0\">=&gt;</span><span class=\"st0\">\"convertSpace\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Peter_is_a_great_guy!",
            "b) Peterisagreatguy!",
            "c) Peter is a great guy!",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The code above converts all “_” to white spaces. Call the filter_var() function with the FILTER_CALLBACK filter and an array containing our function.\n"
    },
    {
        "id": 154,
        "Options": [
            "a) i) and ii)",
            "b) ii) and iv)",
            "c) i) and iv)",
            "d) ii) and iii)"
        ],
        "Answer": "Answer: c\nExplanation: None.\n"
    },
    {
        "id": 155,
        "Question": "Which one of the following regular expression matches any string containing zero or one p?",
        "Options": [
            "a) p+",
            "b) p*",
            "c) P?",
            "d) p#"
        ],
        "Answer": "Answer: c\nExplanation: None.\n"
    },
    {
        "id": 156,
        "Question": "[:alpha:] can also be specified as ________",
        "Options": [
            "a) [A-Za-z0-9] ",
            "b) [A-za-z] ",
            "c) [A-z] ",
            "d) [a-z]"
        ],
        "Answer": "Answer: b\nExplanation:[:alpha:] is nothing but Lowercase and uppercase alphabetical characters.\n"
    },
    {
        "id": 157,
        "Question": "How many functions does PHP offer for searching strings using POSIX style regular expression?",
        "Options": [
            "a) 7",
            "b) 8",
            "c) 9",
            "d) 10"
        ],
        "Answer": "Answer: a\nExplanation: ereg(), ereg_replace(), eregi(), eregi_replace(), split(), spliti(), and sql_regcase() are the functions offered.\n"
    },
    {
        "id": 158,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$username</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"jasoN\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">ereg</span><span class=\"br0\">(</span><span class=\"st0\">\"([^a-z])\"</span><span class=\"sy0\">,</span><span class=\"re0\">$username</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Username must be all lowercase!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"Username is all lowercase!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Username must be all lowercase!",
            "c) Username is all lowercase!",
            "d) No Output is returned"
        ],
        "Answer": "Answer: b\nExplanation: Because the provided username is not all lowercase, ereg() will not return FALSE (instead returning the length of the matched string, which PHP will treat as TRUE), causing the message to output.\n"
    },
    {
        "id": 159,
        "Question": "POSIX implementation was deprecated in which version of PHP?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: d\nExplanation: None.\n"
    },
    {
        "id": 160,
        "Question": "POSIX stands for ____________",
        "Options": [
            "a) Portable Operating System Interface for Unix",
            "b) Portable Operating System Interface for Linux",
            "c) Portative Operating System Interface for Unix",
            "d) Portative Operating System Interface for Linux"
        ],
        "Answer": "Answer: a\nExplanation: None.\n"
    },
    {
        "id": 161,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$text</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"this is<span class=\"es1\">\\t</span>some text that<span class=\"es1\">\\n</span>we might like to parse.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"kw3\">split</span><span class=\"br0\">(</span><span class=\"st0\">\"[<span class=\"es1\">\\n</span><span class=\"es1\">\\t</span>]\"</span><span class=\"sy0\">,</span><span class=\"re0\">$text</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this is\tsome text that we might like to parse.",
            "b) Array ( [0] => some text that [1] => we might like to parse. )",
            "c) Array ( [0] => this is [1] => some text that [2] => we might like to parse. )",
            "d) [0] => this is [1] => some text that [2] => we might like to parse."
        ],
        "Answer": "Answer: d\nExplanation: The split() function divides a string into various elements, with the boundaries of each element based on the occurrence of a defined pattern within the string.\n"
    },
    {
        "id": 162,
        "Question": "",
        "Options": [
            "a) Only i)",
            "b) ii) and iii)",
            "c) i), iii) and iv)",
            "d) i) and iv)"
        ],
        "Answer": "Answer: b\nExplanation: This matches f followed by two to four occurrences of o.\n"
    },
    {
        "id": 163,
        "Question": "",
        "Options": [
            "a) Only i)",
            "b) i) and iii)",
            "c) ii), iii) and iv)",
            "d) ii) and iv)"
        ],
        "Answer": "Answer: a\nExplanation: /A, /b and /B are metacharacters. \\A: Matches only at the beginning of the string. \\b: Matches a word boundary. \\B: Matches anything but a word boundary.\n"
    },
    {
        "id": 164,
        "Question": "How many functions does PHP offer for searching and modifying strings using Perl-compatible regular expressions.",
        "Options": [
            "a) 7",
            "b) 8",
            "c) 9",
            "d) 10"
        ],
        "Answer": "Answer: b\nExplanation: The functions are preg_filter(), preg_grep(), preg_match(), preg_match_all(), preg_quote(), preg_replace(), preg_replace_callback(), and preg_split().\n"
    },
    {
        "id": 165,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$foods</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"pasta\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"steak\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"fish\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"potatoes\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$food</span> <span class=\"sy0\">=</span> <span class=\"kw3\">preg_grep</span><span class=\"br0\">(</span><span class=\"st0\">\"/^s/\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$foods</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$food</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => pasta [1] => steak [2] => fish [3] => potatoes )",
            "b) Array ( [3] => potatoes )",
            "c) Array ( [1] => steak   )",
            "d) Array ( [0] => potatoes )"
        ],
        "Answer": "Answer: c\nExplanation: This function is used to search an array for foods beginning with s.\n"
    },
    {
        "id": 166,
        "Question": "",
        "Options": [
            "a) i) and ii)",
            "b) iii) and iv)",
            "c) only i)",
            "d) i), ii), iii) and iv)"
        ],
        "Answer": "Answer: d\nExplanation: All of the functions mentioned above can be used to compare strings in some or the other way.\n"
    },
    {
        "id": 167,
        "Question": "Which one of the following functions will convert a string to all uppercase?",
        "Options": [
            "a) strtoupper()",
            "b) uppercase()",
            "c) str_uppercase()",
            "d) struppercase()"
        ],
        "Answer": "Answer: a\nExplanation: Its prototype follows string strtoupper(string str).\n"
    },
    {
        "id": 168,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$title</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"O'malley wins the heavyweight championship!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"re0\">$title</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) O’Malley Wins The Heavyweight Championship!",
            "b) O’malley Wins The Heavyweight Championship!",
            "c) O’Malley wins the heavyweight championship!",
            "d) o’malley wins the heavyweight championship!"
        ],
        "Answer": "Answer: a\nExplanation: The ucwords() function capitalizes the first letter of each word in a string. Its prototype follows: string ucwords(string str).\n"
    },
    {
        "id": 169,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">str_pad</span><span class=\"br0\">(</span><span class=\"st0\">\"Salad\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\" is good.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) SaladSaladSaladSaladSalad is good",
            "b) is good SaladSaladSaladSaladSalad",
            "c) is good  Salad",
            "d) Salad  is good"
        ],
        "Answer": "Answer: d\nExplanation: The str_pad() function pads a string with a specified number of characters.\n"
    },
    {
        "id": 170,
        "Question": "Which one of the following functions can be used to concatenate array elements to form a single delimited string?",
        "Options": [
            "a) explode()",
            "b) implode()",
            "c) concat()",
            "d) concatenate()"
        ],
        "Answer": "Answer: b\nExplanation: None.\n"
    },
    {
        "id": 171,
        "Question": "Which one of the following functions finds the last occurrence of a string, returning its numerical position?",
        "Options": [
            "a) strlastpos()",
            "b) strpos()",
            "c) strlast()",
            "d) strrpos()"
        ],
        "Answer": "Answer: d\nExplanation: None.\n"
    },
    {
        "id": 172,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$author</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"9ef0fffdf6f7f5fbeaf6defbe6fff3eef2fbb0fdf1f3\">[email&nbsp;protected]</a>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$author</span> <span class=\"sy0\">=</span> <span class=\"kw3\">str_replace</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"@\"</span><span class=\"sy0\">,</span><span class=\"re0\">$author</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Contact the author of this article at <span class=\"es4\">$author</span>.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Contact the author of this article at [email protected]@mple.com",
            "b) [email protected] the @uthor of this @rticle @t [email protected]@[email protected]",
            "c) Contact the author of this article at [email protected]@[email protected]",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The str_replace() function case sensitively replaces all instances of a string with another.\n"
    },
    {
        "id": 173,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$url</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"a8c6c9cbc0c1c3cddcc0e8cdd0c9c5d8c4cd86cbc7c5\">[email&nbsp;protected]</a>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ltrim</span><span class=\"br0\">(</span><span class=\"kw3\">strstr</span><span class=\"br0\">(</span><span class=\"re0\">$url</span><span class=\"sy0\">,</span> <span class=\"st0\">\"@\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"st0\">\"@\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [email protected]",
            "b) nachiketh",
            "c) [email protected]",
            "d) example.com"
        ],
        "Answer": "Answer: d\nExplanation: The strstr() function returns the remainder of a string beginning with the first occurrence of a predefined string.\n"
    },
    {
        "id": 174,
        "Question": "The filesize() function returns the file size in ___________",
        "Options": [
            "a) bits",
            "b) bytes",
            "c) kilobytes",
            "d) gigabytes"
        ],
        "Answer": "Answer: b\nExplanation: The function filesize() returns the size of the specified file and it returns the file size in bytes on success or FALSE on failure.\n"
    },
    {
        "id": 175,
        "Question": "Which one of the following PHP function is used to determine a file’s last access time?",
        "Options": [
            "a) fileltime()",
            "b) filectime()",
            "c) fileatime()",
            "d) filetime()"
        ],
        "Answer": "Answer: c\nExplanation: The fileatime() function returns a file’s last access time in Unix timestamp format or FALSE on error.\n"
    },
    {
        "id": 176,
        "Question": "Which one of the following function is capable of reading a file into an array?",
        "Options": [
            "a) file()",
            "b) arrfile()",
            "c) arr_file()",
            "d) file_arr()"
        ],
        "Answer": "Answer: a\nExplanation: The function file() will read the entire file into an array.\n"
    },
    {
        "id": 177,
        "Question": "Which one of the following function is capable of reading a file into a string variable?",
        "Options": [
            "a) file_contents()",
            "b) file_get_contents()",
            "c) file_content()",
            "d) file_get_content()"
        ],
        "Answer": "Answer: b\nExplanation: The function file_get_contents() reads a file into a string. This is the preferred way to read the contents of a file into a string as it will use memory mapping techniques.\n"
    },
    {
        "id": 178,
        "Question": "Which one of the following function is capable of reading a specific number of characters from a file?",
        "Options": [
            "a) fgets()",
            "b) fget()",
            "c) fileget()",
            "d) filegets()"
        ],
        "Answer": "Answer: a\nExplanation: The function fgets() will return a line from an open file. This stops returning on a new line, at the specified length, or at EOF, whichever comes first.  Its prototype is string fgets(resource handle [, int length]). If the optional length parameter is omitted, 1024 character is assumed.\n"
    },
    {
        "id": 179,
        "Question": "Which one of the following function operates similarly to fgets(), except that it also strips any HTML and PHP tags form the input?",
        "Options": [
            "a) fgetsh()",
            "b) fgetsp()",
            "c) fgetsa()",
            "d) fgetss()"
        ],
        "Answer": "Answer: d\nExplanation: The function fgetss() returns a line, with HTML and PHP tags removed, from an open file. This function operates similarly to fgets(), except that it also strips any HTML and PHP tags form the input.\n"
    },
    {
        "id": 180,
        "Question": "Which one of the following function outputs the contents of a string variable to the specified resource?",
        "Options": [
            "a) filewrite()",
            "b) fwrite()",
            "c) filewrites()",
            "d) fwrites()"
        ],
        "Answer": "Answer: b\nExplanation: The function fwrite() writes to an open file. This will stop at the end of the file or when it reaches the specified length, whichever comes first.\n"
    },
    {
        "id": 181,
        "Question": "Which function sets the file filename last-modified and last-accessed times?",
        "Options": [
            "a) sets()",
            "b) set()",
            "c) touch()",
            "d) touched()"
        ],
        "Answer": "Answer: c\nExplanation: The function touch() will set the access and modification time of the specified file. Syntax is touch(filename, time, atime).\n"
    },
    {
        "id": 182,
        "Question": "Which function is useful when you want to output the executed command result?",
        "Options": [
            "a) out_cmm()",
            "b) out_system()",
            "c) cmm()",
            "d) system()"
        ],
        "Answer": "Answer: d\nExplanation: The function system() in PHP is same as the C version of the function as in that it executes the given command and outputs the result. This function also tries to automatically flush the web server’s output buffer after each line of output if PHP is running as a server module.\n"
    },
    {
        "id": 183,
        "Question": "Which one of the following function reads a directory into an Array?",
        "Options": [
            "a) scandir()",
            "b) readdir()",
            "c) scandirectory()",
            "d) readdirectory()"
        ],
        "Answer": "Answer: a\nExplanation: It returns an array consisting of files and directories found in directory or returns FALSE on error.\n"
    },
    {
        "id": 184,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"kw3\">checkdate</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">31</span><span class=\"sy0\">,</span><span class=\"nu0\">2010</span><span class=\"br0\">)</span> ? <span class=\"st_h\">'Valid'</span> <span class=\"sy0\">:</span> <span class=\"st_h\">'Invalid'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) TRUE",
            "b) FALSE",
            "c) Valid",
            "d) Invalid"
        ],
        "Answer": "Answer: d\nExplanation: The function checkdate() is used to validate a Gregorian date. In the program, April has 30 days and the above date is 31 therefore Invalid is returned.\n"
    },
    {
        "id": 185,
        "Question": "The date() function returns ___ representation of the current date and/or time.",
        "Options": [
            "a) Integer",
            "b) String",
            "c) Boolean",
            "d) Float"
        ],
        "Answer": "Answer: b\nExplanation: The function date() is used to format a local date and time, and it will return the formatted date string. The syntax of this function is string date(string format [, int timestamp]).\n"
    },
    {
        "id": 186,
        "Question": "Which one of the following format parameter can be used to identify timezone?",
        "Options": [
            "a) T",
            "b) N",
            "c) E",
            "d) I"
        ],
        "Answer": "Answer: c\nExplanation: When the format is E the time zone is identified and returned, for example, America/New York. N denotes ISO-8601 numeric representation of the day of the week, T denotes time zone abbreviation, I denotes whether or not the date is in daylight saving time.\n"
    },
    {
        "id": 187,
        "Question": "If the format is F then which one of the following will be returned?",
        "Options": [
            "a) Complete text representation of month",
            "b) Day of month, with leading zero",
            "c) Daylight saving time",
            "d) Day of month, without zeros"
        ],
        "Answer": "Answer: a\nExplanation: F represents a full textual representation of a month, such as January or March. Day of month, with leading zero is represented by D, Daylight saving time by I, Day of month without zeros by j.\n"
    },
    {
        "id": 188,
        "Question": "5. What will be the output of the following code? (If say date is 22/06/2013.)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Today is \"</span><span class=\"sy0\">.</span><span class=\"kw3\">date</span><span class=\"br0\">(</span><span class=\"st0\">\"F d, Y\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Today is 22 June, 2013",
            "b) Today is 22-06-2013",
            "c) Today is 06-22-2013",
            "d) Today is June 22, 2013"
        ],
        "Answer": "Answer: d\nExplanation: The function date() is used to format a local date and time, and it will return the formatted date string. F is the parameter for complete text representation of month, d for day of month, and Y for 4 digit representation of year.\n"
    },
    {
        "id": 189,
        "Question": "Which one of the following function is useful for producing a timestamp based on a given date and time?",
        "Options": [
            "a) time()",
            "b) mktime()",
            "c) mrtime()",
            "d) mtime()"
        ],
        "Answer": "Answer: b\nExplanation: The function mktime() returns the Unix timestamp for a date. This function is same as gmmktime() except that the passed parameters represents a date not a GMT date.\n"
    },
    {
        "id": 190,
        "Question": "Which function displays the web page’s most recent modification date?",
        "Options": [
            "a) lastmod()",
            "b) getlastmod()",
            "c) last_mod()",
            "d) get_last_mod()"
        ],
        "Answer": "Answer: b\nExplanation: The function getlastmod() gets the time of the last modification of the main script of execution. It returns the value of the page’s last modified header or FALSE in the case of an error.\n"
    },
    {
        "id": 191,
        "Question": "8. What will be the output of the following PHP code? (If say date is 22/06/2013.)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span><span class=\"br0\">(</span> <span class=\"kw3\">date</span><span class=\"br0\">(</span><span class=\"st0\">\"t\"</span><span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 30",
            "b) 22",
            "c) JUNE",
            "d) 2013"
        ],
        "Answer": "Answer: a\nExplanation: The t parameter is used to determine the number of days in the current month.\n"
    },
    {
        "id": 192,
        "Question": "Suppose you want to calculate the date 45 days from the present date which one of the following statement will you use?",
        "Options": [
            "a) totime(“+45”)",
            "b) totime(“+45 days”)",
            "c) strtotime(“+45 days”)",
            "d) strtotime(“-45 days”)"
        ],
        "Answer": "Answer: c\nExplanation: The strtotime() function and GNU date syntax is used to calculating the date x days from the present date.\n"
    },
    {
        "id": 193,
        "Question": "To create an object and set the date to JUNE 22, 2013, which one of the following statement should be executed?",
        "Options": [
            "a) $date = Date(“22 JUNE 2013”)",
            "b) $date = new Date(“JUNE 22 2013”)",
            "c) $date = DateTime(“22 JUNE 2013”)",
            "d) $date = new DateTime(“22 JUNE 2013”)"
        ],
        "Answer": "Answer: d\nExplanation: The dateTime() method is class constructor. You can set the date either at the time of instantiation or later by using a variety of mutators.\n"
    },
    {
        "id": 194,
        "Question": "How many methods does the DateTime class have?",
        "Options": [
            "a) 8",
            "b) 9",
            "c) 10",
            "d) 11"
        ],
        "Answer": "Answer: b\nExplanation: The DateTime class has nine methods, all of which are public.\n"
    },
    {
        "id": 195,
        "Question": "How many constants does the DateTime class have?",
        "Options": [
            "a) 8",
            "b) 9",
            "c) 10",
            "d) 11"
        ],
        "Answer": "Answer: d\nExplanation: The DateTime class has 11 constants, no static properties or methods.\n"
    },
    {
        "id": 196,
        "Question": "Which method is simply an object-oriented version of date()?",
        "Options": [
            "a) DateTime::format()",
            "b) DateTime::modify()",
            "c) DateTime::setTime()",
            "d) DateTime::setDate()"
        ],
        "Answer": "Answer: a\nExplanation: The format() method is simply an object-oriented version of date(). It takes $dateFormat as an argument. $dateFormat is a string consisting of the same date formatting characters accepted by the procedural date() function.\n"
    },
    {
        "id": 197,
        "Question": "Which of the following is the right way to use the DateTime class?",
        "Options": [
            "a) $date = get_Class(DateTime);",
            "b) $date = class DateTime;",
            "c) $date = new DateTime();",
            "d) $date = new class DateTime();"
        ],
        "Answer": "Answer: c\nExplanation: The way you use the DateTime class is like any other class: instantiate an object, and store it in a variable.\n"
    },
    {
        "id": 198,
        "Question": "5. What will be the output of the following PHP code if date is 24/02/2008?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$date</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> DateTime<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$date</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st_h\">'l,F,js,Y'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sunday, February 24th 2008",
            "b) Sunday, 02 24 2008",
            "c) Sunday, 24 02 2008",
            "d) Sunday, 24th February 2008"
        ],
        "Answer": "Answer: a\nExplanation: The format() method displays the date in same way as standard date function().\n"
    },
    {
        "id": 199,
        "Question": "Which of the following statements can be used to set the time zone in individual scripts?",
        "Options": [
            "a) date_set_timezone(‘Europe/London’);",
            "b) date_default_timezone_set(‘Europe/London’);",
            "c) date_set_default_timezone(‘Europe/London’);",
            "d) date_default_timezone(‘Europe/London’);"
        ],
        "Answer": "Answer: b\nExplanation: The function date_default_timezone_set  is used to set the default time zone used by all date/time functions in a script. You can also use ini_set(‘date.timezone’, ‘Europe/London’);\n"
    },
    {
        "id": 200,
        "Question": "",
        "Options": [
            "a) Only i)",
            "b) Only ii)",
            "c) i)  and iv)",
            "d) iii)  and iv)"
        ],
        "Answer": "Answer: c\nExplanation: listAbbreviations() and listIdentifiers() are static methods.\n"
    },
    {
        "id": 201,
        "Question": "",
        "Options": [
            "a) Only i)",
            "b) Only ii)",
            "c) i), ii), iii) and iv)",
            "d) iii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: All of the given methods are non static.\n"
    },
    {
        "id": 202,
        "Question": "Which of the following statements can be used to add two months to the existing date?",
        "Options": [
            "a) $date->modify(‘+2 months’);",
            "b) $date = modify(‘+2 months’);",
            "c) $date = modify(‘2+ months’);",
            "d) $date->modify(‘2+ months’);"
        ],
        "Answer": "Answer: a\nExplanation: To change the date stored by a DateTime object after it has been created, you use DateTime::modify() with a natural language expression.\n"
    },
    {
        "id": 203,
        "Question": "Which method enables you to calculate whether daylight saving time is in force at a specific date and time?",
        "Options": [
            "a) getOffset()",
            "b) getTranitions()",
            "c) ISODate()",
            "d) savingTime()"
        ],
        "Answer": "Answer: b\nExplanation: This outputs a multidimensional array listing past and future changes to the offset from UTC for a DateTimeZone object.\n"
    },
    {
        "id": 204,
        "Question": "Which two predefined variables are used to retrieve information from forms?",
        "Options": [
            "a) $GET & $SET",
            "b) $_GET & $_SET",
            "c) $__GET & $__SET",
            "d) GET & SET"
        ],
        "Answer": "Answer: b\nExplanation: The global variables $_GET is used to collect form data after submitting an HTML form with the method=”get”. The variable $_SET is also used to retrieve information from forms.\n"
    },
    {
        "id": 205,
        "Question": "The attack which involves the insertion of malicious code into a page frequented by other users is known as _______________",
        "Options": [
            "a) basic sql injection",
            "b) advanced sql injection",
            "c) cross-site scripting",
            "d) scripting"
        ],
        "Answer": "Answer: c\nExplanation: The cross-site scripting attack is among one of the top five security attacks carried out across the Internet. It is also known as XSS, this attack is a type of code injection attack which is made possible by incorrectly validating user data, which usually gets inserted into the page through a web form or using an altered hyperlink.\n"
    },
    {
        "id": 206,
        "Question": "When you use the $_GET variable to collect data, the data is visible to ___________",
        "Options": [
            "a) none",
            "b) only you",
            "c) everyone",
            "d) selected few"
        ],
        "Answer": "Answer: c\nExplanation: The information sent from a form with the method GET is visible to everyone i.e. all variable names and values are displayed in the URL.\n"
    },
    {
        "id": 207,
        "Question": "When you use the $_POST variable to collect data, the data is visible to ___________",
        "Options": [
            "a) none",
            "b) only you",
            "c) everyone",
            "d) selected few"
        ],
        "Answer": "Answer: b\nExplanation: The information sent from a form with the method POST is invisible to others i.e. all names/values are embedded within the body of the HTTP request.\n"
    },
    {
        "id": 208,
        "Question": "Which variable is used to collect form data sent with both the GET and POST methods?",
        "Options": [
            "a) $BOTH",
            "b) $_BOTH",
            "c) $REQUEST",
            "d) $_REQUEST"
        ],
        "Answer": "Answer: d\nExplanation: In PHP the global variable $_REQUEST is used to collect data after submitting an HTML form.\n"
    },
    {
        "id": 209,
        "Question": "Which one of the following should not be used while sending passwords or other sensitive information?",
        "Options": [
            "a) GET",
            "b) POST",
            "c) REQUEST",
            "d) NEXT"
        ],
        "Answer": "Answer: a\nExplanation: The information sent from a form with the method GET is visible to everyone i.e. all variable names and values are displayed in the URL. So, it should not be used while sending passwords or other sensitive information.\n"
    },
    {
        "id": 210,
        "Question": "Which function is used to remove all HTML tags from a string passed to a form?",
        "Options": [
            "a) remove_tags()",
            "b) strip_tags()",
            "c) tags_strip()",
            "d) tags_remove()"
        ],
        "Answer": "Answer: b\nExplanation: The function strip_tags() is used to strip a string from HTML, XML, and PHP tags.\n"
    },
    {
        "id": 211,
        "Question": "8. What will be the value of the variable $input in the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$input</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Swapna&lt;td&gt;Lawrence&lt;/td&gt;you are really&lt;i&gt;pretty&lt;/i&gt;!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$input</span> <span class=\"sy0\">=</span> <span class=\"kw3\">strip_tags</span><span class=\"br0\">(</span><span class=\"re0\">$input</span><span class=\"sy0\">,</span><span class=\"st0\">\"&lt;i&gt;&lt;/i&gt;\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$input</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Swapna Lawrence you are really pretty!",
            "b) Swapna <td>Lawrence</td> you are really<i>pretty</i>!",
            "c) Swapna <td>Lawrence</td> you are really pretty!",
            "d) Swapna Lawrence you are really<i>pretty</i>!"
        ],
        "Answer": "Answer: d\nExplanation: Italic tags <i></i> might be allowable, but table tags <td></td> could potentially wreak havoc on a page.\n"
    },
    {
        "id": 212,
        "Question": "To validate an email address, which flag is to be passed to the function filter_var()?",
        "Options": [
            "a) FILTER_VALIDATE_EMAIL",
            "b) FILTER_VALIDATE_MAIL",
            "c) VALIDATE_EMAIL",
            "d) VALIDATE_MAIL"
        ],
        "Answer": "Answer: a\nExplanation: The FILTER_VALIDATE_EMAIL is used to validates an e-mail address.\n"
    },
    {
        "id": 213,
        "Question": "How many validation filters like FILTER_VALIDATE_EMAIL are currently available?",
        "Options": [
            "a) 5",
            "b) 6",
            "c) 7",
            "d) 8"
        ],
        "Answer": "Answer: c\nExplanation: There are seven validation filters. They are FILTER_VALIDATE_EMAIL, FILTER_VALIDATE_BOOLEAN, FILTER_VALIDATE_FLOAT, FILTER_VALIDATE_INT, FILTER_VALIDATE_IP, FILTER_VALIDATE_REGEXP, FILTER_VALIDATE_URL.\n"
    },
    {
        "id": 214,
        "Question": "How many predefined variables does PHP use to authenticate a user?",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: b\nExplanation: The variables PHP use to authenticate a user are $_SERVER[‘PHP_AUTH_USER’] and $_SERVER[‘PHP_AUTH_PW’].\n"
    },
    {
        "id": 215,
        "Question": "2. Which of the following variables does PHP use to authenticate a user?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">i<span class=\"br0\">)</span> <span class=\"re0\">$_SERVER</span><span class=\"br0\">[</span><span class=\"st_h\">'PHP_AUTH_USER'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span>\nii<span class=\"br0\">)</span> <span class=\"re0\">$_SERVER</span><span class=\"br0\">[</span><span class=\"st_h\">'PHP_AUTH_USERS'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span>\niii<span class=\"br0\">)</span> <span class=\"re0\">$_SERVER</span><span class=\"br0\">[</span><span class=\"st_h\">'PHP_AUTH_PU'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span>\niv<span class=\"br0\">)</span> <span class=\"re0\">$_SERVER</span><span class=\"br0\">[</span><span class=\"st_h\">'PHP_AUTH_PW'</span><span class=\"br0\">]</span><span class=\"sy0\">.</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) i) and ii)",
            "b) ii) and iv)",
            "c) i) and iv)",
            "d) ii) and iii)"
        ],
        "Answer": "Answer: c\nExplanation: $_SERVER[‘PHP_AUTH_USER’] and $_SERVER[‘PHP_AUTH_PW’] store the username and password values, respectively.\n"
    },
    {
        "id": 216,
        "Question": "",
        "Options": [
            "a) i) and iv)",
            "b) ii) and iv)",
            "c) ii) and iii)",
            "d) i) and iii)"
        ],
        "Answer": "Answer: a\nExplanation: The function isset () is used to check whether a variable is set or not and the function header() sends a raw HTTP header to a client.\n"
    },
    {
        "id": 217,
        "Question": "Which function is used to verify whether a variable contains a value?",
        "Options": [
            "a) header()",
            "b) footer()",
            "c) inset()",
            "d) isset()"
        ],
        "Answer": "Answer: d\nExplanation: The isset() function determines whether a variable has been assigned a value. Its prototype follows: boolean isset(mixed var [,mixed var [,…]]).\n"
    },
    {
        "id": 218,
        "Question": "",
        "Options": [
            "a) ii) and iii)",
            "b) i) and iv)",
            "c) i), ii), iii) and iv)",
            "d) Only iv)"
        ],
        "Answer": "Answer: c\nExplanation: The method PEAR’S HTTP authentication is used to provides a framework for user authentication on the HTTP. The data-based authentication is the process of confirming that a user who is attempting to log in to a database is authorized to do so. In the file-based authentication as some small sites does not have a need for database back-end to store data, but security is still important either the site is big or small. They need to authenticate some folder or file and want to set access credentials for that. One can handle such by using file-based authentication using PHP. The simplest way to restrict resource access is by hard-coding the username and password directly into the script.\n"
    },
    {
        "id": 219,
        "Question": "In which authentication method does changing the username or password can be done only by entering the code and making the manual adjustment.",
        "Options": [
            "a) Hard-coding a login  pair directly into the script",
            "b) File-based authentication",
            "c) Data-based authentication",
            "d) PEAR’S HTTP authentication"
        ],
        "Answer": "Answer: a\nExplanation: The simplest way to restrict resource access is by hard-coding the username and password directly into the script. In this authentication method, changing the username or password can be done only by entering the code and making the manual adjustment. This is one of the drawbacks of hard-coding a login pair directly into the script.\n"
    },
    {
        "id": 220,
        "Question": "The authenticationFile.txt, the file which stores username and password should be stored ___ the server document root.",
        "Options": [
            "a) Inside",
            "b) Outside",
            "c) Within",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: If it is not stored outside, the attacker could discover the file through brute force guessing.\n"
    },
    {
        "id": 221,
        "Question": "Which function is used to split a string into a series of substrings, with each string boundary is determined by a specific separator?",
        "Options": [
            "a) break()",
            "b) divide()",
            "c) explode()",
            "d) md5()"
        ],
        "Answer": "Answer: c\nExplanation: Although they are a similar function, you should use explode() instead of split(). In fact split() function has been deprecated altogether.\n"
    },
    {
        "id": 222,
        "Question": "",
        "Options": [
            "a) i) and iv)",
            "b) i) and iii)",
            "c) ii) and iii)",
            "d) ii) and iv)"
        ],
        "Answer": "Answer: c\nExplanation: Such requirements are better satisfied by implementing a database based solution.\n"
    },
    {
        "id": 223,
        "Question": "Which is the most powerful authentication method among the four?",
        "Options": [
            "a) Hard-coding a login  pair directly into the script",
            "b) File-based authentication",
            "c) Data-based authentication",
            "d) PEAR’S HTTP authentication"
        ],
        "Answer": "Answer: c\nExplanation: It not only enhances administrative convenience and scalability but also can be integrated into a larger database infrastructure.\n"
    },
    {
        "id": 224,
        "Question": "Which directive determines whether PHP scripts on the server can accept file uploads?",
        "Options": [
            "a) file_uploads",
            "b) file_upload",
            "c) file_input",
            "d) file_intake"
        ],
        "Answer": "Answer: a\nExplanation: With PHP, it is easy to upload files to the server. We need to ensure that PHP is configured to allow file uploads. In the “php.ini” file, search for the file_uploads directive, and set it to On. By default, its value is on.\n"
    },
    {
        "id": 225,
        "Question": "Which of the following directive determines the maximum amount of time that a PHP script will spend attempting to parse input before registering a fatal error?",
        "Options": [
            "a) max_take_time",
            "b) max_intake_time",
            "c) max_input_time",
            "d) max_parse_time"
        ],
        "Answer": "Answer: c\nExplanation: This is relevant because particularly large files can take some time to upload, eclipsing the time set by this directive.\n"
    },
    {
        "id": 226,
        "Question": "What is the default value of max_input_time directive?",
        "Options": [
            "a) 30 seconds",
            "b) 60 seconds",
            "c) 120 seconds",
            "d) 1 second"
        ],
        "Answer": "Answer: b\nExplanation: The default value of the max_input_time directive is 60 seconds.\n"
    },
    {
        "id": 227,
        "Question": "Since which version of PHP was the directive max_file_limit available.",
        "Options": [
            "a) PHP 5.2.1",
            "b) PHP 5.2.2",
            "c) PHP 5.2.12",
            "d) PHP 5.2.21"
        ],
        "Answer": "Answer: c\nExplanation: The max_file_limit directive sets an upper limit on the number of files which can be simultaneously uploaded.\n"
    },
    {
        "id": 228,
        "Question": "What is the default value of the directive max_file_limit?",
        "Options": [
            "a) 10 files",
            "b) 15 files",
            "c) 20 files",
            "d) 25 files"
        ],
        "Answer": "Answer: c\nExplanation: The default value of the directive max_file_limit is 20 files.\n"
    },
    {
        "id": 229,
        "Question": "Which directive sets a maximum allowable amount of memory in megabytes that a script can allow?",
        "Options": [
            "a) max_size",
            "b) post_max_size",
            "c) max_memory_limit",
            "d) memory_limit"
        ],
        "Answer": "Answer: d\nExplanation: Its default value is 16M.\n"
    },
    {
        "id": 230,
        "Question": "If you want to temporarily store uploaded files in the /tmp/phpuploads/ directory, which one of the following statement will you use?",
        "Options": [
            "a) upload_tmp_dir “/tmp/phpuploads/ directory”",
            "b) upload_dir “/tmp/phpuploads/ directory”",
            "c) upload_temp_dir “/tmp/phpuploads/ directory”",
            "d) upload_temp_director “/tmp/phpuploads/ directory”"
        ],
        "Answer": "Answer: a\nExplanation: Anyone can temporarily store uploaded files on the given directory. One cannot change upload_tmp_dir at the runtime. By the time a script runs, the upload process has already occurred.\n"
    },
    {
        "id": 231,
        "Question": "Which superglobal stores a variety of information pertinent to a file uploaded to the server via a PHP script?",
        "Options": [
            "a) $_FILE Array",
            "b) $_FILES Array",
            "c) $_FILES_UPLOADED Array",
            "d) $_FILE_UPLOADED Array"
        ],
        "Answer": "Answer: b\nExplanation: The superglobal $_FILES is a two-dimensional associative global array of items which are being uploaded by via HTTP POST method and holds the attributes of files.\n"
    },
    {
        "id": 232,
        "Question": "How many items are available in the $_FILES array?",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 4",
            "d) 5"
        ],
        "Answer": "Answer: d\nExplanation: $_FILEs[‘userfile’][‘error’], $_FILEs[‘userfile’][‘name’], $_FILEs[‘userfile’][‘size’], $_FILEs[‘userfile’][‘tmp_name’], $_FILEs[‘userfile’][‘type’] are the five items in the array.\n"
    },
    {
        "id": 233,
        "Question": "Which function is used to determine whether a file was uploaded?",
        "Options": [
            "a) is_file_uploaded()",
            "b) is_uploaded_file()",
            "c) file_uploaded(“filename”)",
            "d) uploaded_file(“filename”)"
        ],
        "Answer": "Answer: b\nExplanation: The function is_uploaded_file() checks whether the specified file is uploaded via HTTP POST. The syntax is is_uploaded_file(file).\n"
    },
    {
        "id": 234,
        "Question": "What is the full form of DNS?",
        "Options": [
            "a) Digital Network System",
            "b) Domain Network System",
            "c) Digital Name Systmem",
            "d) Domain Name System"
        ],
        "Answer": "Answer: d\nExplanation: DNS stands for domain name system. It is the way that internet domain names are located and translated into internet protocol (IP) addresses. For example, if someone types abc.com into the web browser, a server behind the scenes will map that name to the IP address 206.16.49.139.\n"
    },
    {
        "id": 235,
        "Question": "Which one of the following function checks for the existence of DNS records?",
        "Options": [
            "a) checkdns()",
            "b) checkdnsr()",
            "c) checkdnsrr()",
            "d) checkdnsa()"
        ],
        "Answer": "Answer: c\nExplanation: The function checkdnsrr() is used to check DNS records for type corresponding to host.  DNS records are checked based on the supplied host value and optional DNS resource record type, returning TRUE if any records are located and FALSE otherwise.\n"
    },
    {
        "id": 236,
        "Question": "Which one of the following function is used to return an array consisting of various DNS resource records pertinent to a specific domain?",
        "Options": [
            "a) dns_get_record()",
            "b) dns_record()",
            "c) dnsrr_get_record()",
            "d) dnsrr_record()"
        ],
        "Answer": "Answer: a\nExplanation: The function dns_get_record() is used to get the DNS resource records associated with the specified hostname. This function is used to return an array consisting of various DNS resource records pertinent to a specific domain.\n"
    },
    {
        "id": 237,
        "Question": "Which one of the following function is used to retrieve the MX records for the domain specified by hostname?",
        "Options": [
            "a) getmx()",
            "b) retrieve_mx()",
            "c) getmxrr()",
            "d) retrieve_mxrr()"
        ],
        "Answer": "Answer: c\nExplanation: The function getmxrr() returns the MX records for the specified internet host name. This function is used to retrieve the MX records for the domain specified by hostname.\n"
    },
    {
        "id": 238,
        "Question": "What is the default port number of HTTPs?",
        "Options": [
            "a) 70",
            "b) 80",
            "c) 90",
            "d) 100"
        ],
        "Answer": "Answer: b\nExplanation: By default, The port number HTTP uses is port 80 and HTTPS uses port 443, but a URL like http://www.abc.com:8080/path/ specifies that the web browser connects instead to port 8080 of the HTTP servers.\n"
    },
    {
        "id": 239,
        "Question": "Which one of the following function returns the port number of a specified service?",
        "Options": [
            "a) getportname()",
            "b) getservername()",
            "c) getserverbyname()",
            "d) getservbyname()"
        ],
        "Answer": "Answer: d\nExplanation: The function fgetservbyname() returns the port number for a given Internet service and protocol. Example-getservbyname(“http”,”tcp”) will return 80.\n"
    },
    {
        "id": 240,
        "Question": "Which one of the following statements can be used to establish port 80 connection with www.nachi.com?",
        "Options": [
            "a) fsockopen(“www.nachi.com”, 80);",
            "b) sockopen(80,”www.nachi.com”);",
            "c) fsockopen(80,”www.nachi.com”);",
            "d) sockopen(“www.nachi.com”, 80);"
        ],
        "Answer": "Answer: a\nExplanation: The fsockopen() function establishes a connection to the resource designated by target on port.\n"
    },
    {
        "id": 241,
        "Question": "Which one of the following function is used to send an email using PHP script?",
        "Options": [
            "a) mail_send()",
            "b) send_mail()",
            "c) mailrr()",
            "d) mail()"
        ],
        "Answer": "Answer: d\nExplanation: The function mail() allows you to send emails directly from a script. Using mail(string to, string subject, string message), you can send any mail.\n"
    },
    {
        "id": 242,
        "Question": "How many configuration directives pertinent to PHP’s mail function are available?",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 6",
            "d) 7"
        ],
        "Answer": "Answer: b\nExplanation: They are- SMTP, sendmail_from, sendmail_path, smtp_port, mail.force_extra_parameters.\n"
    },
    {
        "id": 243,
        "Question": "Which of the following statements is used to add an attachment to the mail?",
        "Options": [
            "a) $mimemail->attachment(‘attachment.pdf’);",
            "b) $mimemail=>attachment(‘attachment.pdf’);",
            "c) $mimemail->addAttachment(‘attachment.pdf’);",
            "d) $mimemail=>addAttachment(‘attachment.pdf’);"
        ],
        "Answer": "Answer: c\nExplanation: Call the Mail_Mime object’s addAttachment() method passing in the attachment name and extension.\n"
    },
    {
        "id": 244,
        "Question": "Which one of the following is the very first task executed by a session enabled page?",
        "Options": [
            "a) Delete the previous session",
            "b) Start a new session",
            "c) Check whether a valid session exists",
            "d) Handle the session"
        ],
        "Answer": "Answer: c\nExplanation: The session variables are set with the PHP global variable which is $_SESSION. The very first task executed by a session enabled page is Check whether a valid session exists.\n"
    },
    {
        "id": 245,
        "Question": "How many ways can a session data be stored?",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 5",
            "d) 6"
        ],
        "Answer": "Answer: b\nExplanation: Within flat files(files), within volatile memory(mm), using the SQLite database(sqlite), or through user defined functions(user).\n"
    },
    {
        "id": 246,
        "Question": "Which directive determines how the session information will be stored?",
        "Options": [
            "a) save_data",
            "b) session.save",
            "c) session.save_data",
            "d) session.save_handler"
        ],
        "Answer": "Answer: d\nExplanation: The class SessionHandler is used to wrap whatever internal save handler is set as defined by the session.save_handler configuration directive which is usually files by default.\n"
    },
    {
        "id": 247,
        "Question": "Which one of the following is the default PHP session name?",
        "Options": [
            "a) PHPSESSID",
            "b) PHPSESID",
            "c) PHPSESSIONID",
            "d) PHPIDSESS"
        ],
        "Answer": "Answer: a\nExplanation: You can change this name by using the session.name directive.\n"
    },
    {
        "id": 248,
        "Question": "If session.use_cookie is set to 0, this results in use of _____________",
        "Options": [
            "a) Session",
            "b) Cookie",
            "c) URL rewriting",
            "d) Nothing happens"
        ],
        "Answer": "Answer: c\nExplanation: The URL rewriting allows to completely separate the URL from the resource.  URL rewriting can turn unsightly URLs into nice ones with a lot less agony and expense than picking a good domain name. It enables to fill out your URLs with friendly, readable keywords without affecting the underlying structure of pages.\n"
    },
    {
        "id": 249,
        "Question": "If the directive session.cookie_lifetime is set to 3600, the cookie will live until ____________",
        "Options": [
            "a) 3600 sec",
            "b) 3600 min",
            "c) 3600 hrs",
            "d) the browser is restarted"
        ],
        "Answer": "Answer: a\nExplanation: The lifetime is specified in seconds, so if the cookie should live 1 hour, this directive should be set to 3600.\n"
    },
    {
        "id": 250,
        "Question": "Neglecting to set which of the following cookie will result in the cookie’s domain being set to the host name of the server which generated it.",
        "Options": [
            "a) session.domain",
            "b) session.path",
            "c) session.cookie_path",
            "d) session.cookie_domain"
        ],
        "Answer": "Answer: d\nExplanation: The directive session.cookie_domain determines the domain for which the cookie is valid.\n"
    },
    {
        "id": 251,
        "Question": "What is the default number of seconds that cached session pages are made available before the new pages are created?",
        "Options": [
            "a) 360",
            "b) 180",
            "c) 3600",
            "d) 1800"
        ],
        "Answer": "Answer: b\nExplanation: The directive which determines this is session.cache_expire.\n"
    },
    {
        "id": 252,
        "Question": "What is the default time(in seconds) for which session data is considered valid?",
        "Options": [
            "a) 1800",
            "b) 3600",
            "c) 1440",
            "d) 1540"
        ],
        "Answer": "Answer: c\nExplanation: The session.gc_maxlifetime directive determines this duration. It can be set to any required value.\n"
    },
    {
        "id": 253,
        "Question": "Which one of the following function is used to start a session?",
        "Options": [
            "a) start_session()",
            "b) session_start()",
            "c) session_begin()",
            "d) begin_session()"
        ],
        "Answer": "Answer: b\nExplanation: A session is started with the function session_start() . The session variables are set with the PHP global variable which is $_SESSION.\n"
    },
    {
        "id": 254,
        "Question": "Which function is used to erase all session variables stored in the current session?",
        "Options": [
            "a) session_destroy()",
            "b) session_change()",
            "c) session_remove()",
            "d) session_unset()"
        ],
        "Answer": "Answer: d\nExplanation: The function session_unset() frees all session variables that is currently registered. This will not completely remove the session from the storage mechanism. If you want to completely destroy the session, you need to use the function session_destroy().\n"
    },
    {
        "id": 255,
        "Question": "What will the function session_id() return is no parameter is passed?",
        "Options": [
            "a) Current Session Identification Number",
            "b) Previous Session Identification Number",
            "c) Last Session Identification Number",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The function session_id() will return the session id for the current session or the empty string (” “) if there is no current session.\n"
    },
    {
        "id": 256,
        "Question": "Which one of the following statements should you use to set the session username to Nachi?",
        "Options": [
            "a) $SESSION[‘username’] = “Nachi”;",
            "b) $_SESSION[‘username’] = “Nachi”;",
            "c) session_start(“nachi”);",
            "d) $SESSION_START[“username”] = “Nachi”;"
        ],
        "Answer": "Answer: b\nExplanation: You need to refer the session variable ‘username’ in the context of the $_SESSION superglobal.\n"
    },
    {
        "id": 257,
        "Question": "4. What will be the output of the following PHP code? (Say your previous session username was nachi.)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">unset</span><span class=\"br0\">(</span><span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'username'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Username now set to: <span class=\"es6\">%s</span>\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$_SESSION</span><span class=\"br0\">[</span><span class=\"st_h\">'username'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Username now set to: nachi",
            "b) Username now set to: System",
            "c) Username now set to:",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: If someone want to destroy a single session variable then they can use the function unset () to unset a session variable. To delete the session variable ‘username’ we use the unset () function.\n"
    },
    {
        "id": 258,
        "Question": "An attacker somehow obtains an unsuspecting user’s SID and then using it to impersonate the user in order to gain potentially sensitive information. This attack is known as __________",
        "Options": [
            "a) session-fixation",
            "b) session-fixing",
            "c) session-hijack",
            "d) session-copy"
        ],
        "Answer": "Answer: a\nExplanation: The attack session fixation attempts to exploit the vulnerability of a system that allows one person to set another person’s session identifier. You can minimize this risk by regenerating the session ID on each request while maintaining the session-specific data. PHP offers a convenient function named session_regenerate_id() that will replace the existing ID with a new one.\n"
    },
    {
        "id": 259,
        "Question": "Which parameter determines whether the old session file will also be deleted when the session ID is regenerated?",
        "Options": [
            "a) delete_old_file",
            "b) delete_old_session",
            "c) delete_old_session_file",
            "d) delete_session_file"
        ],
        "Answer": "Answer: b\nExplanation: The parameter delete_old_session determines whether the old session file will also be deleted when the session ID is regenerated.\n"
    },
    {
        "id": 260,
        "Question": "Which function effectively deletes all sessions that have expired?",
        "Options": [
            "a) session_delete()",
            "b) session_destroy()",
            "c) session_garbage_collect()",
            "d) SessionHandler::gc"
        ],
        "Answer": "Answer: d\nExplanation: SessionHandler::gc is used to clean up expired sessions. It is called randomly by PHP internally when a session_start() is invoked.\n"
    },
    {
        "id": 261,
        "Question": "Which function is used to transform PHP’s session-handler behavior into that defined by your custom handler?",
        "Options": [
            "a) session_set_save()",
            "b) session_set_save_handler()",
            "c) Session_handler()",
            "d) session_save_handler()"
        ],
        "Answer": "Answer: b\nExplanation: The function session_set_save_handler() is used to set the user-level session storage functions which are used for storing and retrieving data associated with a session.\n"
    },
    {
        "id": 262,
        "Question": "The session_start() function must appear _________",
        "Options": [
            "a) after the html tag",
            "b) after the body tag",
            "c) before the body tag",
            "d) before the html tag"
        ],
        "Answer": "Answer: d\nExplanation: Like this: <?php session_start(); ?>  <html>\n"
    },
    {
        "id": 263,
        "Question": "What is the return type of session_set_save_handler() function?",
        "Options": [
            "a) boolean",
            "b) integer",
            "c) float",
            "d) character"
        ],
        "Answer": "Answer: a\nExplanation: Returns TRUE on success or FALSE on failure.\n"
    },
    {
        "id": 264,
        "Question": "Which one of the following statements should be used to disable just the fopen(), and file() functions?",
        "Options": [
            "a) disable_functions = fopen(), file()",
            "b) disable_functions = fopen, file",
            "c) functions_disable = fopen(), file()",
            "d) functions_disable = fopen, file"
        ],
        "Answer": "Answer: b\nExplanation: You can set disable_functions equal to a comma-delimited list of function names that you want to disable.\n"
    },
    {
        "id": 265,
        "Question": "Which one of the following statements should be used to disable the use of two classes administrator and janitor?",
        "Options": [
            "a) disable_classes = “administrator, janitor”",
            "b) disable_classes = class administrator, class janitor",
            "c) disable_classes = class “administrator”, class “janitor”",
            "d) disable_class = class “administrator”, class “janitor”"
        ],
        "Answer": "Answer: a\nExplanation: There may be classes inside the libraries that you’d rather not make available. You can prevent the use of these classes with the disable_classes directive.\n"
    },
    {
        "id": 266,
        "Question": "What is the default value of max_execution_time directive? This directive specifies how many seconds a script can execute before being terminated.",
        "Options": [
            "a) 10",
            "b) 20",
            "c) 30",
            "d) 40"
        ],
        "Answer": "Answer: c\nExplanation: This can be useful to prevent users’ scripts from consuming too much CPU time. If max_execution_time is set to 0, no time limit will be set.\n"
    },
    {
        "id": 267,
        "Question": "The memory_limit is only applicable if ________ is enabled when you configure PHP.",
        "Options": [
            "a) –enable-limit",
            "b) -enable-memory-limit",
            "c) –enable-memory-limit",
            "d) -memory-limit"
        ],
        "Answer": "Answer: c\nExplanation: This directive specifies, in megabytes, how much memory a script can use. Default value: 128M.\n"
    },
    {
        "id": 268,
        "Question": "Suppose all web material is located within the directory /home/www. To prevent users from viewing and manipulating files such as /etc/password, which one of the following statements should you use?",
        "Options": [
            "a) open_dir = “/home/www/”",
            "b) open_dir = /home/www/",
            "c) open_basedir = /home/www/",
            "d) open_basedir = “/home/www/”"
        ],
        "Answer": "Answer: d\nExplanation: We can use open_basedir statement to define the paths from which we can access files using functions like fopen() and gzopen(). It is used to prevent users from viewing and manipulating files such as /etc/password.\n"
    },
    {
        "id": 269,
        "Question": "Which Apache directive outputs Apache’s server version, server name, port and compile-in modules?",
        "Options": [
            "a) ServerSignature",
            "b) ServerName",
            "c) ServerDetails",
            "d) ServerInfo"
        ],
        "Answer": "Answer: a\nExplanation: It is capable of displaying output like: Apache/2.2.11 (Ubuntu) Server at localhost Port 80.\n"
    },
    {
        "id": 270,
        "Question": "Which directive determines which degree of server details is provided if the ServerSignature directive is enabled?",
        "Options": [
            "a) ServerAddons",
            "b) ServerExtra",
            "c) ServerTokens",
            "d) ServerDetails"
        ],
        "Answer": "Answer: c\nExplanation: Six options are available: Full, Major, Minimal, Minior, OS, and Prod. If it is set to Full ‘Apache/2.2.11 (Ubuntu) PHP/5.3.2 Server’ will be displayed.\n"
    },
    {
        "id": 271,
        "Question": "Which directive should we disable to obscure the fact that PHP is being used on our server?",
        "Options": [
            "a) show_php",
            "b) expose_php",
            "c) print_php",
            "d) info_php"
        ],
        "Answer": "Answer: b\nExplanation: Using the expose_php directive we can prevent PHP version details from being appended on our web server signature. When expose_php is disabled, the server signature will look like: Apache/2.2.11 (Ubuntu) Server.\n"
    },
    {
        "id": 272,
        "Question": "Say I want to change the extension of a PHP file, which of the following statements should I edit to change from .php to .html in the httpd.conf file?",
        "Options": [
            "a) AddType application/x-httpd-php .php",
            "b) AddType application/x-httpd-php .asp",
            "c) AddType application/x-httpd-asp .php",
            "d) AddType application/x-httpd-asp .asp"
        ],
        "Answer": "Answer: a\nExplanation: Just change the .php to .html and your extension will change. This is used for security purpose.\n"
    },
    {
        "id": 273,
        "Question": "The developers of PHP deprecated the safe mode feature as of which PHP version.",
        "Options": [
            "a) PHP 5.1.0",
            "b) PHP 5.2.0",
            "c) PHP 5.3.0",
            "d) PHP 5.3.1"
        ],
        "Answer": "Answer: c\nExplanation: This happened because safe mode often creates many problems as it resolves, largely due to the need for enterprise applications to use many of the features safe mode disables.\n"
    },
    {
        "id": 274,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$number</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span>two<span class=\"sy0\">,</span>three<span class=\"sy0\">,</span>four<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"kw3\">preg_grep</span><span class=\"br0\">(</span><span class=\"st0\">\"/[0-5]/\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$number</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$num</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array([0]=>0 [1]=>1 [2]=>two [3]=>three [4]=>four [5]=>5)",
            "b) Array([2]=>two [3]=>three [4]=>four)",
            "c) Array([1]=> 1)",
            "d) Array([0]=>0 [1]=>1 [5]=>5)"
        ],
        "Answer": "Answer: d\nExplanation: The preg_grep function is used to search an array for specific patterns and then return a new array based on that filtering.\n"
    },
    {
        "id": 275,
        "Question": "What will be the output if we replace the line $num = preg_grep(“/[0-5]/”, $number); with $num = preg_grep(“/[0-5]/”, $number, PREG_GREP_INVERT);?",
        "Options": [
            "a) Array([0]=>0 [1]=>1 [2]=>two [3]=>three [4]=>four [5]=>5)",
            "b) Array([2]=>two [3]=>three [4]=>four)",
            "c) Array([1]=> 1)",
            "d) Array([0]=>0 [5]=>5)"
        ],
        "Answer": "Answer: b\nExplanation: When we include PREG_GREP_INVERT, this will invert our data, so instead of outputting numbers it will output our non-numeric values.\n"
    },
    {
        "id": 276,
        "Question": "Which one of the following functions are used to search a string?",
        "Options": [
            "a) preg_match",
            "b) preg_search",
            "c) preg_find",
            "d) preg_found"
        ],
        "Answer": "Answer: a\nExplanation: The function preg_match() searches string for pattern and it returns true if pattern exists, and false otherwise. The function returns 1 if search was successful else returns 0.\n"
    },
    {
        "id": 277,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$name</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"What is your name?\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">preg_match</span><span class=\"br0\">(</span><span class=\"st0\">\"/name/\"</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"re0\">$name</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"My name is Will Pitt \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"My name is not Will Pitt \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">preg_match</span><span class=\"br0\">(</span><span class=\"st0\">\"/are/\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"I am great\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"I am not great\"</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) My name is Will Pitt I am great",
            "b) My name is not Will Pitt I am great",
            "c) My name is Will Pitt I am not great",
            "d) My name is not Will Pitt I am not great"
        ],
        "Answer": "Answer: c\nExplanation: The code uses preg_match to check for a keyword and replies based on whether it is true (1) or false (0).\n"
    },
    {
        "id": 278,
        "Question": "Which one of the following preg PHP function is used to do a find and replace on a string or an array?",
        "Options": [
            "a) preg_replace()",
            "b) preg_find()",
            "c) preg_find_replace()",
            "d) preg_findre()"
        ],
        "Answer": "Answer: a\nExplanation: In preg_replace() function, after the replacement has occurred, the modified string will be returned and if no matches are found, the string will remain unchanged.\n"
    },
    {
        "id": 279,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$str</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello! My name is Cameron Fox. Coffee?\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$find</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'/is/'</span><span class=\"sy0\">,</span><span class=\"st_h\">'/coffee/'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$replace</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st_h\">'/was/'</span><span class=\"sy0\">,</span><span class=\"st_h\">'/tea/'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">preg_replace</span> <span class=\"br0\">(</span><span class=\"re0\">$find</span><span class=\"sy0\">,</span> <span class=\"re0\">$replace</span><span class=\"sy0\">,</span> <span class=\"re0\">$str</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello! My name was Cameron Fox. tea?",
            "b) Hello! My name is Cameron Fox. tea?",
            "c) Hello! My name is Cameron Fox. Coffee?",
            "d) Hello! My name was Cameron Fox. Coffee?"
        ],
        "Answer": "Answer: d\nExplanation: Coffee was not replaced because the preg_replace function is case sensitive. Therefore it treats coffee and Coffee differently.\n"
    },
    {
        "id": 280,
        "Question": "Which one of the following preg PHP functions is used to take a string, and put it in an array?",
        "Options": [
            "a) preg_destroy()",
            "b) preg_split()",
            "c) preg_unchain()",
            "d) preg_divide()"
        ],
        "Answer": "Answer: b\nExplanation: The string is broken up into different values in the array based upon your input.\n"
    },
    {
        "id": 281,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$line</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"You like dogs. I hate dogs. We should marry.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$sen</span> <span class=\"sy0\">=</span> <span class=\"kw3\">preg_split</span><span class=\"br0\">(</span><span class=\"st_h\">'/\\./'</span><span class=\"sy0\">,</span> <span class=\"re0\">$line</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span><span class=\"br0\">(</span><span class=\"re0\">$sen</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) You like dogs. I hate dogs. We should marry.",
            "b) Array([0]=>You like dogs. I hate dogs. We should marry.)",
            "c) Array([0]=>You like dogs. [1]=>I hate dogs. [2]=>We should marry.)",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: We use a ‘.’ period to split the data, therefor giving each sentence it’s own array entry.\n"
    },
    {
        "id": 282,
        "Question": "Which one of the following is not a preg PHP function?",
        "Options": [
            "a) preg_match",
            "b) preg_match_all",
            "c) preg_matchall",
            "d) preg_split"
        ],
        "Answer": "Answer: c\nExplanation: The function preg_match_all() matches all occurrences of pattern in string.\n"
    },
    {
        "id": 283,
        "Question": "Parameter flags was added in which version of PHP?",
        "Options": [
            "a) PHP 4.0",
            "b) PHP 4.1",
            "c) PHP 4.2",
            "d) PHP 4.3"
        ],
        "Answer": "Answer: d\nExplanation: Parameter flags was added in PHP 4.3 version.\n"
    },
    {
        "id": 284,
        "Question": "Which one of the following databases has PHP supported almost since the beginning?",
        "Options": [
            "a) Oracle Database",
            "b) SQL",
            "c) SQL+",
            "d) MySQL"
        ],
        "Answer": "Answer: d\nExplanation: We can connect, insert, update, delete and retrieve data from the databases with the help of PHP and MySQL is the most popular database system used with PHP.\n"
    },
    {
        "id": 285,
        "Question": "The updated MySQL extension released with PHP 5 is typically referred to as _______________",
        "Options": [
            "a) MySQL",
            "b) mysql",
            "c) mysqli",
            "d) mysqly"
        ],
        "Answer": "Answer: c\nExplanation: The updated MySQL extension with PHP 5 is known as MySQL and typically referred to as mysqli.\n"
    },
    {
        "id": 286,
        "Question": "Which one of the following lines need to be uncommented or added in the php.ini file so as to enable mysqli extension?",
        "Options": [
            "a) extension=php_mysqli.dll",
            "b) extension=mysql.dll",
            "c) extension=php_mysqli.dl",
            "d) extension=mysqli.dl"
        ],
        "Answer": "Answer: a\nExplanation: Also make sure that extension_dir directive points to the appropriate directory.\n"
    },
    {
        "id": 287,
        "Question": "In which version of PHP was MySQL Native Driver(also known as mysqlnd) introduced?",
        "Options": [
            "a) PHP 5.0",
            "b) PHP 5.1",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: d\nExplanation: PHP required that MySQL client library be installed on the server from which PHP was communicating with MySQL, whether the MySQL server also happened to reside locally or elsewhere. PHP 5.3 removes this problem by introducing MySQL Native Driver.\n"
    },
    {
        "id": 288,
        "Question": "Which one of the following statements is used to create a table?",
        "Options": [
            "a) CREATE TABLE table_name (column_name column_type);",
            "b) CREATE table_name (column_type column_name);",
            "c) CREATE table_name (column_name column_type);",
            "d) CREATE TABLE table_name (column_type column_name);"
        ],
        "Answer": "Answer: a\nExplanation: The example creates a table called “student” that contains five columns: SID, LastName, FirstName, Address, and City:\nCREATE TABLE student (\n    SID int,\n    LastName varchar(255),\n    FirstName varchar(255),\n    Address varchar(255),\n    City varchar(255)\n);\n"
    },
    {
        "id": 289,
        "Question": "Which one of the following statements instantiates the mysqli class?",
        "Options": [
            "a) mysqli = new mysqli()",
            "b) $mysqli = new mysqli()",
            "c) $mysqli->new.mysqli()",
            "d) mysqli->new.mysqli()"
        ],
        "Answer": "Answer: b\nExplanation: If you choose to interact with MySQL server using the object-oriented interface, you need to first instantiate the mysqli class via its constructor.\n"
    },
    {
        "id": 290,
        "Question": "7.Which one of the following statements can be used to select the database?",
        "Options": [
            "a) $mysqli=select_db('databasename');",
            "b) mysqli=select_db('databasename');",
            "c) mysqli->select_db('databasename');",
            "d) $mysqli->select_db('databasename');"
        ],
        "Answer": "Answer: d\nExplanation: $mysqli->select_db(‘databasename’); can be used to select the database.\n"
    },
    {
        "id": 291,
        "Question": "Which one of the following methods can be used to diagnose and display information about a MySQL connection error?",
        "Options": [
            "a) connect_errno()",
            "b) connect_error()",
            "c) mysqli_connect_errno()",
            "d) mysqli_connect_error()"
        ],
        "Answer": "Answer: c\nExplanation: The mysqli extension includes a few features that can be used to capture error messages or alternatively you can use exceptions.\n"
    },
    {
        "id": 292,
        "Question": "Which method returns the error code generated from the execution of the last MySQL function?",
        "Options": [
            "a) errno()",
            "b) errnumber()",
            "c) errorno()",
            "d) errornumber()"
        ],
        "Answer": "Answer: a\nExplanation: Error numbers are often used in lieu of natural-language message to ease software internationalization efforts and allow for customization of error messages.\n"
    },
    {
        "id": 293,
        "Question": "If there is no error, then what will the error() method return?",
        "Options": [
            "a) TRUE",
            "b) FALSE",
            "c) Empty String",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation: The function error is used to deal with error handling and logging. If there is no error, then the error() method will return an empty string.\n"
    },
    {
        "id": 294,
        "Question": "Which one of the following statements should be used to include a file?",
        "Options": [
            "a) #include ‘filename’;",
            "b) include ‘filename’;",
            "c) @include ‘filename’;",
            "d) #include <filename>;"
        ],
        "Answer": "Answer: b\nExplanation: Include in PHP will takes all the code from the specified file and copies to the existing file containing include statement. An example of this-\n\n\n\t\n\n<?php#include 'mysql.connect.php';//begin database selection and queries.?>\n\n\n"
    },
    {
        "id": 295,
        "Question": "Which one of the following methods is responsible for sending the query to the database?",
        "Options": [
            "a) query()",
            "b) send_query()",
            "c) sendquery()",
            "d) mysqli_query()"
        ],
        "Answer": "Answer: d\nExplanation: The method mysqli_query() is responsible for sending the query to the database. Query() method was previously used in older versions of PHP.\n"
    },
    {
        "id": 296,
        "Question": "Which one of the following methods recuperates any memory consumed by a result set?",
        "Options": [
            "a) destroy()",
            "b) mysqli_free_result()",
            "c) alloc()",
            "d) free()"
        ],
        "Answer": "Answer: b\nExplanation: The function mysqli_free_result() is used to free the memory which is associated with the result. Once this method is executed, the result set is no longer available. Free() function was used in the previous version of PHP.\n"
    },
    {
        "id": 297,
        "Question": "Which of the methods are used to manage result sets using both associative and indexed arrays?",
        "Options": [
            "a) get_array() and get_row()",
            "b) get_array() and get_column()",
            "c) fetch_array() and fetch_row()",
            "d) mysqli_fetch_array() and mysqli_fetch_row()"
        ],
        "Answer": "Answer: d\nExplanation: The method mysqli_fetch_array() is used to fetch a result row as an associative array or a numeric array.\nAnd the function mysqli_fetch_row() is used to fetche one row from a result-set and returns it as an enumerated array.\nThe method fetch_array() and fetch_row() were used in the previous version of PHP.\n"
    },
    {
        "id": 298,
        "Question": "Which one of the following method is used to retrieve the number of rows affected by an INSERT, UPDATE, or DELETE query?",
        "Options": [
            "a) num_rows()",
            "b) affected_rows()",
            "c) changed_rows()",
            "d) mysqli_affected_rows()"
        ],
        "Answer": "Answer: d\nExplanation: The method mysqli_num_rows() is only useful for determining the number of rows retrieved by a SELECT query. But to retrieve the number of rows affected by INSERT, UPDATE, or DELETE query, use mysqli_affected_rows(). Num_rows() and  affected_rows() were used in previous version of PHP.\n"
    },
    {
        "id": 299,
        "Question": "Which version of MySQL introduced the prepared statements?",
        "Options": [
            "a) MySQL 4.0",
            "b) MySQL 4.1",
            "c) MySQL 4.2",
            "d) MySQL 4.3"
        ],
        "Answer": "Answer: b\nExplanation: When the query() method is looped repeatedly it comes at a cost of both overhead, because of the need to repeatedly parsing of the almost identical query for validity, and coding convenience, because of the need to repeatedly reconfigure the query using the new values for each iteration. To help resolve the issues incurred by repeatedly executed queries, MySQL introduced prepared statements.\n"
    },
    {
        "id": 300,
        "Question": "Which of the following methods is used to execute the statement after the parameters have been bound?",
        "Options": [
            "a) bind_param()",
            "b) bind_result()",
            "c) bound_param()",
            "d) bound_result()"
        ],
        "Answer": "Answer: a\nExplanation: Once the statement has been prepared, it needs to be executed. Exactly when it’s executed depends upon whether you want to work with bound parameters or bound results. In the case of bound parameters, you’d execute the statement after the parameters have been bound with the bind_param() method.\n"
    },
    {
        "id": 301,
        "Question": "Which one of the following methods is used to recuperating prepared statements resources?",
        "Options": [
            "a) end()",
            "b) finish()",
            "c) mysqli_close()",
            "d) close()"
        ],
        "Answer": "Answer: c\nExplanation: The function mysqli_close() is used to close an opened database connection. Once you’ve finished using a prepared statement, the resources it requires can be recuperated with the mysqli_close() method. Close() was used in previous version of PHP.\n"
    },
    {
        "id": 302,
        "Question": "Which method retrieves each row from the prepared statement result and assigns the fields to the bound results?",
        "Options": [
            "a) get_row()",
            "b) fetch_row()",
            "c) fetch()",
            "d) mysqli_fetch_row()"
        ],
        "Answer": "Answer: d\nExplanation: The function mysqli_fetch_row() is used to fetche row from a result-set and returns it as an enumerated array.\nIts syntax is mysqli_fetch_row(result);\n"
    },
    {
        "id": 303,
        "Question": "Which method rolls back the present transaction?",
        "Options": [
            "a) commit()",
            "b) undo()",
            "c) mysqli_rollback()",
            "d) rollback()"
        ],
        "Answer": "Answer: c\nExplanation: The function mysqli_rollback() is used to roll back from the current transaction for the specified database connection. Its syntax is: mysqli_rollback(connection);\nRollback() was used in previous version of PHP.\n"
    },
    {
        "id": 304,
        "Question": "Which one of the following is not a valid class name?",
        "Options": [
            "a) ShopProduct",
            "b) Shopproduct",
            "c) Shopproduct1",
            "d) 1shopproduct"
        ],
        "Answer": "Answer: d\nExplanation: You declare a class with the class keyword and an arbitrary class name. Class names can be any combination of numbers and letters, although they must not begin with a number.\n"
    },
    {
        "id": 305,
        "Question": "Fill in the blank with the best option. An Object is a/an ________ of a class.",
        "Options": [
            "a) type",
            "b) prototype",
            "c) instance",
            "d) object"
        ],
        "Answer": "Answer: c\nExplanation: An object is said to be an instance of its class. It is of the type defined by the class.\n"
    },
    {
        "id": 306,
        "Question": "Which version of PHP introduced the visibility keywords i.e public, private, and protected?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.1",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: b\nExplanation: In PHP object is created using new operator. $product1 and $product2 are different objects of the same type generated from a single class.\n"
    },
    {
        "id": 307,
        "Question": "Which characters is used to access property variables on an object-by-object basis?",
        "Options": [
            "a) ::",
            "b) =",
            "c) ->",
            "d) ."
        ],
        "Answer": "Answer: b\nExplanation: In PHP 4, all properties were declared with var keyword, which is identical in effect to using public. For the sake of backward compatibility, PHP 5 accepts var in place of public for properties.\n"
    },
    {
        "id": 308,
        "Question": "Code that uses a class, function, or method is often described as the ____________",
        "Options": [
            "a) client code",
            "b) user code",
            "c) object code",
            "d) class code"
        ],
        "Answer": "Answer: c\nExplanation: Example: $product1->title=”My Life”;\n"
    },
    {
        "id": 309,
        "Question": "Which keyword precedes a method name?",
        "Options": [
            "a) method",
            "b) function",
            "c) public",
            "d) protected"
        ],
        "Answer": "Answer: a\nExplanation: Code that uses a class, function, or method is often described as the class’s, function, or method client or as client code.\n"
    },
    {
        "id": 310,
        "Question": "If you omit the visibility keyword in your method declaration, by default the method will be declared as ____________",
        "Options": [
            "a) public",
            "b) private",
            "c) protected",
            "d) friendly"
        ],
        "Answer": "Answer: b\nExplanation: A method declaration resembles a function declaration. The function keyword precedes a method name, followed by an optional list of argument variables in parentheses.\n"
    },
    {
        "id": 311,
        "Question": "Which function is used to determine whether the variable’s value is either TRUE or FALSE?",
        "Options": [
            "a) boolean()",
            "b) is_boolean()",
            "c) bool()",
            "d) is_bool()"
        ],
        "Answer": "Answer: a\nExplanation: By declaring a method public, you ensure that it can be invoked from outside of the current object.\n"
    },
    {
        "id": 312,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">class</span> ShopProductWriter</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">public</span> <span class=\"kw2\">function</span> write<span class=\"br0\">(</span> <span class=\"re0\">$shopProduct</span> <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"re0\">$str</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es4\">{$shopProduct-&gt;title}</span>: \"</span> <span class=\"sy0\">.</span><span class=\"re0\">$shopProduct</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getProducer</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">.</span><span class=\"st0\">\" (<span class=\"es4\">{$shopProduct-&gt;price}</span>)<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">print</span> <span class=\"re0\">$str</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$product1</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> ShopProduct<span class=\"br0\">(</span> <span class=\"st0\">\"My Antonia\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Willa\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Cather\"</span><span class=\"sy0\">,</span> <span class=\"nu19\">5.99</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$writer</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> ShopProductWriter<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$writer</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">write</span><span class=\"br0\">(</span> <span class=\"re0\">$product1</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Cather: Willa My Antonia (5.99)",
            "c) Willa: Cather My Antonia (5.99)",
            "d) My Antonia: Willa Cather (5.99)"
        ],
        "Answer": "Answer: d\nExplanation: None.\n"
    },
    {
        "id": 313,
        "Question": "Which version of PHP introduced class type hints?",
        "Options": [
            "a) PHP 4",
            "b) PHP 4.3",
            "c) PHP 5",
            "d) PHP 5.3"
        ],
        "Answer": "Answer: c\nExplanation: None.\n"
    },
    {
        "id": 314,
        "Question": "Inheritance is the means by which one or more classes can be derived from a/an ___________ class.",
        "Options": [
            "a) base",
            "b) abstract",
            "c) null",
            "d) predefined"
        ],
        "Answer": "Answer: a\nExplanation: A class that inherits from another is said to be a subclass of it. This relationship is often described in terms of parents and children. A child class is derived from and inherits characteristics from the parent.\n"
    },
    {
        "id": 315,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> MyClass<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">var_dump</span><span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"re0\">$a</span> instanceof stdClass<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) bool(true)",
            "b) bool(false)",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: instanceof is used to determine whether a PHP variable is an instantiated object of a certain class.\n"
    },
    {
        "id": 316,
        "Question": "What should be used to refer to a method in the context of a class rather than an object you use?",
        "Options": [
            "a) ->",
            "b) __",
            "c) $",
            "d) ::"
        ],
        "Answer": "Answer: a\nExplanation: To check if an object is not an instanceof a class, the logical not operator can be used.\n"
    },
    {
        "id": 317,
        "Question": "Prior to which version of PHP did constructors took the name of the enclosing class.",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.3",
            "d) PHP 5.4"
        ],
        "Answer": "Answer: b\nExplanation: instanceof can also be used to determine whether a variable is an instantiated object of a class that implements an interface.\n"
    },
    {
        "id": 318,
        "Question": "Which method or property can only be accessed from within the enclosing class? Even subclasses have no access.",
        "Options": [
            "a) public",
            "b) friendly",
            "c) private",
            "d) protected"
        ],
        "Answer": "Answer: d\nExplanation: Example- parent::__construct()\n"
    },
    {
        "id": 319,
        "Question": "A mutator method is also called as ___________",
        "Options": [
            "a) Setter",
            "b) Accessor",
            "c) Getter",
            "d) Destructor"
        ],
        "Answer": "Answer: b\nExplanation: The new unified constructors use the name __construct(). Using the old syntax, a call to a parent constructor would tie you to that particular class: parent::ShopProduct();\n"
    },
    {
        "id": 320,
        "Question": "When you are building administrative links you’ll need to accept two arguments, which of the following are they?",
        "Options": [
            "a) URL of previous entry and URL of the entry you are working with",
            "b) The current page and previous page",
            "c) URL of previous entry and previous page",
            "d) The current page and URL of the entry you are working with"
        ],
        "Answer": " Answer: d\nExplanation: Your function should look like this:\n\n\n\t\n\nfunction adminLinks($page, $url){  //Build admin links here}\n\n\n"
    },
    {
        "id": 321,
        "Question": "Once your application can generate administrative links, you need to load those links into _________",
        "Options": [
            "a) php.ini",
            "b) index.ini",
            "c) index.php",
            "d) start.php"
        ],
        "Answer": " Answer: c\nExplanation: You place your administrative links only on the full display of an entry, so you must place the call to load information from adminLinks() within a conditional statement\n"
    },
    {
        "id": 322,
        "Question": "The URLs in the administrative links won’t mean anything to admin.php unless you modify _________",
        "Options": [
            "a) .htaccess",
            "b) .adminaccess",
            "c) .htmlaccess",
            "d) .urlaccess"
        ],
        "Answer": " Answer: a\nExplanation: You need to modify .htaccess with an additional rule that handles URLs passed in a link to admin.php.\n"
    },
    {
        "id": 323,
        "Question": "The (|/) tells the server to match ___________",
        "Options": [
            "a) nothing",
            "b) forward slash",
            "c) backward slash",
            "d) either nothing or a forward slash"
        ],
        "Answer": " Answer: d\nExplanation: The vertical pipe character (|) is the regular expression equivalent of “or”.\n"
    },
    {
        "id": 324,
        "Question": "([\\w-]+) will match ___________",
        "Options": [
            "a) one word characters",
            "b) one or more word characters",
            "c) one or more word characters and/or hyphens",
            "d) one or more word characters and hyphens"
        ],
        "Answer": " Answer: c\nExplanation: ([\\w-]+), will match one or more word characters and/or hyphens—which is what your custom entry URLs consist.\n"
    },
    {
        "id": 325,
        "Question": "You need to check whether ______ is set, to determine whether you’re editing an entry or creating a new one.",
        "Options": [
            "a) $_GET[‘url’] ",
            "b) $_SET[‘url’] ",
            "c) $_GET[‘admin’] ",
            "d) $_SET[‘admin’]"
        ],
        "Answer": " Answer: a\nExplanation: If an entry is being edited, you need to load the existing entry data and save each piece in a variable.\n"
    },
    {
        "id": 326,
        "Question": "To identify entries marked for deletion, you check whether $_GET[‘page’] == ‘delete’ inside __________",
        "Options": [
            "a) index.php",
            "b) index.ini",
            "c) admin.php",
            "d) .htaccess"
        ],
        "Answer": " Answer: c\nExplanation: In admin.php, you check whether $_GET[‘page’] == ‘delete’, then pass the entry URL to be deleted to a function.\n"
    },
    {
        "id": 327,
        "Question": "To declare the function to confirm the deletion you need to add the code to __________",
        "Options": [
            "a) inc.php",
            "b) functions.inc.php",
            "c) include.php",
            "d) functions.include.php"
        ],
        "Answer": " Answer: b\nExplanation: You need to add the following code –\n\n\n\t\n\nfunction confirmDelete($db, $url){    $e = retrieveEntries($db, '', $url);    return <<<FORM    <form action=\"/simple_blog/admin.php\" method=\"post\">    <fieldset>    <legend>Are You Sure?</legend>    <p>Are you sure you want to delete the entry \"$e[title]\"?</p>    <input type=\"submit\" name=\"submit\" value=\"Yes\" />    <input type=\"submit\" name=\"submit\" value=\"No\" />    <input type=\"hidden\" name=\"action\" value=\"delete\" />    <input type=\"hidden\" name=\"url\" value=\"$url\" />    </fieldset>    </form>    FORM;}\n\n\n"
    },
    {
        "id": 328,
        "Question": "Your confirmation form submits your choice, via the _______ method, to ________",
        "Options": [
            "a) GET index.php",
            "b) GET admin.php",
            "c) POST index.php",
            "d) POST admin.php"
        ],
        "Answer": " Answer: d\nExplanation: To process this, you need to add an additional block of code to the top of admin.php that determines what choices you’ve made and act accordingly.\n"
    },
    {
        "id": 329,
        "Question": "When a user confirms that he wishes to delete an entry, that entry’s URL is passed to a function which removes the entry from the __________",
        "Options": [
            "a) index.php",
            "b) function.inc.php",
            "c) database",
            "d) admin.php"
        ],
        "Answer": " Answer: c\nExplanation: If the function is successful, you send the user to the main page. If it fails, you stop the execution of the script and display an error, letting the user know that something went wrong.\n"
    },
    {
        "id": 330,
        "Question": "Before you can start processing images with PHP, you must first add the ability to upload images to your administrative form on ________",
        "Options": [
            "a) .htaccess",
            "b) function.inc.php",
            "c) index.php",
            "d) admin.php"
        ],
        "Answer": "Answer: d\nExplanation: To do this, you’ need to add a file upload input to your administrative form.\n"
    },
    {
        "id": 331,
        "Question": "When you’re uploading files you need to set the enctype of the form to __________",
        "Options": [
            "a) text",
            "b) text/file",
            "c) multipart/form-data",
            "d) multimedia/form-data"
        ],
        "Answer": "Answer: c\nExplanation: Set the enctype of the form to multipart/form-data, which can accept files and standard form values.\n"
    },
    {
        "id": 332,
        "Question": "To check whether a file was uploaded, you look in the _______ superglobal array.",
        "Options": [
            "a) $_FILES",
            "b) $_DOCS",
            "c) $_DOCUMENTS",
            "d) $_FOLDERS"
        ],
        "Answer": "Answer: a\nExplanation: Whenever a file is uploaded via an HTML form, that file is stored in temporary memory and information about the file is passed in the $_FILES superglobal.\n"
    },
    {
        "id": 333,
        "Question": "To make the ImageHandler class portable you should create a separate file for it called __________",
        "Options": [
            "a) imagehandler.inc.php",
            "b) images.inc.php",
            "c) handler.inc.php",
            "d) imghandler.inc.php"
        ],
        "Answer": "Answer: b\nExplanation: You save this file in the inc folder (full path: /xampp/htdocs/simple_blog/inc/images.inc.php).\n"
    },
    {
        "id": 334,
        "Question": "DocBlocks are indicated by opening a comment using _________",
        "Options": [
            "a) /*",
            "b) //*",
            "c) /**",
            "d) /*/"
        ],
        "Answer": "Answer: c\nExplanation: This is a special comment that provides information about a class, property, or method.\n"
    },
    {
        "id": 335,
        "Question": "To process the file, you need to break the array from $_FILES into individual values. You can do this using the ________ function.",
        "Options": [
            "a) divide()",
            "b) list()",
            "c) break()",
            "d) indi()"
        ],
        "Answer": "Answer: b\nExplanation: The list() function allows you to create named variables for each array index as a comma-separated list.\n"
    },
    {
        "id": 336,
        "Question": "Before you try to process the file, you need to make sure that your $err value is equivalent to _________",
        "Options": [
            "a) UPLOAD_ERR_OK",
            "b) UPLOAD_NO_ERR",
            "c) UPLOAD_ERR_NO_OK",
            "d) UPLOAD_ERR"
        ],
        "Answer": "Answer: a\nExplanation: When you’re dealing with files uploaded through an HTML form, you have access to a special constant called UPLOAD_ERR_OK that tells you whether a file uploaded successfully.\n"
    },
    {
        "id": 337,
        "Question": "You use the $_SERVER superglobal and your _______ property to create your path to check.",
        "Options": [
            "a) $load_dir",
            "b) $load",
            "c) $save",
            "d) $save_dir"
        ],
        "Answer": "Answer: d\nExplanation: // Determines the path to check\n\n\n$path = $_SERVER['DOCUMENT_ROOT'] . $this->save_dir;\n\n\n"
    },
    {
        "id": 338,
        "Question": "Which function do you have to use to check whether the $path you’ve stored exists?",
        "Options": [
            "a) path_dir()",
            "b) path()",
            "c) is_dir()",
            "d) path_dir()"
        ],
        "Answer": "Answer: c\nExplanation: If the path exists, is_dir() returns TRUE; otherwise, it returns FALSE.\n"
    },
    {
        "id": 339,
        "Question": "Which one of the following is true about the following line – $obj = new ImageHandler(‘/images/’, array(400, 300));?",
        "Options": [
            "a) This snippet sets the maximum dimensions allowed to 400 pixels wide by 300 pixels high",
            "b) This snippet sets the minimum dimensions allowed to 300 pixels wide by 400 pixels high",
            "c) This snippet sets the minimum dimensions allowed to 400 pixels wide by 300 pixels high",
            "d) This snippet sets the maximum dimensions allowed to 300 pixels wide by 400 pixels high"
        ],
        "Answer": "Answer: a\nExplanation: If you needed to change the size of your images, you can change the dimensions using the above instantiation of ImageHandler.\n"
    },
    {
        "id": 340,
        "Question": "Which version of PHP introduced the static keyword?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": " Answer: b\nExplanation: The static keyword was introduced with PHP 5. It cannot be used in PHP 4 scripts.\n"
    },
    {
        "id": 341,
        "Question": "Which keyword is used to access a static method or property from within the same class(rather than from child)?",
        "Options": [
            "a) static",
            "b) strat",
            "c) self",
            "d) set"
        ],
        "Answer": " Answer: c\nExplanation: Self is to classes what the $this pseudo-variable is to objects.\n"
    },
    {
        "id": 342,
        "Question": "In which of the following circumstance should you use a static reference to a non static method?",
        "Options": [
            "a) Making a method call using parent",
            "b) Making a method call using child",
            "c) Making an object call using parent",
            "d) Making an object call using child"
        ],
        "Answer": " Answer: a\nExplanation: Making a method call using parent is the only circumstance in which you should use a static reference to a non-static method.\n"
    },
    {
        "id": 343,
        "Question": "Which one of the following variable cannot be used inside a static method?",
        "Options": [
            "a) $this",
            "b) $get",
            "c) $set",
            "d) $date"
        ],
        "Answer": " Answer: a\nExplanation: By definition, static methods are not invoked in the context of an object. For this reason, static methods and properties are often referred to as class variables and properties.\n"
    },
    {
        "id": 344,
        "Question": "What does PDO stand for?",
        "Options": [
            "a) PHP Data Orientation",
            "b) PHP Database Object",
            "c) PHP Database Orientation",
            "d) PHP Data Object"
        ],
        "Answer": " Answer: d\nExplanation: The PDO class provides a common interface to different database applications.\n"
    },
    {
        "id": 345,
        "Question": "Which version of PHP allows you to define constant properties within a class?",
        "Options": [
            "a) PHP 4",
            "b) PHP 4.1",
            "c) PHP 4.3",
            "d) PHP 5"
        ],
        "Answer": "Answer: d\nExplanation: None.\n"
    },
    {
        "id": 346,
        "Question": "Which keyword is used to declare a constant property?",
        "Options": [
            "a) const",
            "b) con",
            "c) constant",
            "d) _constant"
        ],
        "Answer": " Answer: a\nExplanation: A constant property is declared with the const keyword. Like global constants, class constants cannot be changed once they are set.\n"
    },
    {
        "id": 347,
        "Question": "Which one of the following is a constant variable?",
        "Options": [
            "a) const $name",
            "b) const $NAME",
            "c) constant NAME",
            "d) const NAME"
        ],
        "Answer": " Answer: d\nExplanation: Constants are not prefixed with a dollar sign like regular properties. By convention, they are often named using only uppercase characters\n"
    },
    {
        "id": 348,
        "Question": "What will happen if you try to set a value to a constant once it has been declared?",
        "Options": [
            "a) The value of the variable will change",
            "b) The value of the variable will not change",
            "c) Parse Error",
            "d) Nothing"
        ],
        "Answer": " Answer: c\nExplanation: You should use constants when your property needs to be available across all instances of a class, and when the property value needs to be fixed and unchanging.\n"
    },
    {
        "id": 349,
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": " Answer: d\nExplanation: All scalar data i.e boolean, integer, float and string can be contained in constants.\n"
    },
    {
        "id": 350,
        "Question": "Which one of the following class can not be instantiated?",
        "Options": [
            "a) inherited class",
            "b) abstract class",
            "c) constant class",
            "d) every class"
        ],
        "Answer": " Answer: b\nExplanation: An abstract class cannot be instantiated. Instead, it defines (and, optionally, partially implements) the interface for any class that might extend it.\n"
    },
    {
        "id": 351,
        "Question": "Which one of the following keywords are used to define an abstract class?",
        "Options": [
            "a) extends",
            "b) implements",
            "c) abstract",
            "d) new"
        ],
        "Answer": " Answer: c\nExplanation: The introduction of abstract classes was one of the major changes ushered in with PHP 5. Its inclusion in the list of new features was another sign of PHP’s extended commitment to object-oriented design.\n"
    },
    {
        "id": 352,
        "Question": "Which one of the following is the correct abstract method?",
        "Options": [
            "a) public function write()",
            "b) abstract function write()",
            "c) abstract public write();",
            "d) abstract public function write();"
        ],
        "Answer": " Answer: d\nExplanation: An abstract method cannot have an implementation. You declare it in the normal way, but end the declaration with a semicolon rather than a method body.\n"
    },
    {
        "id": 353,
        "Question": "At least how many abstract methods must an abstract class contain?",
        "Options": [
            "a) None",
            "b) One",
            "c) Two",
            "d) Five"
        ],
        "Answer": " Answer: b\nExplanation: Classes defined as abstract may not be instantiated, and any class that contains at least one abstract method must also be abstract.\n"
    },
    {
        "id": 354,
        "Question": "Which one of the following keyword is used to implement an interface?",
        "Options": [
            "a) interface",
            "b) get",
            "c) inherit",
            "d) implements"
        ],
        "Answer": " Answer: d\nExplanation: A class can implement an interface using the implements keyword in its declaration.\n"
    },
    {
        "id": 355,
        "Question": "Which version of PHP introduced the concept called late static binding?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.1",
            "d) PHP 5.3"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 356,
        "Question": "Which one of the following methods in the exception class, is used to get a nested exception object?",
        "Options": [
            "a) getPrevious()",
            "b) getCode()",
            "c) getFile()",
            "d) getLine()"
        ],
        "Answer": " Answer: a\nExplanation: getCode() – Get the code integer that was passed to the constructor. getFile() – Get the file in which the exception was generated. getLine() – Get the line number at which the exception was generated.\n"
    },
    {
        "id": 357,
        "Question": "Which one of the following keyword is used in conjunction with an Exception object?",
        "Options": [
            "a) throws",
            "b) exception",
            "c) throw",
            "d) final"
        ],
        "Answer": "Answer: c\nExplanation: The throw keyword is used in conjunction with an Exception object. It halts the execution of the current method and passes responsibility for handling the error back to the calling code.\n"
    },
    {
        "id": 358,
        "Question": "Which keyword is used to put a stop on inheritance?",
        "Options": [
            "a) stop",
            "b) end",
            "c) break",
            "d) final"
        ],
        "Answer": " Answer: d\nExplanation: A final class cannot be subclassed.\n"
    },
    {
        "id": 359,
        "Question": "PHP provides built-in interceptor methods, which can intercept messages sent to undefined methods and properties. This is also known as _________",
        "Options": [
            "a) overloading",
            "b) overriding",
            "c) overbending",
            "d) overbinding"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 360,
        "Question": "Which one of the following method is invoked when a value is assigned to an undefined property?",
        "Options": [
            "a) __get()",
            "b) __set()",
            "c) __isset()",
            "d) __call()"
        ],
        "Answer": " Answer: b\nExplanation: The __set() method is invoked when client code attempts to assign to an undefined property. It is passed two arguments: the name of the property, and the value the client is attempting to set.\n"
    },
    {
        "id": 361,
        "Question": "Which one of the following method is invoked when an undefined method is called by client code?",
        "Options": [
            "a) __get()",
            "b) __isset()",
            "c) __unset()",
            "d) __call()"
        ],
        "Answer": " Answer: d\nExplanation: The __call() method is probably the most useful of all the interceptor methods. The __call() method can be useful for delegation. Delegation is the mechanism by which one object passes method invocations on to a second.\n"
    },
    {
        "id": 362,
        "Question": "Which method introduced in PHP 5, is invoked just before an object is a garbage collected?",
        "Options": [
            "a) __collect()",
            "b) __garbage()",
            "c) __destruct()",
            "d) __destructor()"
        ],
        "Answer": " Answer: c\nExplanation: You can use this method to perform any final cleaning up that might be necessary. Imagine, for example, a class that saves itself to a database when so ordered. I could use the __destruct() method to ensure that an instance saves its data when it is deleted.\n"
    },
    {
        "id": 363,
        "Question": "4. Which one of the following PHP statements is true?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> CopyMe <span class=\"br0\">{</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$first</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> CopyMe<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$second</span> <span class=\"sy0\">=</span> <span class=\"re0\">$first</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) In PHP 4: $second and $first are 2 distinct objects",
            "b) In PHP 5: $second and $first are 2 distinct objects",
            "c) In PHP 4: $second and $first refer to one object",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 364,
        "Question": "Which keyword must be added before $first variable on the third line of the above question to make $second and $first as distinct objects in PHP 5?",
        "Options": [
            "a) copy",
            "b) clone",
            "c) cut",
            "d) Can’t add any word to make them distinct"
        ],
        "Answer": " Answer: b\nExplanation: Clone operates on an object instance, producing a by-value copy.\n"
    },
    {
        "id": 365,
        "Question": "6. What will be the output of the following PHP code? (Before the version PHP 5.2)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> StringThing <span class=\"br0\">{</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$st</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> StringThing<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$st</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Object Not Found",
            "b) Object id #1",
            "c) PHP Catchable fatal error",
            "d) Cannot initialize object"
        ],
        "Answer": " Answer: b\nExplanation: Since PHP 5.2, this code will produce an error like this: PHP Catchable fatal error: Object of class StringThing could not be converted to string.\n"
    },
    {
        "id": 366,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Person </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> getName<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"st0\">\"Bob\"</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> getAge<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span> <span class=\"kw1\">return</span> <span class=\"nu0\">44</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> __toString<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$desc</span> <span class=\"sy0\">=</span> <span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getName</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$desc</span> <span class=\"sy0\">.=</span> <span class=\"st0\">\" (age \"</span><span class=\"sy0\">.</span><span class=\"re0\">$this</span><span class=\"sy0\">-&gt;</span><span class=\"me1\">getAge</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\")\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"re0\">$desc</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$person</span> <span class=\"sy0\">=</span> <span class=\"kw2\">new</span> Person<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$person</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Object Not Found",
            "b) PHP Catchable fatal error",
            "c) BOB (age 44)",
            "d) BOB"
        ],
        "Answer": " Answer: c\nExplanation: By implementing a __toString() method, you can control how your objects represent themselves when printed. The method is invoked automatically when your object is passed to print or echo, and its return value is substituted.\n"
    },
    {
        "id": 367,
        "Question": "__clone() is run on the ___ object.",
        "Options": [
            "a) original",
            "b) pseudo",
            "c) external",
            "d) copied"
        ],
        "Answer": " Answer: d\nExplanation: __clone() is run on the copied object and not the original.\n"
    },
    {
        "id": 368,
        "Question": "Which method is invoked when an undefined property is accessed?",
        "Options": [
            "a) __get()",
            "b) __isset()",
            "c) __unset()",
            "d) __undefined()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 369,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Checkout</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    final <span class=\"kw2\">function</span> totalize<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"co1\">// calculate bill</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> IllegalCheckout <span class=\"kw2\">extends</span> Checkout </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    final <span class=\"kw2\">function</span> totalize<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"co1\">// change bill calculation</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) PHP Fatal error: Class IllegalCheckout may not inherit from final class",
            "b) Value of the bill calculated",
            "c) PHP Fatal error: Cannot find object",
            "d) PHP Fatal error: Cannot override final method"
        ],
        "Answer": " Answer: d\nExplanation: A final class cannot be subclassed. Less drastically, a final method cannot be overridden.\n"
    },
    {
        "id": 370,
        "Question": "A package is a set of related _________",
        "Options": [
            "a) Objects",
            "b) Classes",
            "c) Programs",
            "d) Functions"
        ],
        "Answer": " Answer: b\nExplanation: A package is a set of related classes, usually grouped together in some way. Packages can be used to separate parts of a system from one another.\n"
    },
    {
        "id": 371,
        "Question": "Till which version of PHP, developers were forced to name their files in a global context?",
        "Options": [
            "a) PHP 4",
            "b) PHP 5",
            "c) PHP 5.2",
            "d) PHP 5.3"
        ],
        "Answer": " Answer: d\nExplanation: If you named a class ShoppingBasket, it would become instantly available across your system.\n"
    },
    {
        "id": 372,
        "Options": [
            "a) i)",
            "b) ii)",
            "c) iii)",
            "d) i), ii) & iii)"
        ],
        "Answer": " Answer: d\nExplanation: A namespace is a bucket in which you can place your classes, functions and variables.\n"
    },
    {
        "id": 373,
        "Question": "Which one of the following is the correct way of declaring a namespace?",
        "Options": [
            "a) namespace my;",
            "b) namespace my();",
            "c) my namespace;",
            "d) namespace(my);"
        ],
        "Answer": " Answer: a\nExplanation: The namespace declaration must be the first statement in its file.\n"
    },
    {
        "id": 374,
        "Question": "Which symbol is used to declare nested namespaces?",
        "Options": [
            "a) /",
            "b) \\",
            "c) .",
            "d) |"
        ],
        "Answer": " Answer: b\nExplanation: Example – namespace com\\getinstance\\util;\n"
    },
    {
        "id": 375,
        "Question": "Using which one of the following PHP lines will the error be removed?",
        "Options": [
            "a) \\\\com\\getinstance\\util\\Debug::helloWorld();",
            "b) getinstance\\util\\Debug::helloWorld();",
            "c) main.com\\getinstance\\util\\Debug::helloWorld();",
            "d) \\com\\getinstance\\util\\Debug::helloWorld();"
        ],
        "Answer": " Answer: d\nExplanation: PHP is looking below the namespace main for com\\getinstance\\util and not finding it. That’s because we are using a relative namespace here. Just as you can make absolute URLs and filepaths by starting off with a separator so you can with namespaces.\n"
    },
    {
        "id": 376,
        "Question": "7. Which keyword can be used to fix the following PHP error?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><pre class=\"de1\">    <span class=\"kw2\">namespace</span> main<span class=\"sy0\">;</span>\n    com\\getinstance\\util\\Debug<span class=\"sy0\">::</span><span class=\"me2\">helloWorld</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nPHP Fatal error<span class=\"sy0\">:</span> <span class=\"kw2\">Class</span> <span class=\"st_h\">'main\\com\\getinstance\\util\\Debug'</span> not found in <span class=\"sy0\">...</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) fix",
            "b) join",
            "c) use",
            "d) namespace"
        ],
        "Answer": " Answer: c\nExplanation: Use keyword allows you to alias other namespaces within the current namespace.\nExample – namespace main;\nuse com\\getinstance\\util;\nutil\\Debug::helloWorld();\n"
    },
    {
        "id": 377,
        "Question": "8. If I already had a Debug class in the main namespace. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">namespace</span> main<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">use</span> com\\getinstance\\util\\Debug<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Debug <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    static <span class=\"kw2\">function</span> helloWorld<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"st0\">\"hello from main\\Debug\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">Debug<span class=\"sy0\">::</span><span class=\"me2\">helloWorld</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) hello from main",
            "c) hello from main\\Debug",
            "d) debug"
        ],
        "Answer": " Answer: a\nExplanation: PHP Fatal error: Cannot declare class main\\Debug because the name is already in use.\n"
    },
    {
        "id": 378,
        "Question": "Which one of the following statements is true for include_once() and require_once()?",
        "Options": [
            "a) Both are exactly the same",
            "b) include_once is used for files where as require_once() is not",
            "c) Both Handle the errors in the same way",
            "d) Both do not handle the errors in the same way"
        ],
        "Answer": " Answer: d\nExplanation: The only difference between the include() and require() statements lies in their handling of errors. A file invoked using require() will bring down your entire process when you meet an error. The same error encountered via a call to include() will merely generate a warning and end execution of the included file.\n"
    },
    {
        "id": 379,
        "Question": "Which one of the following statements is true for require() and require_once()?",
        "Options": [
            "a) They are functions",
            "b) They are statements",
            "c) They’ll not work if the () is not present",
            "d) They can not be used to require files"
        ],
        "Answer": " Answer: b\nExplanation: require() and require_once() are actually statements, not functions. This means that you can omit the brackets when using them.\n"
    },
    {
        "id": 380,
        "Question": "Which function was introduced to help automate the inclusion of class files?",
        "Options": [
            "a) __load()",
            "b) __preload()",
            "c) __autoload()",
            "d) __inload()"
        ],
        "Answer": " Answer: c\nExplanation: When the PHP engine encounters an attempt to instantiate an unknown class, it invokes the __autoload() function, passing it the class name as a string. It is up to the implementer to define a strategy for locating and including the missing class file.\n"
    },
    {
        "id": 381,
        "Question": "How many times can you define _________ autoload in a process?",
        "Options": [
            "a) once",
            "b) twice",
            "c) thrice",
            "d) as many times as needed"
        ],
        "Answer": " Answer: a\nExplanation: __autoload is a powerful tool, but it does have some limitations. In particular, you can only define it once in a process. If you need to change your autoload function dynamically you should look at the spl_autoload_register function, which supports that functionality.\n"
    },
    {
        "id": 382,
        "Question": "Which one of the following functions will you use to check that the class exists before you work with it?",
        "Options": [
            "a) class_exist()",
            "b) class_exists()",
            "c) exist()",
            "d) exists_class()"
        ],
        "Answer": " Answer: b\nExplanation: The class_exists() function accepts a string representing the class to check for and returns a Boolean true value if the class exists and false otherwise.\n"
    },
    {
        "id": 383,
        "Question": "Which one of the following will you use to check the class of an object?",
        "Options": [
            "a) class()",
            "b) _class()",
            "c) class_check()",
            "d) get_class()"
        ],
        "Answer": " Answer: d\nExplanation: This function accepts any object as an argument and returns its class name as a string.\n"
    },
    {
        "id": 384,
        "Question": "PHP 4 did not support instanceof. Instead, which function did it provide?",
        "Options": [
            "a) is()",
            "b) get_class()",
            "c) is_a()",
            "d) is_the()"
        ],
        "Answer": " Answer: c\nExplanation: As of PHP 5.3 is_a() no longer deprecated.\n"
    },
    {
        "id": 385,
        "Question": "You use the get_class_methods() function to return the names of all the methods in the class. Which function will you use to print it on the screen?",
        "Options": [
            "a) printf()",
            "b) print_ar",
            "c) print_r",
            "d) echo"
        ],
        "Answer": " Answer: c\nExplanation: The function get_class_methods returns an array therefore we cannot use echo.\n"
    },
    {
        "id": 386,
        "Question": "If you call a method and it doesn’t exist it’ll cause a problem. To check the method which function will you use?",
        "Options": [
            "a) _method()",
            "b) methodexists()",
            "c) is_callable()",
            "d) is_method()"
        ],
        "Answer": " Answer: c\nExplanation: There is another method which you can use – method_exists() for similar purpose.\n"
    },
    {
        "id": 387,
        "Question": "What will be the output if a protected method is given as the argument to the function method_exist()?",
        "Options": [
            "a) Method does not exist",
            "b) False",
            "c) Error",
            "d) True"
        ],
        "Answer": " Answer: d\nExplanation: method_exists() returns true for private and protected methods as well as for public ones. Remember that the fact that a method exists does not mean that it will be callable.\n"
    },
    {
        "id": 388,
        "Question": "Which one of the following function should I use to find the parent class of a class?",
        "Options": [
            "a) get_parent_class()",
            "b) parent_class()",
            "c) class_parent()",
            "d) get_class_parent()"
        ],
        "Answer": " Answer: a\nExplanation: The class functions also allow us to chart inheritance relationships.This function requires either an object or a class name, and it returns the name of the superclass, if any. If no such class exists, that is, if the class we are testing does not have a parent, then the function returns false.\n"
    },
    {
        "id": 389,
        "Question": "Which class accepts a class name or an object reference and returns an array of interface name?",
        "Options": [
            "a) class_implements()",
            "b) is_subclass()",
            "c) is_subclass_of()",
            "d) class_interface()"
        ],
        "Answer": " Answer: a\nExplanation: is_subclass_of() will tell you only about class inheritance relationships. It will not tell you that a class implements an interface.\n"
    },
    {
        "id": 390,
        "Question": "Object-oriented code tries to minimize dependencies by moving responsibility for handling tasks away from ___ and toward the objects in the system.",
        "Options": [
            "a) server code",
            "b) client code",
            "c) machine code",
            "d) procedural code"
        ],
        "Answer": " Answer: b\nExplanation: Procedural code takes the form of a sequential series of commands and method calls. The controlling code tends to take responsibility for handling differing conditions. This top-down control can result in the development of duplications and dependencies across a project. Object-oriented code tries to minimize these dependencies by moving responsibility for handling tasks away from client code and toward the objects in the system.\n"
    },
    {
        "id": 391,
        "Question": "Placing a static method for generating ________ objects in the ____________ class is convenient.",
        "Options": [
            "a) child parent",
            "b) parent child",
            "c) final static",
            "d) static final"
        ],
        "Answer": " Answer: a\nExplanation: Such a design decision does have its own consequences, however.\n"
    },
    {
        "id": 392,
        "Question": "The extent to which proximate procedures are related to one another is known as ________",
        "Options": [
            "a) Coupling",
            "b) Balancing",
            "c) Cohesion",
            "d) Co-relation"
        ],
        "Answer": " Answer: c\nExplanation: Ideally, you should create components that share a clear responsibility. If your code spreads related routines widely, you will find them harder to maintain as you have to hunt around to make changes. Our Param Handler classes collect related procedures into a common context.\n"
    },
    {
        "id": 393,
        "Question": "______ occurs when discrete parts of a system’s code are tightly bound up with one another so that a change in one part necessitates changes in the others.",
        "Options": [
            "a) Loose Coupling",
            "b) Tight Coupling",
            "c) Co-relation",
            "d) Balancing"
        ],
        "Answer": " Answer: b\nExplanation: Tight coupling is by no means unique to procedural code, though the sequential nature of such code makes it prone to the problem.\n"
    },
    {
        "id": 394,
        "Question": "________ code makes change easier because the impact of altering an implementation will be localized to the component being altered.",
        "Options": [
            "a) Orthogonal",
            "b) Cohesion",
            "c) Coupling",
            "d) Balancing"
        ],
        "Answer": " Answer: a\nExplanation: Orthogonality, it is argued, promotes reuse in that components can be plugged into new systems without needing any special configuration. Such components will have clear inputs and outputs independent of any wider context.\n"
    },
    {
        "id": 395,
        "Question": "Polymorphism is also known as______",
        "Options": [
            "a) switch",
            "b) overact",
            "c) encapsulation",
            "d) class switching"
        ],
        "Answer": " Answer: d\nExplanation: Polymorphism is the maintenance of multiple implementations behind a common interface.\n"
    },
    {
        "id": 396,
        "Question": "Which one of the following is known as the key to object-oriented programming?",
        "Options": [
            "a) Polymorphism",
            "b) Encapsulation",
            "c) Data Abstraction",
            "d) Orthogonality"
        ],
        "Answer": " Answer: b\nExplanation: Encapsulation simply means the hiding of data and functionality from a client.\n"
    },
    {
        "id": 397,
        "Question": "Which one among the following means tight coupling?",
        "Options": [
            "a) Code Duplication",
            "b) Inheritance",
            "c) Encapsulation",
            "d) Polymorphism"
        ],
        "Answer": " Answer: a\nExplanation: Duplication is one of the great evils in code. Take a look at the instances of repetition in your system. Perhaps they belong together. If you change something fundamental about one routine, will the similar routines need amendment? If this is the case, they probably belong in the same class.\n"
    },
    {
        "id": 398,
        "Question": "UML stands for?",
        "Options": [
            "a) unified mailing language",
            "b) unified modeling logo",
            "c) undefined modeling language",
            "d) unified modeling language"
        ],
        "Answer": " Answer: d\nExplanation: The UML emerged as a standard only after long years of intellectual and bureaucratic sparring among the great and good of the object oriented design community.\n"
    },
    {
        "id": 399,
        "Question": "In a class diagram the class is divided into three sections, what is displayed in the first section?",
        "Options": [
            "a) Class Attributes",
            "b) Class Declaration",
            "c) Class Name",
            "d) Class Functions"
        ],
        "Answer": " Answer: c\nExplanation: The other two sections are optional when no more information than the class name is known.\n"
    },
    {
        "id": 400,
        "Question": "________ are used in class diagrams to describe the way in which specific elements should be used.",
        "Options": [
            "a) Attributes",
            "b) Constraints",
            "c) Constants",
            "d) Class Names"
        ],
        "Answer": " Answer: b\nExplanation: The {abstract} syntax is an example of a constraint. There is no special structure for the text between the braces; it should simply provide a short clarification of any conditions that may apply to the element.\n"
    },
    {
        "id": 401,
        "Question": "Which one of the following is displayed below the class name in the class diagrams?",
        "Options": [
            "a) Functions",
            "b) Methods",
            "c) Attributes",
            "d) Constraints"
        ],
        "Answer": " Answer: c\nExplanation: Attributes describe a class’s properties. Attributes are listed in the section directly beneath the class name.\n"
    },
    {
        "id": 402,
        "Question": "+ is the visibility code for?",
        "Options": [
            "a) Public",
            "b) Private",
            "c) Protected",
            "d) Friendly"
        ],
        "Answer": " Answer: a\nExplanation: The visibility symbol is followed by the name of the attribute.\n"
    },
    {
        "id": 403,
        "Question": "Which relationship is illustrated by a line that begins with an unfilled diamond?",
        "Options": [
            "a) Composition",
            "b) Abstraction",
            "c) Aggregation",
            "d) Inheritance"
        ],
        "Answer": " Answer: c\nExplanation: In the case of aggregation, the contained objects are a core part of the container, but they can also be contained by other objects at the same time.\n"
    },
    {
        "id": 404,
        "Question": "If the diamond is filled it depicts which relationship?",
        "Options": [
            "a) Strong Aggregation",
            "b) Composition",
            "c) Abstraction",
            "d) Inheritance"
        ],
        "Answer": " Answer: b\nExplanation: In composition, the contained object can be referenced by its container only. It should be deleted when the container is deleted.\n"
    },
    {
        "id": 405,
        "Question": "Which one of the following statements is true about sequence diagrams?",
        "Options": [
            "a) A sequence diagram is class based",
            "b) A sequence diagram presents the participants of a system from right to left",
            "c) The vertical broken lines represent the lifetime of the class in the system",
            "d) A sequence diagram is object based"
        ],
        "Answer": " Answer: d\nExplanation: A sequence diagram is object based rather than class based. It is used to model a process in a system step by step.\n"
    },
    {
        "id": 406,
        "Question": "A bidirectional relationship in class diagrams is described by________",
        "Options": [
            "a) double-headed arrow",
            "b) visibility symbols",
            "c) single-headed arrow",
            "d) double diamond"
        ],
        "Answer": " Answer: a\nExplanation: A unidirectional association has single-headed arrow.\n"
    },
    {
        "id": 407,
        "Question": "# is the visibility code for?",
        "Options": [
            "a) Private",
            "b) Friendly",
            "c) Protected",
            "d) Static"
        ],
        "Answer": " Answer: c\nExplanation: Available to the current class and its subclasses only.\n"
    },
    {
        "id": 408,
        "Question": "Which one of the following is displayed in the third section of the class diagram?",
        "Options": [
            "a) Operations",
            "b) Inheritance",
            "c) Abstraction",
            "d) Coupling"
        ],
        "Answer": " Answer: a\nExplanation: Operations describe methods, or more properly, they describe the calls that can be made on an instance of a class.\n"
    },
    {
        "id": 409,
        "Question": "Inheritance in class diagrams is depicted by________",
        "Options": [
            "a) single-headed empty arrow",
            "b) single-headed filled arrow",
            "c) double-headed empty arrow",
            "d) double-headed filled arrow"
        ],
        "Answer": " Answer: a\nExplanation: The UML describes the inheritance relationship as a generalization. This relationship is signified by a line leading from the subclass to its parent. The line is tipped with an empty closed arrow.\n"
    },
    {
        "id": 410,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st0\">\"Hello World\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Hello World",
            "c) Nothing",
            "d) Missing semicolon error"
        ],
        "Answer": " Answer: c\nExplanation: If you need to output something onto the screen you’ll need to use echo or print_r.\n"
    },
    {
        "id": 411,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">print_r</span> <span class=\"st0\">\"Hello world\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Hello World",
            "c) Nothing",
            "d) Missing semicolon error"
        ],
        "Answer": " Answer: a\nExplanation: The statement should be print_r(‘Hello World’) to print Hello world. Also if there is only one line then there is no requirement of a semicolon, but it is better to use it.\n"
    },
    {
        "id": 412,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$COLOR</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$Color</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) redredred",
            "b) redred",
            "c) red",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: Parse error: syntax error, unexpected ‘<‘ on line 2. You can not use the html tag inside php tags.\n"
    },
    {
        "id": 413,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"co2\"># echo \"Hello world\";</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">echo</span> <span class=\"st0\">\"# Hello world\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) # Hello world",
            "b) Hello world# Hello world",
            "c) Hello world",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: In PHP, all user-defined functions, classes, and keywords (e.g. if, else, while, echo, etc.) are case-insensitive.\n"
    },
    {
        "id": 414,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"&lt;i&gt;Hello World&lt;/i&gt;\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello world",
            "b) Hello world in italics",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: In PHP, all variables are case-sensitive.\n"
    },
    {
        "id": 415,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"echo \"</span>Hello World<span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello world",
            "b) echo “Hello world”",
            "c) echo Hello world",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: # is a single line comment.\n"
    },
    {
        "id": 416,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"Hello world\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">?&gt;</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) HELLO WORLD",
            "b) Hello world",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: You can use tags like italics, bold etc. inside php script.\n"
    },
    {
        "id": 417,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color</span> <span class=\"sy0\">=</span> red<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es1\">\\$</span>color\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red",
            "b) $color",
            "c) \\red",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: It would have printed echo “Hello world” if we have put backslash doublequotes just before and just after Hello World string."
    },
    {
        "id": 418,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color</span> <span class=\"sy0\">=</span> red<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color</span>\"</span> <span class=\"sy0\">.</span> red <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red red",
            "b) red",
            "c) error",
            "d) nothing"
        ],
        "Answer": " Answer: b\nExplanation: /* */ is used for commenting multiple lines.\n"
    },
    {
        "id": 419,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> red<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> green<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red green",
            "b) red",
            "c) green",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: Use of undefined constant red.\n"
    },
    {
        "id": 420,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red",
            "b) green",
            "c) red green",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: It has to be $color1 = “red”; and $color2 = “green”; therefore the error.\n"
    },
    {
        "id": 421,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red",
            "b) green",
            "c) red green",
            "d) redgreen"
        ],
        "Answer": " Answer: b\nExplanation: The variable contains the last value which has been assigned.\n"
    },
    {
        "id": 422,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"green\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) redgreen",
            "b) red green",
            "c) 0",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: The . operator is used to join to strings.\n"
    },
    {
        "id": 423,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) redgreen",
            "b) red green",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: + operator does not join both the strings.\n"
    },
    {
        "id": 424,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) red1",
            "b) red 1",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: + does not return 1 if the variables are equal.\n"
    },
    {
        "id": 425,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) 2",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: d\nExplanation: + just returns the numeric value even though it is inside double quotes.\n"
    },
    {
        "id": 426,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"red\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$color3</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"grey\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$color1</span>\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es4\">$color2</span>\"</span> <span class=\"sy0\">.</span> <span class=\"st0\">\"<span class=\"es4\">$color3</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1grey",
            "b) grey",
            "c) 0",
            "d) red1grey"
        ],
        "Answer": " Answer: b\nExplanation: + can be used to add to integer values which are enclosed by double-quotes.\n"
    },
    {
        "id": 427,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es4\">$x</span> + <span class=\"es4\">$y</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 15",
            "b) 10 + 5",
            "c) $z",
            "d) $x + $y"
        ],
        "Answer": " Answer: b\nExplanation: Variable z will store 10 + 5 because 10 + 5 is given in double-quotes.\n"
    },
    {
        "id": 428,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span> = <span class=\"es4\">$x</span> + <span class=\"es4\">$y</span> + <span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4 = 4 + 3 + 1",
            "b) 8",
            "c) 8 = 4 + 3 +1",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Again since the variables are inside double quotes we get this result.\n"
    },
    {
        "id": 429,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$z</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) $z",
            "b) 15",
            "c) 8",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: Normal addition of variables x, y and z occurs and result of 8 will be displayed.\n"
    },
    {
        "id": 430,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu19\">3.3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span> <span class=\"sy0\">%</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: % is the modulo operator. Unlike in C we can use it get reminder or floating point numbers in PHP.\n"
    },
    {
        "id": 431,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span> <span class=\"sy0\">%</span> <span class=\"re0\">$y</span> <span class=\"sy0\">%</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: The expression is considered as ($x%$y)%z in this case (10%4)%3 which is 2.\n"
    },
    {
        "id": 432,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"re0\">$z</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 3",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: a\nExplanation: The innermost bracket is evaluated first, since it covers only variable y it is as good as not using brackets.\n"
    },
    {
        "id": 433,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span> <span class=\"sy0\">-</span> <span class=\"re0\">$z</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"re0\">$z</span> <span class=\"sy0\">-</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 41",
            "b) -4",
            "c) -5",
            "d) 51"
        ],
        "Answer": " Answer: d\nExplanation: First ($z – $y) is evaluated then -$z/($z – $y) is evaluated this results in 1 which is added to $x + $y therefore we get 51.\n"
    },
    {
        "id": 434,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"nu0\">4</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span> <span class=\"sy0\">*</span> <span class=\"re0\">$z</span> <span class=\"sy0\">/</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4.25",
            "b) 3.25",
            "c) -3.25",
            "d) -4.25"
        ],
        "Answer": " Answer: c\nExplanation: Since the variable z is not defined it returns the error also it takes z as 0 and returns the value -1.\n"
    },
    {
        "id": 435,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu19\">3.5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span> <span class=\"sy0\">/</span> <span class=\"re0\">$y</span> <span class=\"sy0\">/</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1.75",
            "b) 0.875",
            "c) 3.5",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: First the * is evaluated then / followed by + therefore we can rewrite this expression as 4 +((- 3 * 11) / 4) which results in -4.25.\n"
    },
    {
        "id": 436,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">one <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">two <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">three <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">four <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"one / two + three / four\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.75",
            "b) 0.05",
            "c) 1.25",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: Variables should start with a $ symbol, since one, two, three, four don’t begin with $ symbol we’ll get an error.\n"
    },
    {
        "id": 437,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$on</span><span class=\"re0\">$e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$tw</span><span class=\"re0\">$o</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$thre</span><span class=\"re0\">$e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$fou</span><span class=\"re0\">$r</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$on</span><span class=\"es4\">$e</span> / <span class=\"es4\">$tw</span><span class=\"es4\">$o</span> + <span class=\"es4\">$thre</span><span class=\"es4\">$e</span> / <span class=\"es4\">$fou</span><span class=\"es4\">$r</span>\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.75",
            "b) 0.05",
            "c) 1.25",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: You can not use the $ in between the variable name.\n"
    },
    {
        "id": 438,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$on_e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$tw_o</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$thre_e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$fou_r</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$on_e</span> <span class=\"sy0\">/</span> <span class=\"re0\">$tw_o</span> <span class=\"sy0\">+</span> <span class=\"re0\">$thre_e</span> <span class=\"sy0\">/</span> <span class=\"re0\">$fou_r</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.75",
            "b) 0.05",
            "c) 1.25",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: You can use _ in a variable name.\n"
    },
    {
        "id": 439,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$On_e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$tw_o</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$thre_e</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$fou_r</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$on_e</span> <span class=\"sy0\">/</span> <span class=\"re0\">$tw_o</span> <span class=\"sy0\">+</span> <span class=\"re0\">$thre_e</span> <span class=\"sy0\">/</span> <span class=\"re0\">$fou_r</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.75",
            "b) 0.05",
            "c) 1.25",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Since the variable initialised is $On_e and the variable in the echo statement is $on_e the echo statement treats $on_e as 0;\n"
    },
    {
        "id": 440,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$red</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) Nothing",
            "c) True",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: There will no output returned as the variable $red does not hold any value.\n"
    },
    {
        "id": 441,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$four4</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$three3</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two2</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$four4</span> <span class=\"sy0\">+</span> <span class=\"re0\">$three3</span> <span class=\"sy0\">/</span> <span class=\"re0\">$two2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4.5",
            "b) 7",
            "c) 3.5",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: You can use numbers in a variable name.\n"
    },
    {
        "id": 442,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">$4four <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">$3three <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">$2two <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> $4four <span class=\"sy0\">+</span> $3three <span class=\"sy0\">/</span> $2two <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4.5",
            "b) 7",
            "c) 3.5",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: A variable name can not start with a numeric value.\n"
    },
    {
        "id": 443,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">int <span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$one</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) $one",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: Unlike other programming languages there are no data types in PHP.\n"
    },
    {
        "id": 444,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">var</span> <span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">var</span> <span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$one</span> <span class=\"sy0\">/</span> <span class=\"re0\">$two</span> <span class=\"sy0\">*</span> <span class=\"re0\">$one</span> <span class=\"sy0\">/</span> <span class=\"re0\">$two</span> <span class=\"sy0\">*</span> <span class=\"re0\">$two</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 0.5",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: You can not use var before a variable name.\n"
    },
    {
        "id": 445,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$hello</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$bye</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Bye\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$hello</span><span class=\"sy0\">;</span><span class=\"st0\">\"<span class=\"es4\">$bye</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello World",
            "b) Bye",
            "c) Hello worldBye",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Since there is a semi-colon in between $hello and $bye, the line ends at $hello. However $bye would have printed if a echo was present before “$bye”.\n"
    },
    {
        "id": 446,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Since the variable x is not initialised it is not storing any value, therefore nothing will be printed on the screen.\n"
    },
    {
        "id": 447,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1010",
            "b) 105",
            "c) 510",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: Variable x stores the value 10 and not 5.\n"
    },
    {
        "id": 448,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 5",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: The variable x stores the value 5 and therefore the value 5 is printed on the screen.\n"
    },
    {
        "id": 449,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 5",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: The variable x is not defined inside the function fun(), therefore nothing is printed on the screen.\n"
    },
    {
        "id": 450,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 105",
            "c) 510",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: First when the function is called variable x is initialised to 10 so 10 is printed later the global value 5 is printed.\n"
    },
    {
        "id": 451,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">+</span><span class=\"re0\">$y</span><span class=\"sy0\">/</span><span class=\"re0\">$y</span><span class=\"sy0\">+</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 43",
            "b) 943",
            "c) 349",
            "d) 439"
        ],
        "Answer": " Answer: d\nExplanation: Firstly, the statements outside the function are printed, since z is not defined it’ll no value is printed for z. Next the function is called and the value of z inside the function is printed.\n"
    },
    {
        "id": 452,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span> <span class=\"sy0\">/</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 437",
            "b) 439",
            "c) 349",
            "d) 347"
        ],
        "Answer": " Answer: a\nExplanation: It is same as above but the value passed into the function is 3,4 and not 4,3. Therefore the difference in answer.\n"
    },
    {
        "id": 453,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">,</span><span class=\"re0\">$y</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span> <span class=\"sy0\">/</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$z</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 7",
            "b) 9",
            "c) 0",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: Value 3, 4 is passed to the function but that is lost because x and y are initialised to 4 and 3 inside the function. Therefore we get the given result.\n"
    },
    {
        "id": 454,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$x</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 6",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: In C you won’t get an error but in PHP you’ll get a syntax error.\n"
    },
    {
        "id": 455,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$c</span> <span class=\"sy0\">=</span> fun<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> <span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$b</span> <span class=\"sy0\">+</span> <span class=\"re0\">$b</span> <span class=\"sy0\">-</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$b</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$c</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 104",
            "b) 410",
            "c) 1400",
            "d) 4100"
        ],
        "Answer": " Answer: c\nExplanation: The value returned from the function is 0, and value of a is 10, value of b is 4 and c is 0.\n"
    },
    {
        "id": 456,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es4\">$winner</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"/<span class=\"es4\">$looser</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span><span class=\"re0\">$b</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) $winner/$looser",
            "b) /$looser",
            "c) /",
            "d) $looser"
        ],
        "Answer": " Answer: c\nExplanation: Since variables $winner and $looser is not defined we only see / as output.\n"
    },
    {
        "id": 457,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es4\">$winner</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es1\">\\$</span>looser\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) $winner\\$looser",
            "b) \\$looser",
            "c) \\",
            "d) $looser"
        ],
        "Answer": " Answer: d\nExplanation: As there is a backslash before $ it takes it as a string and not a variable therefore we get $looser as the output.\n"
    },
    {
        "id": 458,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es4\">$winner</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"<span class=\"es1\">\\\\</span><span class=\"es4\">$looser</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">,</span> <span class=\"re0\">$b</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) $winner\\\\$looser",
            "b) \\\\$looser",
            "c) \\",
            "d) $looser"
        ],
        "Answer": " Answer: c\nExplanation: Since two backslashes are used together, a single backslash is printed on the screen and as $looser is not initialised only single backslash is printed.\n"
    },
    {
        "id": 459,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'y'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'y'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 10",
            "c) 15",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: You can access the global variable using $GLOBALS[‘globalvariablename’].\n"
    },
    {
        "id": 460,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'y'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 10",
            "c) 15",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: The value of global variable y does not change therefore it’ll print 10;\n"
    },
    {
        "id": 461,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 012",
            "b) 123",
            "c) 000",
            "d) 111"
        ],
        "Answer": " Answer: c\nExplanation: Every time the function is called the value of x becomes 0, therefore we get 0 on every function call.\n"
    },
    {
        "id": 462,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    static <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 012",
            "b) 123",
            "c) 111",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: When static is used, each time the function is called, that variable will still have the information it contained from the last time the function was called.\n"
    },
    {
        "id": 463,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">static <span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 012",
            "b) 123",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Since variable x is not defined inside the function fun(), nothing will be printed.\n"
    },
    {
        "id": 464,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 000",
            "b) 012",
            "c) 123",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: Since, we are using $GLOBALS[‘x’].\n"
    },
    {
        "id": 465,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 000",
            "b) 012",
            "c) Nothing",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Every time the function is called the value of x becomes 0, therefore we get 0 on every function call.\n"
    },
    {
        "id": 466,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"This\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"was\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"a\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"bad\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"idea\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) This, was, a, bad, idea",
            "b) This was a bad idea",
            "c) Thiswasabadidea",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: The break tag is used as break line.\n"
    },
    {
        "id": 467,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"This\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"was\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"bad\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"idea\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) This, was, a, bad, idea",
            "b) This was a bad idea",
            "c) Thiswasabadidea",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 468,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"This\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"was\"</span><span class=\"sy0\">|</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"bad\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"idea\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Thiswasabadidea",
            "b) Thiswasbadidea",
            "c) Thiswas a badidea",
            "d) Thiswas abadidea"
        ],
        "Answer": " Answer: c\nExplanation: In an echo statement the comma operator is used to join strings.\n"
    },
    {
        "id": 469,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$one</span><span class=\"sy0\">,</span> <span class=\"re0\">$two</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello World",
            "b) Hello",
            "c) World",
            "d) HelloWorld"
        ],
        "Answer": " Answer: c\nExplanation: In an echo statement the dot operator is used to join strings.\n"
    },
    {
        "id": 470,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$one</span><span class=\"es4\">$two</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) HelloWorld",
            "b) $one$two",
            "c) Hello",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: You can use only comma and dot operator to join starings, other characters do not have the same function.\n"
    },
    {
        "id": 471,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$one</span>\"</span><span class=\"sy0\">+</span><span class=\"st0\">\"<span class=\"es4\">$two</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) HelloWorld",
            "b) Hello+World",
            "c) 0",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: Echo can print two variables which are separated by a comma.\n"
    },
    {
        "id": 472,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"This is &lt;i&gt;India&lt;/i&gt;\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) This is India",
            "b) This is India",
            "c) This is",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Even though both the variables are inside the double-quotes, the value of the variable is substituted and then printed to the screen.\n"
    },
    {
        "id": 473,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$cars</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Volvo\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BMW\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Toyota\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"My car is a <span class=\"es4\">{$cars[0]}</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) My car is a Volvo",
            "b) My car is a BMW",
            "c) My car is a Toyota",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: In an echo statement you can not use plus sign to join two strings.\n"
    },
    {
        "id": 474,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"echo hello world\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) echo hello world",
            "b) hello world",
            "c) nothing",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: The print statement will print whatever is present inside the double-quotes.\n"
    },
    {
        "id": 475,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"re0\">$one</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$one</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 01",
            "b) 11",
            "c) 10",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: Print can be used with or without parentheses.\n"
    },
    {
        "id": 476,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$cars</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Volvo\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"BMW\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Toyota\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$cars</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Volvo",
            "b) BMW",
            "c) Toyota",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Print statement can be used to output a specific array member.\n"
    },
    {
        "id": 477,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"two\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"re0\">$one</span><span class=\"re0\">$two</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) onetwo",
            "b) one",
            "c) nothing",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: The above syntax will produce an error, unlike the echo statement.\n"
    },
    {
        "id": 478,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"two\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"re0\">$one</span><span class=\"sy0\">,</span><span class=\"re0\">$two</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) onetwo",
            "b) one, two",
            "c) one",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: The above syntax will produce an error, unlike the echo statement.\n"
    },
    {
        "id": 479,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"two\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es4\">$one</span><span class=\"es4\">$two</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) onetwo",
            "b) $one$two",
            "c) one",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: This is same as the echo statement.\n"
    },
    {
        "id": 480,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"two\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"re0\">$one</span><span class=\"sy0\">==</span><span class=\"re0\">$two</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) nothing",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: Since we are equating two unequal strings we do not get any output.\n"
    },
    {
        "id": 481,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$one</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$two</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"re0\">$one</span> <span class=\"sy0\">==</span> <span class=\"re0\">$two</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) 1",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: Since both the strings are equal the result 1 is printed on the screen.\n"
    },
    {
        "id": 482,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"this\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"was\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"a\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"bad\"</span><span class=\"sy0\">.</span><span class=\"st0\">\"idea\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) thiswasabadidea",
            "b) this was a bad idea",
            "c) nothing",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: Most of the properties of echo and print are same. Strings can contain HTML markup.\n"
    },
    {
        "id": 483,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PHP is a scripting language\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$GREETING</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) $GREETING",
            "b) no output",
            "c) PHP is a scripting language",
            "d) GREETING"
        ],
        "Answer": " Answer: d\nExplanation: Since the third parameter is true in define(“GREETING”, “PHP is a scripting language”, true) is true GREETING becomes case insensitive."
    },
    {
        "id": 484,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Constants</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st_h\">'MIN_VALUE'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'0.0'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st_h\">'MAX_VALUE'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'1.0'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">public</span> static <span class=\"kw2\">function</span> getMinValue<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span><span class=\"sy0\">::</span><span class=\"me2\">MIN_VALUE</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">public</span> static <span class=\"kw2\">function</span> getMaxValue<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span><span class=\"sy0\">::</span><span class=\"me2\">MAX_VALUE</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> Constants<span class=\"sy0\">::</span><span class=\"me2\">getMinValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> Constants<span class=\"sy0\">::</span><span class=\"me2\">getMaxValue</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.01.0",
            "b) 01",
            "c) No output",
            "d) ERROR"
        ],
        "Answer": " Answer: b\nExplanation: Constants do not need a $ before them, they are referenced by their variable names itself.\n"
    },
    {
        "id": 485,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"__LINE__\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"PHP is a scripting language\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"kw4\">__LINE__</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) PHP is a scripting language",
            "b) __LINE__",
            "c) 2",
            "d) ERROR"
        ],
        "Answer": " Answer: a\nExplanation: echo constant(x) output x, and x here is the concatenation of GREETING_ and $changing variable with. operator.\n"
    },
    {
        "id": 486,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st_h\">'IF'</span><span class=\"sy0\">,</span> <span class=\"nu0\">42</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"IF: \"</span><span class=\"sy0\">,</span> <span class=\"kw1\">IF</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) IF:42",
            "b) No output",
            "c) IF:",
            "d) ERROR"
        ],
        "Answer": " Answer: d\nExplanation: In a class constants should be defined const MIN_VALUE = 0.0;const MAX_VALUE = 1.0; instead.\n"
    },
    {
        "id": 487,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"NEW_GOOD_NAME_CONSTANT\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"I have a value\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"OLD_BAD_NAME_CONSTANT\"</span><span class=\"sy0\">,</span> NEW_GOOD_NAME_CONSTANT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> NEW_GOOD_NAME_CONSTANT<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> OLD_BAD_NAME_CONSTANT<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I have a value",
            "b) I have a valueI have a value",
            "c) ERROR",
            "d) I have a valueNEW_GOO_NAME_CONSTANTS"
        ],
        "Answer": " Answer: c\nExplanation: __LINE__ is a magical constant that gives the current line number and cannot be used a variable/constant name.\n"
    },
    {
        "id": 488,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"VAR_NAME\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"test\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">$<span class=\"br0\">{</span>VAR_NAME<span class=\"br0\">}</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"value\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> VAR_NAME<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> $<span class=\"br0\">{</span>VAR_NAME<span class=\"br0\">}</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) test",
            "b) testtest",
            "c) testvalue",
            "d) error, constant value cannot be changed"
        ],
        "Answer": " Answer: d\nExplanation: Keyword like IF cannot be used as constant names.\n"
    },
    {
        "id": 489,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> myObject <span class=\"br0\">{</span> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st_h\">'myObject::CONSTANT'</span><span class=\"sy0\">,</span> <span class=\"st_h\">'test'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> myObject<span class=\"sy0\">::</span><span class=\"kw3\">CONSTANT</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) test",
            "b) error",
            "c) myObject::CONSTANT",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Constants can be set as values for other constants.\n"
    },
    {
        "id": 490,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11111213",
            "b) 11121213",
            "c) 11111212",
            "d) 11111112"
        ],
        "Answer": " Answer: a\nExplanation: ++$a increments a and then prints it, $a++ prints and then increments.\n"
    },
    {
        "id": 491,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy0\">--</span><span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) 12",
            "c) 10",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: The + operator does union of arrays in that order, then the === operator compares key and value pairs.\n"
    },
    {
        "id": 492,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"test\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"this\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"also\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">.=</span> <span class=\"re0\">$y</span> <span class=\"sy0\">.=</span> <span class=\"re0\">$z</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) testthisthisalso",
            "b) testthis",
            "c) testthisalsothisalso",
            "d) error at line 4"
        ],
        "Answer": " Answer: c\nExplanation: The x .= y is a shorthand for x = x.y and this is evaluated from right to left.\n"
    },
    {
        "id": 493,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$x</span> <span class=\"sy0\">==</span> <span class=\"re0\">$y</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"true \"</span><span class=\"sy0\">,</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) true 23",
            "c) true 22",
            "d) true 33"
        ],
        "Answer": " Answer: b\nExplanation: x is preincremented and y is post incremented thus both are 2 in the if condition, later y is increment.\n"
    },
    {
        "id": 494,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$w</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">*=</span> <span class=\"re0\">$w</span> <span class=\"sy0\">/=</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">,</span> <span class=\"re0\">$w</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 80.5",
            "b) 44",
            "c) 82",
            "d) 42"
        ],
        "Answer": " Answer: d\nExplanation: Expression is evaluated from right to left.\n"
    },
    {
        "id": 495,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span><span class=\"sy0\">--</span> <span class=\"sy0\">==</span> <span class=\"sy0\">++</span><span class=\"re0\">$y</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 1",
            "c) 3",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: First $y = 2 is compared to and then decremented, then incremented and compared to $y = 2.\n"
    },
    {
        "id": 496,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">**</span><span class=\"re0\">$y</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 2",
            "c) error at line2",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: The ** is not a valid operator, only ++ and — exist.\n"
    },
    {
        "id": 497,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$y</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span> <span class=\"sy0\">||</span> <span class=\"re0\">$y</span> xor <span class=\"sy0\">--</span><span class=\"re0\">$y</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 2",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: –$y == 2 is false but y is decremented, the xor gives true if only one of the operands are true, thus 1 xor 0 is true.\n"
    },
    {
        "id": 498,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$y</span> <span class=\"sy0\">&lt;&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">!=</span> <span class=\"re0\">$y</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 2",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: –$y == 2 is false but y is decremented, the xor gives true if only one of the operands are true, thus 1 xor 0 is true.\n"
    },
    {
        "id": 499,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$x</span><span class=\"sy0\">--</span> <span class=\"sy0\">!=</span> <span class=\"sy0\">++</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: Automatically x is declared and initialized to 0, then decremented and compared with its increments, thus returns 1.\n"
    },
    {
        "id": 500,
        "Question": "11. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$auth</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$status</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$result</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$auth</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span class=\"re0\">$status</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"result is <span class=\"es4\">$result</span>&lt;br /&gt;\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) result is true",
            "b) result is 1",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Result is x&&y which returns 1 if both x and y are true.\n"
    },
    {
        "id": 501,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) infinite loop",
            "c) hihello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: While condition always gives 1.\n"
    },
    {
        "id": 502,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) infinite loop",
            "c) hihello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: While condition always gives 1.\n"
    },
    {
        "id": 503,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$i</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4hello4hello4hello4hello4hello…..infinite",
            "b) 5hello5hello5hello5hello5hello…..infinite",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: i is decremented in the first while execution and then continuously incremented back.\n"
    },
    {
        "id": 504,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 555555555…infinitely",
            "c) 54321",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: As it is && operator it is being incremented and decremented continuously.\n"
    },
    {
        "id": 505,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 54321111111….infinitely",
            "b) 555555555…infinitely",
            "c) 54321",
            "d) 5"
        ],
        "Answer": " Answer: a\nExplanation: As it is || operator the second expression is not evaluated till i becomes 1 then it goes into a loop.\n"
    },
    {
        "id": 506,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span> <span class=\"sy0\">||</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1234567891011121314….infinitely",
            "b) 01234567891011121314…infinitely",
            "c) 1",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: As it is || operator the second expression is not evaluated and i is always incremented, in the first case to 1.\n"
    },
    {
        "id": 507,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1234567891011121314….infinitely",
            "b) 01234567891011121314…infinitely",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: The first condition itself fails thus the loop exits.\n"
    },
    {
        "id": 508,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 00000000000000000000….infinitely",
            "b) -1-1-1-1-1-1-1-1-1-1…infinitely",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: (–$i > ++$i) evaluates to 0 but -1 makes it enters the loop and prints i which is 0.\n"
    },
    {
        "id": 509,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 210",
            "b) 10",
            "c) no output",
            "d) infinite loop"
        ],
        "Answer": " Answer: a\nExplanation: The loop ends when i becomes 0.\n"
    },
    {
        "id": 510,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 210",
            "b) 10",
            "c) no output",
            "d) infinite loop"
        ],
        "Answer": " Answer: d\nExplanation: The loop never ends as i is always incremented and then decremented.\n"
    },
    {
        "id": 511,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"nu0\">5</span> <span class=\"sy0\">*</span> <span class=\"nu0\">9</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 3.7",
            "c) 3.85",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: Operator precedence order must be followed.\n"
    },
    {
        "id": 512,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"nu0\">5</span> <span class=\"sy0\">*</span> <span class=\"nu0\">9</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 3.7",
            "c) 3.85",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: Operator precedence order must be followed.\n"
    },
    {
        "id": 513,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"true\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$j</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 0",
            "c) true0",
            "d) true10"
        ],
        "Answer": " Answer: b\nExplanation: In if condition when the first case is 0 and is an && operation then the second command is not executed.\n"
    },
    {
        "id": 514,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">||</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"true\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$j</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20",
            "b) true0",
            "c) 0",
            "d) true20"
        ],
        "Answer": " Answer: b\nExplanation: In if condition when the first case is 1 and is an || operation then the second command is not executed.\n"
    },
    {
        "id": 515,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">++</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Yes<span class=\"es1\">\\n</span><span class=\"es4\">$i</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"No<span class=\"es1\">\\n</span><span class=\"es4\">$i</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) No 2",
            "b) Yes 1",
            "c) Yes 2",
            "d) No 1"
        ],
        "Answer": "Answer: a\nExplanation: The first condition returns true and increments but the second condition is false.\n"
    },
    {
        "id": 516,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"re0\">$a</span><span class=\"sy0\">++</span> <span class=\"sy0\">+</span> <span class=\"sy0\">++</span><span class=\"re0\">$b</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$d</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 4",
            "c) 3",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: Post increment of a is done after expression evaluation.\n"
    },
    {
        "id": 517,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span> <span class=\"sy0\">+</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span><span class=\"sy0\">+</span><span class=\"re0\">$a</span><span class=\"sy0\">++;</span> <span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">++</span> <span class=\"sy0\">+</span> <span class=\"sy0\">++</span><span class=\"re0\">$b</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$d</span> <span class=\"sy0\">+</span> <span class=\"re0\">$d</span><span class=\"sy0\">++</span> <span class=\"sy0\">+</span> <span class=\"re0\">$a</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 869",
            "b) 742",
            "c) 368",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: Follow the order of post and pre increments.\n"
    },
    {
        "id": 518,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$b</span><span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span><span class=\"kw1\">print</span> <span class=\"re0\">$b</span><span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 58",
            "b) 59",
            "c) 109",
            "d) 108"
        ],
        "Answer": " Answer: b\nExplanation: a is set to 5 in the if condition and b is post decremented in the print statement.\n"
    },
    {
        "id": 519,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><span class=\"sy0\">++;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span> <span class=\"re0\">$y</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 02",
            "b) 12",
            "c) 01",
            "d) 21"
        ],
        "Answer": " Answer: a\nExplanation: First case i is incremented after setting x to i.\n"
    },
    {
        "id": 520,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">++</span><span class=\"re0\">$b</span> <span class=\"sy0\">||</span> <span class=\"sy0\">++</span><span class=\"re0\">$c</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">print</span> <span class=\"re0\">$d</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 16",
            "b) 06",
            "c) 15",
            "d) 05"
        ],
        "Answer": " Answer: a\nExplanation: 1&&0||1 is evaluated to 1 and the a is also preincremented to 6.\n"
    },
    {
        "id": 521,
        "Question": "11. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$c</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"re0\">$b</span> <span class=\"sy0\">+</span> <span class=\"re0\">$c</span> <span class=\"sy0\">==</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$d</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 0",
            "c) 10",
            "d) 1"
        ],
        "Answer": " Answer: d\nExplanation: First b and c are added and then tested if d=5, which is true thus return 1.\n"
    },
    {
        "id": 522,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"nu0\">5</span> <span class=\"sy0\">*</span> <span class=\"nu0\">9</span> <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 3.7",
            "c) 3.85",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: Operator precedence order must be followed.\n"
    },
    {
        "id": 523,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">+</span> <span class=\"sy0\">++</span><span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) error",
            "c) 6",
            "d) 7"
        ],
        "Answer": " Answer: b\nExplanation: Operator ++ can be done only on variables.\n"
    },
    {
        "id": 524,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"re0\">$var1</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">++;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) error",
            "c) 6",
            "d) 7"
        ],
        "Answer": " Answer: b\nExplanation: Operator ++ can be done only on variables.\n"
    },
    {
        "id": 525,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"re0\">$var1</span><span class=\"sy0\">++</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) error",
            "c) 6",
            "d) 7"
        ],
        "Answer": " Answer: a\nExplanation: Operator precedence followed.\n"
    },
    {
        "id": 526,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$var1</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) error",
            "c) 6",
            "d) 7"
        ],
        "Answer": " Answer: c\nExplanation: Operator precedence followed.\n"
    },
    {
        "id": 527,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"re0\">$var1</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span><span class=\"sy0\">++;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) error",
            "c) 6",
            "d) 7"
        ],
        "Answer": " Answer: a\nExplanation: Operator precedence followed,incremented after display.\n"
    },
    {
        "id": 528,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$var1</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"sy0\">++</span><span class=\"re0\">$var1</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: Evaluation done from right to left.\n"
    },
    {
        "id": 529,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">7</span><span class=\"sy0\">;</span><span class=\"re0\">$c</span> <span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"re0\">$d</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">++</span><span class=\"re0\">$b</span> <span class=\"sy0\">||</span> <span class=\"sy0\">++</span><span class=\"re0\">$c</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">print</span> <span class=\"re0\">$d</span><span class=\"sy0\">;</span><span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 16",
            "b) 06",
            "c) 15",
            "d) 05"
        ],
        "Answer": " Answer: a\nExplanation: 1&&0||1 is evaluated to 1 and the a is also pre incremented to 6.\n"
    },
    {
        "id": 530,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$var</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span><span class=\"re0\">$var</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: a\nExplanation: $var = ++$var returns 1(success).\n"
    },
    {
        "id": 531,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$var</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 5",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: First pre increment is done and the result is a number, thus post increment cannot be performed on it.\n"
    },
    {
        "id": 532,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">-</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) true",
            "c) false",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: True is 1.\n"
    },
    {
        "id": 533,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"sy0\">+</span>  <span class=\"sy0\">+</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"re0\">$j</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">-</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) no output",
            "c) error",
            "d) 0"
        ],
        "Answer": " Answer: b\nExplanation: The equation outputs false .\n"
    },
    {
        "id": 534,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"re0\">$k</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"sy0\">+</span>  <span class=\"sy0\">+</span> <span class=\"re0\">$i</span> <span class=\"sy0\">+</span> <span class=\"re0\">$j</span><span class=\"br0\">)</span> <span class=\"sy0\">&gt;!</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">-</span> <span class=\"re0\">$k</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) no output",
            "c) error",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: Negation of a number is 0.\n"
    },
    {
        "id": 535,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu12\">0x6db7</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1797568",
            "b) no output",
            "c) error",
            "d) 0x6dc0"
        ],
        "Answer": " Answer: a\nExplanation: The output is in decimal.\n"
    },
    {
        "id": 536,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'a'</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 192",
            "b) 2",
            "c) error",
            "d) 0"
        ],
        "Answer": " Answer: d\nExplanation: Characters cannot be multiplied.\n"
    },
    {
        "id": 537,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'4'</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span>  <span class=\"sy0\">+</span>  <span class=\"sy0\">+</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) error",
            "c) 5",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: The character is type casted to integer before multiplying.\n"
    },
    {
        "id": 538,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'12345'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"qwe<span class=\"es4\">{$a}</span>rty\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) qwe12345rty",
            "b) qwe{$a}rty",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: {$}dereferences the variable within.\n"
    },
    {
        "id": 539,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'12345'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"qwe\"</span><span class=\"sy0\">.</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span><span class=\"st0\">\"rty\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) qwe12345rty",
            "b) qwe$arty",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: . dereferences the variable/string within.\n"
    },
    {
        "id": 540,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'12345'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st_h\">'qwe{$a}rty'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) qwe12345rty",
            "b) qwe{$a}rty",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: qwe{$a}rty, single quotes are not parsed.\n"
    },
    {
        "id": 541,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span>  <span class=\"sy0\">=</span>  <span class=\"st_h\">'12345'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"qwe<span class=\"es4\">$arty</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) qwe12345rty",
            "b) qwe$arty",
            "c) qwe",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: qwe, because $a became $arty, which is undefined.\n"
    },
    {
        "id": 542,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: Uninitialized x is set to 0, thus if condition fails.\n"
    },
    {
        "id": 543,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) no output",
            "c) error",
            "d) how are u"
        ],
        "Answer": " Answer: d\nExplanation: x is incremented after if which evaluates to false.\n"
    },
    {
        "id": 544,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are uhello",
            "b) hihello",
            "c) hi",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: else condition without brackets performs the following statements only.\n"
    },
    {
        "id": 545,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"st0\">\"true\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"st0\">\"false\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: d\nExplanation: The nested for loop is not entered if outer condition is false.\n"
    },
    {
        "id": 546,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"True\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"False\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: Due to post increment and post decrement only the first condition is satisfied.\n"
    },
    {
        "id": 547,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">echo</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"True\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"False\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: echo does not return anything so if condition is empty.\n"
    },
    {
        "id": 548,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"True\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"False\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: print returns 1 if it prints anything.\n"
    },
    {
        "id": 549,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"some\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"none\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) all",
            "b) some",
            "c) error",
            "d) none"
        ],
        "Answer": " Answer: c\nExplanation: Hanging else statement.\n"
    },
    {
        "id": 550,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">if</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">print</span> <span class=\"st0\">\"some\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) all",
            "b) some",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: No else statement to end the if statement.\n"
    },
    {
        "id": 551,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"some\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) all",
            "b) some",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Empty string is evaluated to 0.\n"
    },
    {
        "id": 552,
        "Question": "11. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"all\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"some\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) all",
            "b) some",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: The value of a is evaluated to 1 as it has a value.\n"
    },
    {
        "id": 553,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">+</span> <span class=\"re0\">$y</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true.\n"
    },
    {
        "id": 554,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">1</span><span class=\"sy0\">||</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true.\n"
    },
    {
        "id": 555,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"nu0\">1</span><span class=\"sy0\">||</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true.\n"
    },
    {
        "id": 556,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">-</span><span class=\"nu0\">100</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true.\n"
    },
    {
        "id": 557,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu19\">0.1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true.\n"
    },
    {
        "id": 558,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu19\">0.0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) how are u",
            "b) hi",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: Expression evaluates to false.\n"
    },
    {
        "id": 559,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"0\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0how are u",
            "b) 0hi",
            "c) hi",
            "d) how are u"
        ],
        "Answer": " Answer: b\nExplanation: Expression evaluates to true as print returns 1.\n"
    },
    {
        "id": 560,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> <span class=\"kw1\">if</span><span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) 2",
            "c) hi",
            "d) how are u"
        ],
        "Answer": " Answer: b\nExplanation: Enters if else as first condition is false and thus x is set to 2.\n"
    },
    {
        "id": 561,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">&amp;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$x</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) how are u"
        ],
        "Answer": " Answer: d\nExplanation: x&0 is 0,thus evaluated to false.\n"
    },
    {
        "id": 562,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">&amp;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$x</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"how are u\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) how are u"
        ],
        "Answer": " Answer: d\nExplanation: x&0 is 0,thus evaluated to false.\n"
    },
    {
        "id": 563,
        "Question": "11. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"re0\">$x</span><span class=\"sy0\">&amp;</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: break is not defined for a if else ladder.\n"
    },
    {
        "id": 564,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$z</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">/</span> <span class=\"re0\">$y</span> <span class=\"sy0\">/</span> <span class=\"re0\">$z</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: In php division returns a float that is a non zero value thus evaluates to true.\n"
    },
    {
        "id": 565,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hihellohi",
            "c) hihi",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: Print returns true and thus the first if statement also is not executed.\n"
    },
    {
        "id": 566,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hihello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: print returns true and when 1 is subtracted it is syntax error.\n"
    },
    {
        "id": 567,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$x</span><span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: c\nExplanation: The if statement has no brackets and it expects a else/else if after a if.\n"
    },
    {
        "id": 568,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span> <span class=\"sy0\">&lt;</span> <span class=\"sy0\">++</span><span class=\"re0\">$a</span> <span class=\"sy0\">||</span> <span class=\"re0\">$b</span> <span class=\"sy0\">&lt;</span> <span class=\"sy0\">++</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: The operator precedence of ++ is higher than <, thus the increment happens first and then compared.\n"
    },
    {
        "id": 569,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">--</span> <span class=\"sy0\">-</span> <span class=\"sy0\">--</span><span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Computing the expression in the if clause,it sums upto to 2 which is a positive value.\n"
    },
    {
        "id": 570,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">--</span> <span class=\"sy0\">-</span> <span class=\"sy0\">--</span><span class=\"re0\">$a</span> <span class=\"sy0\">-</span> <span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi",
            "b) hello",
            "c) error",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Computing the expression in the if clause, it sums upto to 2 which is a positive value.\n"
    },
    {
        "id": 571,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"sy0\">.</span>length<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">.</span>length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hellolength",
            "b) 5",
            "c) hi",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: The . operator appends a string and returns true.\n"
    },
    {
        "id": 572,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">strlen</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"kw3\">strlen</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hellolength",
            "b) 5",
            "c) hi",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: The function strlen($a) gives the length of the string, 5, which is considered true.\n"
    },
    {
        "id": 573,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"0\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>int<span class=\"br0\">)</span><span class=\"re0\">$a</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span><span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) no output",
            "c) hi",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: The expression is evaluated with values contained in the string, even without typecasting.\n"
    },
    {
        "id": 574,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) hi",
            "c) hihi1",
            "d) hi1"
        ],
        "Answer": " Answer: a\nExplanation: As break is not provided it executes all the cases.\n"
    },
    {
        "id": 575,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"2\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) hello",
            "c) hihi1",
            "d) hi1"
        ],
        "Answer": " Answer: b\nExplanation: As hello is provided after case2 it breaks the loop.\n"
    },
    {
        "id": 576,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) no output",
            "c) hihi1",
            "d) hi1"
        ],
        "Answer": " Answer: b\nExplanation: As break is provided before print statement in case 2 it breaks the loop before printing.\n"
    },
    {
        "id": 577,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"re0\">$a</span> <span class=\"sy0\">*</span> <span class=\"re0\">$b</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"re0\">$a</span> <span class=\"sy0\">/</span> <span class=\"re0\">$b</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) hi",
            "c) hihello",
            "d) hi1"
        ],
        "Answer": " Answer: b\nExplanation: It checks the first case, when it finds it equal it will perform it breaks out.\n"
    },
    {
        "id": 578,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">97</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"st0\">\"a\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">97</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) hi",
            "c) hihello",
            "d) hello"
        ],
        "Answer": " Answer: d\nExplanation: Downcasting does not happen in case, it compares only with its data type.\n"
    },
    {
        "id": 579,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu19\">1.0</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellohi1",
            "b) hi",
            "c) hihello",
            "d) hello"
        ],
        "Answer": " Answer: a\nExplanation: Upcasting does happen in case, it compares it with 1.0 and thus prints hi and exits.\n"
    },
    {
        "id": 580,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">const</span> <span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) hi",
            "c) hihello",
            "d) hello"
        ],
        "Answer": " Answer: a\nExplanation: Constants cannot be used in switch cases.\n"
    },
    {
        "id": 581,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$b</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"kw1\">print</span> <span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi1\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1hello",
            "b) 1hi",
            "c) 1hi1",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: Print returns 1, thus it gives case 1.\n"
    },
    {
        "id": 582,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) hi",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: If that case does not exist then it searches for default and on not finding it does nothing.\n"
    },
    {
        "id": 583,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$b</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">case</span> b<span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) hi",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: Case cannot be defined by a variable.\n"
    },
    {
        "id": 584,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) infinite loop",
            "b) hi",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: The while loop cannot be defined without a condition.\n"
    },
    {
        "id": 585,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) infinite loop",
            "b) hihello",
            "c) hello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: The do while loop executes at least once as the condition is in the while loop.\n"
    },
    {
        "id": 586,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$i</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: The check happens after the increment,thus it prints until i = 4.\n"
    },
    {
        "id": 587,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$i</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: The check happens before the increment, thus it prints until i = 3.\n"
    },
    {
        "id": 588,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) infinite loop",
            "c) 01",
            "d) 1"
        ],
        "Answer": " Answer: d\nExplanation: There is no increment of i making it infinite.\n"
    },
    {
        "id": 589,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) infinite loop",
            "c) hihello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: The increment happens and then the check happens.\n"
    },
    {
        "id": 590,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$i</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi is printed 8 times, hello 7 times and then hi 2 times",
            "b) Hi is printed 10 times, hello 7 times",
            "c) Hi is printed once, hello 7 times",
            "d) Hi is printed once, hello 7 times and then hi 2 times"
        ],
        "Answer": " Answer: b\nExplanation: The increment happens and then the check happens.\n"
    },
    {
        "id": 591,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) infinite loop",
            "c) hihello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: While condition always gives 1.\n"
    },
    {
        "id": 592,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) infinite loop",
            "c) hihello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: While condition always gives 1.\n"
    },
    {
        "id": 593,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$i</span><span class=\"sy0\">++;</span> <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4hello4hello4hello4hello4hello…..infinite",
            "b) 5hello5hello5hello5hello5hello…..infinite",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: i is decremented in the while loop in the condition check and then incremented back.\n"
    },
    {
        "id": 594,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 555555555…infinitely",
            "c) 54321",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: As it is && operator it is being incremented and decremented continuously.\n"
    },
    {
        "id": 595,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 54321111111….infinitely",
            "b) 555555555…infinitely",
            "c) 54321",
            "d) 5"
        ],
        "Answer": " Answer: a\nExplanation: As it is || operator the second expression is not evaluated till i becomes 1 then it goes into a loop.\n"
    },
    {
        "id": 596,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span> <span class=\"sy0\">||</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1234567891011121314….infinitely",
            "b) 01234567891011121314…infinitely",
            "c) 1",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: As it is || operator the second expression is not evaluated and i is always incremented, in the first case to 1.\n"
    },
    {
        "id": 597,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"sy0\">--</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1234567891011121314….infinitely",
            "b) 01234567891011121314…infinitely",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: The first condition itself fails thus the loop exists.\n"
    },
    {
        "id": 598,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 00000000000000000000….infinitely",
            "b) -1-1-1-1-1-1-1-1-1-1…infinitely",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: (–$i > ++$i) evaluates to 0 but -1 makes it enters the loop and prints i.\n"
    },
    {
        "id": 599,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">--&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 210",
            "b) 10",
            "c) no output",
            "d) infinite loop"
        ],
        "Answer": " Answer: a\nExplanation: The loop ends when i becomes 0.\n"
    },
    {
        "id": 600,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">--</span><span class=\"re0\">$i</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 210",
            "b) 10",
            "c) no output",
            "d) infinite loop"
        ],
        "Answer": " Answer: d\nExplanation: The loop never ends as i is always incremented and then decremented.\n"
    },
    {
        "id": 601,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) infinite loop",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: d\nExplanation: Wrong syntax for for loop.\n"
    },
    {
        "id": 602,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 123456789101112",
            "b) 12345678910",
            "c) 1234567891011",
            "d) infinite loop"
        ],
        "Answer": " Answer: a\nExplanation: This runs a for loop for that array.\n"
    },
    {
        "id": 603,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;++</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"*<span class=\"es1\">\\t</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) **********",
            "b) *********",
            "c) ***********",
            "d) infinite loop"
        ],
        "Answer": " Answer: a\nExplanation: This runs a for loop from 0 to 10.\n"
    },
    {
        "id": 604,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;--</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 123456789101112",
            "b) 12345678910",
            "c) 1234567891011",
            "d) infinite loop"
        ],
        "Answer": " Answer: a\nExplanation: The value of x is incremented and printed twice before checking,this last loop it prints 11 and 12.\n"
    },
    {
        "id": 605,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"sy0\">++</span><span class=\"re0\">$x</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -3-4-5",
            "b) -3-4",
            "c) infinite loop",
            "d) no output"
        ],
        "Answer": " Answer: b\nExplanation: Loop runs from 1 to 9 i.e 9 times.\n"
    },
    {
        "id": 606,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span><span class=\"sy0\">++;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"In for loop \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"After loop<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) In for loop",
            "b) After for loop",
            "c) In for loopAfter for loop",
            "d) Infinite loop"
        ],
        "Answer": " Answer: d\nExplanation: The value of x is decremented thus making it an infinite loop.\n"
    },
    {
        "id": 607,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"In for loop \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"After loop<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) In for loop",
            "b) After for loop",
            "c) In for loopAfter for loop",
            "d) Infinite loop"
        ],
        "Answer": " Answer: d\nExplanation: The loop is not even entered as x is initially 0.\n"
    },
    {
        "id": 608,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"In for loop \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"After loop<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) In for loopIn for loopIn for loopIn for loop……infinitely",
            "b) After for loopAfter for loopAfter for loop……..infinitely",
            "c) In for loopAfter for loopIn for loopAfter for loopIn for loopAfter for loop…..infinitely",
            "d) After for loop"
        ],
        "Answer": " Answer: c\nExplanation: The loop runs only once as value of x is incremented.\n"
    },
    {
        "id": 609,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$y</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$y</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello….36 times",
            "b) Hello….45 times",
            "c) Hello….50 times",
            "d) Hello….40 times"
        ],
        "Answer": " Answer: a\nExplanation: 9*4 times is printed.\n"
    },
    {
        "id": 610,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$count</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span><span class=\"re0\">$count</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$count</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Infinite",
            "b) 123…….20",
            "c) 1357…19",
            "d) 13579…21"
        ],
        "Answer": " Answer: a\nExplanation: Condition always fails as count takes only odd numbers.\n"
    },
    {
        "id": 611,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$count</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> <span class=\"re0\">$count</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$count</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20",
            "b) 19",
            "c) 12345678910….19",
            "d) 12345678910….1920"
        ],
        "Answer": " Answer: a\nExplanation: The for loop has no body, it just runs till condition is satisfied.\n"
    },
    {
        "id": 612,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$count</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"re0\">$count</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span><span class=\"kw1\">continue</span><span class=\"sy0\">;</span><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihihi",
            "b) hihellohihellohihello",
            "c) hellohellohello",
            "d) hi"
        ],
        "Answer": "Answer: a\nExplanation: When continue is encountered it skips to the next iteration.\n"
    },
    {
        "id": 613,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$count</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$count</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span><span class=\"re0\">$count</span><span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"st0\">\"hi\"</span><span class=\"sy0\">;</span><span class=\"kw1\">break</span><span class=\"sy0\">;</span><span class=\"kw1\">print</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihihi",
            "b) hihellohihellohihello",
            "c) hellohellohello",
            "d) hi"
        ],
        "Answer": " Answer: d\nExplanation: When break is encountered it leaves the loop.\n"
    },
    {
        "id": 614,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 134",
            "c) 1234",
            "d) 1"
        ],
        "Answer": " Answer: a\nExplanation: The order of execution is initialization, check, increment/decrement, check, increment/decrement, check, increment/decrement….so on.\n"
    },
    {
        "id": 615,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) infinite loop",
            "c) -1",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: The order of execution is initialization, check, increment/decrement, check, increment/decrement, check, increment/decrement….so on.\n"
    },
    {
        "id": 616,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"sy0\">;;</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">print</span> <span class=\"st0\">\"10\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) infinite loop",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: There is no check condition to stop the execution of the loop.\n"
    },
    {
        "id": 617,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"sy0\">-</span><span class=\"nu0\">5</span> <span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 4",
            "b) 0 1 2 3",
            "c) 0 1 2 3 4 5",
            "d) error"
        ],
        "Answer": " Answer: a\nExplanation: Follow the trace of i, j prints 3 – i no of spaces for each i, k prints i stars for each loop.\n"
    },
    {
        "id": 618,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) infinite loop",
            "b) 0",
            "c) no output",
            "d) error"
        ],
        "Answer": " Answer: c\nExplanation: The condition of the loop is always false 0.\n"
    },
    {
        "id": 619,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"re0\">$j</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) infinite loop",
            "b) 0 1 2 3 4 5",
            "c) 0 1 0 1 2 0 1 2 3 0 1 2 3 4 0 1 2 3 4 5 0 1 2 3 4 5",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: In the second loop j value is not being changed.\n"
    },
    {
        "id": 620,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span>  </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$j</span> <span class=\"sy0\">=</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span><span class=\"re0\">$j</span> <span class=\"sy0\">&gt;</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span> <span class=\"re0\">$i</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) infinite loop",
            "b) 0 1 2 3 4 5",
            "c) 0 1 0 1 2 0 1 2 3 0 1 2 3 4 0 1 2 3 4 5 0 1 2 3 4 5",
            "d) no output"
        ],
        "Answer": " Answer: d\nExplanation: The second loop does not execute as the check condition is always false.\n"
    },
    {
        "id": 621,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$user</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Ashley\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bale\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Shrek\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Blank\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Shrek\"</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) AshleyBaleBlank",
            "b) AshleyBale",
            "c) AshleyBaleShrek",
            "d) No output"
        ],
        "Answer": " Answer: a\nExplanation: Only the Shrek is skipped due to the continue statement.\n"
    },
    {
        "id": 622,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$user</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Ashley\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bale\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Shrek\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Blank\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">)</span>\t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Shrek\"</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">\t\t    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) AshleyBaleBlank",
            "b) Bale",
            "c) AshleyShrek",
            "d) BaleBlank"
        ],
        "Answer": " Answer: a\nExplanation: Only Bale is printed as $x++ is done before printing and then checked.\n"
    },
    {
        "id": 623,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$user</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Ashley\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Bale\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Shrek\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Blank\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span> <span class=\"sy0\">&lt;</span> <span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> <span class=\"re0\">$x</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"sy0\">++</span><span class=\"br0\">]</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"Shrek\"</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">printf</span> <span class=\"br0\">(</span><span class=\"re0\">$user</span><span class=\"br0\">[</span><span class=\"re0\">$x</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) AshleyBaleBlank",
            "b) BaleShrek",
            "c) AshleyBlank",
            "d) Bale"
        ],
        "Answer": " Answer: b\nExplanation: x is incremented only inside loop i  the if condition.\n"
    },
    {
        "id": 624,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">%</span> <span class=\"sy0\">++</span><span class=\"re0\">$i</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">print</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) infinite loop",
            "c) no output",
            "d) 0"
        ],
        "Answer": " Answer: b\nExplanation: Loop condition is true as i%(i+1) is a float non zero value in php.\n"
    },
    {
        "id": 625,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"re0\">$i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span><span class=\"br0\">(</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"re0\">$i</span><span class=\"sy0\">++</span><span class=\"br0\">)</span>         </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">print</span><span class=\"st0\">\"i\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) iiiii",
            "b) infinite loop",
            "c) iiiiiiiiiiiiiiiiiiiiiiiii",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: The i value is changed in the inner loop and reaches five, thus does not execute the second outer loop. "
    },
    {
        "id": 626,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"re0\">$a</span> <span class=\"kw1\">as</span> <span class=\"re0\">$value</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw1\">print</span> <span class=\"re0\">$value</span><span class=\"sy0\">;</span>         </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hihellobye",
            "b) infinite loop",
            "c) hihello",
            "d) no output"
        ],
        "Answer": " Answer: d\nExplanation: As count($a) returns 3 the condition is always false.\n"
    },
    {
        "id": 627,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$a</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span><span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw3\">count</span><span class=\"br0\">(</span><span class=\"re0\">$a</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw1\">print</span> <span class=\"re0\">$a</span><span class=\"sy0\">;</span>         </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ArrayArrayArrayArrayArrayArray….infinitely",
            "b) (“hi”,”hello”,”bye”)(“hi”,”hello”,”bye”)(“hi”,”hello”,”bye”)(“hi”,”hello”,”bye”)…infinitely",
            "c) hihellobyehihellobyehihellobyehihellobyehihellobyehihellobye…..infinitely",
            "d) no output"
        ],
        "Answer": " Answer: a\nExplanation: As count($a) returns 3 the condition is always true, thus it prints $a, which returns its data type. "
    },
    {
        "id": 628,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> calc<span class=\"br0\">(</span><span class=\"re0\">$price</span><span class=\"sy0\">,</span> <span class=\"re0\">$tax</span><span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$price</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span><span class=\"re0\">$price</span> <span class=\"sy0\">*</span> <span class=\"re0\">$tax</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$total</span>\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    calc<span class=\"br0\">(</span><span class=\"nu0\">42</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 0",
            "c) 42",
            "d) 84"
        ],
        "Answer": " Answer: c\nExplanation: You can designate certain arguments as optional by placing them at the end of the list and assigning them a default value of nothing.\n"
    },
    {
        "id": 629,
        "Question": "2.  What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am b'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am a'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am b",
            "b) I am bI am a",
            "c) Error",
            "d) I am a Error"
        ],
        "Answer": " Answer: d\nExplanation: This will be the output- I am a Fatal error: Cannot redeclare b()\n"
    },
    {
        "id": 630,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am b'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st_h\">'I am a'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am b",
            "b) I am bI am a",
            "c) Error",
            "d) I am a Error"
        ],
        "Answer": " Answer: c\nExplanation: This will be the output- Fatal error: Call to undefined function b(). You cannot call a function which is inside a function without calling the outside function.\n"
    },
    {
        "id": 631,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$op2</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"blabla\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> foo<span class=\"br0\">(</span><span class=\"re0\">$op1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"re0\">$op1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"re0\">$op2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    foo<span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) helloblabla",
            "b) error",
            "c) hello",
            "d) helloblablablabla"
        ],
        "Answer": " Answer: c\nExplanation: If you want to put some variables in function that was not passed by it, you must use “global”. Inside the function type global $op2.\n"
    },
    {
        "id": 632,
        "Question": "5.What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> foo<span class=\"br0\">(</span><span class=\"re0\">$msg</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$msg</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"foo\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$var1</span><span class=\"br0\">(</span><span class=\"st0\">\"will this work\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) $msg",
            "c) 0",
            "d) will this work"
        ],
        "Answer": " Answer: d\nExplanation:It is possible to call a function using a variable which stores the function name.\n"
    },
    {
        "id": 633,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">echo</span> <span class=\"st0\">\"chr(52)\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": " Answer: d\nExplanation: The chr() function returns a character from the specified ASCII value. Since the ASCII value of 4 is 52, thus 4 was displayed.\n"
    },
    {
        "id": 634,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"kw3\">ord</span> <span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 106",
            "b) 103",
            "c) 104",
            "d) 209"
        ],
        "Answer": " Answer: c\nExplanation: The ord() function returns the ASCII value of the first character of a string. The ASCII value of h is 104, thus 104 was displayed.\n"
    },
    {
        "id": 635,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"kw3\">atan</span><span class=\"br0\">(</span><span class=\"nu19\">0.50</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.11845976421345",
            "b) 0.23568451142521",
            "c) 0.46364760900081",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: The atan() function returns the arc tangent of arg as a numeric value between -Pi/2 and Pi/2 radians.\n"
    },
    {
        "id": 636,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Hello you! How are you today?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">echo</span> <span class=\"kw3\">constant</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello you! How are you today?",
            "b) GREETING",
            "c) GREETING, Hello you! How are you today?",
            "d) “GREETING”,”Hello you! How are you today?”"
        ],
        "Answer": " Answer: a\nExplanation: The define() function defines a constant.\n"
    },
    {
        "id": 637,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING1\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Hello you! How are you today?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING2\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Hello you! How are you today?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING3\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Hello you! How are you today?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"kw3\">defined</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 0",
            "c) 3",
            "d) 4"
        ],
        "Answer": " Answer: b\nExplanation: The defined() function checks whether a constant exists.\n"
    },
    {
        "id": 638,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> sum<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"chr(<span class=\"es4\">$total</span>)\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"sum\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var1</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">44</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 49",
            "c) 1",
            "d) Sum"
        ],
        "Answer": " Answer: c\nExplanation: It is possible to call a function using a variable which stores the function name also the chr() function returns a character from the specified ASCII value.\n"
    },
    {
        "id": 639,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> sum<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"cos(<span class=\"es4\">$total</span>)\"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    sum<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,-</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 0.5",
            "d) -0.5"
        ],
        "Answer": " Answer: b\nExplanation: cos() gives the cos value of the argument. Here the function returns 1.\n"
    },
    {
        "id": 640,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"b is executed\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"a is executed\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) b is executedb is executedb is executed",
            "b) b is executeda is executed",
            "c) a is executed",
            "d) b is executeda is executedb is executed"
        ],
        "Answer": " Answer: d\nExplanation: Simple order of execution.\n"
    },
    {
        "id": 641,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> addFunction<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> <span class=\"re0\">$sum</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$return_value</span> <span class=\"sy0\">=</span> addFunction<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"Returned value from the function : <span class=\"es4\">$return_value</span>\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Returned value from the function : $return_value",
            "b) Error",
            "c) Returned value from the function : 30",
            "d) Returned value from the function :"
        ],
        "Answer": " Answer: d\nExplanation: The function calls are jumbled.\n"
    },
    {
        "id": 642,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> sayHello<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">echo</span> <span class=\"st0\">\"HelloWorld&lt;br /&gt;\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$function_holder</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"sayHello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$function_holder</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) No Output",
            "b) Error",
            "c) sayHello",
            "d) HelloWorld"
        ],
        "Answer": " Answer: b\nExplanation: addSix() passes value of the variable by reference.\n"
    },
    {
        "id": 643,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> one<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\" this works\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> two<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"this too works\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">one<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">two<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) this works",
            "c) this worksthis too works",
            "d) this works this too works"
        ],
        "Answer": " Answer: c\nExplanation: Functions returns value 30.\n"
    },
    {
        "id": 644,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> <span class=\"kw1\">do</span><span class=\"br0\">(</span><span class=\"re0\">$myString</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">strpos</span><span class=\"br0\">(</span><span class=\"re0\">$myString</span><span class=\"sy0\">,</span> <span class=\"st0\">\"donkey\"</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">do</span><span class=\"br0\">(</span><span class=\"st0\">\"The donkey looks like a horse.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 2",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: It is possible to assign function names as strings to variables and then treat these variables exactly as you would the function name itself.\n"
    },
    {
        "id": 645,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> one<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"const\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"I am awesome!\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">constant</span><span class=\"br0\">(</span><span class=\"st0\">\"const\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">one<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am awesome!!",
            "b) const",
            "c) const, I am awesome!!",
            "d) “const”,”I am awesome!”"
        ],
        "Answer": " Answer: c\nExplanation: Two is declared in one and is called after one. Hence it works.\n"
    },
    {
        "id": 646,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$title</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"O'malley wins the heavyweight championship!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"re0\">$title</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) O’Malley Wins The Heavyweight Championship!",
            "b) O’malley Wins The Heavyweight Championship!",
            "c) O’Malley wins the heavyweight championship!",
            "d) o’malley wins the heavyweight championship!"
        ],
        "Answer": " Answer: d\nExplanation: The ucwords() function capitalizes the first letter of each word in a string. Its prototype follows: string ucwords(string str).\n"
    },
    {
        "id": 647,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">str_pad</span><span class=\"br0\">(</span><span class=\"st0\">\"Salad\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"st0\">\" is good.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) SaladSaladSaladSaladSalad is good",
            "b) is good SaladSaladSaladSaladSalad",
            "c) is good Salad",
            "d) Salad is good"
        ],
        "Answer": " Answer: d\nExplanation: The str_pad() function pads a string with a specified number of characters.\n"
    },
    {
        "id": 648,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"st0\">\"i love my country\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I love my country",
            "b) i love my Country",
            "c) I love my Country",
            "d) I Love My Country"
        ],
        "Answer": " Answer: b\nExplanation: The wordwrap() function wraps a string into new lines when it reaches a specific length.\n"
    },
    {
        "id": 649,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> lcfirst<span class=\"br0\">(</span><span class=\"st0\">\"welcome to India\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) welcome to India",
            "b) welcome to india",
            "c) Welcome to India",
            "d) Welcome to india"
        ],
        "Answer": " Answer: d\nExplanation: The ucwords() function converts the first character of each word in a string to uppercase.\n"
    },
    {
        "id": 650,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> hex2bin<span class=\"br0\">(</span><span class=\"st0\">\"48656c6c6f20576f726c6421\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello World!",
            "b) welcome to india",
            "c) This is PHP!",
            "d) MCQ questons"
        ],
        "Answer": " Answer: a\nExplanation: The lcfirst() function converts the first character of a string to lowercase.\n"
    },
    {
        "id": 651,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$str</span> <span class=\"sy0\">=</span> <span class=\"kw3\">addslashes</span><span class=\"br0\">(</span><span class=\"st_h\">'What does \"yolo\" mean?'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span><span class=\"br0\">(</span><span class=\"re0\">$str</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) What does /”yolo/” mean?",
            "b) What does \\\\”yolo\\\\” mean?",
            "c) What does \\”yolo\\” mean?",
            "d) \\What does \\”yolo\\” mean?\\"
        ],
        "Answer": " Answer: a\nExplanation: The hex2bin() function converts a string of hexadecimal values to ASCII characters.\n"
    },
    {
        "id": 652,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$str</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello world. It's a beautiful day.\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">print_r</span> <span class=\"br0\">(</span><span class=\"kw3\">explode</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span><span class=\"sy0\">,</span><span class=\"re0\">$str</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Array ( [0] => Hello [0] => world. [0] => It’s [0] => a [0] => beautiful [0] => day. )",
            "b) Array ( [0] => Hello [1] => world. [2] => It’s [3] => a [4] => beautiful [5] => day. )",
            "c) Hello world. It’s a beautiful day",
            "d) Array ( [1] => Hello [2] => world. [3] => It’s [4] => a [5] => beautiful [6] => day. )"
        ],
        "Answer": " Answer: c\nExplanation: The addslashes() function returns a string with backslashes in front of predefined characters.\n"
    },
    {
        "id": 653,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">strtr</span><span class=\"br0\">(</span><span class=\"st0\">\"Hilla Warld\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"ia\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"eo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hilla Warld",
            "b) Hello World",
            "c) ia",
            "d) eo"
        ],
        "Answer": " Answer: b\nExplanation: The explode() function breaks a string into an array.\n"
    },
    {
        "id": 654,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">stripos</span><span class=\"br0\">(</span><span class=\"st0\">\"I love php, I love php too!\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"PHP\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 7",
            "c) 8",
            "d) 10"
        ],
        "Answer": " Answer: b\nExplanation: The strtr() function translates certain characters in a string.\n"
    },
    {
        "id": 655,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> A1<span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">switch</span><span class=\"br0\">(</span><span class=\"re0\">$x</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"co1\">//this statement is the same as if($x == 1)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'Case 1 was executed.'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"co1\">//this statement is the same as if($x == 2)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'Case 2 was executed.'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"co1\">//this statement is the same as if($x == 3)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'Case 3 was executed.'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"co1\">//this statement is the same as if($x == 4)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'Case 4 was executed.'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">default</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"co1\">//this statement is the same as if $x does not equal the other conditions</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st_h\">'Default was executed.'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    A1<span class=\"br0\">(</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Case 1 was executed",
            "b) Case 2 was executed",
            "c) Default was executed",
            "d) Case 4 was executed"
        ],
        "Answer": " Answer: d\nExplanation: The switch statement is executed with $x = 9.\n"
    },
    {
        "id": 656,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> uppercase<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$wow</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"uppercase\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$wow</span><span class=\"br0\">(</span><span class=\"st0\">\"Time to live king size\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) TIME TO LIVE KING SIZE",
            "b) Time to live king size",
            "c) Uppercase",
            "d) Time To Live King Size"
        ],
        "Answer": " Answer: d\nExplanation: The ucwords() function converts the first character of each word in a string to uppercase.\n"
    },
    {
        "id": 657,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> TV<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"my favourite TV show is \"</span><span class=\"sy0\">.</span><span class=\"re0\">$string</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am here to spoil this code",
            "b) Error",
            "c) My favourite TV show isI am here to spoil this code",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: b is undeclared if TV() is not called first.\n"
    },
    {
        "id": 658,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> TV<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"my favourite TV show is \"</span><span class=\"sy0\">.</span><span class=\"re0\">$string</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am here to spoil this code",
            "b) Error",
            "c) my favourite TV show isI am here to spoil this code",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This one works because b is declared independent of TV() also.\n"
    },
    {
        "id": 659,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> TV<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"my favourite TV show is \"</span><span class=\"sy0\">.</span><span class=\"re0\">$string</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    TV<span class=\"br0\">(</span><span class=\"st0\">\"Sherlock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am here to spoil this code",
            "b) Error",
            "c) My favourite TV show isI am here to spoil this code",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Function b is declared twice.\n"
    },
    {
        "id": 660,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> TV<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"my favourite TV show is \"</span><span class=\"sy0\">.</span><span class=\"re0\">$string</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw2\">function</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\" I am here to spoil this code\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a<span class=\"br0\">(</span><span class=\"st0\">\"Sherlock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am here to spoil this code",
            "b) Error",
            "c) my favourite TV show is SherlockI am here to spoil this code",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: b is declared as TV() is executed first.\n"
    },
    {
        "id": 661,
        "Question": "7. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> calc<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> calc<span class=\"br0\">(</span><span class=\"nu0\">42</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$result</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 0",
            "c) 42",
            "d) 84"
        ],
        "Answer": " Answer: a\nExplanation: Function does not return anything.\n"
    },
    {
        "id": 662,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> calc<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$total</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">*</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"re0\">$total</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$result</span> <span class=\"sy0\">=</span> calc<span class=\"br0\">(</span><span class=\"nu0\">42</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"re0\">$result</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 0",
            "c) 42",
            "d) 84"
        ],
        "Answer": " Answer: b\nExplanation: Function returns $total.\n"
    },
    {
        "id": 663,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$var</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> one<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"re0\">$var</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    one<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 10",
            "c) No Output",
            "d) None of the Mentioned"
        ],
        "Answer": " Answer: c\nExplanation: $var is not global and hence is not available for one().\n"
    },
    {
        "id": 664,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> mine<span class=\"br0\">(</span><span class=\"re0\">$m</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$m</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"less than 0\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>$ <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"Not True\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    mine<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Less Than 0",
            "b) Not True",
            "c) No Output",
            "d) None of the Mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Argument is 0.\n"
    },
    {
        "id": 665,
        "Question": "1. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">75</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> addition<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'z'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'x'</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"re0\">$GLOBALS</span><span class=\"br0\">[</span><span class=\"st_h\">'y'</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">addition<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$z</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 100",
            "b) error",
            "c) 75",
            "d) 25"
        ],
        "Answer": " Answer: a\nExplanation: z is a variable present within the $GLOBALS array, it is also accessible from outside the function!\n"
    },
    {
        "id": 666,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> 2myfunc<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Hello World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">2myfunc<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello World",
            "b) No Output",
            "c) ERROR",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Function cannot begin with a number.\n"
    },
    {
        "id": 667,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> _func<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Hello World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">_func<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello World",
            "b) No Output",
            "c) ERROR",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Function Beginning with “_” is valid.\n"
    },
    {
        "id": 668,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> test<span class=\"br0\">(</span><span class=\"re0\">$int</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$int</span> <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"This Works\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$int</span> <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> <span class=\"st0\">\"This Too Seems To Work\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">test<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">TEST<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) This Works",
            "b) This Too Seems To Work",
            "c) This WorksThis Too Seems To Work",
            "d) ERROR"
        ],
        "Answer": " Answer: c\nExplanation: Function Is case Insensitive.\n"
    },
    {
        "id": 669,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> mine<span class=\"br0\">(</span><span class=\"re0\">$num</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"re0\">$num</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">mine<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) $num",
            "c) 5",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Simple arithmetic operation.\n"
    },
    {
        "id": 670,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> mine<span class=\"br0\">(</span><span class=\"re0\">$num</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"<span class=\"es4\">$num</span>\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">mine<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) $num",
            "c) 5",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The function is defined as echo “$num”. This means $num is treated as a string and not as a variable.\n"
    },
    {
        "id": 671,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> string<span class=\"br0\">(</span><span class=\"re0\">$title</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"re0\">$title</span> <span class=\"sy0\">=</span> <span class=\"kw3\">ucwords</span><span class=\"br0\">(</span><span class=\"re0\">$title</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">echo</span> lcfirst<span class=\"br0\">(</span><span class=\"re0\">$title</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    string<span class=\"br0\">(</span><span class=\"st0\">\"you went full retard\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) You went full retard",
            "b) You Went Full Retard",
            "c) YOU WENT FULL RETARD",
            "d) you Went Full Retard"
        ],
        "Answer": " Answer: d\nExplanation: Variable Undeclared)  $string is not the same as $String.\n"
    },
    {
        "id": 672,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">function</span> multi<span class=\"br0\">(</span><span class=\"re0\">$num</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"I Wonder\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"Which One\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"Is The\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$num</span> <span class=\"sy0\">==</span> <span class=\"nu0\">19</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">echo</span> <span class=\"st0\">\"Correct Answer\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$can</span> <span class=\"sy0\">=</span> <span class=\"kw3\">stripos</span><span class=\"br0\">(</span><span class=\"st0\">\"I love php, I love php too!\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"PHP\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    multi<span class=\"br0\">(</span><span class=\"re0\">$can</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I Wonder",
            "b) Which One",
            "c) Is The",
            "d) Correct Answer"
        ],
        "Answer": " Answer: d\nExplanation: ucwords() changes all the first letters to capitals. lcfirst() changes first letter of a string to small.\n"
    },
    {
        "id": 673,
        "Question": "10. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> movie<span class=\"br0\">(</span><span class=\"re0\">$int</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$movies</span> <span class=\"sy0\">=</span> <span class=\"kw3\">array</span><span class=\"br0\">(</span><span class=\"st0\">\"Fight Club\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Kill Bill\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Pulp Fiction\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"You Do Not Talk About \"</span><span class=\"sy0\">.</span> <span class=\"re0\">$movie</span><span class=\"br0\">[</span><span class=\"re0\">$integer</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">movie<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) You Do Not Talk About Fight Club",
            "b) You Do Not Talk About Kill Bill",
            "c) You Do Not Talk About Pulp Fiction",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The stripos() function finds the position of the first occurrence of a string inside another string. In this case it returns 7.\n"
    },
    {
        "id": 674,
        "Question": "2. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> addFunction<span class=\"br0\">(</span><span class=\"re0\">$num1</span><span class=\"sy0\">,</span> <span class=\"re0\">$num2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$sum</span> <span class=\"sy0\">=</span> <span class=\"re0\">$num1</span> <span class=\"sy0\">+</span> <span class=\"re0\">$num2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> <span class=\"re0\">$sum</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$return_value</span> <span class=\"sy0\">=</span> addFunction<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">echo</span> <span class=\"st0\">\"Returned value from the function : \"</span> <span class=\"sy0\">.</span><span class=\"re0\">$return_value</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Returned value from the function : $return_value",
            "b) Error",
            "c) Returned value from the function : 30",
            "d) Returned value from the function :"
        ],
        "Answer": " Answer: a\nExplanation:  For each function causes the program to loop through each array value once.\n"
    },
    {
        "id": 675,
        "Question": "3. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> <span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">strtr</span><span class=\"br0\">(</span><span class=\"st0\">\"Towe Pa55\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"ow5\"</span><span class=\"sy0\">,</span> <span class=\"re0\">$string</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"st0\">\"ims\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Time Pa55",
            "b) Towe Pa55",
            "c) Towe Pass",
            "d) Time Pass"
        ],
        "Answer": " Answer: c\nExplanation: Function returns 30.\n"
    },
    {
        "id": 676,
        "Question": "4. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> <span class=\"kw3\">constant</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Welcome to Narnia\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> greeting<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Welcome to Narnia",
            "b) greeting",
            "c) GREETING",
            "d) ERROR"
        ],
        "Answer": " Answer: d\nExplanation: The strtr() function translates certain characters in a string.\n"
    },
    {
        "id": 677,
        "Question": "5. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> <span class=\"kw3\">constant</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">define</span><span class=\"br0\">(</span><span class=\"st0\">\"GREETING\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"Welcome to Narnia\"</span><span class=\"sy0\">,</span><span class=\"kw4\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> greeting<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Welcome to Narnia",
            "b) greeting",
            "c) GREETING",
            "d) ERROR"
        ],
        "Answer": " Answer: d\nExplanation: By default constants are case sensitive. Hence an error will arise.\n"
    },
    {
        "id": 678,
        "Question": "6. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> start<span class=\"br0\">(</span><span class=\"re0\">$string</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$string</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">45</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">40</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"re0\">$t</span> <span class=\"sy0\">=</span> start<span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"re0\">$t</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Have a good day!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"st0\">\"Have a good night!\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Have a good day!",
            "b) Have a good night!",
            "c) ERROR",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: By default constants are case sensitive. But the third parameter in define(), if set to true, makes constants case insensitive.\n"
    },
    {
        "id": 679,
        "Question": "8. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> email<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$email</span> <span class=\"sy0\">=</span> ’user<span class=\"sy0\">@</span>yahoo<span class=\"sy0\">.</span>com’<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re0\">$new</span> <span class=\"sy0\">=</span> <span class=\"kw3\">strstr</span><span class=\"br0\">(</span><span class=\"re0\">$email</span><span class=\"sy0\">,</span> ‘<span class=\"sy0\">@</span><span class=\"st_h\">');</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st_h\">    echo $new;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st_h\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st_h\">email();</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st_h\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) user",
            "b) [email protected]",
            "c) @yahoo.com",
            "d) yahoo.com"
        ],
        "Answer": " Answer: b\nExplanation: Function returns 40. This is greater than 20, hence the output.\n"
    },
    {
        "id": 680,
        "Question": "9. What will be the output of the following PHP code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"php\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">&lt;?php</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">function</span> string<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">echo</span> <span class=\"kw3\">strstr</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello world!\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">111</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">string<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">?&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) o world!",
            "b) Hello world!",
            "c) 111",
            "d) No Output"
        ],
        "Answer": " Answer: c\nExplanation: Functions, keywords etc in php are case insensitive.\n"
    }
]
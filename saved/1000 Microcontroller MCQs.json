[
    {
        "id": 1,
        "Question": "A microcontroller at-least should consist of:",
        "Options": [
            "a) RAM, ROM, I/O ports and timers",
            "b) CPU, RAM, I/O ports and timers",
            "c) CPU, RAM, ROM, I/O ports and timers",
            "d) CPU, ROM, I/O ports and timers"
        ],
        "Answer": "Answer: c\nExplanation: A microcontroller at-least consists of a processor as its CPU with RAM, ROM, I/O ports and timers. It may contain some additional peripherals like ADC, PWM, etc.\n"
    },
    {
        "id": 2,
        "Question": "Unlike microprocessors, microcontrollers make use of batteries because they have:",
        "Options": [
            "a) high power dissipation",
            "b) low power consumption",
            "c) low voltage consumption",
            "d) low current consumption"
        ],
        "Answer": "Answer: b\nExplanation: Micro Controllers are made by using the concept of VLSI technology. So here, CMOS based logic gates are coupled together by this technique that consumes low power."
    },
    {
        "id": 3,
        "Question": "What is the order decided by a processor or the CPU of a controller to execute an instruction?",
        "Options": [
            "a) decode,fetch,execute",
            "b) execute,fetch,decode",
            "c) fetch,execute,decode",
            "d) fetch,decode,execute"
        ],
        "Answer": "Answer: d\nExplanation: First instruction is fetched from Program Memory. After fetching, instruction is decoded to generate control signals to perform the intended task. After decoding, instruction is executed and the complete intended task of that particular instruction.\n"
    },
    {
        "id": 4,
        "Question": "If we say microcontroller is 8-bit then here 8-bit denotes size of:",
        "Options": [
            "a) Data Bus",
            "b) ALU",
            "c) Control Bus",
            "d) Address Bus"
        ],
        "Answer": "Answer: b\nExplanation: If we say a microcontroller is 8-bit it means that it is capable of processing 8-bit data at a time. Data processing is the task of ALU and if ALU is able to process 8-bit data then the data bus should be 8-bit wide. In most books it tells that size of data bus but to be precise it is the size of ALU because in Harvard Architecture there are two sets of data bus which can be of same size but it is not mandatory.\n"
    },
    {
        "id": 5,
        "Question": "How are the performance and the computer capability affected by increasing its internal bus width?",
        "Options": [
            "a) it increases and turns better",
            "b) it decreases",
            "c) remains the same",
            "d) internal bus width doesn’t affect the performance in any way"
        ],
        "Answer": "Answer: a\nExplanation: As the bus width increases, the number of bits carried by bus at a time increases as a result of which the total performance and computer capability increases."
    },
    {
        "id": 6,
        "Question": "Abbreviate CISC and RISC.",
        "Options": [
            "a) Complete Instruction Set Computer, Reduced Instruction Set Computer",
            "b) Complex Instruction Set Computer, Reduced Instruction Set Computer",
            "c) Complex Instruction Set Computer, Reliable Instruction Set Computer",
            "d) Complete Instruction Set Computer, Reliable Instruction Set Computer"
        ],
        "Answer": "Answer: b\nExplanation: CISC means Complete Instruction Set Computer because in this a microcontroller has an instruction set that supports many addressing modes for the arithmetic and logical instructions, data transfer and memory accesses instructions. RISC means Reduced Instruction Set Computer because here a microcontroller has an instruction set that supports fewer addressing modes for the arithmetic and logical instructions and for data transfer instructions."
    },
    {
        "id": 7,
        "Question": "Give the names of the buses present in a controller for transferring data from one place to another?",
        "Options": [
            "a) data bus, address bus",
            "b) data bus",
            "c) data bus, address bus, control bus",
            "d) address bus"
        ],
        "Answer": "Answer: c\nExplanation: There are 3 buses present in a microcontroller they are data bus (for carrying data from one place to another), address bus (for carrying the address to which the data will flow) and the control bus (which tells the controller to execute which type of work at that address may be it read or write operation)."
    },
    {
        "id": 8,
        "Question": "What is the file extension that is loaded in a microcontroller for executing any instruction?",
        "Options": [
            "a) .doc",
            "b) .c",
            "c) .txt",
            "d) .hex"
        ],
        "Answer": "Answer: d\nExplanation: Microcontrollers are loaded with .hex extension as they understand the language of 0’s and 1’s only."
    },
    {
        "id": 9,
        "Question": "What is the most appropriate criterion for choosing the right microcontroller of our choice?",
        "Options": [
            "a) speed",
            "b) availability",
            "c) ease with the product",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: For choosing the right microcontroller for our product we must consider its speed so that the instructions may be executed in the least possible time. It also depends on the availability so that the particular product may be available in our neighboring regions or market in our need. It also depends on the compatibility with the product so that the best results may be obtained."
    },
    {
        "id": 10,
        "Question": "Why microcontrollers are not called general purpose computers?",
        "Options": [
            "a) because they have built in RAM and ROM",
            "b) because they design to perform dedicated task",
            "c) because they are cheap",
            "d) because they consume low power"
        ],
        "Answer": "Answer: b\nExplanation: Microcontrollers are designed to perform dedicated tasks. While designing general purpose computers end use is not known to designers.\n"
    },
    {
        "id": 11,
        "Question": "How many types of architectures are available, for designing a device that is able to work on its own?",
        "Options": [
            "a) 3",
            "b) 2",
            "c) 1",
            "d) 4"
        ],
        "Answer": "Answer: b\nExplanation: There are basically two main types of architectures present, they are Von Neumann and Harvard architectures."
    },
    {
        "id": 12,
        "Question": "Which architecture is followed by general purpose microprocessors?",
        "Options": [
            "a) Harvard architecture",
            "b) Von Neumann architecture",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: General purpose microprocessors make use of Von Neumann architecture as here a simpler design is offered."
    },
    {
        "id": 13,
        "Question": "Which architecture involves both the volatile and the non volatile memory?",
        "Options": [
            "a) Harvard architecture",
            "b) Von Neumann architecture",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: In Harvard architecture, both the volatile and the non volatile memories are involved. This is done to increase its efficiency as both the memories are being used over here."
    },
    {
        "id": 14,
        "Question": "Which architecture provides separate buses for program and data memory?",
        "Options": [
            "a) Harvard architecture",
            "b) Von Neumann architecture",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Harvard Architecture provides separated buses for data and program memory to fetch program and data simultaneously. By doing this access time is reduced and hence performance is increased.\n"
    },
    {
        "id": 15,
        "Question": "Which microcontroller doesn’t match with its architecture below?",
        "Options": [
            "a) Microchip PIC- Harvard",
            "b) MSP430- Harvard",
            "c) ARM7- Von Neumann",
            "d) ARM9- Harvard"
        ],
        "Answer": "Answer: b\nExplanation: MSP430 supports Von Neumann architecture."
    },
    {
        "id": 16,
        "Question": "Harvard architecture has _____________",
        "Options": [
            "a) dedicated buses for data and program memory",
            "b) pipeline technique",
            "c) complex architecture",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Harvard Architecture has dedicated buses for data and program memory and pipeline technique because of this architecture is complex.\n"
    },
    {
        "id": 17,
        "Question": "Which out of the following supports Harvard architecture?",
        "Options": [
            "a) ARM7",
            "b) Pentium",
            "c) SHARC",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SHARC supports harvard architecture for signal processing in DSP."
    },
    {
        "id": 18,
        "Question": "Why most of the DSPs use Harvard architecture?",
        "Options": [
            "a) they provide greater bandwidth",
            "b) they provide more predictable bandwidth",
            "c) they provide greater bandwidth & also more predictable bandwidth",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Most of the DSPs use harvard architecture because they provide a wider predictable bandwidth."
    },
    {
        "id": 19,
        "Question": "Which of the following supports CISC as well as Harvard architecture?",
        "Options": [
            "a) ARM7",
            "b) ARM9",
            "c) SHARC",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SHARC supports both the CISC and the Harvard architecture."
    },
    {
        "id": 20,
        "Question": "Which of the two architecture saves memory?",
        "Options": [
            "a) Harvard",
            "b) Von Neumann",
            "c) Harvard & Von Neumann",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: As only one memory is present in the Von Neumann architecture so it saves a lot of memory."
    },
    {
        "id": 21,
        "Question": "8051 microcontrollers are manufactured by which of the following companies?",
        "Options": [
            "a) Atmel",
            "b) Philips",
            "c) Intel",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: 8051 microcontrollers are manufactured by Intel, Atmel, Philips/Signetics, Infineon, Dallas Semi/Maxim.\n"
    },
    {
        "id": 22,
        "Question": "AT89C2051 has RAM of:",
        "Options": [
            "a) 128 bytes",
            "b) 256 bytes",
            "c) 64 bytes",
            "d) 512 bytes"
        ],
        "Answer": "Answer: a\nExplanation: It has 128 bytes of RAM in it."
    },
    {
        "id": 23,
        "Question": "8051 series has how many 16 bit registers?",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 1",
            "d) 0"
        ],
        "Answer": "Answer: a\nExplanation: It has two 16 bit registers DPTR and PC."
    },
    {
        "id": 24,
        "Question": "When 8051 wakes up then 0x00 is loaded to which register?",
        "Options": [
            "a) PSW",
            "b) SP",
            "c) PC",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: When 8051 wakes up, Program Counter (PC) loaded with 0000H. Because of this in 8051 first opcode is stored in ROM address at 0000H.\n"
    },
    {
        "id": 25,
        "Question": "When the microcontroller executes some arithmetic operations, then the flag bits of which register are affected?",
        "Options": [
            "a) PSW",
            "b) SP",
            "c) DPTR",
            "d) PC"
        ],
        "Answer": "Answer: a\nExplanation: It stands for program status word. It consists of carry, auxiliary carry, overflow, parity, register bank select bits etc which are affected during such operations."
    },
    {
        "id": 26,
        "Question": "How are the bits of the register PSW affected if we select Bank2 of 8051?",
        "Options": [
            "a) PSW.5=0 and PSW.4=1",
            "b) PSW.2=0 and PSW.3=1",
            "c) PSW.3=1 and PSW.4=1",
            "d) PSW.3=0 and PSW.4=1"
        ],
        "Answer": "Answer: b\nExplanation: On adding 9C and 64, a carry is generated from D3 and from the D7 bit so CY and AC are set to 1. In the result, the number of 1’s present are even so parity flag is set to zero."
    },
    {
        "id": 27,
        "Question": "If we push data onto the stack then the stack pointer",
        "Options": [
            "a) increases with every push",
            "b) decreases with every push",
            "c) increases & decreases with every push",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Bits of PSW register are CY, AC, F0, RS1, RS0, OV, -, P so for selecting bank2 RS1=1 and RS0=0 which are fourth and third bit of the register respectively."
    },
    {
        "id": 28,
        "Question": "On power up, the 8051 uses which RAM locations for register R0- R7",
        "Options": [
            "a) 00-2F",
            "b) 00-07",
            "c) 00-7F",
            "d) 00-0F"
        ],
        "Answer": "Answer: a\nExplanation: If we push elements onto the stack then the stack pointer increases with every push of element."
    },
    {
        "id": 29,
        "Question": "How many bytes of bit addressable memory is present in 8051 based microcontrollers?",
        "Options": [
            "a) 8 bytes",
            "b) 32 bytes",
            "c) 16 bytes",
            "d) 128 bytes"
        ],
        "Answer": "Answer: b\nExplanation: On power up register bank 0 is selected which has memory address from 00H-07H."
    },
    {
        "id": 30,
        "Question": "“DJNZ R0, label” is ________ byte instruction.",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 1",
            "d) Can’t be determined"
        ],
        "Answer": "Answer: a\nExplanation: DJNZ is 2-byte instruction. This means jump can be of -128 to +127 locations with respect to PC. Here -128 means upward or backward jump and +127 means downward or forward jump.\n"
    },
    {
        "id": 31,
        "Question": "JZ, JNZ, instructions checked content of _______ register.",
        "Options": [
            "a) DPTR",
            "b) B",
            "c) A",
            "d) PSW"
        ],
        "Answer": "Answer: c\nExplanation: JZ and JNZ instructions checked the content of A register and if condition was satisfied or true then jump to target address.\n"
    },
    {
        "id": 32,
        "Options": [
            "a) F3,02",
            "b) F9,01",
            "c) E9,01",
            "d) E3,02"
        ],
        "Answer": "Answer: c\nExplanation: Loop address is calculated by subtracting destination address and the address next to the source address.\nSo here if we start with 0000H\nthen source address is 0008H and the destination address is 0004H\nSo loop address is 04-0A=E9"
    },
    {
        "id": 33,
        "Question": "When the call instruction is executed the topmost element of stack comes out to be",
        "Options": [
            "a) the address where stack pointer starts",
            "b) the address next to the call instruction",
            "c) address of the call instruction",
            "d) next address of the stack pointer"
        ],
        "Answer": "Answer: b\nExplanation: The topmost element of the stack is the address of the instruction next to the call instruction so that when RET is executed then PC is filled with that address and so the pointer moves to the main program and continue with its routine task."
    },
    {
        "id": 34,
        "Question": "LCALL instruction takes",
        "Options": [
            "a) 2 bytes",
            "b) 4 bytes",
            "c) 3 bytes",
            "d) 1 byte"
        ],
        "Answer": "Answer: c\nExplanation: LCALL instruction moves the pointer to a 16 bit address so it is a 3 byte instruction."
    },
    {
        "id": 35,
        "Question": "Are PUSH and POP instructions are a type of CALL instructions?",
        "Options": [
            "a) yes",
            "b) no",
            "c) none of the mentioned",
            "d) cant be determined"
        ],
        "Answer": "Answer: b\nExplanation: PUSH and POP instructions are not CALL instructions because in POP and PUSH instructions the pointer does not move to any location specified by its address which is the fundamental of CALL instruction, so it is not a type of CALL instruction."
    },
    {
        "id": 36,
        "Question": "What is the time taken by one machine cycle if crystal frequency is 20MHz?",
        "Options": [
            "a) 1.085 micro seconds",
            "b) 0.60 micro seconds",
            "c) 0.75 micro seconds",
            "d) 1 micro seconds"
        ],
        "Answer": "Answer: b\nExplanation: Time taken by one machine cycle is calculated by the inverse of a (crystal frequency) /12 "
    },
    {
        "id": 37,
        "Question": "",
        "Options": [
            "a) 100",
            "b) 200",
            "c) 20000",
            "d) 2000"
        ],
        "Answer": "Answer: c\nExplanation: It will be executed 200*100 times."
    },
    {
        "id": 38,
        "Question": "What is the meaning of the instruction MOV A,05H?",
        "Options": [
            "a) data 05H is stored in the accumulator",
            "b) fifth bit of accumulator is set to one",
            "c) address 05H is stored in the accumulator",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: If we need to store the address in the accumulator, then directly the address is moved to it unlikely of using # used for storing data in any register."
    },
    {
        "id": 39,
        "Question": "",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be determined",
            "d) yes and the second one is preferred"
        ],
        "Answer": "Answer: b\nExplanation: In the first statement, when the decrements approach zero then the jump moves back and in the second statement, when the result after decrements is not zero, then it jumps back."
    },
    {
        "id": 40,
        "Question": "To initialize any port as an output port what value is to be given to it?",
        "Options": [
            "a) 0xFF",
            "b) 0x00",
            "c) 0x01",
            "d) A port is by default an output port"
        ],
        "Answer": "Answer: d\nExplanation: In 8051, a port is initialized by default in its output mode no need to pass any value to it."
    },
    {
        "id": 41,
        "Question": "Which out of the four ports of 8051 needs a pull-up resistor for using it is as an input or an output port?",
        "Options": [
            "a) PORT 0",
            "b) PORT 1",
            "c) PORT 2",
            "d) PORT 3"
        ],
        "Answer": "Answer: a\nExplanation: These pins are the open drain pins of the controller which means it needs a pull-up resistor for using it as an input or an output ports."
    },
    {
        "id": 42,
        "Question": "Which of the ports act as the 16 bit address lines for transferring data through it?",
        "Options": [
            "a) PORT 0 and PORT 1",
            "b) PORT 1 and PORT 2",
            "c) PORT 0 and PORT 2",
            "d) PORT 1 and PORT 3"
        ],
        "Answer": "Answer: c\nExplanation: PORT 0 and PORT 2 are used as the 16 bit address lines where PORT0 act as lower bit address lines and PORT 2 as higher bit address lines."
    },
    {
        "id": 43,
        "Question": "Which of the following registers are not bit addressable?",
        "Options": [
            "a) SCON",
            "b) PCON",
            "c) A",
            "d) PSW"
        ],
        "Answer": "Answer: b\nExplanation: PCON register is not a bit addressable register."
    },
    {
        "id": 44,
        "Question": "Which instruction is used to check the status of a single bit?",
        "Options": [
            "a) MOV A,P0",
            "b) ADD A,#05H",
            "c) JNB PO.0, label",
            "d) CLR P0.05H"
        ],
        "Answer": " Answer: c\nExplanation: JNB which stands for Jump if no bit checks the status of the bit P0.0 and jumps if the bit is 0."
    },
    {
        "id": 45,
        "Question": "Which addressing mode is used in pushing or popping any element on or from the stack?",
        "Options": [
            "a) immediate",
            "b) direct",
            "c) indirect",
            "d) register"
        ],
        "Answer": "Answer: b\nExplanation: If we want to push or pop any element on or from the stack then direct addressing mode has to be used in it, as the other way is not accepted."
    },
    {
        "id": 46,
        "Question": "Which operator is the most important while assigning any instruction as register indirect instruction?",
        "Options": [
            "a) $",
            "b) #",
            "c) @",
            "d) &"
        ],
        "Answer": "Answer: c\nExplanation: In register, indirect mode data is copied at that location where R0 or R1 are present, so @ operator is used ex. MOV @R0,A"
    },
    {
        "id": 47,
        "Question": "What is the advantage of register indirect addressing mode?",
        "Options": [
            "a) it makes use of registers R0 and R1",
            "b) it uses the data dynamically",
            "c) it makes use of operator @",
            "d) it is easy"
        ],
        "Answer": "Answer: b\nExplanation: Register indirect addressing mode is useful if a series of data is to be assigned to that address, with the help of this quality the number of instructions decreases as a result of which performance increases."
    },
    {
        "id": 48,
        "Question": "Which of the following comes under the indexed addressing mode?",
        "Options": [
            "a) MOVX A, @DPTR",
            "b) MOVC @A+DPTR,A",
            "c) MOV A,R0",
            "d) MOV @R0,A"
        ],
        "Answer": "Answer: b\nExplanation: Indexed addressing mode stands for that instruction where the bits of the accumulator is also indexed with the 16 bit registers."
    },
    {
        "id": 49,
        "Question": "When we add two numbers the destination address must always be.",
        "Options": [
            "a) some immediate data",
            "b) any register",
            "c) accumulator",
            "d) memory"
        ],
        "Answer": "Answer: c\nExplanation: For addition purposes, the destination address must always be an accumulator. Example- ADD A,R0; ADD A, @R1; ADD A,@ DPTR "
    },
    {
        "id": 50,
        "Question": "DAA command adds 6 to the nibble if:",
        "Options": [
            "a) CY and AC are necessarily 1",
            "b) either CY or AC is 1",
            "c) no relation with CY or AC",
            "d) CY is 1"
        ],
        "Answer": "Answer: b\nExplanation: DAA command adds 6 to the nibble if any of the nibbles becomes greater than 9."
    },
    {
        "id": 51,
        "Question": "If SUBB A,R4 is executed, then actually what operation is being applied?",
        "Options": [
            "a) R4+A",
            "b) R4-A",
            "c) A-R4",
            "d) R4+A"
        ],
        "Answer": "Answer: c\nExplanation: SUBB command subtracts with borrow the contents of an accumulator with that of the register or some immediate value. So A-R4 is being executed."
    },
    {
        "id": 52,
        "Question": "A valid division instruction always makes:",
        "Options": [
            "a) CY=0,AC=1",
            "b) CY=1,AC=1",
            "c) CY=0,AC=0",
            "d) no relation with AC and CY"
        ],
        "Answer": "Answer: c\nExplanation: When we divide two numbers then AC and CY become zero."
    },
    {
        "id": 53,
        "Question": "In 8 bit signed number operations, OV flag is set to 1 if:",
        "Options": [
            "a) a carry is generated from D7 bit",
            "b) a carry is generated from D3 bit",
            "c) a carry is generated from D7 or D3 bit",
            "d) a carry is generated from D7 or D6 bit"
        ],
        "Answer": "Answer: d\nExplanation: In 8 bit operations, if a carry is generated from D6 or D7 bit, then OV flag is set to 1."
    },
    {
        "id": 54,
        "Question": "In unsigned number addition, the status of which bit is important?",
        "Options": [
            "a) OV",
            "b) CY",
            "c) AC",
            "d) PSW"
        ],
        "Answer": "Answer: b\nExplanation: If unsigned numbers operations are involved, then the status of CY flag is important and in signed number operation the status of OV flag is important."
    },
    {
        "id": 55,
        "Question": "Which instructions have no effect on the flags of PSW?",
        "Options": [
            "a) ANL",
            "b) ORL",
            "c) XRL",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: These instructions are the arithmetic operations and the flags are affected by the data copy instructions, so all these instructions don’t affect the bits of the flag."
    },
    {
        "id": 56,
        "Question": "ANL instruction is used _______",
        "Options": [
            "a) to AND the contents of the two registers",
            "b) to mask the status of the bits",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: ANL instruction is used to AND the contents of the two registers and is also used to mask the status of the bits of the register."
    },
    {
        "id": 57,
        "Question": "CJNE instruction makes _______",
        "Options": [
            "a) the pointer to jump if the values of the destination and the source address are equal",
            "b) sets CY=1, if the contents of the destination register are greater then that of the source register",
            "c) sets CY=0, if the contents of the destination register are smaller then that of the source register",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In CJNE command, the pointer jumps if the values of the two registers are not equal and it resets CY if the destination address is larger then the source address and sets CY if the destination address is smaller then the source address."
    },
    {
        "id": 58,
        "Question": "XRL, ORL, ANL commands have _______",
        "Options": [
            "a) accumulator as the destination address and any register, memory or any immediate data as the source address",
            "b) accumulator as the destination address and any immediate data as the source address",
            "c) any register as the destination address and accumulator, memory or any immediate data as the source address",
            "d) any register as the destination address and any immediate data as the source address"
        ],
        "Answer": "Answer: a\nExplanation: These commands have accumulator as the destination address and any register, memory or any immediate data as the source address."
    },
    {
        "id": 59,
        "Question": "What is the clock source for the timers?",
        "Options": [
            "a) some external crystal applied to the micro-controller for executing the timer",
            "b) from the crystal applied to the micro-controller",
            "c) through the software",
            "d) through programming"
        ],
        "Answer": "Answer: b\nExplanation: Timer’s clock source is the crystal that is applied to the controller."
    },
    {
        "id": 60,
        "Question": "What is the frequency of the clock that is being used as the clock source for the timer?",
        "Options": [
            "a) some externally applied frequency f’",
            "b) controller’s crystal frequency f",
            "c) controller’s crystal frequency /12",
            "d) externally applied frequency/12"
        ],
        "Answer": "Answer: c\nExplanation: The frequency of the clock source for the timer is equal to f/12(where f is the frequency of the crystal)."
    },
    {
        "id": 61,
        "Question": "What is the function of the TMOD register?",
        "Options": [
            "a) TMOD register is used to set various operation modes of timer/counter",
            "b) TMOD register is used to load the count of the timer",
            "c) Is the destination or the final register where the result is obtained after the operation of the timer",
            "d) Is used to interrupt the timer"
        ],
        "Answer": "Answer: a\nExplanation: TMOD is used to set various operation modes of timer/counter by the programmer."
    },
    {
        "id": 62,
        "Question": "What is the maximum delay that can be generated with the crystal frequency of 22MHz?",
        "Options": [
            "a) 2978.9 sec",
            "b) 0.011 msec",
            "c) 11.63 sec",
            "d) 2.97 msec"
        ],
        "Answer": "Answer: d\nExplanation: For generating the maximum delay we have to multiply the maximum number of counts with the time period required to execute one machine cycle( 65536*1/22MHz)."
    },
    {
        "id": 63,
        "Question": "Auto reload mode is allowed in which mode of the timer?",
        "Options": [
            "a) Mode 0",
            "b) Mode 1",
            "c) Mode 2",
            "d) Mode 3"
        ],
        "Answer": "Answer: c\nExplanation: Auto reload is allowed in the Mode 2 of the timer because here in this mode, we don’t need to load the count again and again in the register."
    },
    {
        "id": 64,
        "Question": "Find out the roll over value for the timer in Mode 0, Mode 1 and Mode 2?",
        "Options": [
            "a) 00FFH,0FFFH,FFFFH",
            "b) 1FFFH,0FFFH,FFFFH",
            "c) 1FFFH,FFFFH,00FFH",
            "d) 1FFFH,00FFH,FFFFH"
        ],
        "Answer": "Answer: c\nExplanation: For Mode 0 13 bit value is used so 1FFFH is chosen to be the roll over value. Similarly for Mode 1 FFFFH and for Mode 2 FFH is the roll over value for the timers and counter."
    },
    {
        "id": 65,
        "Question": "What steps are followed when we need to turn on any timer?",
        "Options": [
            "a) load the count, start the timer, keep monitoring it, stop the timer",
            "b) load the TMOD register, load the count, start the timer, keep monitoring it, stop the timer",
            "c) load the TMOD register, start the timer, load the count, keep monitoring it, stop the timer",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: When any timer is to turn on, then firstly we have to load the TMOD register and the count. Then the timer is to get started. After then, we need to monitor the timer properly and then when the roll over condition arises then the timer is to be stopped."
    },
    {
        "id": 66,
        "Question": "If Timer 0 is to be used as a counter, then at what particular pin clock pulse need to be applied?",
        "Options": [
            "a) P3.3",
            "b) P3.4",
            "c) P3.5",
            "d) P3.6"
        ],
        "Answer": "Answer: b\nExplanation: If Timer 0 is to be used as a counter, then a pulse has to be applied at P3.4 and if it is for Timer 1 then the clock pulse has to be applied at the pin P3.5."
    },
    {
        "id": 67,
        "Question": "In the instruction “MOV TH1,#-3”, what is the value that is being loaded in the TH1 register?",
        "Options": [
            "a) 0xFCH",
            "b) 0xFBH",
            "c) 0xFDH",
            "d) 0xFEH"
        ],
        "Answer": "Answer: c\nExplanation: Negative value is loaded in 2’s complement form. -3 represented in 2’s complement form as FDH.\nSteps to convert into 2’s complement:\n\n\n\t\n\n3 → 0000 0011       \tBinary Equivalent of ‘3’\n  →  1111 1100          1’s Complement of decimal ‘-3’\n  →  1111 1101       \t2’s Complement of decimal ‘-3’\n      F     D           Hex Equivalent of ‘-3’\n\n\n"
    },
    {
        "id": 68,
        "Question": "TF1, TR1, TF0, TR0 bits are of which register?",
        "Options": [
            "a) TMOD",
            "b) SCON",
            "c) TCON",
            "d) SMOD"
        ],
        "Answer": "Answer: c\nExplanation: All of these bits are part of TCON (Timer Control) register. TF0 and TF1 are used to check overflow of timer 0 and timer 1 respectively. TR0 and TR1 are timer control bits used to start and stop of timer 0 and timer 1 respectively.\n"
    },
    {
        "id": 69,
        "Question": "Which devices are specifically being used for converting serial to parallel and from parallel to serial respectively?",
        "Options": [
            "a) timers",
            "b) counters",
            "c) registers",
            "d) serial communication"
        ],
        "Answer": "Answer: c\nExplanation: Some registers like the parallel in serial out and serial in parallel out are used to convert serial data into parallel and vice versa respectively."
    },
    {
        "id": 70,
        "Question": "What is the difference between UART and USART communication?",
        "Options": [
            "a) they are the names of the same particular thing, just the difference of A and S is there in it",
            "b) one uses asynchronous means of communication and the other uses synchronous means of communication",
            "c) one uses asynchronous means of communication and the other uses asynchronous and synchronous means of communication",
            "d) one uses angular means of the communication and the other uses linear means of communication"
        ],
        "Answer": "Answer: c\nExplanation: UART stands for Universal Asynchronous receiver-transmitter and USART stands for Universal Synchronous and Asynchronous receiver-transmitter."
    },
    {
        "id": 71,
        "Question": "Which of the following best describes the use of framing in asynchronous means of communication?",
        "Options": [
            "a) it binds the data properly",
            "b) it tells us about the start and stops of the data to be transmitted or received",
            "c) it is used for error checking",
            "d) it is used for flow control"
        ],
        "Answer": "Answer: b\nExplanation: In data framing in asynchronous means of communication, the data is packed between the start and the stop bit. This is done so as to tell the other computer about the start and the end of the data."
    },
    {
        "id": 72,
        "Question": "Which of the following signal control the flow of data?",
        "Options": [
            "a) RTS",
            "b) DTR",
            "c) RTS & DTR",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: RTS is a request to send control signal which is a control for the flow of data. On the other hand DTR is a Data Terminal Ready control signal which tells about the current status of the DTE."
    },
    {
        "id": 73,
        "Question": "Which of the following is the logic level understood by the micro-controller/micro-processor?",
        "Options": [
            "a) TTL logic level",
            "b) RS232 logic level",
            "c) None of the mentioned",
            "d) TTL & RS232 logic level"
        ],
        "Answer": "Answer: a\nExplanation: TTL logic or the transistor logic level is the logic that is understood by the micro-controllers/microprocessors."
    },
    {
        "id": 74,
        "Question": "What is a null modem connection?",
        "Options": [
            "a) no data transmission",
            "b) no MAX232",
            "c) the RxD of one is the TxD for the other",
            "d) no serial communication"
        ],
        "Answer": "Answer: c\nExplanation: In null modem connection the RxD of one is the TxD for the other."
    },
    {
        "id": 75,
        "Question": "Which of the following best states the reason that why baud rate is mentioned in serial communication?",
        "Options": [
            "a) to know about the no of bits being transmitted per second",
            "b) to make the two devices compatible with each other, so that the transmission becomes easy and error free",
            "c) to use Timer 1",
            "d) for wasting memory"
        ],
        "Answer": "Answer: b\nExplanation: To make two devices compatible with each other baud rate is mentioned in the serial communication so that the transmission becomes easy and error free."
    },
    {
        "id": 76,
        "Question": "With what frequency UART operates( where f denoted the crystal frequency )?",
        "Options": [
            "a) f/12",
            "b) f/32",
            "c) f/144",
            "d) f/384"
        ],
        "Answer": "Answer: d\nExplanation: UART frequency is the crystal frequency f/12 divided by 32, that comes out to be f/384."
    },
    {
        "id": 77,
        "Question": "What is the function of the SCON register?",
        "Options": [
            "a) to control SBUF and SMOD registers",
            "b) to program the start bit, stop bit, and data bits of framing",
            "c) to control SMOD registers",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: SCON register is mainly used for programming the start bits, stop bits and data bits of framing. As it consists of bits like RB8, TB8, SM0, SM1, SM2 etc."
    },
    {
        "id": 78,
        "Question": "What should be done if we want to double the baud rate?",
        "Options": [
            "a) change a bit of the TMOD register",
            "b) change a bit of the PCON register",
            "c) change a bit of the SCON register",
            "d) change a bit of the SBUF register"
        ],
        "Answer": "Answer: b\nExplanation: PCON register consists of SMOD bit as its D7 bit, so if we set this bit then the baud rate gets doubled."
    },
    {
        "id": 79,
        "Question": "When an interrupt is enabled, then where does the pointer moves immediately after this interrupt has occurred?",
        "Options": [
            "a) to the next instruction which is to be executed",
            "b) to the first instruction of ISR",
            "c) to a fixed location in memory called interrupt vector table",
            "d) to the end of the program"
        ],
        "Answer": "Answer: c\nExplanation: When an interrupt occurs, then it jumps to a fixed memory location in memory called the interrupt vector table that holds the address of the Interrupt Service Routine.\n"
    },
    {
        "id": 80,
        "Question": "What are the contents of the IE register, when the interrupt of the memory location 0x00 is caused?",
        "Options": [
            "a) 0xFFH",
            "b) 0x00H",
            "c) 0x10H",
            "d) 0xF0H"
        ],
        "Answer": "Answer: b\nExplanation: When interrupt of 0x00 is caused (the reset interrupt) then all the other interrupts will be disabled or the contents of the IE register becomes null."
    },
    {
        "id": 81,
        "Question": "After RETI instruction is executed then the pointer will move to which location in the program?",
        "Options": [
            "a) next interrupt of the interrupt vector table",
            "b) immediate next instruction where interrupt is occurred",
            "c) next instruction after the RETI in the memory",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: When the RETI instruction is executed, PC will fetch 2-bytes (address) from top of stack which is stored when interrupt is occurred. This will return to the place where interrupt is occurred and starts executing instructions.\n"
    },
    {
        "id": 82,
        "Question": "Which pin of the external hardware is said to exhibit INT0 interrupt?",
        "Options": [
            "a) pin no 10",
            "b) pin no 11",
            "c) pin no 12",
            "d) pin no 13"
        ],
        "Answer": "Answer: c\nExplanation: INT0 interrupt is caused when pin no 12 in the hardware of the 8051 controller is enabled with a low leveled pulse."
    },
    {
        "id": 83,
        "Question": "Which bit of the IE register is used to enable TxD/RxD interrupt?",
        "Options": [
            "a) IE.D5",
            "b) IE.D2",
            "c) IE.D3",
            "d) IE.D4"
        ],
        "Answer": "Answer: d\nExplanation: IE.D4 is used to enable RS interrupt or the serial communication interrupt."
    },
    {
        "id": 84,
        "Question": "Which of the following combination is the best to enable the external hardware interrupt 0 of the IE register (assuming initially all bits of the IE register are zero)?",
        "Options": [
            "a) EX0=1",
            "b) EA=1",
            "c) any of the mentioned",
            "d) EX0=1 & EA=1"
        ],
        "Answer": "Answer: d\nExplanation: For executing the EX0 interrupt, the EX0 and EA bits of the IE register should be set. EA is set to enable all the interrupts and EX0 is set to enable the external hardware interrupt 0 interrupt and mask the other enabled interrupts."
    },
    {
        "id": 85,
        "Question": "Why normally LJMP instructions are the topmost lines of the ISR?",
        "Options": [
            "a) so as to jump to some other location where there is a wider space of memory available to write the codes",
            "b) so as to avoid overwriting of other interrupt instructions",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: There is a small space of memory present in the vector table between two different interrupts so in order to avoid overwriting of other interrupts we normally jump to other locations where a wide range of space is available."
    },
    {
        "id": 86,
        "Question": "Which register is used to make the interrupt level or an edge triggered pulse?",
        "Options": [
            "a) TCON",
            "b) IE",
            "c) IPR",
            "d) SCON"
        ],
        "Answer": "Answer: a\nExplanation: TCON register is used to make any interrupt level or edge triggered."
    },
    {
        "id": 87,
        "Question": "What is the disadvantage of a level triggered pulse?",
        "Options": [
            "a) a constant pulse is to be maintained for a greater span of time",
            "b) another interrupt may be generated if the low-level signal is not removed before the ISR is finished",
            "c) it is difficult to produce",
            "d) another interrupt may be caused if the signal is still low before the completion of the last instruction"
        ],
        "Answer": "Answer: d\nExplanation: In a level triggered interrupt, if the low signal at interrupt pin must be removed before the execution of last instruction of the ISR i.e. RETI. If low signal at interrupt pin is not removed before completing the ISR then it will be generating another interrupt.\n"
    },
    {
        "id": 88,
        "Question": "What is the correct order of priority that is set after a controller gets reset?",
        "Options": [
            "a) RI/TI > TF1 > TF0 > INT1 > INT0",
            "b) RI/TI < TF1 < TF0 < INT1 < INT0",
            "c) INT0 > TF0 > INT1 > TF1 > RI/TI",
            "d) INT0 < TF0 < INT1 < TF1 < RI/TI"
        ],
        "Answer": "Answer: c\nExplanation: On reset Interrupt Priorities are as INT0 > TF0 > INT1 > TF1 > RI/TI, where ‘>’ is used to denote highest priority.\n"
    },
    {
        "id": 89,
        "Question": "How many rows and columns are present in a 16*2 alphanumeric LCD?",
        "Options": [
            "a) rows=2, columns=32",
            "b) rows=16, columns=2",
            "c) rows=16, columns=16",
            "d) rows=2, columns=16"
        ],
        "Answer": "Answer: d\nExplanation: 16*2 alphanumeric LCD has 2 rows and 16 columns."
    },
    {
        "id": 90,
        "Question": "How many data lines are there in a 16*2 alphanumeric LCD?",
        "Options": [
            "a) 16",
            "b) 8",
            "c) 1",
            "d) 0"
        ],
        "Answer": "Answer: b\nExplanation: There are eight data lines from pin no 7 to pin no 14 in an LCD."
    },
    {
        "id": 91,
        "Question": "Which pin of the LCD is used for adjusting its contrast?",
        "Options": [
            "a) pin no 1",
            "b) pin no 2",
            "c) pin no 3",
            "d) pin no 4"
        ],
        "Answer": "Answer: c\nExplanation: Pin no 3 is used for controlling the contrast of the LCD."
    },
    {
        "id": 92,
        "Question": "For writing commands on an LCD, RS bit is",
        "Options": [
            "a) set",
            "b) reset",
            "c) set & reset",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: For writing commands on an LCD, RS pin is reset."
    },
    {
        "id": 93,
        "Question": "Which command of an LCD is used to shift the entire display to the right?",
        "Options": [
            "a) 0x1C",
            "b) 0x18",
            "c) 0x05",
            "d) 0x07"
        ],
        "Answer": "Answer: a\nExplanation: 0x1C is used to shift the entire display to the right."
    },
    {
        "id": 94,
        "Question": "Which command is used to select the 2 lines and 5*7 matrix of an LCD?",
        "Options": [
            "a) 0x01",
            "b) 0x06",
            "c) 0x0e",
            "d) 0x38"
        ],
        "Answer": "Answer: d\nExplanation: 0x38 is used to select the 2 lines and 5*7 matrix of an LCD."
    },
    {
        "id": 95,
        "Question": "Which of the following step/s is/are correct for sending data to an LCD?",
        "Options": [
            "a) set the R/W bit",
            "b) set the E bit",
            "c) set the RS bit",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: To send data to an LCD, RS pin should be set so that LCD will come to know that it will receive data which has to display on the screen. R/W pin should be reset as data has to be displayed (i.e. write to the LCD). High to low pulse must be applied to the E pin when data is supplied to data pins of the LCD.\n"
    },
    {
        "id": 96,
        "Question": "Which of the following step/s is/are correct to perform reading operation from an LCD?",
        "Options": [
            "a) low to high pulse at E pin",
            "b) R/W pin is set high",
            "c) low to high pulse at E pin & R/W pin is set high",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: For reading operations, R/W pin should be made high and added to it, a low to high pulse is also generated at the E pin."
    },
    {
        "id": 97,
        "Question": "Which instruction is used to select the first row first column of an LCD?",
        "Options": [
            "a) 0x08",
            "b) 0x0c",
            "c) 0x80",
            "d) 0xc0"
        ],
        "Answer": "Answer: c\nExplanation: 0x80 is used to select the first row first column of an LCD."
    },
    {
        "id": 98,
        "Question": "The RS pin is _________ for an LCD.",
        "Options": [
            "a) input",
            "b) output",
            "c) input & output",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The RS pin is an input pin for an LCD."
    },
    {
        "id": 99,
        "Question": "Which of the following steps detects the key in a 4*4 keyboard matrix about the key that is being pressed?",
        "Options": [
            "a) masking of bits",
            "b) ensuring that initially, all keys are open",
            "c) checking that whether the key is actually pressed or not",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: For detecting that whether the key is actually pressed or not, firstly this must be ensured that initially all the keys are closed. Then we need to mask the bits individually to detect that which key is pressed. Then we need to check that is the key actually pressed or not, by checking that whether the key pressed for a time more than 20 micro seconds."
    },
    {
        "id": 100,
        "Question": "What is described by this command: CJNE A,#00001111b, ROW1",
        "Options": [
            "a) it masks the bit and then jumps to the label where ROW1 is written",
            "b) it makes the value of the accumulator 0FH and then jumps at the address where ROW1 label is written",
            "c) it compares the value of the accumulator with 0FH and jumps to the location where ROW1 label is there if the value becomes equal",
            "d) it compares the value of the accumulator with 0FH and jumps to the location where ROW1 label is there if the value is not equal"
        ],
        "Answer": "Answer: d\nExplanation: This particular command CJNE A,#00001111b, ROW1 compares the value of the accumulator with OFH and jumps to ROW1 address if the value is not equal."
    },
    {
        "id": 101,
        "Question": "To detect that in which column, the key is placed?",
        "Options": [
            "a) we can mask the bits and then check it",
            "b) we can rotate the bits and then check that particular bit which is set or reset(according to the particular condition)",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: We can mask or we can even rotate the bits to check that particularly in which column is the key placed."
    },
    {
        "id": 102,
        "Question": "In reading the columns of a matrix, if no key is pressed we should get all in binary notation",
        "Options": [
            "a) 0",
            "b) 1",
            "c) F",
            "d) 7"
        ],
        "Answer": "Answer: b\nExplanation: If no key is pressed, then all the keys show 1 as they are all connected to power supply."
    },
    {
        "id": 103,
        "Question": "If we need to operate a key of a keyboard in an interrupt mode, then it will generate what kind of interrupt?",
        "Options": [
            "a) ES",
            "b) EX0/EX1",
            "c) T0/T1",
            "d) RESET"
        ],
        "Answer": "Answer: b\nExplanation: If a key is to operate in an interrupt mode then it will generate an external hardware interrupt."
    },
    {
        "id": 104,
        "Question": "To identify that which key is being pressed, we need to:",
        "Options": [
            "a) ground all the pins of the port at a time",
            "b) ground pins of the port one at a time",
            "c) connect all the pins of the port to the main supply at a time",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: To detect that which key is being pressed, we need to ground the pins one by one."
    },
    {
        "id": 105,
        "Question": "Key press detection and Key identification are:",
        "Options": [
            "a) the same processes",
            "b) two different works are done in Keyboard Interfacing",
            "c) none of the mentioned",
            "d) any of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: They are two different works that are involved in Keyboard Interfacing. One is used for checking that which key is being actually pressed and the other is used to check that is the key actually pressed or not. "
    },
    {
        "id": 106,
        "Question": "Why two pins for ground are available in ADC0804?",
        "Options": [
            "a) for controlling the ADCON0 and ADCON1 register of the controller",
            "b) for controlling the analog and the digital pins of the controller",
            "c) for both parts of the chip respectively",
            "d) for isolate analog and digital signal"
        ],
        "Answer": "Answer: d\nExplanation: Two grounds are available in ADC0804 to isolate analog signal from digital signal. This isolation provides accuracy in digital output.\n"
    },
    {
        "id": 107,
        "Question": "What is the function of the WR pin?",
        "Options": [
            "a) its active high input used to inform ADC0804 to the end of conversion",
            "b) its active low input used to inform ADC0804 to the end of conversion",
            "c) its active low input used to inform ADC0804 to the start of conversion",
            "d) its active high input used to inform ADC0804 to the start of conversion"
        ],
        "Answer": "Answer: c\nExplanation: WR is active low input used to inform the ADC0804 to start the conversion process.\n"
    },
    {
        "id": 108,
        "Question": "State which of the following statements are false?",
        "Options": [
            "a) CLK IN pin used for External Clock Input or Internal Clock with external RC element",
            "b) INTR pin tells about the end of the conversion",
            "c) ADC0804 IC is an 8 bit parallel ADC in the family of the ADC0800 series",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: CLK IN pin is used to tell about the conversion time, INTR pin tells about the end of the conversion and ADC0804 has a resolution of 8 bits only so all three statements are true."
    },
    {
        "id": 109,
        "Question": "While programming the ADC0808/0809 IC what steps are followed?",
        "Options": [
            "a) select the analog channel, start the conversion, monitor the conversion, display the digital results",
            "b) select the analog channel, activate the ALE signal (L to H pulse), start the conversion, monitor the conversion, read the digital results",
            "c) select the analog channel, activate the ALE signal (H to L pulse), start the conversion, monitor the conversion, read the digital results",
            "d) select the channel, start the conversion, end the conversion"
        ],
        "Answer": "Answer: b\nExplanation: While programming the ADC0808/0809 IC firstly we need to select the channel from the A, B, C pins. Then we need to activate the ALE signal, this is needed to latch the address. Then we start the conversion from the WR pin. After monitoring the INTR pin we get to know about the end of the conversion. Then we activate the OE enable to read out data out of the ADC chip.\n"
    },
    {
        "id": 110,
        "Question": "In ADC0808/0809 IC which pin is used to select Step Size?",
        "Options": [
            "a) Vref",
            "b) Vin",
            "c) Vref/2 & Vin",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Step Size is calculated by formula Vref/(2n). As ADC0808/0809 8-bit ADC value of n=8. Therefore formula becomes Vref/(28) = Vref/256. If Vref = 5V then Step Size will be 5/256 i.e. 19.53mV.\n"
    },
    {
        "id": 111,
        "Question": "What is the difference between ADC0804 and MAX1112?",
        "Options": [
            "a) ADC0804 has 8 bits and MAX1112 has 1 bit for data output",
            "b) ADC0804 is used for adc and dac conversions whereas MAX1112 is used for serial data transmissions",
            "c) ADC0804 has 32 bits and MAX1112 has 3 bit for data output",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: ADC0804 is used for parallel ADC and MAX1112 is used for serial ADC."
    },
    {
        "id": 112,
        "Question": "Which of the following statements are true about DAC0808?",
        "Options": [
            "a) parallel digital data to analog data conversion",
            "b) it has current as an output",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: DAC0804 is used for parallel data to analog data conversion."
    },
    {
        "id": 113,
        "Question": "8 input DAC has ________",
        "Options": [
            "a) 8 discrete voltage levels",
            "b) 64 discrete voltage levels",
            "c) 124 discrete voltage levels",
            "d) 256 discrete voltage levels"
        ],
        "Answer": "Answer: d\nExplanation: For n input DAC has 2^n discrete voltage levels."
    },
    {
        "id": 114,
        "Question": "INTR, WR signal is an input/output signal pin?",
        "Options": [
            "a) both are output",
            "b) both are input",
            "c) one is input and the other is output",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: INTR pin tells about the end of the conversion (output) and WR pin tells us to start the conversion (input)."
    },
    {
        "id": 115,
        "Question": "What is the function of the SCLK pin in MAX1112?",
        "Options": [
            "a) It is used to bring data in",
            "b) It is used to bring data out and send in the control byte, one at a time",
            "c) It is used to get output clock",
            "d) It is used to get serial output"
        ],
        "Answer": "Answer: b\nExplanation: SCLK is used to bring data out and send in the control byte."
    },
    {
        "id": 116,
        "Question": "A thermistor is a __________",
        "Options": [
            "a) sensor",
            "b) adc",
            "c) transducer",
            "d) micro controller"
        ],
        "Answer": "Answer: c\nExplanation: A thermistor is a device which is used to convert the temperature into electrical signals, so it acts as a transducer."
    },
    {
        "id": 117,
        "Question": "What is the difference between LM 34 and LM 35 sensors?",
        "Options": [
            "a) one is a sensor and the other is a transducer",
            "b) one’s output voltage corresponds to the Fahrenheit temperature and the other corresponds to the Celsius temperature",
            "c) one is of low precision and the other is of higher precision",
            "d) one requires external calibration and the other doesn’t require it"
        ],
        "Answer": "Answer: b\nExplanation: LM 34’s output voltage corresponds to the Fahrenheit temperature and LM 35 corresponds to the Celsius temperature."
    },
    {
        "id": 118,
        "Question": "An electronic device which converts physical quantity or energy from one form to another is called ______",
        "Options": [
            "a) Sensor",
            "b) Transistor",
            "c) Transducer",
            "d) Thyristor"
        ],
        "Answer": "Answer: c\nExplanation: An electronic device that converts physical quantity or energy from one form to another is called Transducer. Examples: Sensor, Speaker, Microphone, etc.\n"
    },
    {
        "id": 119,
        "Question": "What is signal conditioning?",
        "Options": [
            "a) to analyse any signal",
            "b) conversion or modification is referred to as conditioning",
            "c) conversion from analog to digital is signal conditioning",
            "d) conversion from digital to analog is signal conditioning"
        ],
        "Answer": "Answer: b\nExplanation: Signal Conditioning is referred to as the conversion of a signal from one form to other, now this may be from analog to digital conditioning or digital to analog conditioning."
    },
    {
        "id": 120,
        "Question": "What steps have to be followed for interfacing a sensor to a microcontroller 8051?",
        "Options": [
            "a) make the appropriate connections with the controller, ADC conversion, analyse the results",
            "b) interface sensor with ADC and ADC with 8051",
            "c) interface sensor with the MAX232, send now to microcontroller, analyse the results",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: For interfacing a sensor with an 8051 microcontroller, we need ADC in between because output of sensor is analog and microcontroller works on digital signals only. So whatever signal generated by the sensor is converted into its digital equivalent using ADC and equivalent digital signal is given to the microcontroller for processing."
    },
    {
        "id": 121,
        "Question": "LM35 has how many pins?",
        "Options": [
            "a) 2",
            "b) 1",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: c\nExplanation: LM35 has 3 pins.\n1.Power( +5 Volts )\n2.Output analog voltage\n3.Ground( 0 Volts )"
    },
    {
        "id": 122,
        "Question": "Why Vref is set of ADC0848 to 2.56 V if analog input is connected to the LM35?",
        "Options": [
            "a) to set the step size of the sampled input",
            "b) to set the ground for the chip",
            "c) to provide supply to the chip",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Vref is used to set the step size of the ADC conversion, if it is selected to 2.56 then the step size will be selected to 10mV, so for every step increase of the analog voltage an increase of 10 mV will be there."
    },
    {
        "id": 123,
        "Question": "The 8255 is a ______ chip.",
        "Options": [
            "a) Input/Output",
            "b) Analog to Digital",
            "c) Digital to analog",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The 8255 is Input/Output (I/O) chip. It has three separate accessible ports. The 8255 chip is used to expand the I/O ports of microcontrollers.\n"
    },
    {
        "id": 124,
        "Question": "Which pins of a microcontroller are directly connected with 8255?",
        "Options": [
            "a) RD",
            "b) WR",
            "c) D0-D7",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: RD, WR, D0-D7 all are directly connected to the 8051 for telling the chip about the control signals and also for transferring the data."
    },
    {
        "id": 125,
        "Question": "Find the control word for PA = out, PB = in, PCL = out, PCH = out (Mode0)?",
        "Options": [
            "a) 0x02H",
            "b) 0x82H",
            "c) 0x83H",
            "d) 0x03H"
        ],
        "Answer": "Answer: b\nExplanation: The value that is being loaded in the control word is 10000010b for PB as an input port and all others as the output ports being operated in mode0. The hex equivalent of 10000010b → 0x82H."
    },
    {
        "id": 126,
        "Question": "Which pins are used to select the ports and the control register?",
        "Options": [
            "a) CS",
            "b) A1",
            "c) A0",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: CS pin is an active low input pin for 8255 and it is used for selecting a chip. A0 and A1 pins are used for select ports and the control register.\n"
    },
    {
        "id": 127,
        "Question": "What is the value of the control register when RESET button is set to zero?",
        "Options": [
            "a) 0x00H",
            "b) 0xFFH",
            "c) 0x11H",
            "d) value remains the same"
        ],
        "Answer": "Answer: d\nExplanation: RESET is active-high signal input into the 8255 used to clear the control register. When RESET is activated (i.e. set to high), all ports are initialized as input mode. Hence the value of the control register remains the same as it is even when the RESET button is set to zero."
    },
    {
        "id": 128,
        "Question": "Why MOVX instruction is being used to access the ports of the 8255?",
        "Options": [
            "a) because 8255 is connecting a microcontroller in memory mapped I/O configuration",
            "b) because 8255 is used to access the external communication",
            "c) because 8255 is used to access the data transfer",
            "d) because 8255 is used to access the interfacing of LCD, motor etc"
        ],
        "Answer": "Answer: a\nExplanation: As 8255 is connecting a microcontroller in memory mapped I/O configuration. This means that memory space used to access 8255 (i.e. 8255 is treated as external memory). MOVX instruction is used to access external memory locations. "
    },
    {
        "id": 129,
        "Question": "What is correct about the BSR mode from below?",
        "Options": [
            "a) In BSR mode, only the individual bits of PORT A can be programmed",
            "b) In BSR mode, only the individual bits of PORT B can be programmed",
            "c) In BSR mode, only the individual bits of PORT C can be programmed",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: BSR (Bit Set/Rest) mode is used to program individual bits of PORT C only.\n"
    },
    {
        "id": 130,
        "Question": "How many pins of the 8255 can be used as the I/O ports?",
        "Options": [
            "a) 8",
            "b) 16",
            "c) 24",
            "d) 32"
        ],
        "Answer": "Answer: c\nExplanation: There are 3 ports available in the 8255 so 24 pins are available for the I/O ports pins."
    },
    {
        "id": 131,
        "Question": "DS12887 is a ____________",
        "Options": [
            "a) Timer IC",
            "b) Serial communication IC",
            "c) RTC IC",
            "d) Motor"
        ],
        "Answer": "Answer: c\nExplanation: DS12887 is a real time clock that is widely used to provide accurate time and date for many applications."
    },
    {
        "id": 132,
        "Question": "DS12887 has _____ amount of RAM.",
        "Options": [
            "a) 14 bytes",
            "b) 114 bytes",
            "c) 128 bytes",
            "d) 64 bytes"
        ],
        "Answer": "Answer: c\nExplanation: DS12887 has 128 bytes of non-volatile RAM."
    },
    {
        "id": 133,
        "Question": "DS12887 has _____ amount of RAM for general purpose applications.",
        "Options": [
            "a) 9 bytes",
            "b) 114 bytes",
            "c) 128 bytes",
            "d) 14 bytes"
        ],
        "Answer": "Answer: b\nExplanation: DS12887 has 128 bytes of non-volatile RAM. Out of 128 bytes, 14 bytes of RAM for clock/calendar and control registers, and another 114 bytes of RAM for general purpose data storage."
    },
    {
        "id": 134,
        "Question": "In DS12887, which bits of the Register A are used to turn on the oscillator?",
        "Options": [
            "a) D4",
            "b) D5",
            "c) D6",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In DS12887, D4-D6 bits of register A are used to turn on the oscillator. A specific value of 010 of D4-D6 is desirable for turning on the oscillator.\n"
    },
    {
        "id": 135,
        "Question": "In DS12887, which out of the following is correct about the SQW pin?",
        "Options": [
            "a) it is an output pin",
            "b) it can provide up to 15 different square waves",
            "c) the frequency of the square wave is set by the register A",
            "d) all of the mentioned are correct"
        ],
        "Answer": "Answer: d\nExplanation: In DS12887, SQW pin stands for SQuare Wave. It is an output pin that can provide us with 15 different square waves. The frequency of the square wave is selected by programming register A."
    },
    {
        "id": 136,
        "Question": "In DS12887, what is correct about the UIP bit of the register A?",
        "Options": [
            "a) it is a read only bit",
            "b) it is used to know about the result",
            "c) it is used to select the DS12887 datasheet",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: In DS12887, UIP bit of register A stands for Update In Progress. The update-in-progress (UIP) bit is a status flag i.e. read-only bit."
    },
    {
        "id": 137,
        "Question": "In DS12887, what is the range of RAM addresses which are used to store the values of time, calendar and alarm data?",
        "Options": [
            "a) 00-7FH",
            "b) 00-09H",
            "c) 0EH-7FH",
            "d) 0A-0DH"
        ],
        "Answer": "Answer: b\nExplanation: In DS12887, the first ten locations i.e. 00-09H are used to store the values of time, calendar and alarm data."
    },
    {
        "id": 138,
        "Question": "Is DS12887 has non-volatile RAM?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) Can’t be determined",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Yes, DS12887 has non-volatile RAM.\n"
    },
    {
        "id": 139,
        "Question": "Name the read only registers are present in the DS12887?",
        "Options": [
            "a) register A, register B",
            "b) register B, register C",
            "c) register C, register D",
            "d) register D, register A"
        ],
        "Answer": "Answer: c\nExplanation: Register C and D are the read only registers in the DS12887 found at memory locations 0C-0DH."
    },
    {
        "id": 140,
        "Question": "In DS12887, when the external source is turned-off, how does DS12887 get power to retain its data?",
        "Options": [
            "a) Internal Lithium Battery",
            "b) Internal Lead Battery",
            "c) Additional external Alkaline Battery",
            "d) Additional external Lithium Battery"
        ],
        "Answer": "Answer: a\nExplanation: When Vcc falls below 3V or external voltage source is switched-off, internal lithium battery provides power to DS12887. And this will prevent loss of data."
    },
    {
        "id": 141,
        "Question": "What is the principle on which electromagnetic relays operate?",
        "Options": [
            "a) electromagnetic induction",
            "b) motor control",
            "c) switching",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Electromagnetic relays work on the principle of electromagnetic induction. It is used as a switch in industrial controls, automobile and appliances. It allows the isolation of the sections of a system with two different voltage sources.\n"
    },
    {
        "id": 142,
        "Question": "What are DPDT relays?",
        "Options": [
            "a) Single pole, single throw",
            "b) Single pole, double throw",
            "c) Double pole, double throw",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In DPDT relay, there are two poles and two throws (i.e.contacts). For each pole there are two contacts i.e. normally open (NO) and normally closed (NC). The contacts can be NO or NC. Generally, contact is NC when the coil is not energized. When the coil is energized both poles become NC.\n"
    },
    {
        "id": 143,
        "Question": "Why do we need a ULN2803 in driving a relay?",
        "Options": [
            "a) for switching a motor",
            "b) for increasing the current",
            "c) for increasing the power",
            "d) for switching the voltage"
        ],
        "Answer": "Answer: b\nExplanation: We need a ULN2803 for driving a relay because the relay coil requires 10mA or more current to be energized. If microcontroller pins are not able to provide sufficient current to drive relays then we need ULN2803 for driving relays.\n"
    },
    {
        "id": 144,
        "Question": "Why are solid-state relays advantageous over electromechanical relays?",
        "Options": [
            "a) they need zero voltage circuit",
            "b) they need less current to be energised",
            "c) they need less voltage to be energised",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Solid-state relays are advantageous over electromechanical relays because their switching response time is much faster than electromechanical relays as solid-state relays are made-up of semiconductor materials. Also, solid-state relays required low input current for operation and small packaging make them ideal for microcontrollers.\n"
    },
    {
        "id": 145,
        "Question": "What are optoisolators?",
        "Options": [
            "a) it is a driver",
            "b) it is a thing isolated from the entire world",
            "c) it is a device that can be used as an electromagnetic relay without a driver",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Optoisolators are devices that can be used as an electromagnetic relay without a driver. It usually consists of a led (transmitter) and a photoresistive receiver."
    },
    {
        "id": 146,
        "Question": "How can we control the speed of a stepper motor?",
        "Options": [
            "a) by controlling its switching rate",
            "b) by controlling its torque",
            "c) by controlling its wave drive 4 step sequence",
            "d) cant be controlled"
        ],
        "Answer": "Answer: a\nExplanation: Speed of a stepper motor can be controlled by changing its switching speed or by changing the length of the time delay loop."
    },
    {
        "id": 147,
        "Question": "Which of the following can be a unit for torque?",
        "Options": [
            "a) kg/m2",
            "b) ounce-inch",
            "c) kg-m3",
            "d) g/m"
        ],
        "Answer": "Answer: b\nExplanation: Torque is equal to the force applied at a particular distance. So its unit can be ounce-inch."
    },
    {
        "id": 148,
        "Question": "The RPM rating given for the DC motor is for?",
        "Options": [
            "a) no-loaded",
            "b) loaded",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: RPM rating given for a DC motor is for a no-loaded condition."
    },
    {
        "id": 149,
        "Question": "How can we change the speed of a DC motor using PWM?",
        "Options": [
            "a) By changing amplitude of PWM",
            "b) By keeping fixed duty cycle",
            "c) By changing duty cycle of PWM",
            "d) By increasing power of PWM"
        ],
        "Answer": "Answer: c\nExplanation: We can change the speed of a DC motor using PWM by changing the duty cycle of PWM. Changing duty cycle means changing ON and OFF timing of PWM. Even if amplitude of PWM is fixed by increasing the ON time of PWM increases the speed of the DC motor.\n"
    },
    {
        "id": 150,
        "Question": "How can the direction of the DC motor be changed?",
        "Options": [
            "a) by changing the torque",
            "b) by changing the switching speed",
            "c) by changing the polarity of voltages connected to the leads",
            "d) by changing the RPM rating"
        ],
        "Answer": "Answer: c\nExplanation: The direction of the DC motor can be changed by changing the polarity of the voltages connected to its leads."
    },
    {
        "id": 151,
        "Question": "Is the following instruction correct LDI R3,50?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) Cant be said",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: If LDI Rd,k is written then the range of Rd varies from R16-R31, as R3 is less than R16 so this instruction will generate an error."
    },
    {
        "id": 152,
        "Question": "Registers R0-R31 are used for what type of works?",
        "Options": [
            "a) they are used for arithmetic and logic instructions",
            "b) they are used for data copy",
            "c) they are used for calculations",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: GPRs are used for implementing arithmetic and logic instructions in the controller. They do the same work as the accumulator does in the other microcontrollers and microprocessors."
    },
    {
        "id": 153,
        "Question": "The largest value that can be loaded in an 8 bit register is?",
        "Options": [
            "a) 11111111H",
            "b) FH",
            "c) FFH",
            "d) 00H"
        ],
        "Answer": "Answer: c\nExplanation: The largest value that can be loaded in an 8 bit register is 11111111b or FFH."
    },
    {
        "id": 154,
        "Question": "The total space for the data memory available in the AVR based microcontroller is?",
        "Options": [
            "a) FFH",
            "b) FFFH",
            "c) FFFFH",
            "d) FFFFFH"
        ],
        "Answer": "Answer: c\nExplanation: The maximum value that can be loaded in the code memory of an AVR based microcontroller is FFFFH."
    },
    {
        "id": 155,
        "Question": "Which of the following instructions affect the flags of the status register?",
        "Options": [
            "a) AND",
            "b) INC",
            "c) OR",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: AND, INC, OR could affect status register flags. All arithmetic and logical instructions affect status register flags except SER Rd instruction. SER Rd is used to SEt Register i.e. after the execution of this instruction Rd loaded with FFH value and no flag is affected."
    },
    {
        "id": 156,
        "Question": "Which out of the following is not a directive?",
        "Options": [
            "a) .EQU",
            "b) .DEVICE",
            "c) .ORG",
            "d) .LDI"
        ],
        "Answer": "Answer: d\nExplanation: Both the above commands are the same. They both are used for assigning the hexadecimal values to the registers."
    },
    {
        "id": 157,
        "Question": "Is an assembly language a high level language?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) Can’t be said",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: .EQU, .DEVICE, .ORG all are the directives to the assembler whereas LDI is a command."
    },
    {
        "id": 158,
        "Question": "A 14-bit program counter can access __________ bytes of memory locations.",
        "Options": [
            "a) 4K",
            "b) 8K",
            "c) 16K",
            "d) 64K"
        ],
        "Answer": "Answer: b\nExplanation: Assembly language is not high level language rather it is low level language because it deals directly with the internal structure of CPU. To program in assembly, the internal structure of the CPU must be known. Whereas in high level programming languages programmers don’t bother about the internal structure of the CPU because this is done by the compiler.\n"
    },
    {
        "id": 159,
        "Question": "When AVR wakes up, then the value of PC becomes?",
        "Options": [
            "a) 00H",
            "b) 000H",
            "c) 0000H",
            "d) 00000H"
        ],
        "Answer": "Answer: c\nExplanation: A 14-bit program counter can access 214 bytes of memory locations i.e. 16k bytes.\nCalculation:\n214 = 24 x 210\n         = 16K (210 = 1024 or 1K).\n"
    },
    {
        "id": 160,
        "Question": "Which of the following is correct about BRNE instruction in avr microcontrollers?",
        "Options": [
            "a) it is used to compare two registers",
            "b) it is used to compare two values",
            "c) it is used to check the zero flag",
            "d) it is used to jump to the given mentioned label when the zero flag accounts to 0"
        ],
        "Answer": "Answer: d\nExplanation: BRNE label instruction is used to jump to that particular address denoted by label if condition (Z=0) is true or satisfied. If the condition is not satisfied then it will execute the next immediate instruction."
    },
    {
        "id": 161,
        "Options": [
            "a) 10",
            "b) 70",
            "c) 700",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: As the R21 register is loaded with 70, so to make it zero it needs to be decremented 70 times then only the OUT instruction will be executed so this loop repeats 70 times."
    },
    {
        "id": 162,
        "Question": "Which of the below mentioned are not the conditional jumps?",
        "Options": [
            "a) BRLO",
            "b) BRMI",
            "c) BRVC",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: BRLO is used to branch if C=1, BRMI is used when N=1 and BRVC are used when V=0, so all are the conditional jumps."
    },
    {
        "id": 163,
        "Question": "What is the relation between the target and the relative address?",
        "Options": [
            "a) target address= PC address + relative address",
            "b) target address= relation address*2",
            "c) relative address= PC address + target address",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Target address can be calculated by calculating the sum of the address of the program counter and the relative address."
    },
    {
        "id": 164,
        "Question": "In the JMP instruction, how many bits are there for determining the target address?",
        "Options": [
            "a) 16",
            "b) 32",
            "c) 22",
            "d) 10"
        ],
        "Answer": "Answer: c\nExplanation: In the JMP instruction of 4 bytes space, 22 bits are there for determining the target address and the other 10 are for the op code verification."
    },
    {
        "id": 165,
        "Question": "Which of the following statements are correct?",
        "Options": [
            "a) relative address of RJMP instruction varies from 000-fffH",
            "b) target address of JMP instruction varies from 000000-3fffffH",
            "c) IJMP instruction jumps to that address that points to by the Z register",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The relative address of the RJMP instruction varies from 000-fffH. The target address of the JMP instruction varies from 000000-3fffffH. IJMP instruction is used to jump at that particular address pointed to by the Z register. So all are the correct statements."
    },
    {
        "id": 166,
        "Question": "Which of the following is used to represent the last RAM address?",
        "Options": [
            "a) MEM",
            "b) LASTRAM",
            "c) RAMEND",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: RAMEND is a micro used to represent the last RAM address. In AVR, Stack Pointer is initialized on top of the stack i.e. last address of RAM.\n"
    },
    {
        "id": 167,
        "Question": "Which of the following statements are correct about the RCALL instruction?",
        "Options": [
            "a) it is a 2 byte instruction",
            "b) it is a 4 byte instruction",
            "c) it is a 16 byte instruction",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: RCALL instruction is used to go to the target address in the memory from -2048 to 2047."
    },
    {
        "id": 168,
        "Question": "On power on SP points to the address?",
        "Options": [
            "a) ffffH",
            "b) fffH",
            "c) 00h",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: On power on SP register points to the 00H address."
    },
    {
        "id": 169,
        "Question": "Which of the following statements is true?",
        "Options": [
            "a) CALL instruction is used to transfer control anywhere in the 4M memory space",
            "b) PUSH instruction is used to take out the value from the stack into some register",
            "c) POP instruction is used to jump to any location",
            "d) RCALL is a 4 byte instruction"
        ],
        "Answer": "Answer: a\nExplanation: CALL instruction is used to transfer control anywhere in the 4M memory space available in the AVR."
    },
    {
        "id": 170,
        "Question": "In AVR, which registers are there for the I/O programming of ports?",
        "Options": [
            "a) PORT",
            "b) PIN",
            "c) DDR",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: For I/O programming of the ports in AVR microcontrollers, there are basically three main registers. They are PORT, PIN, DDR, so all of the mentioned is the right option."
    },
    {
        "id": 171,
        "Question": "The data will not go from the port registers to the pin unless:",
        "Options": [
            "a) DDR register of that port is set to 0",
            "b) PORT register of that port is set to 1",
            "c) DDR register of that port is set to 1",
            "d) PORT register of that port is set to 0"
        ],
        "Answer": "Answer: c\nExplanation: The data will not go from the port registers to the pin unless the DDR register of that port is set to 1 because by doing this we make that port an output port after which data can be taken from the PORT registers to the pin."
    },
    {
        "id": 172,
        "Question": "On reset DDR registers of all ports are set to:",
        "Options": [
            "a) 0",
            "b) 1",
            "c) None of the mentioned",
            "d) 0 & 1"
        ],
        "Answer": "Answer: a\nExplanation: On reset, the DDR registers of all the ports are set to 0 which means that the by default all ports are set as input ports."
    },
    {
        "id": 173,
        "Question": "Which of the following statements are correct?",
        "Options": [
            "a) PIN register of a port is used to bring data into CPU from pins",
            "b) PORT register is used to send data out to pins",
            "c) DDR register is used to control the direction of a port",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: There are three registers that are related to a port. They are PIN, PORT, DDR. PIN register is used to bring data into CPU from pins, PORT register is used to send data to pins and DDR register is used to control the direction of the data transfer. So all are the right options."
    },
    {
        "id": 174,
        "Question": "In the AVR family, all I/O ports have 8 pins?",
        "Options": [
            "a) true",
            "b) false",
            "c) none of the mentioned",
            "d) can’t be determined"
        ],
        "Answer": "Answer: b\nExplanation: In the AVR family, all I/O ports don’t have 8 pins. Number of I/O pins depends on the total number of pins of the controller. Eg. ATtinyxx is an 8 pin controller and it has 6 I/O pins.\n"
    },
    {
        "id": 175,
        "Question": "Which of the following is not a single bit instruction in AVR?",
        "Options": [
            "a) SBI",
            "b) PORT",
            "c) CBI",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: PORT is not an instruction. It is the name of a register in AVR.\n"
    },
    {
        "id": 176,
        "Question": "Which of the following is correct about the SBIS instruction?",
        "Options": [
            "a) it is used to monitor status of bit in I/O register",
            "b) it is a byte oriented instruction",
            "c) It is a 4 byte instruction",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: SBIS (Skip if Bit in I/O register Set) is used to check status of bit in I/O register. If the bit mentioned in the instruction is SET or HIGH then the controller will skip the immediate next instruction."
    },
    {
        "id": 177,
        "Question": "Instruction CBI PORTB,1 means",
        "Options": [
            "a) clearing the PORTB register",
            "b) clearing the first bit of the PORTB register",
            "c) setting the PORTB register",
            "d) setting the first bit of the PORTB register"
        ],
        "Answer": "Answer: b\nExplanation: CBI PORTB, 1 means to clear the first bit of the PORTB register. It is a bit oriented instruction."
    },
    {
        "id": 178,
        "Question": "Which of the following instruction can be used to toggle a bit of the PORT?",
        "Options": [
            "a) SBI",
            "b) CBI",
            "c) SBI & CBI",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: If SBI and CBI are used together, then they can be used to toggle a bit of a port successfully."
    },
    {
        "id": 179,
        "Question": "What is the main function of the SBIC instruction?",
        "Options": [
            "a) it is used to clear a particular bit of a port",
            "b) it is used to jump unconditionally",
            "c) it is used to skip the instruction if a particular bit of a port is zero",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SBIC (Skip if Bit in I/O register Clear) is used to check status of bit in I/O register. If the bit mentioned in the instruction is CLEAR or LOW then the controller will skip the immediate next instruction.\n"
    },
    {
        "id": 180,
        "Question": "In AVR microcontrollers, ADD instruction affects the status of which of the following bits of a status register?",
        "Options": [
            "a) Z",
            "b) C",
            "c) N",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: ADD instruction affects the status of Z, C, N, V, H and S bits of a status register."
    },
    {
        "id": 181,
        "Question": "ADC instruction is used for?",
        "Options": [
            "a) addition of two 16 bit numbers",
            "b) analog to digital conversion",
            "c) automatic digital control",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: ADC instruction can be used for addition of two 16 bit numbers as here two 8 bit numbers are added simultaneously along with the carry coming from the previous 8 bits. So it can be used for the addition of two 16 bit numbers."
    },
    {
        "id": 182,
        "Question": "AVR supports which of the following mentioned subtraction instructions?",
        "Options": [
            "a) SUB",
            "b) SBC",
            "c) SUBI",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: AVR supports five types of subtraction instructions. They are SUB, SBC, SUBI, SBCI, SBIW."
    },
    {
        "id": 183,
        "Question": "What steps are involved when we subtract two numbers present at two different locations?",
        "Options": [
            "a) take the two’s complement of the subtrahend",
            "b) add it to the minuend",
            "c) invert the carry",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: When we need to subtract two numbers present at two different locations then firstly we need to take the 2’s complement of the subtrahend, then we add it with the minuend and then when we invert the carry then the complete procedure of the subtraction is completed."
    },
    {
        "id": 184,
        "Question": "In executing subtraction based instructions, state the role of the C flag?",
        "Options": [
            "a) if C=1, the result is negative",
            "b) if C=1, the result is positive",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: If the C flag comes out to be 1, then the result is assumed to be negative and vice versa."
    },
    {
        "id": 185,
        "Question": "Which of the following is correct about the MUL instruction?",
        "Options": [
            "a) it is a byte-by-byte multiplication instruction",
            "b) the product is stored in two registers R1 and R0",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: MUL instruction is a byte-by-byte multiplication instruction whose result is stored in two registers R1 and R0."
    },
    {
        "id": 186,
        "Question": "In AVR, when is the V flag set?",
        "Options": [
            "a) there is a carry from D7 bit",
            "b) there is a carry from D6 to D7 bit",
            "c) when carry is generated only from D6 to D7 or carry is generated only from D7",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In AVR, V i.e. Overflow flag is set when carry is generated only from D6 to D7 or carry is generated only from D7. Overflow flag is used to detect errors in signed arithmetic operations."
    },
    {
        "id": 187,
        "Question": "To set the bits of a register R1 to 1, we must OR the contents of the register with?",
        "Options": [
            "a) 00H",
            "b) 11H",
            "c) FFH",
            "d) 0FH"
        ],
        "Answer": "Answer: c\nExplanation: To make the contents of the register R1 to 1 we must OR the contents of that register with FFH because according to Or algorithm 0+1=1 and 1+0=1."
    },
    {
        "id": 188,
        "Question": "CP instruction alters the value of the register?",
        "Options": [
            "a) true",
            "b) false",
            "c) none of the mentioned",
            "d) can’t be said"
        ],
        "Answer": "Answer: b\nExplanation: CP command is used to compare the contents of the two registers. It doesn’t actually alter the value of the register."
    },
    {
        "id": 189,
        "Question": "What is right about the ROR instruction?",
        "Options": [
            "a) it rotates the contents of the register left to right",
            "b) it rotates the contents of the register from right to left",
            "c) it rotates the contents of the register from left to right through carry",
            "d) it rotates the contents of the register from right to left through carry"
        ],
        "Answer": "Answer: c\nExplanation: ROR instruction is used to rotate the contents of the register from left to right through carry."
    },
    {
        "id": 190,
        "Question": "In AVR, which of the following registers are not used for programming timers?",
        "Options": [
            "a) TCNT",
            "b) TCON",
            "c) TIFR",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: In the timer programming of an AVR microcontroller, mainly used registers are TCNTn that stores the values of the count. TCCRn that is used to assign the mode of operation of a timer and TIFR that stores the status of various flags of the timers. Two more registers are used they are OCRn and OCFn. They are used for comparison with the count register."
    },
    {
        "id": 191,
        "Question": "What is the use of the prescalar in the operation of the timer?",
        "Options": [
            "a) for fast calculations",
            "b) for increasing the time delay given by the timer by decreasing its frequency of operation",
            "c) for removing the concept the reloading of count",
            "d) for easy counter operations"
        ],
        "Answer": "Answer: b\nExplanation: Prescalars are used in the operation of the timers because they generally increase the time delay generation by decreasing the frequency of its operation."
    },
    {
        "id": 192,
        "Question": "What modes are generally used in the operation of the timer0?",
        "Options": [
            "a) Normal mode",
            "b) CTC mode",
            "c) PWM mode",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation:  Modes of a timer are decided by the WGM00 and WGM01 bit of the TCCR0 register and for timer0 these modes are normal mode, CTC mode, pwm mode and the fast pwm mode."
    },
    {
        "id": 193,
        "Question": "Timer 0 can act as a counter ____________",
        "Options": [
            "a) if the CS02-CS00 are 110 or 111",
            "b) if the FOC0 bit is set to 110",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Timer0 can act as a counter if the CS02-CS00 bits are from 110-111."
    },
    {
        "id": 194,
        "Question": "Which of the timer can operate in the 16 bit condition?",
        "Options": [
            "a) timer0",
            "b) timer1",
            "c) timer2",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Timer0 and Timer2 can operate in the 8 bit condition while only Timer 1 operates in the 16 bit condition."
    },
    {
        "id": 195,
        "Question": "Which of the following will generate the maximum time delay?",
        "Options": [
            "a) f/2",
            "b) f/4",
            "c) f/16",
            "d) f/32"
        ],
        "Answer": "Answer: d\nExplanation: f/32 has the lowest frequency as it is divided by the maximum value of the constant, so as time and frequency are inversely related to each other so this will generate the maximum amount of machine cycle which will as a result generate the greatest delay."
    },
    {
        "id": 196,
        "Question": "What is the difference in the operation of a normal and a CTC mode of a timer?",
        "Options": [
            "a) in CTC mode PWM is used",
            "b) here serial timer is monitored",
            "c) in CTC mode, timer counts up until contents of TCNT register becomes equal to the contents of OCR",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In CTC mode, timer counts up until the contents of TCNT register becomes equal to the contents of OCR; then the timer will be cleared and the OCF0 flag will be set when the next clock occurs. In Normal mode, timer counts until max i.e. 0xFFH. When it rolls over from 0xFFH to 0x00H, it sets TOV(Timer Overflow)."
    },
    {
        "id": 197,
        "Question": "We can count the pulses on the positive or the negative edge triggered pulse of the clock?",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t be determined",
            "d) depends on the circumstances"
        ],
        "Answer": "Answer: a\nExplanation: A counter can count pulses on the positive or the negative edge of the clock."
    },
    {
        "id": 198,
        "Question": "Which pin is used for the input clock of the counter0?",
        "Options": [
            "a) PORTB.0",
            "b) PORTB.1",
            "c) PORTB.2",
            "d) PORTB.3"
        ],
        "Answer": "Answer: a\nExplanation: In ATmega32/16, T0 is the alternative function of PORTB.0. T0 is Timer/Counter 0 External Clock Input."
    },
    {
        "id": 199,
        "Question": "Which resource provides the clock pulse to AVR timers if CS02-00=6?",
        "Options": [
            "a) internal clock of the AVR",
            "b) external clock of the AVR",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The External clock is used for providing the pulse to the AVR timers if CS02-00=6."
    },
    {
        "id": 200,
        "Question": "On reset, what are the contents of the SREG register?",
        "Options": [
            "a) 00h",
            "b) ffh",
            "c) 1fh",
            "d) 11h"
        ],
        "Answer": "Answer: a\nExplanation: On reset, all the interrupts are masked and so the contents of the SREG register is also set to zero as it shows the status of the flags."
    },
    {
        "id": 201,
        "Question": "TIMSK register is used for?",
        "Options": [
            "a) knowing the status of the timer count",
            "b) used for masking the interrupts flags of the Timer0, Timer1 and Timer2",
            "c) it is used for enabling all the timer interrupts",
            "d) it is used for resetting the value of the interrupts"
        ],
        "Answer": "Answer: b\nExplanation: TIMSK is used for masking the interrupt flags of the timers. They mask the bits of the timer flags if the D7 bit of the SREG register is set to 1 or when firstly all interrupts are enabled."
    },
    {
        "id": 202,
        "Question": "Why RETI instruction be the last instruction of ISR?",
        "Options": [
            "a) because it returns with carry",
            "b) because it returns to the main program with all the flags of the SREG raised",
            "c) because it returns to the main program where interrupt is generated and set the global interrupt enable bit in SREG",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: When an interrupt occurs, the global interrupt enable bit is cleared. If global interrupt enable is cleared it means interrupts are disabled. RETI instruction must last instruction of ISR because it returns to the main program where interrupt is generated and sets the global interrupt enable bit in SREG.\n"
    },
    {
        "id": 203,
        "Question": "In AVR what is the ISR address for an external hardware interrupt?",
        "Options": [
            "a) 0002h",
            "b) 0004h",
            "c) 0006h",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The ISR addresses for the external hardware interrupts are 0002h, 0004h, 0006h."
    },
    {
        "id": 204,
        "Question": "What is the address in the interrupt service routine assigned for the timer0 overflow flag?",
        "Options": [
            "a) 0012h",
            "b) 000Ah",
            "c) 0016h",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: 0016h is the address in the interrupt service routine assigned for the timer0 overflow flag."
    },
    {
        "id": 205,
        "Question": "Is the same address is assigned for the timer0 and timer1 overflow flag in the interrupt vector table of the interrupts?",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t be determined",
            "d) depends on the situation"
        ],
        "Answer": "Answer: b\nExplanation: Different addresses are assigned for Timer0 and Timer1 overflow flags in the interrupt vector table. They are 0016h and 0012h for timer0 and timer1 respectively."
    },
    {
        "id": 206,
        "Question": "External hardware interrupts are assigned to which pins of the atmega32?",
        "Options": [
            "a) PORTD.2",
            "b) PORTD.3",
            "c) PORTB.2",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: There are three external hardware interrupts in the atmega32 microcontrollers. They are assigned to bits PORTD.2, PORTD.3 and PORTB.2."
    },
    {
        "id": 207,
        "Question": "Which register is responsible for handling all the external hardware interrupts?",
        "Options": [
            "a) TIMSK",
            "b) GICR",
            "c) MCUCR",
            "d) IVCE"
        ],
        "Answer": "Answer: b\nExplanation: GICR register is responsible for all the external hardware interrupts in the AVR."
    },
    {
        "id": 208,
        "Question": "By default, INT0-INT2 interrupts are?",
        "Options": [
            "a) edge triggered",
            "b) level triggered",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: By default, INT0-INT2 are the level triggered pulses. The low level of the pulse generates the interrupt."
    },
    {
        "id": 209,
        "Question": "What will happen in that condition, if an interrupt occurs while the microcontroller is serving any other interrupt?",
        "Options": [
            "a) both the interrupts will be handled simultaneously",
            "b) the interrupt which is being done first will be served first",
            "c) the interrupt that is more priority in the interrupt vector table will be served first",
            "d) the interrupt having low priority in the interrupt vector table will be served first"
        ],
        "Answer": "Answer: c\nExplanation: If two or more interrupts occur simultaneously then the interrupt that is having more priority in the interrupt vector table will be served first."
    },
    {
        "id": 210,
        "Question": "What actually are the DB9, DB25 ports available in our computers?",
        "Options": [
            "a) they are connectors used to transfer data either serially or parallelly",
            "b) they are the RS232 connectors used to connect two incompatible devices",
            "c) they are the TTL logic connector pins used for communication",
            "d) they are just data transfer pins used to transfer the data"
        ],
        "Answer": "Answer: b\nExplanation: DB9 and the DB25 ports are the ports that are based on the RS232 logic that is basically used for communicating two incompatible devices."
    },
    {
        "id": 211,
        "Question": "What does RI handshaking signal refer to according to the RS232 logic?",
        "Options": [
            "a) if this logic is high then a receive interrupt is generated",
            "b) this pin is high during transmission",
            "c) this pin is high during a reception in order to tell that the device is busy at this particular time",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: RI pin of the RS232 logic tells us about the ring indicator i.e it sends a busy signal if the device is currently receiving any data."
    },
    {
        "id": 212,
        "Question": "What is the major difference between a MAX232 and a MAX233 device?",
        "Options": [
            "a) one has one serial port other has two",
            "b) one has inbuilt UART other doesn’t have that",
            "c) one needs some additional circuitry to operate while the other doesn’t have that",
            "d) one is used just for transmission while the other is used for both transmission as well as reception"
        ],
        "Answer": "Answer: c\nExplanation: MAX232 needs some extra capacitors at pins like 1,2 and 3,4 while on the other hand MAX233 has that inbuilt capacitors built inside it only."
    },
    {
        "id": 213,
        "Question": "Which of the following is correct about the baud rate during serial transmission?",
        "Options": [
            "a) it tells us about the speed at which the transmission is going to place",
            "b) it tells us about the number of bits transferred during a second",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Baud Rate tells us about the speed in which the transmission is being done and this speed is measured in terms of bits per second."
    },
    {
        "id": 214,
        "Question": "With fosc=8 MHz, what will the count that has to filled in the UBRR register to account for the 9600 baud rate?",
        "Options": [
            "a) 67H",
            "b) CEH",
            "c) 33H",
            "d) 34H"
        ],
        "Answer": "Answer: c\nExplanation: The count that had to be filled in the UBRR register is calculated as (fosc/16(desired baud rate))-1."
    },
    {
        "id": 215,
        "Question": "The USART in AVR based microcontrollers operate at which of the following modes?",
        "Options": [
            "a) double speed asynchronous mode",
            "b) master synchronous",
            "c) slave synchronous",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The USART in AVR consists of the following modes. They are the normal asynchronous mode, double speed asynchronous mode, slave synchronous and the master synchronous mode."
    },
    {
        "id": 216,
        "Question": "Which bit of the UCSRA is used for doubling the baud rate of the transmission?",
        "Options": [
            "a) DOR",
            "b) PE",
            "c) U2X",
            "d) MPCM"
        ],
        "Answer": "Answer: c\nExplanation: U2X bit of the UCSRA is used for doubling the baud rate of the transmission."
    },
    {
        "id": 217,
        "Question": "What is the use of the PE and the FE bits of the UCSRA register?",
        "Options": [
            "a) they are used for keeping a check at the speed of transmission and reception",
            "b) they are used for keeping a check at the data bits to be transferred",
            "c) they are used to keep the transmission error free",
            "d) they are used as extra redundant bits with no use"
        ],
        "Answer": "Answer: c\nExplanation: PE and the FE bits of the UCSRA register are used for error checking in the transmission."
    },
    {
        "id": 218,
        "Question": "Which of the following bits are used for setting the data frame size?",
        "Options": [
            "a) UCSZ0",
            "b) U2X",
            "c) DOR",
            "d) MPCM"
        ],
        "Answer": "Answer: a\nExplanation: UCSZ0 and UCSZ1 bits of the UCSRB register and the UCSZ2 bit of the UCSRC register are used for setting the data frame size in AVR based microcontrollers."
    },
    {
        "id": 219,
        "Question": "Which of the following parameters should the transmitter and the receiver agree upon before starting a serial transmission?",
        "Options": [
            "a) baud rate",
            "b) frame size",
            "c) stop bit",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Before starting the serial transmission, the following parameters should be taken care of. They are the baud rate, frame size, stop bit and the parity bit."
    },
    {
        "id": 220,
        "Question": "In AVR, the LCD operates in two main modes, it can be in 8 bit or 4 bit data.",
        "Options": [
            "a) true",
            "b) false",
            "c) depends on the situation",
            "d) can’t be said"
        ],
        "Answer": "Answer: a\nExplanation: In AVR, the LCD operates in two main modes, they are in the 8 bit data transfer mode and the 4 bit data transfer mode."
    },
    {
        "id": 221,
        "Question": "What can be the sequence of commands that may be used for initializing an LCD?",
        "Options": [
            "a) 0x06, 0x0e, 0x01",
            "b) 0x0e, 0x01, 0x80",
            "c) 0x38, 0x0e, 0x01",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: For initializing an LCD, we can use commands like 0x38 for selecting the 5*7 matrix, 0x0e for display on and the cursor blinking and 0x01 for clearing the screen."
    },
    {
        "id": 222,
        "Question": "When the LCD operates in the 4 bit mode, then what more commands are added to it?",
        "Options": [
            "a) 33",
            "b) 32",
            "c) 28",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: When an LCD operates in the 4 bit mode than 33, 32, 28 in hex are sent to it. They represent 3, 3, 3, 2 nibbles which tell the LCD to do into the 4 bit mode for saving the i/o pins of the port. "
    },
    {
        "id": 223,
        "Question": "What is the main function of the LPM instruction used in LCD?",
        "Options": [
            "a) for initializing the LCD in the read mode",
            "b) for initializing the LCD in the write mode",
            "c) for sending a long string of characters to the LCD",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: LPM instruction is used for sending a long string of characters to the LCD."
    },
    {
        "id": 224,
        "Question": "The RS pin acts as an",
        "Options": [
            "a) input pin",
            "b) output pin",
            "c) any of the mentioned depending on the conditions",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The RS pin of the LCD is used for selecting a particular register used for sending a command or the data to the LCD."
    },
    {
        "id": 225,
        "Question": "To latch in information at the data pins of the LCD, we send",
        "Options": [
            "a) H-L pulse at the E pin",
            "b) L-H pulse at the E pin",
            "c) A constant H pulse at the E pin",
            "d) A constant L pulse at the E pin"
        ],
        "Answer": "Answer: a\nExplanation: For latching in information at the data pins of the LCD, we send a H-L pulse at the LCD."
    },
    {
        "id": 226,
        "Question": "What is the function of the 0x06 command?",
        "Options": [
            "a) to clear the LCD",
            "b) to blink the cursor",
            "c) to shift the cursor to the right",
            "d) for selecting the matrix"
        ],
        "Answer": "Answer: c\nExplanation: 0x06 command is used for shifting the cursor to the right after every data send to it."
    },
    {
        "id": 227,
        "Question": "What is the address of the second column and the second row of the 2*20 LCD?",
        "Options": [
            "a) 0x80",
            "b) 0x81",
            "c) 0xc0",
            "d) 0xc1"
        ],
        "Answer": "Answer: d\nExplanation: 0xc0 acts as the address for selecting the second row and the first column of the LCD, so according to it if we need to select the second row and the second column of the LCD, then the address should be 0xc1."
    },
    {
        "id": 228,
        "Question": "Which of the following commands takes more than 100 microseconds to run?",
        "Options": [
            "a) shift cursor left",
            "b) shift cursor right",
            "c) set address location of the DDRAM",
            "d) clear screen"
        ],
        "Answer": "Answer: d\nExplanation: Clear screen is a command that takes more than 100 microseconds to run."
    },
    {
        "id": 229,
        "Question": "For selecting the data pins in an LCD, RS pin should be",
        "Options": [
            "a) 1",
            "b) 0",
            "c) F",
            "d) 10"
        ],
        "Answer": "Answer: a\nExplanation: For selecting the data pins of the LCD, the RS pin of the LCD should be set to 1."
    },
    {
        "id": 230,
        "Question": "In reading the columns of a keyboard matrix, when no key is pressed then all the pins show?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) F",
            "d) 7"
        ],
        "Answer": "Answer: b\nExplanation: When no key is pressed, in a keyboard then all the pins will read 1 as they all are connected to the main power supply."
    },
    {
        "id": 231,
        "Question": "To see if any key is pressed, all rows are grounded.",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: To see that whether any key is pressed or not then all the rows are grounded so that columns can be read to deliver the better results."
    },
    {
        "id": 232,
        "Question": "Identify the row and the column for the following case when for the row D3-D0= 1110 and for the column D3-D0= 1101",
        "Options": [
            "a) first row and second column",
            "b) first row and third column",
            "c) second row and first column",
            "d) second row and second column"
        ],
        "Answer": "Answer: a\nExplanation: To identify the key that is pressed from this particular combination, we obtain that the key belongs to the first row and the second column as the D0 bit of the row port and the D1 bit of the column port are zero."
    },
    {
        "id": 233,
        "Question": "What are the actual steps that are followed in identifying any key that is being pressed?",
        "Options": [
            "a) wait for the debounce time",
            "b) identify the key that is pressed",
            "c) initially no key should be pressed",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In order to identify that which key is actually pressed form a particular format of a 3*3 matrix keyboard, we firstly ensure all initially all the keys are open, then we press a key and check that whether the key is actually pressed or not by waiting for a time span of 20mseconds, after this we identify the key that is pressed by masking the bits of the port. In this particular format, we can identify the key that is actually pressed."
    },
    {
        "id": 234,
        "Question": "To identify that the key is present in which row and the column",
        "Options": [
            "a) we ground the bits of the row one by one",
            "b) we ground the bits of the column one by one",
            "c) we connect the bits of the row to the logic level 1 one by one",
            "d) we can connect the columns to the logic level 1 one by one"
        ],
        "Answer": "Answer: a\nExplanation: To determine that the pressed key is in which row and column, we ground the rows one by one to determine the column by masking the bits separately."
    },
    {
        "id": 235,
        "Question": "The key detection and the key identification are two different procedures?",
        "Options": [
            "a) true",
            "b) false",
            "c) depends on the circumstances",
            "d) difficult to tell"
        ],
        "Answer": "Answer: a\nExplanation: The key detection and the key identification are the two different procedures, one is used to detect that whether any key is pressed or not and the other technique is used to find that the pressed key is located in which row and column."
    },
    {
        "id": 236,
        "Question": "If the pins of the keyboard are used as an interrupt, then these pins will cause an interrupt of what type?",
        "Options": [
            "a) External hardware interrupt",
            "b) Timer interrupt",
            "c) TI/RI interrupt",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: KCODE0<<1 means to rotate the contents of the KCODE0 register to the left after every loop."
    },
    {
        "id": 237,
        "Question": "What will happen if the two keys of the keyboard are pressed at a time?",
        "Options": [
            "a) both the keys will be displayed on the screen",
            "b) the key which is being actually pressed(for more then 20microseconds) will be displayed",
            "c) the key that is pressed first will be displayed",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The pins of the keyboard act as an external hardware interrupt as some external pulse is helping in generating this interrupt."
    },
    {
        "id": 238,
        "Question": "Why initially all keys are considered open before detecting the key pressed?",
        "Options": [
            "a) to make the task easy",
            "b) to remove the errors caused by other pressing keys during detection",
            "c) to remove the flow problems",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: If two or more keys are pressed at a time, then the key that will be pressed for more then 20 microseconds will be displayed on the screen."
    },
    {
        "id": 239,
        "Question": "Which of the following is correct about the word resolution in ADC DAC converters in AVR’s?",
        "Options": [
            "a) it is the smallest change that can be described by an ADC",
            "b) it is equal to Vref/2n (where n represents the number of bits)",
            "c) it is 0.076mV or 76uV for n=16 and Vref=5V",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Resolution is defined as the smallest change in the step size that is described by an ADC, it is equal to Vref/2n."
    },
    {
        "id": 240,
        "Question": "In an ADC, we can calculate the output voltage from the formula",
        "Options": [
            "a) Step size / Vin",
            "b) Step size * Vin",
            "c) Vin / step size",
            "d) Vref / step size"
        ],
        "Answer": "Answer: c\nExplanation: The output voltage can be calculated by using the formula Vin / step size."
    },
    {
        "id": 241,
        "Question": "ADC0848 is a ____________ bit converter?",
        "Options": [
            "a) 16",
            "b) 4",
            "c) 8",
            "d) 48"
        ],
        "Answer": "Answer: c\nExplanation: ADC0848 is a 8 bit converter."
    },
    {
        "id": 242,
        "Question": "Which of the following factors can affect the step size calculation?",
        "Options": [
            "a) number of bits",
            "b) input current",
            "c) output current",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: There are mainly two factors that can affect the step size calculation of an ADC converter, they are the number of bits and the Vref voltage."
    },
    {
        "id": 243,
        "Question": "MAX1112 is a _________ type of ADC converter?",
        "Options": [
            "a) parallel",
            "b) 12 bit",
            "c) serial",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: MAX1112 is a serial ADC converter, as it has only one pin for the data output."
    },
    {
        "id": 244,
        "Question": "Why do we connect a capacitor between the Vref and the Gnd pin?",
        "Options": [
            "a) to remove the leakage",
            "b) to ensure more current at that place",
            "c) to make more Vref",
            "d) to make Vref stable and also to increase the precision of the ADC"
        ],
        "Answer": "Answer: d\nExplanation: A capacitor is connected between the Vref and the Gnd pin in order to stabilize the Vref value and also to increase the precision of the ADc converter."
    },
    {
        "id": 245,
        "Question": "Which of the following are the registers that are used for controlling the ADC conversion in the AVR?",
        "Options": [
            "a) ADCSRA",
            "b) ADMUX",
            "c) SPIOR",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: For programming the ADC conversion in an AVR, we require the following registers. They are ADCSRA, ADMUX, SPIOR. There are two more registers used for handling the output data, they are ADCH and ADCL registers."
    },
    {
        "id": 246,
        "Question": "What is the internal Vref of an Atmega32 series?",
        "Options": [
            "a) 5V",
            "b) 3.3V",
            "c) 2.56V",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: 2.56V is the internal Vref selected for an Atmega32 series based microcontrollers."
    },
    {
        "id": 247,
        "Question": "The output of a DAC0808 is in the form of ____________",
        "Options": [
            "a) electrical pulse",
            "b) current",
            "c) voltage",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The output of a DAC0808 is in the form of a current."
    },
    {
        "id": 248,
        "Question": "In a DAC the input is ______ and the output is ______",
        "Options": [
            "a) analog, digital",
            "b) current, voltage",
            "c) digital, analog",
            "d) analog, current"
        ],
        "Answer": "Answer: c\nExplanation: In a DAC, the input is digital and the output is analog in nature."
    },
    {
        "id": 249,
        "Question": "Which of the following is correct about the word sensors?",
        "Options": [
            "a) that senses something",
            "b) it is a type of a transducer that converts one form of energy to another",
            "c) it can produce output in the form of electrical pulses, current or voltage",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Sensors are the devices that are used to sense a particular thing by converting one form of energy into another, this converted form can be in the form of some analog output, or in the form of current or the voltage as the case may be."
    },
    {
        "id": 250,
        "Question": "Why do we need to apply the concept of signal conditioning to a sensor?",
        "Options": [
            "a) in order to convert it into a desirable form of energy",
            "b) for testing",
            "c) for sensing something",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Signal Conditioning is the concept that is used for data acquisition of the signal. For measuring and analyzing this value at a practical stage, by converting it into a desirable form of energy."
    },
    {
        "id": 251,
        "Question": "Which of the following is correct about LM35 based sensors?",
        "Options": [
            "a) its output voltage is directly proportional to the Celsius scale",
            "b) its output voltage is directly proportional to the Fahrenheit scale",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: LM35 based sensors are those sensors whose output voltage is directly proportional to the Celsius scale."
    },
    {
        "id": 252,
        "Question": "What is the difference between the LM34 and the LM35 based sensors?",
        "Options": [
            "a) one requires external calibration while other does not",
            "b) one has output voltage proportional to the Celsius scale while others have to the Fahrenheit scale",
            "c) one is fast other is slow",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: LM35 has the output voltage proportional to the Celsius scale while the LM35 based sensors have output voltage proportional to the Fahrenheit scale."
    },
    {
        "id": 253,
        "Question": "Every transducer must be connected with the signal conditioning circuit?",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t say",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: For analyzing purposes, every transducer must be connected to a signal conditioning circuit in order to measure its value as a practical platform."
    },
    {
        "id": 254,
        "Question": "LM35 provides _______ V for each degree count?",
        "Options": [
            "a) 1",
            "b) 0.1",
            "c) 0.001",
            "d) 10"
        ],
        "Answer": "Answer: c\nExplanation: LM35 provides 10mV for every degree change of the Celsius scale."
    },
    {
        "id": 255,
        "Question": "Why for the 8 bit analog input we select Vref as the 2.56V?",
        "Options": [
            "a) to obtain each degree count as the 2.56V",
            "b) to get 2.56V at the output",
            "c) to obtain each degree count as the 10mV",
            "d) to get 10mV as the output"
        ],
        "Answer": "Answer: c\nExplanation: For an 8 bit analog input, each degree count is calculated as the Vref/256, so if Vref is selected as 2.56V then we can obtain 10mV for each degree count of the scale."
    },
    {
        "id": 256,
        "Question": "What is the temperature for LM35 sensor if the analog output is 0011 1001?",
        "Options": [
            "a) 3",
            "b) 9",
            "c) 57",
            "d) 41"
        ],
        "Answer": "Answer: c\nExplanation: The binary for the above output is 57, so in case of LM35 sensors we obtain the output as 57 C."
    },
    {
        "id": 257,
        "Question": "In an external hardware, there are how many pins available for the LM35 and the LM34 based sensors?",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 10",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: LM35 consists of mainly 3 pins, they are Vcc, Gnd, analog output."
    },
    {
        "id": 258,
        "Question": "Do LM34 and LM35 based sensors have linear output?",
        "Options": [
            "a) yes",
            "b) no",
            "c) depends on the conditions",
            "d) can’t say"
        ],
        "Answer": "Answer: a\nExplanation: LM34 and the LM35 based sensors are linearly proportional to their corresponding Fahrenheit and the Celsius scale, so they are linear by nature."
    },
    {
        "id": 259,
        "Question": "The 8255 is a ______ chip.",
        "Options": [
            "a) Input/Output",
            "b) Analog to Digital",
            "c) Digital to analog",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The 8255 is Input/Output (I/O) chip. It has three separate accessible ports. The 8255 chip is used to expand the I/O ports of microcontrollers."
    },
    {
        "id": 260,
        "Question": "Which pins of a microcontroller are directly connected with 8255?",
        "Options": [
            "a) RD",
            "b) WR",
            "c) D0-D7",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: RD, WR, D0-D7 all are directly connected to the 8051 for telling the chip about the control signals and also for transferring the data."
    },
    {
        "id": 261,
        "Question": "Find the control word for PA= out, PB= in, PCL=out, PCH=out (Mode0)?",
        "Options": [
            "a) 0x02H",
            "b) 0x82H",
            "c) 0x83H",
            "d) 0x03H"
        ],
        "Answer": "Answer: b\nExplanation: The value that is being loaded in the control word is 10000010b for PB as an input port and all others as the output ports being operated in mode0. The hex equivalent of 10000010b → 0x82H.\n"
    },
    {
        "id": 262,
        "Question": "Which pins are used to select the ports and the control register?",
        "Options": [
            "a) CS",
            "b) A1",
            "c) A0",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: CS pin is an active low input pin for 8255 and it is used for selecting a chip. A0 and A1 pins are used for select ports and the control register. "
    },
    {
        "id": 263,
        "Question": "What is the value of the control register when RESET button is set to zero?",
        "Options": [
            "a) 0x00H",
            "b) 0xFFH",
            "c) 0x11H",
            "d) value remains the same"
        ],
        "Answer": "Answer: d\nExplanation: RESET is active-high signal input into the 8255 used to clear the control register. When RESET is activated (i.e. set to high), all ports are initialized as input mode. Hence the value of the control register remains the same as it is even when the RESET button is set to zero."
    },
    {
        "id": 264,
        "Question": "Why MOVX instruction is being used to access the ports of the 8255?",
        "Options": [
            "a) because 8255 is connecting a microcontroller in memory mapped I/O configuration",
            "b) because 8255 is used to access the external communication",
            "c) because 8255 is used to access the data transfer",
            "d) because 8255 is used to access the interfacing of LCD, motor etc"
        ],
        "Answer": "Answer: a\nExplanation: As 8255 is connecting a microcontroller in memory mapped I/O configuration. This means that memory space used to access 8255 (i.e. 8255 is treated as external memory). MOVX instruction is used to access external memory locations."
    },
    {
        "id": 265,
        "Question": "What is correct about the BSR mode from below?",
        "Options": [
            "a) In BSR mode, only the individual bits of PORT A can be programmed",
            "b) In BSR mode, only the individual bits of PORT B can be programmed",
            "c) In BSR mode, only the individual bits of PORT C can be programmed",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: BSR (Bit Set/Rest) mode is used to program individual bits of PORT C only.\n"
    },
    {
        "id": 266,
        "Question": "How many pins of the 8255 can be used as the I/O ports?",
        "Options": [
            "a) 8",
            "b) 16",
            "c) 24",
            "d) 32"
        ],
        "Answer": "Answer: c\nExplanation: They are 3 ports available in the 8255 so 24 pins are available for the I/O ports pins."
    },
    {
        "id": 267,
        "Question": "8255 is a ____ pin IC.",
        "Options": [
            "a) 16",
            "b) 8",
            "c) 40",
            "d) 60"
        ],
        "Answer": "Answer: c\nExplanation: 8255 is a 40 pin IC."
    },
    {
        "id": 268,
        "Question": "8255 has handshaking capability?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: 8255 is a device that with the help of its handshaking property gets interfaced with any microcontroller."
    },
    {
        "id": 269,
        "Question": "The 8255 can be programmed in any of the __________",
        "Options": [
            "a) 2 modes",
            "b) 3 modes",
            "c) 4 modes",
            "d) 5 modes"
        ],
        "Answer": "Answer: c\nExplanation: 8255 can be programmed in any of the 4 modes."
    },
    {
        "id": 270,
        "Question": "RTC is used for __________",
        "Options": [
            "a) conversion",
            "b) communication",
            "c) real time and clock measurement",
            "d) memory management"
        ],
        "Answer": "Answer: c\nExplanation: RTC is a device that is basically used for all the real time clock related issues."
    },
    {
        "id": 271,
        "Question": "RTC chips use ______ to compute time, date when the power is off.",
        "Options": [
            "a) ac supply",
            "b) generators",
            "c) rectifiers",
            "d) battery"
        ],
        "Answer": "Answer: d\nExplanation: RTC chips require batteries in order to calculate the time and date when the power of the device is off."
    },
    {
        "id": 272,
        "Question": "DS12887 is known for as a ________",
        "Options": [
            "a) Communication device",
            "b) Good battery device",
            "c) RTC chip",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: DS12887 is known as an RTC chip."
    },
    {
        "id": 273,
        "Question": "DS1307 is a parallel RTC with I2C bus.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: DS1307 is a serial RTC with I2C bus."
    },
    {
        "id": 274,
        "Question": "DS1307 is a _______ pin IC and operates on _______ clock frequency.",
        "Options": [
            "a) 16, 8Mhz",
            "b) 8, 16Mhz",
            "c) 16, 32Mhz",
            "d) 8, 32Khz"
        ],
        "Answer": "Answer: d\nExplanation: DS1307 is a 8 pin IC and operates on a 32KHz clock frequency."
    },
    {
        "id": 275,
        "Question": "Vbat requires a positive signal of",
        "Options": [
            "a) 3V",
            "b) 5V",
            "c) 9V",
            "d) 12V"
        ],
        "Answer": "Answer: a\nExplanation: Vbat requires a positive signal of 3V which can be obtained through a battery."
    },
    {
        "id": 276,
        "Question": "In DS1307, which out of the following is correct about the SQW pin?",
        "Options": [
            "a) input pin",
            "b) output pin",
            "c) i/o pin",
            "d) none of the mentioned"
        ],
        "Answer": "Answer:b\nExplanation: In DS1307, SQW pin is an output pin. It provides a clock of frequency 1khz, 4khz, 8khz, 32khz if the pin is enabled."
    },
    {
        "id": 277,
        "Question": "DS1307 has a total of _______ bytes of RAM space.",
        "Options": [
            "a) 32",
            "b) 64",
            "c) 128",
            "d) 256"
        ],
        "Answer": "Answer: b\nExplanation: DS1307 has a total of 64 bytes(00-3F) of RAM space."
    },
    {
        "id": 278,
        "Question": "DS1307 control register has an address of _________",
        "Options": [
            "a) 00H",
            "b) 03H",
            "c) 07H",
            "d) 10H"
        ],
        "Answer": "Answer: c\nExplanation: DS1307 control register has an address of 07H."
    },
    {
        "id": 279,
        "Question": "What does the CH bit of the DS1307 demonstrate?",
        "Options": [
            "a) clock high",
            "b) clock halt",
            "c) clear high",
            "d) clear halt"
        ],
        "Answer": "Answer: b\nExplanation: CH bit means clock halt bit. If it is set to 1, then the oscillator gets disabled and vice versa."
    },
    {
        "id": 280,
        "Question": "Why are relays used for driving the motors?",
        "Options": [
            "a) they can be used as switch as well as they provide isolation",
            "b) they increase the current capability required by the motors",
            "c) they are used to reduce the back emf from the motors",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Relay is the electrically controlled switch and it allows isolation of two separate sections of the system. It has three main components: the coil, the common pole and the contacts. When an electric field is applied to the coil; it gets energized and generates a magnetic field which will force the common pole to change contact from Normally Closed to Normally Open."
    },
    {
        "id": 281,
        "Question": "Why are ULN2803 normally used between the microcontrollers and the relays?",
        "Options": [
            "a) for switching purposes",
            "b) for increasing the current capability required by a relay",
            "c) for increasing the voltage capability required by a relay",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: More current is desired for driving a motor with the help of a relay, so a ULN2803 is used for increasing the current as per the requirement of the relay."
    },
    {
        "id": 282,
        "Question": "Why are opto isolators normally used between the microcontrollers and the ULN2803?",
        "Options": [
            "a) to optimize the current",
            "b) to reduce the back emf",
            "c) to increase the current",
            "d) to increase the voltage"
        ],
        "Answer": "Answer: b\nExplanation: Opto isolators are used between the microcontrollers and the ULN2803 chips in order to decrease the back emf from the ULN2803 and to save the microcontrollers for a long time. "
    },
    {
        "id": 283,
        "Question": "Which of the following is a type of an electromagnetic relay?",
        "Options": [
            "a) SPST",
            "b) SPDT",
            "c) DPDT",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: There are normally three kinds of electromagnetic relays. They are SPST(single pole single throw), SPDT(single pole double throw) and the DPDT(double pole double throw) relays."
    },
    {
        "id": 284,
        "Question": "Reed switches show connectivity whenever they are in the presence of an electrical field?",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t say",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Reed switches are the devices that show connectivity whenever they are in the presence of some magnetic field."
    },
    {
        "id": 285,
        "Question": "Which of the following is an application of stepper motors?",
        "Options": [
            "a) in printers",
            "b) in robots",
            "c) in vehicles",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Stepper motors are used wherever there is a need of a movement at an angle, maybe it in printers, in motors or in vehicles stepper motors are used everywhere. "
    },
    {
        "id": 286,
        "Question": "What are normal 4 step sequence of a stepper motor if we start to move in clockwise direction with 0110 value?",
        "Options": [
            "a) 1100,1001,0011,0110",
            "b) 0011,1001,1100,0110",
            "c) 1001,1100,0110,0011",
            "d) 0101,1010,0101,1010"
        ],
        "Answer": "Answer: b\nExplanation: For a normal 4 step sequence of a stepper motor, if we start to move in a clockwise direction then we rotate towards right direction with every rotation."
    },
    {
        "id": 287,
        "Question": "What is the meaning of a step angle?",
        "Options": [
            "a) angle which a stepper motor has",
            "b) angle between the two windings of the stator in a stepper motor",
            "c) minimum degree of rotation associated with a single step",
            "d) angle between the stator and the rotor"
        ],
        "Answer": "Answer: c\nExplanation: Step angle is the minimum degree of rotation associated with a single step."
    },
    {
        "id": 288,
        "Question": "For a normal 4 step sequence, what are the number of teeth required to accomplish a 2 degree step angle?",
        "Options": [
            "a) 180",
            "b) 90",
            "c) 360",
            "d) 45"
        ],
        "Answer": "Answer: d\nExplanation: For a 2 degree step angle there will be 180 step per rotation, so the total number of rotor teeth are (180/4=45)."
    },
    {
        "id": 289,
        "Question": "Ounch-inch is a unit of a torque.",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t say",
            "d) depends on the situation"
        ],
        "Answer": "Answer: a\nExplanation: Torque is a quantity which is obtained by multiplying the amount of force that is applied at a particular angle. It is measured in terms of ounch-inch."
    },
    {
        "id": 290,
        "Question": "Why do we make the connection of the SCLK for communicating serially between two devices?",
        "Options": [
            "a) to get a clock output from the device",
            "b) to synchronize the two devices",
            "c) to obtain an analog output",
            "d) all of the mentioned"
        ],
        "Answer": "Answer:b\nExplanation: We need an SCLK in order for the two devices to communicate with each other properly. It acts as a pulse according to which one device sends a message and the other receives it."
    },
    {
        "id": 291,
        "Question": "What is the function of the CE pin in SPI?",
        "Options": [
            "a) it is used for synchronization",
            "b) it is used as a transmitting pin",
            "c) it is used as a receiving pin",
            "d) it is used to initiate and terminate the data transfer"
        ],
        "Answer": "Answer: d\nExplanation: CE pin is used to initiate and terminate the data transfer in the controller via SPI interface."
    },
    {
        "id": 292,
        "Question": "Which of the following is correct?",
        "Options": [
            "a) MOSI has the same meaning as the SDO",
            "b) SCLK is used to initiate and terminate the data transfer",
            "c) In 3 wire SPI, there is only one pin for transmission and reception",
            "d) In 3 wire SPI, there are three pins MOSI, MISO and SCLK"
        ],
        "Answer": "Answer: c\nExplanation: In 3 wire SPI, there is only one pin for transmission and reception and the other two pins SCLK and CE are used for synchronization of data and for initialization and termination of data."
    },
    {
        "id": 293,
        "Question": "If CPHA= 0 and CPOL=1, then which of the following is true?",
        "Options": [
            "a) read on rising edge, changed on a falling edge",
            "b) read on falling edge, changed on a rising edge",
            "c) write on rising edge, changed on a falling edge",
            "d) write on rising edge, changed on a falling edge"
        ],
        "Answer": "Answer: b\nExplanation: If CPOL= 1 and CPHA= 0, then reading operation is performed on the rising edge and the change occurs at every falling edge."
    },
    {
        "id": 294,
        "Question": "In SPI write, LSB goes first?",
        "Options": [
            "a) true",
            "b) false",
            "c) can’t be said",
            "d) depends on the cases"
        ],
        "Answer": "Answer: b\nExplanation: In SPI write, MSB goes first."
    },
    {
        "id": 295,
        "Question": "In AVR, which of the following registers are used for SPI?",
        "Options": [
            "a) SPSR",
            "b) SPCR",
            "c) SPDR",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: In AVR, SPSR(SPI Status Register), SPCR(SPI Control Register) and SPDR(SPI Data Register) are used for programming the SPI module."
    },
    {
        "id": 296,
        "Question": "How do we set the SPI, to operate in the master mode 1?",
        "Options": [
            "a) We set the MSTR bit, and make the CPOL= 1 and CPHA=0",
            "b) We set the MSTR bit, and make the CPOL= 0 and CPHA=1",
            "c) We reset the MSTR bit, and make the CPOL= 1 and CPHA=0",
            "d) We reset the MSTR bit, and make the CPOL= 0 and CPHA=1"
        ],
        "Answer": "Answer: b\nExplanation: In SPI, to make it work in the master mode, we make the MSTR bit is equal to 1 and for operating it in the mode 1 we make the CPOL=0 and CPHA=1."
    },
    {
        "id": 297,
        "Question": "SPI can act as a half duplex transmission?",
        "Options": [
            "a) true",
            "b) false",
            "c) depends on the conditions",
            "d) can’t be said"
        ],
        "Answer": "Answer: b\nExplanation: No, SPI can’t work in the half duplex transmission mode."
    },
    {
        "id": 298,
        "Question": "Which frequency is not recommended for SPI clock?",
        "Options": [
            "a) fosc/4",
            "b) fosc/64",
            "c) fosc/16",
            "d) fosc/2"
        ],
        "Answer": "Answer: d\nExplanation: fosc/2 is not recommended frequency for SPI transfer in AVR."
    },
    {
        "id": 299,
        "Question": "To select the value of the clock to be fosc/16, what are the appropriate values?",
        "Options": [
            "a) SPI2X= 0, SPR1= 0, SPR0=1",
            "b) SPI2X= 0, SPR1= 1, SPR0=0",
            "c) SPI2X= 1, SPR1= 1, SPR0=0",
            "d) SPI2X= 0, SPR1= 1, SPR0=1"
        ],
        "Answer": "Answer: a\nExplanation: For obtaining this very clock frequency of fosc/16, we set the values of SPI2X= 0, SPR1=0 and SPR0=1.\n"
    },
    {
        "id": 300,
        "Question": "Which of the following is correct?",
        "Options": [
            "a) I2C is a technique by which data is transmitted with the help of only eight pins",
            "b) SDA is used to synchronize data transfer between two chips",
            "c) TWI is another name for I2C",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: I2C is a technique by which data is transmitted between two devices by the help of only 2 pins so it is also called Two wire Serial Interface."
    },
    {
        "id": 301,
        "Question": "Which of the following is true about the I2C protocols?",
        "Options": [
            "a) the data line cannot change when the clock line is high",
            "b) the data line can change when the clock line is high",
            "c) the clock line cannot change when the data line is high",
            "d) the clock line can change when the data line is high"
        ],
        "Answer": "Answer: a\nExplanation: According to I2C protocols, the data line(SDA) changes only if the clock line(SCL) is at its active low level."
    },
    {
        "id": 302,
        "Question": "I2C is a connection oriented communication protocol.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: I2C is a connection oriented protocol i.e each transmission is initiated by a START condition and is terminated by a STOP condition."
    },
    {
        "id": 303,
        "Question": "The STOP condition is generated by a",
        "Options": [
            "a) high to low change in the SDA line when the SCL is low",
            "b) high to low change in the SDA line when the SCL is high",
            "c) low to high change in the SDA line when the SCL is low",
            "d) low to high change in the SDA line when the SCL is high"
        ],
        "Answer": "Answer: c\nExplanation: The STOP condition is generated when there is a low to high change in the SDA line when the SCL is low."
    },
    {
        "id": 304,
        "Question": "For receiving the acknowledgment",
        "Options": [
            "a) SDA from the transmitter should be high",
            "b) SDA from the transmitter should be low",
            "c) SDA from receiver should be high",
            "d) SDA from receiver should be low"
        ],
        "Answer": "Answer: d\nExplanation: The packet format in I2C consists of 9 bits, out of which first 8 are the data bits while the ninth bit is the acknowledgment bit. For obtaining the acknowledgment, the SDA line of the receiver should be pushed to low."
    },
    {
        "id": 305,
        "Question": "What steps are followed to complete the data transfer?",
        "Options": [
            "a) START condition, STOP condition",
            "b) Address packet",
            "c) One or more data packet",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: For having the complete data transfer, the steps that are actually being followed are START condition, address packet, one or more data packet, STOP condition."
    },
    {
        "id": 306,
        "Question": "I2C is ideal for short distances?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: I2C is that module of the AVR, which is used for short distances."
    },
    {
        "id": 307,
        "Question": "Which of the following is a register used for programming AVR’s I2C module?",
        "Options": [
            "a) TWBR",
            "b) TWCR",
            "c) TWSR",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: TWBR( TWI Bit rate register), TWCR( TWI Control Register), TWSR(TWI Status Register), TWAR(TWI Address Register), TWDR( TWI Data Register) are used for programming an AVR’s I2C module."
    },
    {
        "id": 308,
        "Question": "Which bit is polled to know that whether the TWI is ready or not?",
        "Options": [
            "a) TWWC",
            "b) TWINT",
            "c) TWEA",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: TWINT is the bit that is polled to know that whether the TWI is ready or not."
    },
    {
        "id": 309,
        "Question": "Is status flag important in multi master systems?",
        "Options": [
            "a) yes",
            "b) no",
            "c) depends on the conditions",
            "d) cant be said"
        ],
        "Answer": "Answer:a\nExplanation: Yes, the status flag plays a very vital role in multi master systems."
    },
    {
        "id": 310,
        "Question": "In MSP430, the size of the status register is ________",
        "Options": [
            "a) 1 byte",
            "b) 2 bytes",
            "c) 1 bit",
            "d) 2 bit"
        ],
        "Answer": "Answer: b\nExplanation: In MSP430, the size of the status register is 2 bytes. The bits of the status register consists of the C flag, Z flag, N flag, GIE flag, CPU off, OSC off, SCG0, SCG1, V flag and 7 reserved bits. "
    },
    {
        "id": 311,
        "Question": "Which of the following bit/s of the status register that allows the microcontroller to operate in its low power mode?",
        "Options": [
            "a) Z",
            "b) Reserved",
            "c) CPU off",
            "d) N"
        ],
        "Answer": "Answer c\nExplanation: The CPU off bit, OSC off bit, SCG0 bit, SCG1 bit of the status register are used to allow the microcontroller to operate in its low power mode. "
    },
    {
        "id": 312,
        "Question": "What is actually done to improve the efficiency of a RISC processor?",
        "Options": [
            "a) instructions are reduced",
            "b) they have two or more processors inbuilt connected between",
            "c) they have many instructions that are interrelated to each other",
            "d) they have one or more registers hard wired to the commonly used values"
        ],
        "Answer": "Answer: d\nExplanation: To improve the efficiency of the RISC processor, the registers that are hard wired to commonly used values are used instead of other ones."
    },
    {
        "id": 313,
        "Question": "To improve the efficiency of an MSP430 based microcontroller, for one register",
        "Options": [
            "a) there is only one value for all addressing modes",
            "b) there are two values for each addressing mode",
            "c) there are 2 values for four addressing modes",
            "d) there are 4 values for four addressing modes"
        ],
        "Answer": "Answer: d\nExplanation: In MSP430, there are namely 4 addressing modes. So the main advantage of this controller( which basically increases its efficiency )is that for one register their exists 4 different values for 4 different addressing modes of the controller."
    },
    {
        "id": 314,
        "Question": "Their are_______________ number of emulated instructions found in the MSP430?",
        "Options": [
            "a) 4",
            "b) 8",
            "c) 16",
            "d) 24"
        ],
        "Answer": "Answer: d\nExplanation: The constants CG1 and CG2 are combined together to give 27 native instructions. These instructions are further converted into 24 emulated instructions. So, there are 24 emulated instructions found in an MSP430 based controller."
    },
    {
        "id": 315,
        "Question": ".w form is used for operations",
        "Options": [
            "a) that uses bytes",
            "b) that uses words",
            "c) that uses both",
            "d) that uses none"
        ],
        "Answer": "Answer: c\nExplanation: .w form is used for operations, that uses both bytes and words for operations."
    },
    {
        "id": 316,
        "Question": "Pre increment addressing is available in MSP430?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: MSP430 supports only post increment addressing. For performing pre increment addressing, we require some special functions that accomplish that work."
    },
    {
        "id": 317,
        "Question": "Which out of the following is a correct emulated instruction?",
        "Options": [
            "a) ADC(.B) dst",
            "b) ADD(.B) src,dst",
            "c) ADDC(.B) src,dst",
            "d) AND(.B) src,dst"
        ],
        "Answer": "Answer: a\nExplanation: “ADC(.B) dst” this is emulated to “ADDC.B #0,dst” hence this is an emulated instruction. The emulated instructions use core instructions combined with the architecture and implementation of the CPU for higher code efficiency and faster execution.\n"
    },
    {
        "id": 318,
        "Question": "dadd instruction can act as _____________",
        "Options": [
            "a) valid BCD addition",
            "b) valid adder with carry",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Dadd instruction can act as a valid BCD addition instruction if the numbers are initially in BCD state(0-9)."
    },
    {
        "id": 319,
        "Question": "Which of the following instructions don’t affect the status bits?",
        "Options": [
            "a) bis",
            "b) bic",
            "c) bis & bic",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: bis and bic don’t affect the bits of the status register."
    },
    {
        "id": 320,
        "Question": "There are _____ number of addressing modes found for the source and _____ number of modes for the destination part.",
        "Options": [
            "a) 4,4",
            "b) 2,4",
            "c) 7,4",
            "d) 2,2"
        ],
        "Answer": "Answer: c\nExplanation: In MSP430, Seven addressing modes for the source operand and four addressing modes for the destination operand can address the complete address space with no exceptions."
    },
    {
        "id": 321,
        "Question": "MSP430 describes reti instruction as ___________",
        "Options": [
            "a) Format1 addressing",
            "b) Format2 addressing",
            "c) Jump addressing",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: MSP430 describes reti instruction as that type of addressing which consists of only single operand, so it comes under Format2 addressing."
    },
    {
        "id": 322,
        "Question": "mov.w R3, R4 takes _________",
        "Options": [
            "a) one cycle",
            "b) two cycles",
            "c) four cycles",
            "d) eight cycles"
        ],
        "Answer": "Answer: a\nExplanation: mov.w R3, R4 takes only one cycle to transfer the data from register R3 to R4. This type of mode of addressing is called the register mode of addressing."
    },
    {
        "id": 323,
        "Question": "Indexed addressing can be used for _________",
        "Options": [
            "a) source",
            "b) destination",
            "c) source & destination",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Indexed addressing is used for both the source and the destination addresses."
    },
    {
        "id": 324,
        "Question": "What do you understand form this instruction mov.w X(PC), R6",
        "Options": [
            "a) R6 = X+PC",
            "b) R6 = PC-X",
            "c) R6 = -X-PC",
            "d) R6 = -X+PC"
        ],
        "Answer": "Answer: a\nExplanation: This instruction mov.w X(PC), R6 means that the contents of X+PC address are copied to the R6 register."
    },
    {
        "id": 325,
        "Question": "Absolute mode uses which of the following operators?",
        "Options": [
            "a) %",
            "b) /",
            "c) $",
            "d) &"
        ],
        "Answer": "Answer: d\nExplanation: Absolute mode uses the & operator to transfer a constant to a register."
    },
    {
        "id": 326,
        "Question": "Indirect register mode is used by _________",
        "Options": [
            "a) source register",
            "b) destination register",
            "c) source & destination register",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Indirect addressing mode is used only by the source register."
    },
    {
        "id": 327,
        "Question": "Indirect mode and the indirect auto increment mode have which common operator in them",
        "Options": [
            "a) +",
            "b) –",
            "c) @",
            "d) &"
        ],
        "Answer": "Answer: c\nExplanation: Both the indirect and the indirect auto increment mode use the @ operator for the source register to transfer the data from one memory location to a register."
    },
    {
        "id": 328,
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: MOV @R10,0(R11) → Move the contents of the source address (contents of R10) to the destination address (contents of R11).\nMOV @R10+,0(R11) → Move the contents of the source address (contents of R10) to the destination address (contents of R11). Register R10 is incremented by 1 for a byte operation, or 2 for a word operation after the fetch; it points to the next address without any overhead. This is useful for table processing.\n"
    },
    {
        "id": 329,
        "Question": "MOV @R10,0(R11)  is a type of ________",
        "Options": [
            "a) Register Mode",
            "b) Indirect Register Mode",
            "c) Immediate Mode",
            "d) Indirect Autoincrement Mode"
        ],
        "Answer": "Answer: b\nExplanation: The type of given instruction is Indirect Register Mode."
    },
    {
        "id": 330,
        "Question": "Which instruction is used to call functions?",
        "Options": [
            "a) MOV",
            "b) GO",
            "c) CALL",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: CALL instruction is used for going to a particular address in MSP430. It actually causes the pointer to jump at a particular address and push the current address of the PC to the stack."
    },
    {
        "id": 331,
        "Question": "ret instruction is used for _________",
        "Options": [
            "a) determining the end of the program",
            "b) for returning back from the subroutine to the main program",
            "c) for transferring data from one place to another",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Ret instruction is basically used for returning back from a subroutine. It actually pops the top address from the stack and moves that address to its PC, so that it now returns to the main program and continue the execution normally."
    },
    {
        "id": 332,
        "Question": "According to conventions being followed, R12 to R15 are used for _________",
        "Options": [
            "a) parameter passing",
            "b) preserved for call",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: According to the conventions, R12 to R15 are used for parameter passing and hence are not preserved for the call."
    },
    {
        "id": 333,
        "Question": "We can store the temporary results across a call instruction with the help of which of the following registers",
        "Options": [
            "a) R1-R4",
            "b) R4-R11",
            "c) R12-R15",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Temporary results are stored by the registers R4-R11."
    },
    {
        "id": 334,
        "Question": "Can we allocate variables on the stack?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, we can allocate the variables on the stack, it is a very effective way of storing the variables."
    },
    {
        "id": 335,
        "Question": "Which registers are reserved for passing the parameters to a subroutine and then returning the final result?",
        "Options": [
            "a) R1-R4",
            "b) R4-R11",
            "c) R12-R15",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Originally, R12-R15 registers are reserved for passing the parameters to a subroutine and then returning the final result. "
    },
    {
        "id": 336,
        "Question": "What actually is the order of stack frame for a parameter to pass to a subroutine?",
        "Options": [
            "a) parameter passed to a subroutine",
            "b) return address",
            "c) saved copies of registers(R4-R11)",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All the steps i.e. parameter passed to a subroutine, return address, saved copies of registers(R4-R11), local variables in subroutines are required for passing a parameter to a subroutine."
    },
    {
        "id": 337,
        "Question": "When any subroutine is called, then the first value of stack will be",
        "Options": [
            "a) value of PC",
            "b) the return address",
            "c) none of the mentioned",
            "d) both are one and the same things"
        ],
        "Answer": "Answer: d\nExplanation: When any subroutine is called then the first place of the stack will be filled with the return address, or the address of the PC so that the pointer may return back to its appropriate place after the return instruction of the subroutine."
    },
    {
        "id": 338,
        "Question": "Which of the following instruction/s is/are used to return back to the main program after the subroutine is completed?",
        "Options": [
            "a) ret",
            "b) reti",
            "c) ret and reti",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: For returning back from the subroutine, both ret and reti can be used, the main difference between the two is that reti just resets the interrupt flag before the return, so that the interrupt can occur again."
    },
    {
        "id": 339,
        "Question": "Is the approach of making subroutines effective or not?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: The approach of making subroutine is indeed very effective, as with its help we don’t need to retrace/write a particular set of codes again and again. It makes our approach modular."
    },
    {
        "id": 340,
        "Question": "MSP430 uses vectored interrupts?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: MSP430 has vectored interrupts i.e. the address of each ISR is stored in a vector table, that’s why it has vectored interrupts."
    },
    {
        "id": 341,
        "Question": "Which of the following is true?",
        "Options": [
            "a) interrupts are required to wake a CPU from sleep",
            "b) same vector address associated with multiple flags",
            "c) most interrupts are maskable",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of the above mentioned statements are true i.e. interrupts are required to wake a CPU from sleep, same vector address associated with multiple flags and most of the interrupts are maskable."
    },
    {
        "id": 342,
        "Question": "After the interrupt has occurred, the stack is filled with ______________",
        "Options": [
            "a) return address",
            "b) status register",
            "c) return address & status register",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: When an interrupt had occurred, the top place of the stack is filled with the return address, so that immediately after the reti instruction the pointer moves to the main program, the stack is also filled with the bits of the status register so that all the temporary values get stored in it."
    },
    {
        "id": 343,
        "Question": "What is the purpose of __interrupt() function?",
        "Options": [
            "a) it is used to enable the interrupt",
            "b) it is used to disable the interrupt",
            "c) it denotes that the routine is an ISR",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The purpose of __interrupt() function is to denote that the routine is an ISR."
    },
    {
        "id": 344,
        "Question": "What is the purpose of .intvec assembler directive?",
        "Options": [
            "a) it creates an interrupt vector entry that points to an interrupt routine name",
            "b) one is used for storage, other for display",
            "c) one stores locally other stores globally",
            "d) the two are the same"
        ],
        "Answer": "Answer: a\nExplanation: The .intvec directive creates an interrupt vector entry that points to an interrupt routine name."
    },
    {
        "id": 345,
        "Question": "For enabling any interrupt, firstly _____________",
        "Options": [
            "a) GIE=0",
            "b) GIE=1",
            "c) None of the mentioned",
            "d) GIE=0 & 1"
        ],
        "Answer": "Answer: b\nExplanation: If GIE is set to 1, then only other hardware interrupts are enabled."
    },
    {
        "id": 346,
        "Question": "Nonmaskable vectors are stored at different vector locations?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Nonmaskable interrupts are stored in the same vector location, it may be of higher or the lower priority."
    },
    {
        "id": 347,
        "Question": "Which of the following can generate a nonmaskable interrupt?",
        "Options": [
            "a) access violation to flash memory, ACCVIFG",
            "b) timer_A interrupt",
            "c) compare / capture interrupt",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: A nonmaskable interrupt is generated by an access violation to flash memory, ACCVIFG."
    },
    {
        "id": 348,
        "Question": "External RST/NMI pin is a nonmaskable interrupt?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, external RST/NMI pin is a nonmaskable interrupt( The function of the RST/NMI pin is configured in the control register for the watchdog timer module, WDTCTL)."
    },
    {
        "id": 349,
        "Question": "How many cycles are used by MSP430, when reti instruction is executed?",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 5",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: c\nExplanation: When reti instruction is executed, five cycles are used because it firstly pops the stack register completely and then takes the top of the stack into the PC to return to the next address of the main program."
    },
    {
        "id": 350,
        "Question": "There are how many MSP430’s low power modes available in the chip?",
        "Options": [
            "a) two",
            "b) three",
            "c) four",
            "d) five"
        ],
        "Answer": "Answer: d\nExplanation: There are five low power modes available in the MSP430, out of which two are rarely employed in the current devices."
    },
    {
        "id": 351,
        "Question": "Which of the following are the low power modes?",
        "Options": [
            "a) LPM0",
            "b) LPM3",
            "c) LPM4",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: LPM0, LPM3, LPM4 all are the low power modes that are available in the MSP430."
    },
    {
        "id": 352,
        "Question": "Which of the following modes is also known as the RAM retention mode?",
        "Options": [
            "a) LPM0",
            "b) LPM3",
            "c) LPM4",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: LPM4 is known as the RAM retention mode. Here, the CPU and all clocks are disabled, I ≈ 0.1A. The device can be woken only by an external signal."
    },
    {
        "id": 353,
        "Question": "Waking a device simply means that switching that device’s operation from a low power mode to an active mode.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: When a device is operating in a low power mode, it can also be assumed that the device is sleeping, so waking a device simply means to turn that device’s operation from a low power mode to an active mode."
    },
    {
        "id": 354,
        "Question": "When an interrupt is accepted, the contents of the status register are ___________",
        "Options": [
            "a) set",
            "b) reset",
            "c) remains the same",
            "d) cant be said"
        ],
        "Answer": "Answer:b\nExplanation: When an interrupt is accepted, the contents of the status register are cleared, it actually puts the processor in the active mode."
    },
    {
        "id": 355,
        "Question": "Which of the following basic clock modules supplies clock signals to the MSP430?",
        "Options": [
            "a) ACLK",
            "b) MCLK",
            "c) SMCLK",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of the mentioned options are correct. The basic clock module supplies the MSP430 with three clock signals as follows:\nACLK → crystal oscillator signal\nMCLK → controllers main system clock\nSMCLK → sub main system clock used to run the peripheral module function.\n"
    },
    {
        "id": 356,
        "Question": "_ _low_ power_mode_0() states the processor to __________",
        "Options": [
            "a) enable the interrupt",
            "b) disable the interrupt",
            "c) nothing",
            "d) to go in an active mode"
        ],
        "Answer": "Answer: a\nExplanation: _ _low_ power_mode_0() puts the processor in the LPM0 mode."
    },
    {
        "id": 357,
        "Question": "More power can be saved by using low_power mode 0 than low_power mode 3.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: More power is saved in low_ power mode 3."
    },
    {
        "id": 358,
        "Question": "_BIC_SR_IRQ() is used to _______________",
        "Options": [
            "a) set the particular bits of the SR",
            "b) reset the particular bits of the SR",
            "c) any of the above mentioned depending on the conditions",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: _BIC_SR_IRQ() is used to clear the bits of the SR. "
    },
    {
        "id": 359,
        "Question": "The only clock that runs in the LPM3 is the ___________",
        "Options": [
            "a) MCLK",
            "b) ACLK",
            "c) CLK",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The only clock that runs in the LPM3 is the ACLK."
    },
    {
        "id": 360,
        "Question": "Which of the following registers are related to port P1?",
        "Options": [
            "a) P1SEL",
            "b) P1DIR",
            "c) P1IES",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All of the mentioned registers are related to Port1.\nP1SEL → Port Select Port pins are often multiplexed with other peripheral module functions. P1SEL and P1SEL2 bit is used to select the pin function – I/O port or peripheral module function.\nP1DIR → Direction register selects the direction of the corresponding I/O pin.\nP1IES → Interrupt Edge Select.\n "
    },
    {
        "id": 361,
        "Question": "A pull-up or pull-down resistor ___________",
        "Options": [
            "a) removes the full output drive on the output pin",
            "b) gives only a feeble current through the pull-up to resistor",
            "c) removes the full output drive on the output pin & gives only a feeble current through the pull-up to resistor",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: A pull-up or pull-down resistor is used to remove the full output drive on the output pin. It also gives a feeble current through the pull-up to a resistor."
    },
    {
        "id": 362,
        "Question": "P1.3 is the ___________",
        "Options": [
            "a) input CCI1A to Timer_A",
            "b) is connected to the voltage reference VREF of SD16_A",
            "c) is output TA0 from Timer_A",
            "d) are digital inputs with pull-up resistors"
        ],
        "Answer": "Answer: b\nExplanation: P1.3 is connected to the voltage reference VREF of SD16_A."
    },
    {
        "id": 363,
        "Question": "What actually is SD16_A?",
        "Options": [
            "a) it is an interrupt",
            "b) it is a timer",
            "c) it is an analog to Digital Converter",
            "d) it is a serial communication module"
        ],
        "Answer": "Answer: c\nExplanation: SD16_A is an analog to the digital module."
    },
    {
        "id": 364,
        "Question": "P1IE and P1IES are registers that are used to ___________",
        "Options": [
            "a) control the Port1 digital i/o ports",
            "b) control the Port1 interrupts",
            "c) control the Port1 serial communication interfaces",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: P1IE and P1IES both registers are used to control the Port1 interrupts."
    },
    {
        "id": 365,
        "Question": "Unused pins must never be left unconnected in their default state as inputs.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Unused pins must never be left unconnected in their default state as inputs. This follows a general rule that inputs to CMOS must never be left unconnected or “floating”."
    },
    {
        "id": 366,
        "Question": "Which of the following is an effect of a Schmidt trigger?",
        "Options": [
            "a) it turns slowly varying inputs, which might cause problems while they pass slowly through the undefined range of input voltages, into abrupt, clean logical transitions",
            "b) It eliminates the effect of noise on the input, provided that it is not large enough to span the gap between the upward and downward thresholds",
            "c) none of the mentioned",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Schmidt trigger has two of the above mentioned effects in it."
    },
    {
        "id": 367,
        "Question": "To ensure that a negative fluctuation does not trigger an unwanted downward transition by pulling the input down through VIT−, we must choose",
        "Options": [
            "a) minimum hysteresis",
            "b) maximum hysteresis",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: To ensure that a negative fluctuation does not trigger an unwanted downward transition by pulling the input down through VIT−, we must choose a minimum hysteresis of 0.3V."
    },
    {
        "id": 368,
        "Question": "The SPDT switch can be used as a ___________",
        "Options": [
            "a) detecting circuit",
            "b) debouncing circuit",
            "c) devaluing circuit",
            "d) degenerating circuit"
        ],
        "Answer": "Answer: b\nExplanation: The SPDT(single pole, double pole) switch can be used as a debouncing circuit of a switch."
    },
    {
        "id": 369,
        "Question": "Debouncing can be carried out at a hardware as well as the software end?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Debouncing can be carried out at both the fronts both at the software as well as the hardware front, to carry out the process appropriately."
    },
    {
        "id": 370,
        "Question": "What are the basic functions of a timer?",
        "Options": [
            "a) it provided a time delay",
            "b) it can act as a counter",
            "c) it can control the compare, capture mode",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Timers are used to provide a time delay, they can even act as a counter and control the compare capture mode of a microcontroller."
    },
    {
        "id": 371,
        "Question": "Most of the MSP430’s devices have __________ number of timers in it.",
        "Options": [
            "a) three",
            "b) four",
            "c) five",
            "d) seven"
        ],
        "Answer": "Answer: c\nExplanation: MSP430 has mainly five types of timers in it. They are Watchdog Timer, Basic Timer1, Real clock Time, Timer_A, Timer_B."
    },
    {
        "id": 372,
        "Question": "A Watchdog Timer can act as an interval timer?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation:  A Watchdog Timer can act as an interval timer if the protection is not needed for it."
    },
    {
        "id": 373,
        "Question": "Which out of the following is the main function of a Watchdog timer?",
        "Options": [
            "a) control the compare mode",
            "b) control the capture mode",
            "c) protection from failures to the system",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Its main function is to protect the system against malfunctions."
    },
    {
        "id": 374,
        "Question": "Basic Timer1 can provide __________",
        "Options": [
            "a) clock for the LCD",
            "b) an internal timer",
            "c) clock to the LCD and can & also used as an interval timer",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Basic Timer1 device is used to provide the clock to the LCD and can also be used as an interval timer."
    },
    {
        "id": 375,
        "Question": "LCD_A controllers make use of the Basic Timer1 timer for providing a clock to the LCD?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Basic Timer1 is not used in LCD_A controllers, because these provide an internal clock of its own to all of its devices."
    },
    {
        "id": 376,
        "Question": "Real time clock is an extension of Basic Timer1?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Real time clock is an extension of Basic Timer1 and is present in almost all devices for controlling its real time clock."
    },
    {
        "id": 377,
        "Question": "Timer_A can be used to _________",
        "Options": [
            "a) generate interrupts",
            "b) handle external inputs",
            "c) drive outputs",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Timer_A can be used to generate the interrupts, handle the external inputs or for driving the outputs."
    },
    {
        "id": 378,
        "Question": "Time stamp inputs can be measured by a Timer_A?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, time stamp inputs can be measured by a Timer_A."
    },
    {
        "id": 379,
        "Question": "Timer_B includes _________",
        "Options": [
            "a) sampling inputs",
            "b) driving outputs",
            "c) sampling inputs & driving outputs",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Timer_B is used for driving the outputs as with Timer_A but it lacks the property of Timer_A of sampling inputs."
    },
    {
        "id": 380,
        "Question": "The watchdog counts up and resets the MSP430 when it reaches the limit?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: The watchdog timer is used for the protection of the device. It keeps a track at the counter so that the code doesn’t reach an infinite unending loop. So it actually resets the counter before this particular condition."
    },
    {
        "id": 381,
        "Question": "Which of the following is correct about WDTCTL?",
        "Options": [
            "a) it is a 16 bit register",
            "b) it is guided against accidental writes that require a password",
            "c) a reset will occur if a value with an incorrect password is written to WDTCTL",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: WDTCTL is a 16 bit register that is used for protecting the microcontroller. It actually resets the value when an incorrect password is written to WDTCTL."
    },
    {
        "id": 382,
        "Question": "WDTNMI is found in the _________",
        "Options": [
            "a) higher byte of WDTCTL",
            "b) lower byte of WDTCTL",
            "c) its first four bits",
            "d) its last four bits"
        ],
        "Answer": "Answer: b\nExplanation: WDTNMI is the fifth bit of the WDTCTL register."
    },
    {
        "id": 383,
        "Question": "Which of the following bits reads 0 under normal conditions but goes 1 when it wants to initiate some action?",
        "Options": [
            "a) WDTNMI",
            "b) WDTHOLD",
            "c) WDTTMSEL",
            "d) WDTCNTCL"
        ],
        "Answer": "Answer: d\nExplanation: WDTCNTCL is the bit that reads 0 under normal conditions but goes 1 when it wants to initiate some action like resetting the counter."
    },
    {
        "id": 384,
        "Question": "WDTISx bits control the _________",
        "Options": [
            "a) period of the clock",
            "b) act as “Nonmaskable Interrupts”",
            "c) stop the watchdog timer",
            "d) start the watchdog timer"
        ],
        "Answer": "Answer: a\nExplanation: WDTISx bits of the WDTCTL register is responsible for controlling the period of the clock."
    },
    {
        "id": 385,
        "Question": "The process of setting the WDTCNTCL bit in WDTCTL is through",
        "Options": [
            "a) petting",
            "b) feeding",
            "c) kicking",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: the process of setting the WDTCNTCL bit in the WDTCTL register is by the processes like petting, feeding and kicking."
    },
    {
        "id": 386,
        "Question": "What is the function of this instruction “WDTCTL = WDTPW | WDTCONFIG”, where **#define WDTCONFIG (WDTCNTCL|WDTSSEL)**",
        "Options": [
            "a) it sets the watchdog timer",
            "b) it configures and clears the watchdog timer",
            "c) it stops the watchdog timer",
            "d) it configures and sets the watchdog timer"
        ],
        "Answer": "Answer: b\nExplanation: WDTCTL = WDTPW | WDTCONFIG instruction is used to clear and configure the watchdog timer of a microcontroller."
    },
    {
        "id": 387,
        "Question": "Setting the WDTTMSEL bit of the WDTCTL register makes the watchdog timer act as",
        "Options": [
            "a) interrupt",
            "b) communication device",
            "c) converter",
            "d) interval timer"
        ],
        "Answer": "Answer: b\nExplanation: No WDTCTL_bit.WDTCNTCL = 1; is an incorrect way of setting the bits of the WDTCTL register because it violates the password protection."
    },
    {
        "id": 388,
        "Question": "WDTIFG flag gets cleared if",
        "Options": [
            "a) if is interrupt had occurred",
            "b) if the interrupt is serviced",
            "c) if there can be no interrupt",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The WDTTMSEL bit of the WDTCTL register makes the watchdog timer act as the interval timer."
    },
    {
        "id": 389,
        "Question": "Which of the following is true about the FRFQx bits of the BTCTL register?",
        "Options": [
            "a) these bits are used for clock input",
            "b) these bits are used for setting a particular frequency fLCD",
            "c) these bits start the timer",
            "d) these bits stop the timer"
        ],
        "Answer": "Answer: b\nExplanation: FRFQx bits of the BTCTL register are used for selecting a particular frequency fLCD varying from fACLK/256 to fACLK/32."
    },
    {
        "id": 390,
        "Question": "Timer1 is responsible for ________",
        "Options": [
            "a) providing a clock to the LCD module",
            "b) cause an interrupt",
            "c) a pulse for the RTC",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Timer1 is responsible for providing a clock for the LCD module. It can also cause an interrupt if the BTIE bit is high. It also provides the clock to the RTC."
    },
    {
        "id": 391,
        "Question": "For fACLK = 32 KHz, what would be the desirable range of fLCD?",
        "Options": [
            "a) 2hz-256hz",
            "b) 12hz-512hz",
            "c) 128hz-1khz",
            "d) 1khz-10khz"
        ],
        "Answer": "Answer: c\nExplanation: For fACLK = 32khz, the desirable range of the fLCD is the fACLK/256 to  fACLK/32. This value comes out to be in the range of 128hz-1khz.\n"
    },
    {
        "id": 392,
        "Question": "Normally BTCNT1 only function is to provide a prescalar for the BNTCNT2?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: LCD’s controllers nowadays don’t require a clock pulse, so the only main function of the BTCNT1 is to provide a prescalar for the BNTCNT2."
    },
    {
        "id": 393,
        "Question": "BTCNT2 provides 2 output signals?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: BNTCNT2 has no outputs. Instead, it raises the BTIFG flag at a frequency determined by the BTIPx bits."
    },
    {
        "id": 394,
        "Question": "RTCSEC, RTCMIN, RTCDOW etc. are the bytes of a set of registers that are used to store",
        "Options": [
            "a) seconds",
            "b) minutes",
            "c) days of a week",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The current time and date are held in a set of registers that contain the following bytes like RTCSEC, RTCMIN, RTCHOUR, RTCDOW etc."
    },
    {
        "id": 395,
        "Question": "The RTC module is configured in the calendar mode if __________",
        "Options": [
            "a) RTCMODE bit is reset",
            "b) RTCMODE is set",
            "c) RTCRDY is reset",
            "d) RTCRDY is set"
        ],
        "Answer": "Answer:b\nExplanation: Calendar mode is selected when RTCMODE is set."
    },
    {
        "id": 396,
        "Question": "The RTC module makes use of the Basic Timer1 because of _________",
        "Options": [
            "a) its bytes are controlled in the Basic Timer1 register",
            "b) it is started by timer1",
            "c) it is ended by basic timer1",
            "d) it needs a clock pulse of 1hz that is provided by basic timer1"
        ],
        "Answer": "Answer: d\nExplanation: The RTC module requires a clock of worth 1hz that is provided by basic timer1 so that why it makes use of basic timer1."
    },
    {
        "id": 397,
        "Question": "IF RTCIE interrupt is generated then _________",
        "Options": [
            "a) BTIFG flag is set",
            "b) RTCFG flag is set",
            "c) Both flags are set",
            "d) None of the flag is set"
        ],
        "Answer": "Answer: c\nExplanation: When RTCIE interrupt is generated then both BTIFG and RTCFG flags are set simultaneously."
    },
    {
        "id": 398,
        "Question": "What does the RTCTEVx bits do?",
        "Options": [
            "a) they cause an interrupt",
            "b) they end an interrupt",
            "c) they set the minute, hour, seconds daily at midnight or daily at noon",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Every minute, every hour, daily at midnight or daily at noon are set by the bits of the RTCTEVx bits of the RTCCTL register."
    },
    {
        "id": 399,
        "Question": "All channels within Timer_A share the same timer block?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: There is only one TAR in Timer_A so all of its channels share the same timer block."
    },
    {
        "id": 400,
        "Question": "Timer_A has _________",
        "Options": [
            "a) RTC module in it",
            "b) Compare/ capture channel",
            "c) Communication channel",
            "d) Converter channel"
        ],
        "Answer": "Answer: b\nExplanation: Timer_A has compared/ capture channel inbuilt inside it."
    },
    {
        "id": 401,
        "Question": "TACLK and INCLK are _________",
        "Options": [
            "a) internally generated clock pulses",
            "b) externally fed clock pulses",
            "c) of no use in Timer_A",
            "d) very slow"
        ],
        "Answer": "Answer: b\nExplanation: TACLK and INCLK clock pulses are the externally fed pulses that are required by the Timer_A."
    },
    {
        "id": 402,
        "Question": "In continuous mode of the counter _________",
        "Options": [
            "a) counter moves from 0000-ffff",
            "b) counter moves from ffff-0000-ffff",
            "c) counter moves from 0000-ffff and then again returns to 0",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In a continuous mode of the counter, the counter firstly increases from 0000-ffff, then after this value the roll over condition comes and it again gets started from 0000. This particular mode is very useful for capturing inputs."
    },
    {
        "id": 403,
        "Question": "TACLR bit in TACTL _________",
        "Options": [
            "a) clear the interrupt flag",
            "b) clear the status flags",
            "c) clear the count in TAR",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: TACLR bit in TACTL clears the count in the TAR."
    },
    {
        "id": 404,
        "Question": "TAxCCTLn is a _________",
        "Options": [
            "a) set of 2 bits used for selecting the mode of operation of the timer",
            "b) a register of 8 bits used for giving the count to the timer",
            "c) a register of 16 bits used to select the compare/capture channel of the Timer_Ax",
            "d) a register of 16 bits used to cause the timer interrupt"
        ],
        "Answer": "Answer: c\nExplanation: TAxCCTLn is a register of 16 bits used to select the compare/capture channel of the Timer_Ax."
    },
    {
        "id": 405,
        "Question": "CCI1B comes from _________",
        "Options": [
            "a) ACLK",
            "b) CAOUT",
            "c) SCLK",
            "d) TACLK"
        ],
        "Answer": "Answer: b\nExplanation: CCI1B comes from CAOUT."
    },
    {
        "id": 406,
        "Question": "Which of the following parameters are given by the TAxCCRn?",
        "Options": [
            "a) Capture/compare input. The selected input signal can be read by this bit",
            "b) Synchronized capture/compare input. The selected CCI input signal is latched with the EQUx signal and can be read from this bit",
            "c) Holds the data for the comparison to the timer value in the Timer_A Register, TAR",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Compare mode: TAxCCRn holds the data for the comparison to the timer value in the Timer_A Register, TAR.\nCapture mode: The Timer_A Register, TAR, is copied into the TAxCCRn register when capture is performed.\n"
    },
    {
        "id": 407,
        "Question": "Why Timer_B is not considered as most suitable one for receiving asynchronous signals?",
        "Options": [
            "a) because of the absence of the TBOUTH input pin",
            "b) because of the presence of the TBOUTH input pin",
            "c) because of the absence of the SCCI bit",
            "d) because of the presence of the SCCI bit"
        ],
        "Answer": "Answer: c\nExplanation: The SCCI bit is absent in the Timer_B which means that the sampling mode is absent in it that’s why it is considered as unsuitable for receiving asynchronous signals."
    },
    {
        "id": 408,
        "Question": "There is double buffering in the immediate mode?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Immediate mode offers no double buffering condition. As here, values are copied to TBCLn as soon as they are written to TBCCRn."
    },
    {
        "id": 409,
        "Question": "Double buffering protects channel 0.",
        "Options": [
            "a) as it acts as the limit in the Up and up/down modes",
            "b) it doesn’t actually protect it",
            "c) as it does not accept the inputs",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Double buffering protects channel 0 as it acts as the limit in the Up and Up/Down modes. "
    },
    {
        "id": 410,
        "Question": "Timer_B has _________",
        "Options": [
            "a) three serial communication ports",
            "b) seven LCD driver",
            "c) seven compare/capture channels",
            "d) three LED driver ports"
        ],
        "Answer": "Answer: c\nExplanation: Timer_B has seven compare/capture channels."
    },
    {
        "id": 411,
        "Question": "The capture/compare registers TBCCRn are double-buffered when used for compare events?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: The capture/compare registers TBCCRn are double-buffered when used for compare events."
    },
    {
        "id": 412,
        "Question": "The length of TBR can be programmed to be _________",
        "Options": [
            "a) 8 bits",
            "b) 12 bits",
            "c) 16 bits",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The length of TBR can be programmed to be 8, 12, 16 or 10 bits long."
    },
    {
        "id": 413,
        "Question": "TBOUTH can pin can be used to _________",
        "Options": [
            "a) values are moved from one place to another",
            "b) the length of the number of bits is selected by this register",
            "c) it can be used to put all the outputs of the Timer_B register in the high impedance state",
            "d) it can be used for outputting the input values of the timers"
        ],
        "Answer": "Answer: c\nExplanation: TBOUTH pin is used to put all the outputs of the Timer_B register in the high impedance state by a high external signal applied to this pin."
    },
    {
        "id": 414,
        "Question": "TBCLn provided in each channel is actually _________",
        "Options": [
            "a) a comparator",
            "b) compare latch",
            "c) controller",
            "d) control logic"
        ],
        "Answer": "Answer: b\nExplanation: TBCLn is actually a compare latch that is provided in its every channel."
    },
    {
        "id": 415,
        "Question": "When TBR counts to zero?",
        "Options": [
            "a) TBCLn is updated from TBCCRn",
            "b) CLLDx is updated to TBCCTLn",
            "c) CLLDx is updated to TBCCRn",
            "d) TBCLn is updated to CLLDx"
        ],
        "Answer": "Answer: a\nExplanation: When TBR counts to zero, TBCLn is updated from TBCCRn."
    },
    {
        "id": 416,
        "Question": "Which of the following is the analog to digital converter that is present in the MSP430 based processors?",
        "Options": [
            "a) comparator",
            "b) successive approximation ADC",
            "c) sigma delta ADC",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A comparator module, a successive approximation ADC module and a sigma delta ADC converters are found in the MSP based processors."
    },
    {
        "id": 417,
        "Question": "Higher resolution along with the slow speed is given by which ADC module?",
        "Options": [
            "a) comparator",
            "b) successive approximation ADC",
            "c) sigma delta ADC",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Higher resolution along with the slow speed is given by the sigma delta ADC module."
    },
    {
        "id": 418,
        "Question": "The technical terms that help us in differentiating between converters are:",
        "Options": [
            "a) resolution",
            "b) accuracy",
            "c) precision",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: While selecting the converter, necessary for our work we had to take care of the factors like resolution, accuracy and precision in it."
    },
    {
        "id": 419,
        "Question": "The number of repeated closeness to the true value is accounted by",
        "Options": [
            "a) resolution",
            "b) accuracy",
            "c) precision",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The degree of closeness of the measured value to the actual true value is its accuracy, while on the other hand the measure of the repeated accuracy is termed as the precision."
    },
    {
        "id": 420,
        "Question": "Resolution is _________",
        "Options": [
            "a) change in measured value from the true value",
            "b) the amount of change in the input value for the corresponding change of 1 unit in the output value",
            "c) as the measure of the repeated accuracy",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Resolution is defined as the amount of change in the input value for the corresponding change of 1 unit in the output value."
    },
    {
        "id": 421,
        "Question": "The process of reduction of a continuous input to a discrete output is",
        "Options": [
            "a) levelling",
            "b) signalling",
            "c) quantization",
            "d) converting"
        ],
        "Answer": "Answer: c\nExplanation: The process of reduction of a continuous input to a discrete output is called as quantization."
    },
    {
        "id": 422,
        "Question": "Which of the following functions can be used for converting the nearest integer to its argument?",
        "Options": [
            "a) int",
            "b) mint",
            "c) uint",
            "d) nint"
        ],
        "Answer": "Answer: d\nExplanation: nint is the function that is priorly used for converting the nearest integer to its argument."
    },
    {
        "id": 423,
        "Question": "Integral nonlinearity is termed as",
        "Options": [
            "a) process of reduction of a continuous input to a discrete output",
            "b) change in measured value from the true value",
            "c) maximum deviation between this corrected staircase and the actual transfer characteristic",
            "d) the function used in the quantization"
        ],
        "Answer": "Answer: c\nExplanation: Integral nonlinearity is termed as the maximum deviation between this corrected staircase and the actual transfer characteristic."
    },
    {
        "id": 424,
        "Question": "The SNR_______ with the increase of the number of bits.",
        "Options": [
            "a) remains constant",
            "b) goes up",
            "c) goes down",
            "d) goes asymmetrically"
        ],
        "Answer": "Answer: b\nExplanation: The SNR goes up with the number of bits."
    },
    {
        "id": 425,
        "Question": "The intervals between the samples are obtained from _________",
        "Options": [
            "a) Fs",
            "b) Ts",
            "c) Us",
            "d) Ks"
        ],
        "Answer": "Answer: b\nExplanation: The intervals between the samples is obtained by Ts that is equal to 1/fs.\n"
    },
    {
        "id": 426,
        "Question": "Comparator_A+ is controlled by which of the following peripheral registers?",
        "Options": [
            "a) CACTL1",
            "b) CACTL2",
            "c) CACTL1 & CACTL2",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Comparator_A+ is controlled by the CACTL1 and the CACTL2 registers."
    },
    {
        "id": 427,
        "Question": "CAON bit is used to ___________",
        "Options": [
            "a) start a timer",
            "b) start an A/D conversion",
            "c) switch on the comparator module",
            "d) switch on the bit transmission"
        ],
        "Answer": "Answer: c\nExplanation: CAON bit is used to switch on the comparator module namely, Comparator_A+."
    },
    {
        "id": 428,
        "Question": "P2CA4-P2CA0 bits are used for _______",
        "Options": [
            "a) giving the power supply to the comparator module",
            "b) for selecting the mode of operation of the comparator",
            "c) for connecting the non inverting inputs to the CA0-CA2 pins",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: P2CA4-P2CA0 bits are used for connecting the non inverting inputs to the CA0-CA2 pins."
    },
    {
        "id": 429,
        "Question": "CAREFx bits are used for _______",
        "Options": [
            "a) inputting a positive reference voltage",
            "b) inputting a negative reference voltage",
            "c) selecting the internal reference voltage",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: CAREFx bits are used for selecting the appropriate reference voltage for the comparator."
    },
    {
        "id": 430,
        "Question": "Which of the following bits are not actually associated with the comparator module?",
        "Options": [
            "a) CAREFx",
            "b) CLLDx",
            "c) CAON",
            "d) CAIFG"
        ],
        "Answer": "Answer: b\nExplanation: CLLDx bit is related to the Timer_2 module. All others are related to the comparator module."
    },
    {
        "id": 431,
        "Question": "Flag CAIFG is raised,",
        "Options": [
            "a) at a low level triggered pulse",
            "b) at a high level triggered pulse",
            "c) at the falling and rising edge of the pulse",
            "d) at the falling or rising edge of the pulse"
        ],
        "Answer": "Answer: d\nExplanation: Flag CAIFG is raised, at the falling or rising edge of the pulse that is selected by the CAIES bit."
    },
    {
        "id": 432,
        "Question": "Setting a bit in the Port Disable register CAPD causes the circuits for the usual digital input and output buffers to be disconnected from the appropriate pin.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Setting a bit in the Port Disable register CAPD causes the circuits for the usual digital input and output buffers to be disconnected from the appropriate pin."
    },
    {
        "id": 433,
        "Question": "Which bit is used for exchanging the two inputs of the comparator and invert its output to compensate?",
        "Options": [
            "a) CAIFG",
            "b) CASHORT",
            "c) CAPD",
            "d) CAEX"
        ],
        "Answer": "Answer: d\nExplanation: CAEX is used for exchanging the two inputs of the comparator and invert its output to compensate."
    },
    {
        "id": 434,
        "Question": "Changes in Vcc changes the value of V+?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: When some variation is made in the value of Vcc, in the same manner, itself the value of the V+ changes because, the voltage from the potential divider is proportional to Vcc. This changing effect can be reduced if the similar change takes place in the value of V- itself."
    },
    {
        "id": 435,
        "Question": "The relaxation oscillator circuit helps in _______",
        "Options": [
            "a) calculating the duration single RC transient",
            "b) setting the reference voltage",
            "c) setting the clock frequency",
            "d) calculating the conversion speed"
        ],
        "Answer": "Answer: a\nExplanation: The relaxation oscillator is a circuit that with the help of charging and discharging of an oscillator, help us in calculating the duration of the single RC transient."
    },
    {
        "id": 436,
        "Question": "The successive approximation converters have a resolution of _________",
        "Options": [
            "a) 8-10 bits",
            "b) 10-12 bits",
            "c) 12-16 bits",
            "d) 16-32 bits"
        ],
        "Answer": "Answer: b\nExplanation: The successive approximation converters have a resolution of about 10-12 bits in it."
    },
    {
        "id": 437,
        "Question": "In SAR based conversions, each bit typically requires one clock cycle (sometimes two) to make a comparison and set up the new voltage.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: In SAR based conversions, each bit typically requires one clock cycle (sometimes two) to make a comparison and set up the new voltage."
    },
    {
        "id": 438,
        "Question": "The main operations that are basically performed in a SAR ADC are?",
        "Options": [
            "a) logic to control the operation",
            "b) some way of generating the voltages, for comparison",
            "c) logic to control the operation and finding some way of generating the voltages for comparison",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The main operations that are basically performed in a SAR ADC are the logic to control the operation and finding some way of generating the voltages, for comparison."
    },
    {
        "id": 439,
        "Question": "Usually, a capacitor is inserted between an analog input and the ground because",
        "Options": [
            "a) it blocks the analog voltage",
            "b) it suppresses the noise",
            "c) it increases the gain",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: A capacitor is inserted between the analog input and the ground because it suppresses the noise."
    },
    {
        "id": 440,
        "Question": "ADC10 and ADC12 are _________",
        "Options": [
            "a) The converters",
            "b) SAR modules available in the MSP430",
            "c) Sigma delta modules available in the MSP430",
            "d) Comparator modules available in the MSP430"
        ],
        "Answer": "Answer: b\nExplanation: ADC10 and ADC12 are the SAR modules available in the MSP430."
    },
    {
        "id": 441,
        "Question": "ADC10 needs external capacitors on its voltage reference.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: ADC12 needs external capacitors on its voltage reference as compared to the ADC10 module."
    },
    {
        "id": 442,
        "Question": "ADC10CTL0 and ADC10CTL1 are registers",
        "Options": [
            "a) for controlling SAR module",
            "b) for controlling the sigma delta module",
            "c) for controlling the comparator module",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: ADC10CTL0 and ADC10CTL1 are the registers that are used for controlling the SAR module in the MSP430."
    },
    {
        "id": 443,
        "Question": "While conversion is in progress, which of the flag is affected.",
        "Options": [
            "a) ADC10ON",
            "b) ADC10MEM",
            "c) ADC10BUSY",
            "d) ADC10DF"
        ],
        "Answer": "Answer: c\nExplanation: While conversion is in progress, then ADC10BUSY flag is set."
    },
    {
        "id": 444,
        "Question": "ADC10SHTx bits allow_________cycles of the ADC10CLK.",
        "Options": [
            "a) 4",
            "b) 8",
            "c) 16",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: ADC10SHTx bits allow 4,8,16 and 64 cycles of the ADC10CLK."
    },
    {
        "id": 445,
        "Question": "The input to the ADC10 is selected from_______bits of the ADC10CTL1 register?",
        "Options": [
            "a) INCHx",
            "b) ADC10SC",
            "c) ADC10ON",
            "d) ENC"
        ],
        "Answer": "Answer: a\nExplanation: The input to the ADC10 is selected from the INCHx bits of the ADC10CTL1 register."
    },
    {
        "id": 446,
        "Question": "The basic idea behind the sigma delta converter is that",
        "Options": [
            "a) to carry out the conversion",
            "b) to carry out communication",
            "c) to reduce the circuit to its simplest way possible and then carry out the conversion",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The main idea behind the sigma delta converter is that to reduce the circuit to its simplest way possible and then carry out the conversion."
    },
    {
        "id": 447,
        "Question": "Sigma delta converter is a __________",
        "Options": [
            "a) 1 bit converter",
            "b) 2 bit converter",
            "c) 3 bit converter",
            "d) 4 bit converter"
        ],
        "Answer": "Answer: a\nExplanation: Sigma delta converter is a 1 bit converter."
    },
    {
        "id": 448,
        "Question": "Sigma delta converter is having good resolution.",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Sigma delta converter is having poor resolution quality."
    },
    {
        "id": 449,
        "Question": "Oversampling ratio is defined as the _________",
        "Options": [
            "a) final frequency",
            "b) oversampling frequency",
            "c) oversampling frequency/final frequency",
            "d) final frequency/oversampling frequency"
        ],
        "Answer": "Answer: c\nExplanation: Oversampling ratio is defined as the ration of the oversampling frequency fm to the final frequency fs."
    },
    {
        "id": 450,
        "Question": "Here the word sigma represents _________",
        "Options": [
            "a) subtraction",
            "b) differentiation",
            "c) integration",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In a sigma delta converter, sigma word represents that the output obtained from the delta function is getting integrated."
    },
    {
        "id": 451,
        "Question": "SD16_A features are controlled by _________",
        "Options": [
            "a) memory mapped registers",
            "b) register mapped registers",
            "c) data mapped registers",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: SD16_A features are controlled by the memory mapped registers."
    },
    {
        "id": 452,
        "Question": "The second part of the ADC handles purely digital signals.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: The second part of the ADC handles purely digital signals."
    },
    {
        "id": 453,
        "Question": "The second part of the ADC’s output is in the form of _________",
        "Options": [
            "a) the fast stream of single bits",
            "b) the fast stream of multiple bits",
            "c) the slow stream of single bits",
            "d) the slow stream of multiple bits"
        ],
        "Answer": "Answer: d\nExplanation: The second part of the ADC take in fast stream of single bit and give out a slow stream of multiple bit values."
    },
    {
        "id": 454,
        "Question": "The filtered digital signal is then decimated to",
        "Options": [
            "a) reduce the rate of samples from fm to fs",
            "b) reduce the rate of samples from fs to fm",
            "c) increase the rate of samples from fm to fs",
            "d) increase the rate of samples from fs to fm"
        ],
        "Answer": "Answer: a\nExplanation: The filtered digital output is then decimated in order to reduce the rate of samples from fm to fs."
    },
    {
        "id": 455,
        "Question": "Decimated means _________",
        "Options": [
            "a) multipled by 10",
            "b) multiplied by 100",
            "c) divided by 10",
            "d) divided by 100"
        ],
        "Answer": "Answer: c\nExplanation: Decimated means to divide the result by 10."
    },
    {
        "id": 456,
        "Question": "The SD16 has a second-order modulator with a _________",
        "Options": [
            "a) sinc filter",
            "b) sinc2 filter",
            "c) sinc3 fiter",
            "d) rect filter"
        ],
        "Answer": "Answer: c\nExplanation: The SD16 has a second-order modulator with a sinc3 filter."
    },
    {
        "id": 457,
        "Question": "What actually is a bit bagging?",
        "Options": [
            "a) it actually refers to the technique of assigning the bits with their inputs",
            "b) a technique by which an MSP430 can communicate through hardware",
            "c) a technique by which MSP430 can communicate through software",
            "d) a technique through which conversion becomes possible"
        ],
        "Answer": "Answer: c\nExplanation: Bit bagging is the technique through which a processor can communicate to its associate partners when an appropriate hardware is not available for its purpose. This communication is made possible through the software."
    },
    {
        "id": 458,
        "Question": "SPI, I2C, Asynchronous serial communication are the means of communicating a processor with its associate partners?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: SPI, I2C, Asynchronous serial communication are the means for the processor by which communication is made possible."
    },
    {
        "id": 459,
        "Question": "All digital communications don’t require any clock.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Clock is the prior need for any communication to occur. This is because synchronization is maintained with the help of a clock."
    },
    {
        "id": 460,
        "Question": "SPI needs______ wires than I2C?",
        "Options": [
            "a) less",
            "b) same",
            "c) more",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: c\nExplanation: In SPI, there is no control of transmission in software—no addresses or acknowledgment, that’s why it requires more amount of wires."
    },
    {
        "id": 461,
        "Question": "USI handles _________",
        "Options": [
            "a) SPI",
            "b) I2C",
            "c) SPI & I2C",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: USI(Universal Serial Interface) supports both the types of synchronous communication i.e. SPI and I2C."
    },
    {
        "id": 462,
        "Question": "USCI consists of _________",
        "Options": [
            "a) one channel",
            "b) two channels",
            "c) three channels",
            "d) four channels"
        ],
        "Answer": "Answer: b\nExplanation: USCI consists of mainly two channels, A and B. These are largely independent but share a few registers and interrupt vectors."
    },
    {
        "id": 463,
        "Question": "LIN is enabled in which of the following channels?",
        "Options": [
            "a) A",
            "b) B",
            "c) C",
            "d) D"
        ],
        "Answer": "Answer: a\nExplanation: Channel A is the asynchronous receiver/ transmitter channel. It can detect the baud rate of an incoming signal, which enables its use on a local interconnect network (LIN)."
    },
    {
        "id": 464,
        "Question": "Can one device have more than one USC interfaces?",
        "Options": [
            "a) yes",
            "b) no",
            "c) depends on the conditions",
            "d) cant be said"
        ],
        "Answer": "Answer: a\nExplanation: Yes, one device can have more than one USC interfaces. There is a small difference because the interrupt flags and enable bits for the “0” modules are in a special function registers IFG2 and IE2, while those for the “1” modules are in their own registers, UC1IFG and UC1IE."
    },
    {
        "id": 465,
        "Question": "Which of the following conditions is more difficult to attain?",
        "Options": [
            "a) synchronous masters",
            "b) synchronous slaves",
            "c) asynchronous masters",
            "d) asynchronous slaves"
        ],
        "Answer": "Answer: d\nExplanation: Synchronous slaves are the most difficult to attain because the problem is that the slave must react quickly when a clock transition arrives from the master."
    },
    {
        "id": 466,
        "Question": "Timer_A is used in _________",
        "Options": [
            "a) SPI",
            "b) I2C",
            "c) Asynchronous Serial Communication",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Timer_A is used in the Asynchronous Serial Communication."
    },
    {
        "id": 467,
        "Question": "Is SPI a full duplex technique?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, SPI is a technique where a data can be transmitted/ received in both the directions."
    },
    {
        "id": 468,
        "Question": "The concept of SPI is based on __________",
        "Options": [
            "a) two counters",
            "b) four flip flops",
            "c) two shift registers",
            "d) four steady state machines"
        ],
        "Answer": "Answer: c\nExplanation: The concept of the SPI is based on the two shift registers, one for the transmitter and the other is there for the receiver terminal."
    },
    {
        "id": 469,
        "Question": "Writing on the trailing edge of the clock pulse and reading on the leading edge of the clock pulse is done when",
        "Options": [
            "a) CPHA is set",
            "b) CPHA is reset",
            "c) CPOL is set",
            "d) CPOL is reset"
        ],
        "Answer": "Answer: b\nExplanation: When CPHA is reset to zero, then writing on the trailing edge of the clock pulse and reading on the leading edge of the clock pulse."
    },
    {
        "id": 470,
        "Question": "When CPOL=1 then,",
        "Options": [
            "a) clock idles high between transfers",
            "b) clock idles low between transfers",
            "c) bit idles high between transfers",
            "d) bit ideals low between transfers"
        ],
        "Answer": "Answer: a\nExplanation: When CPOL=1, clock idles high between transfers."
    },
    {
        "id": 471,
        "Question": "Is CPKH and CPOL the same.",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: CPKL=CPOL and CPKH=(not CPHA)."
    },
    {
        "id": 472,
        "Question": "SPI with the USI can be selected by ________",
        "Options": [
            "a) setting the USII2C bit in the register USICTL1",
            "b) clearing the USII2C bit in the register USICTL1",
            "c) setting the USIPE5–7 bits in USICTL0",
            "d) clearing the USIPE5–7 bits in USICTL0"
        ],
        "Answer": "Answer: b\nExplanation: SPI with the USi can be selected by clearing the USII2C bit in the register USICTL1."
    },
    {
        "id": 473,
        "Question": "SCLK, SDO, and SDI are found ___________ on F20x3.",
        "Options": [
            "a) P1.0-2",
            "b) P1.2-4",
            "c) P1.4-6",
            "d) P1.5-7"
        ],
        "Answer": "Answer: d\nExplanation: SCLK, SDO, and SDI are found at P1.5-7 on F20x3."
    },
    {
        "id": 474,
        "Question": "Transmission and reception are made at a time in SPI?",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Transmission and reception occur at a time in SPI. This means that a value is received only if the transmitter is active."
    },
    {
        "id": 475,
        "Question": "When the buffer is ________ the low power mode is__________",
        "Options": [
            "a) empty, reset",
            "b) having one byte, reset",
            "c) full, reset",
            "d) empty, two"
        ],
        "Answer": "Answer: c\nExplanation: When the buffer is full, the low power mode is cleared."
    },
    {
        "id": 476,
        "Question": "Falling edge of the SS pin denotes ________",
        "Options": [
            "a) end of the transfer",
            "b) starts a new transfer",
            "c) selects a new master",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Falling edge of the SS pin denotes the start of a new transfer over SPI."
    },
    {
        "id": 477,
        "Question": "The I2C bus uses which of the following lines?",
        "Options": [
            "a) CLK",
            "b) MISO",
            "c) SDA",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The I2C bus uses only two lines. They are SDA and SCL."
    },
    {
        "id": 478,
        "Question": "I2C is a faster means of data transfer than SPI?",
        "Options": [
            "a) yes",
            "b) no",
            "c) depends on the conditions",
            "d) cant be said"
        ],
        "Answer": "Answer: b\nExplanation: I2C is a slower means of transfer than SPI because here only one line is there for the two way communication to occur."
    },
    {
        "id": 479,
        "Question": "Each slave has its unique address.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, in I2C protocol each slave has its own unique address, in order to differentiate it from others."
    },
    {
        "id": 480,
        "Question": "Pull-up resistors Rp keep the lines at VCC when _____________",
        "Options": [
            "a) all the drivers are active",
            "b) none of the drivers are active",
            "c) some the drivers are at sleep",
            "d) none of the drivers is at sleep"
        ],
        "Answer": "Answer: b\nExplanation: Pull-up resistors Rp keep the lines at VCC when all of the drivers are active."
    },
    {
        "id": 481,
        "Question": "Rising edge on SDA while SCL is high denotes __________",
        "Options": [
            "a) start condition (S)",
            "b) stop condition (P)",
            "c) transfer in progress",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Rising edge on SDA while SCL is high denotes the stop condition of the transfer."
    },
    {
        "id": 482,
        "Question": "Which of the following is an issue while programming I2C using the software?",
        "Options": [
            "a) open-collector output",
            "b) open-drain output",
            "c) totem pole output",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: There are two main issues while programming I2C using software, they are the open-drain output and the detection of start and stop conditions."
    },
    {
        "id": 483,
        "Question": "Which of the following is the slave to be addressed when a device acts as a master?",
        "Options": [
            "a) UCB0I2COA",
            "b) UCB0I2CSA",
            "c) UCB0I2CIE",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: UCB0I2CSA is the slave to be addressed when a device acts as a master."
    },
    {
        "id": 484,
        "Question": "Is baud rate selected in I2C?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: Yes, baud rate is also selected in the I2C module, as is the case with the SPI module."
    },
    {
        "id": 485,
        "Question": "How is I2C with USI different from I2C with USI_B?",
        "Options": [
            "a) there is only one common pin between the two devices",
            "b) here in this case no synchronization is important",
            "c) the outputs of SDA and SCL are open drain",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: I2C is different in USI than that of USI_B module because here in this module, the output pins SDA and the SCL are open drains in nature."
    },
    {
        "id": 486,
        "Question": "UCB0RXIFG is set when ________",
        "Options": [
            "a) complete byte is acknowledged",
            "b) complete byte is transmitted",
            "c) complete byte is received",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: UCB0RXIFG is set when the complete byte sent via I2C is received."
    },
    {
        "id": 487,
        "Question": "Asynchronous serial communication usually requires two wires for each direction plus a common ground.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: Asynchronous serial communication usually requires only a single wire for each direction plus a common ground."
    },
    {
        "id": 488,
        "Question": "In an asynchronous mode of transmission, usually the data is sent along with the",
        "Options": [
            "a) the start bit",
            "b) the stop bit",
            "c) the start & stopbit",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: In an asynchronous mode of transmission, both the start and the stop bits are present that are basically used for intimating the other terminal that whether the data had received correctly the other destination or not."
    },
    {
        "id": 489,
        "Question": "The _____ rate gives the frequency at which the bits are transmitted on the line.",
        "Options": [
            "a) bit rate",
            "b) packet rate",
            "c) baud rate",
            "d) data rate"
        ],
        "Answer": "Answer: c\nExplanation: Baud rate is the rate which determines us the frequency at which the bits are transmitted on the line."
    },
    {
        "id": 490,
        "Question": "Baud rate is the reverse of the ________",
        "Options": [
            "a) baud time",
            "b) baud period",
            "c) bit time",
            "d) bit period"
        ],
        "Answer": "Answer: b\nExplanation: Baud rate is the reverse of the baud period."
    },
    {
        "id": 491,
        "Question": "Clock is transmitted in the asynchronous communication?",
        "Options": [
            "a) yes",
            "b) no",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: b\nExplanation: No clock is transmitted in the asynchronous communication, so the transmitter and the receiver are allowed to work independently at their own terminals."
    },
    {
        "id": 492,
        "Question": "A framing error occurs is the bit is ________",
        "Options": [
            "a) high",
            "b) low",
            "c) same",
            "d) changed"
        ],
        "Answer": "Answer: b\nExplanation: Framing error occurs if the bit is low."
    },
    {
        "id": 493,
        "Question": "What is the non return to zero format?",
        "Options": [
            "a) the bits are either high or low and have no gaps between them",
            "b) the bits are either high or low and have gaps between them",
            "c) the bits are high and have gaps between them",
            "d) the bits are low and have no gaps between them"
        ],
        "Answer": "Answer: a\nExplanation: Non-return to zero format represents a format in which the bits are either high or low and have no gaps between them."
    },
    {
        "id": 494,
        "Question": "LSB is sent first in case of the non return to zero format.",
        "Options": [
            "a) true",
            "b) false",
            "c) cant be said",
            "d) depends on the conditions"
        ],
        "Answer": "Answer: a\nExplanation: In non-return to zero format, normally LSB is sent first."
    },
    {
        "id": 495,
        "Question": "There are _______ clocks in the USCI_A.",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "Answer: c\nExplanation: they are 3 clocks in the USCI_A. They are BRCLK, BITCLK and BITCLK16."
    },
    {
        "id": 496,
        "Question": "BITCLK16 is the ________",
        "Options": [
            "a) sampling clock in the undersampling mode",
            "b) sampling clock in the oversampling mode",
            "c) quantising clock in the undersampling mode",
            "d) quantising clock in the oversampling mode"
        ],
        "Answer": "Answer: b\nExplanation: BITCLK16 is the sampling clock in the oversampling mode."
    }
]
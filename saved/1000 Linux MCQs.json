[
    {
        "id": 1,
        "Question": "To increase the response time and throughput, the kernel minimizes the frequency of disk access by keeping a pool of internal data buffer called",
        "Options": [
            "a) Pooling",
            "b) Spooling",
            "c) Buffer cache",
            "d) Swapping"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 2,
        "Question": "At start of process execution, STDOUT & STDERR",
        "Options": [
            "a) Point to current terminal device",
            "b) Are closed",
            "c) Point to special files on the system",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 3,
        "Question": "wtmp and utmp files contain:",
        "Options": [
            "a) Temporary system data",
            "b) User login-logout log",
            "c) The user’s command execution log",
            "d) The user’s su and sudo attempts"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 4,
        "Question": "Which is the core of the operating system?",
        "Options": [
            "a) Shell",
            "b) Kernel",
            "c) Commands",
            "d) Script"
        ],
        "Answer": "  Answer: b\nExplanation: None.   "
    },
    {
        "id": 5,
        "Question": "ILP32 stands for",
        "Options": [
            "a) 32 bit Integer, Long & Pointer",
            "b) 32 bit Integrated Long & Pointer",
            "c) 32 bit Intelligent Long & Pointer",
            "d) 32 bit Long & Pointer"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 6,
        "Question": "Single Unix Specification Version 2 provides enhanced support for",
        "Options": [
            "a) 16 bit Unix",
            "b) 32 bit Unix",
            "c) 64 bit Unix",
            "d) 8 bit Unix"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 7,
        "Question": "Which among the following interacts directly with system hardware?",
        "Options": [
            "a) Shell",
            "b) Commands",
            "c) Kernel",
            "d) Applications"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 8,
        "Question": "Applications communicate with kernel by using:",
        "Options": [
            "a) System Calls",
            "b) C Programs",
            "c) Shell Script",
            "d) Shell"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 9,
        "Question": "Solaris is the name of a flavor of UNIX from",
        "Options": [
            "a) HP",
            "b) IBM",
            "c) Digital Equipment Corp",
            "d) Sun Microsystems"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 10,
        "Question": "Which of the following  is “NOT” a UNIX variant ?",
        "Options": [
            "a) Solaris",
            "b) AIX",
            "c) IRIX",
            "d) AS400"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 11,
        "Question": "The system calls in UNIX is written using which language",
        "Options": [
            "a) C",
            "b) C++",
            "c) Assembly Language",
            "d) Fortran"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 12,
        "Question": "Which of the following enables multi-tasking in UNIX?",
        "Options": [
            "a) Time Sharing",
            "b) Multi programming",
            "c) Multi user",
            "d) Modularity"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 13,
        "Question": "Which of the following is considered as the super daemon in Unix?",
        "Options": [
            "a) sysinit",
            "b) init",
            "c) inetd",
            "d) proc"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 14,
        "Question": "Unix is which kind of Operating System?",
        "Options": [
            "a) Multi User",
            "b) Multi Processes",
            "c) Multi Tasking",
            "d) All of the mentioned"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 15,
        "Question": "SVR4 stands for?",
        "Options": [
            "a) Standard Version Release 4",
            "b) System Version Release 4",
            "c) Standard Five Release 4",
            "d) System Five Release 4"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 16,
        "Question": "Lp0 device file is used to access:",
        "Options": [
            "a) Floppy",
            "b) Cdrom",
            "c) Printer",
            "d) Tape drive"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 17,
        "Question": "Syntax of any Unix command is:",
        "Options": [
            "a) command [options] [arguments].",
            "b) command options [arguments].",
            "c) command [options] [arguments].",
            "d) command options arguments"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 18,
        "Question": "SVR4 was developed by",
        "Options": [
            "a) Sun Microsystems",
            "b) AT&T",
            "c) University of Berkeley",
            "d) Sun and AT&T jointly"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 19,
        "Question": "Which of these is not a Unix Flavor?",
        "Options": [
            "a) BSD",
            "b) MAC",
            "c) AIX",
            "d) IRIX"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 20,
        "Question": "Which of the following statement is FALSE ?",
        "Options": [
            "a) Unix supports multiple users",
            "b) Linux is an open source operating system and the source code is shared",
            "c) Shell takes care of inter process communication",
            "d) Shell provides the feature of I/O Redirection"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 21,
        "Question": "Which of the following UNIX flavor is from IBM?",
        "Options": [
            "a) BSD",
            "b) Solaris",
            "c) HP-UX",
            "d) AIX"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 22,
        "Question": "x86-32 uses which programming model?",
        "Options": [
            "a) IP16",
            "b) IP32",
            "c) ILP16",
            "d) ILP32"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 23,
        "Question": "What are the sizes of (Integer/Long/Pointer) in LP64 programming model?",
        "Options": [
            "a) 8/8/8",
            "b) 4/4/8",
            "c) 4/8/8",
            "d) 4/8/4"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 24,
        "Question": "Which among the following is used to write small programs to control Unix functionalities?",
        "Options": [
            "a) Shell Commands",
            "b) Shell Script",
            "c) Filters",
            "d) C Language"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 25,
        "Question": "What control character signals the end of the input file?",
        "Options": [
            "a) ctrl + a",
            "b) ctrl + b",
            "c) ctrl + c",
            "d) ctrl + d"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 26,
        "Question": "How do you get help about the command “cp”?",
        "Options": [
            "a) help cp",
            "b) man cp",
            "c) cd ?",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 27,
        "Question": "The dmesg command",
        "Options": [
            "a) Shows user login logoff attempts",
            "b) Shows the syslog file for info messages",
            "c) kernel log messages",
            "d) Shows the daemon log messages"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 28,
        "Question": "The command “mknod myfifo b 4 16”",
        "Options": [
            "a) Will create a block device if user is root",
            "b) Will create a block device for all users",
            "c) Will create a FIFO if user is not root",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: a\nExplanation: None."
    },
    {
        "id": 29,
        "Question": "Which command is used to set terminal IO characteristic?",
        "Options": [
            "a) tty",
            "b) ctty",
            "c) ptty",
            "d) stty"
        ],
        "Answer": "  Answer: d\nExplanation: None."
    },
    {
        "id": 30,
        "Question": "Which command is used to record a user login session in a file",
        "Options": [
            "a) macro",
            "b) read",
            "c) script",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 31,
        "Question": "Which command is used to display the operating system name",
        "Options": [
            "a) os",
            "b) unix",
            "c) kernel",
            "d) uname"
        ],
        "Answer": "  Answer: d\nExplanation: None."
    },
    {
        "id": 32,
        "Question": "Which command is used to display the unix version",
        "Options": [
            "a) uname -r",
            "b) uname -n",
            "c) uname -t",
            "d) kernel"
        ],
        "Answer": "  Answer: a\nExplanation: None."
    },
    {
        "id": 33,
        "Question": "Which command is used to print a file",
        "Options": [
            "a) print",
            "b) ptr",
            "c) lpr",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 34,
        "Question": "Using which command you find resource limits to the session?",
        "Options": [
            "a) rlimit",
            "b) ulimit",
            "c) setrlimit",
            "d) getrlimit"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 35,
        "Question": "Which option of ls command used to view file inode number",
        "Options": [
            "a) –l",
            "b) -o",
            "c) –a",
            "d) –i"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 36,
        "Question": "Find / -name ‘*’ will",
        "Options": [
            "a) List all files and directories recursively starting from /",
            "b) List a file named * in /",
            "c) List all files in / directory",
            "d) List all files and directories in / directory"
        ],
        "Answer": "  Answer: a\nExplanation: None."
    },
    {
        "id": 37,
        "Question": "Which command is used to display the octal value of the text",
        "Options": [
            "a) octal",
            "b) text_oct",
            "c) oct",
            "d) od"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 38,
        "Question": "Which command is used to view compressed text file contents",
        "Options": [
            "a) cat",
            "b) type",
            "c) zcat",
            "d) print"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 39,
        "Question": "Which command changes a file’s group owner",
        "Options": [
            "a) cgrp",
            "b) chgrp",
            "c) change",
            "d) group"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 40,
        "Question": "Which command is used to extract intermediate result in a pipeline",
        "Options": [
            "a) tee",
            "b) extract",
            "c) exec",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 41,
        "Question": "Which command is used to extract a column from a text file",
        "Options": [
            "a) paste",
            "b) get",
            "c) cut",
            "d) tar"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 42,
        "Question": "Which command is used to display disk consumption of a specific directory",
        "Options": [
            "a) du",
            "b) ds",
            "c) dd",
            "d) dds"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 43,
        "Question": "Which command is used to perform backup in unix?",
        "Options": [
            "a) backup",
            "b) cpio",
            "c) zip",
            "d) gzip"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 44,
        "Question": "Which command creates an empty file if file does not exist?",
        "Options": [
            "a) cat",
            "b) touch",
            "c) ed",
            "d) read"
        ],
        "Answer": "  Answer: b\nExplanation: None."
    },
    {
        "id": 45,
        "Question": "Which option of rm command is used to remove a directory with all its subdirectories",
        "Options": [
            "a) –b",
            "b) –o",
            "c) –p",
            "d) –r"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 46,
        "Question": "Which command is used to identify file type?",
        "Options": [
            "a) Type",
            "b) File",
            "c) Finfo",
            "d) Info"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 47,
        "Question": "Command used to determine the path of an executable file is",
        "Options": [
            "a) which",
            "b) where",
            "c) wexec",
            "d) what"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 48,
        "Question": "Command used to count number of character in a file is",
        "Options": [
            "a) grep",
            "b) wc",
            "c) count",
            "d) cut"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 49,
        "Question": "Which of these commands could you use to show one page of output at a time?",
        "Options": [
            "a) less",
            "b) sed",
            "c) pause",
            "d) grep"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 50,
        "Question": "Which commands will give you information about how much disk space each file in the current directory uses?",
        "Options": [
            "a) ls -l",
            "b) ls -la",
            "c) du",
            "d) ls -a"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 51,
        "Question": "Which of the following command output contains userid?",
        "Options": [
            "a) ls",
            "b) help",
            "c) date",
            "d) ls –l"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 52,
        "Question": "Which command is used to display all the files including hidden files in your current and its subdirectories ?",
        "Options": [
            "a) ls –aR",
            "b) ls –a",
            "c) ls –R",
            "d) ls –l"
        ],
        "Answer": "  Answer: a\nExplanation: None.   "
    },
    {
        "id": 53,
        "Question": "Which of the following commands can be used to copy files across systems?",
        "Options": [
            "a) ssh",
            "b) telnet",
            "c) rsh",
            "d) ftp"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 54,
        "Question": "pwd command displays",
        "Options": [
            "a) user password",
            "b) password file content",
            "c) present working directory",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 55,
        "Question": "Which of the following commands can be used to change default permissions for files and directories at the time of creation",
        "Options": [
            "a) Chmod",
            "b) Chown",
            "c) Umask",
            "d) Chgrp"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 56,
        "Question": "Which tar command option is used to list the files in a tape archive format?",
        "Options": [
            "a) cvf",
            "b) tvf",
            "c) xvf",
            "d) ovf"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 57,
        "Question": "Which of the following commands will allow the user to search contents of a file for a particular pattern",
        "Options": [
            "a) touch",
            "b) grep",
            "c) find",
            "d) ls"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 58,
        "Question": "Write the command to display the current date in the form dd/mm/yyyy.",
        "Options": [
            "a) date +%d/%m/%Y",
            "b) date +”%d/%m/%Y”",
            "c) date +/%d/%m/20%y",
            "d) date +”/%d/%m/20%y”"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 59,
        "Question": "The command syntax to display the file ‘sample.txt’ one page at a time is",
        "Options": [
            "a) man sample.txt>more",
            "b) cat sample.txt<more",
            "c) cat sample.txt|more",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 60,
        "Question": "Which one shows the name of the operating system?",
        "Options": [
            "a)  uname -n",
            "b)  uname -r",
            "c)  uname -o",
            "d)  uname –m"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 61,
        "Question": "How do you add (append) a file “file1” to the example.tar file",
        "Options": [
            "a) no you cannot add a file to example.tar",
            "b) tar -cvf example.tar file1",
            "c) tar -rvf file1 example.tar",
            "d) tar -evf file1 example.tar"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 62,
        "Question": "How to execute ls command inside a vi editor?",
        "Options": [
            "a) !ls",
            "b) :ls",
            "c) :!ls",
            "d) we can’t execute"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 63,
        "Question": "Which command gives the first byte where the difference is in the file1 & file2?",
        "Options": [
            "a) diff",
            "b) cmp",
            "c) comm",
            "d) ls -a"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 64,
        "Question": "To open a file file1 with cursor at line number 4",
        "Options": [
            "a) vi +num file1",
            "b) vi +set num file1",
            "c) vi + “set num” file1",
            "d) vi +/se nu file1"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 65,
        "Question": "sed is a command typically used for",
        "Options": [
            "a) Perform complex calculations",
            "b) Perform FIFO based non-blocking I/O",
            "c) Modify/print selective contents of a file",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 66,
        "Question": "What communication command provides communication to another user logged on by writing to the bottom of their terminal?",
        "Options": [
            "a) talk",
            "b) write",
            "c) chat",
            "d) transmit"
        ],
        "Answer": " Answer: a\nExplanation: None.  "
    },
    {
        "id": 67,
        "Question": "Which screen manipulation command sets the screen back to normal?",
        "Options": [
            "a) tput cup",
            "b) tput smso",
            "c) tput rmso",
            "d) tput blink"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 68,
        "Question": "Which command will you use to see the available routes?",
        "Options": [
            "a) show route",
            "b) route status",
            "c) netstat -r",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 69,
        "Question": "Which of the following time stamps need not exist for a file on traditional unix file system",
        "Options": [
            "a) Access Time",
            "b) Modification Time",
            "c) Creation Time",
            "d) Change Time"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 70,
        "Question": "Which command is used to set limits on file size",
        "Options": [
            "a) fsize",
            "b) flimit",
            "c) ulimit",
            "d) usize"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 71,
        "Question": "Which option of rmdir command will remove all directories a, b, c if path is a/b/c",
        "Options": [
            "a) –b",
            "b) –o",
            "c) –p",
            "d) –t"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 72,
        "Question": "Which represents the user home directory",
        "Options": [
            "a) /",
            "b) .",
            "c) ..",
            "d) ~"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 73,
        "Question": "If a file is removed in Unix using ‘rm’ then",
        "Options": [
            "a) The file can be recovered by a normal user",
            "b) The file cannot be recovered by a user",
            "c) The file can be fully recovered provided the sytem is not rebooted",
            "d) The file will be moved to /lost+found directory and can be recovered only by administrator’s intervention"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 74,
        "Question": "Executing the ‘cd ..’ command when at the root level causes",
        "Options": [
            "a) Error message indicating the user can’t access beyond the root level",
            "b) Behavior is unix-flavor dependent",
            "c) Results in changing to the ‘home’ directory",
            "d) Nothing happens"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 75,
        "Question": "How do you rename file “new” to file “old”?",
        "Options": [
            "a) mv new old",
            "b) move new old",
            "c) cp new old",
            "d) rn new old"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 76,
        "Question": "What command is used to copy files and directories?",
        "Options": [
            "a) copy",
            "b) cp",
            "c) rn",
            "d) cpy"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 77,
        "Question": "When mv f1 f2 is executed which file’s inode is freed?",
        "Options": [
            "a) f1",
            "b) f2",
            "c) new inode will be used",
            "d) no inode is freed"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 78,
        "Question": "Any file’s attribute information is stored in which structure on the disk",
        "Options": [
            "a) Inode",
            "b) Data blocks",
            "c) File blocks",
            "d) Directory file"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 79,
        "Question": "How many links are created when we creat a directory file?",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 80,
        "Question": "A user creates a link to a file file1 using the following command “ln file1 file2”. Which of the following is not true?",
        "Options": [
            "a) file1 and file2 have the same inode numbers",
            "b) The number of links for file1 is displayed as 1",
            "c) The number of links for file1 is displayed as 2",
            "d) The number of links for file2 is displayed as 2"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 81,
        "Question": "There are two hard links to the “file1” say hl and h2 and a softlink sl. What happens if we deleted the “file1”?",
        "Options": [
            "a) We will still be able to access the file with hl and h2 but not with sl",
            "b) We will not be able to access the file with hl and h2 but with sl",
            "c) We will be able to access the file with any of hl, h2 and sl",
            "d) We will not be able to access the file with any of hl, h2 and sl"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 82,
        "Question": " If two files on same partition point to the same inode structure they are called",
        "Options": [
            "a) Soft links",
            "b) Hard links",
            "c) Alias",
            "d) Special files"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 83,
        "Question": "Deleting a soft-link",
        "Options": [
            "a) Deletes the destination file",
            "b) Deletes both the softlink and the destination file",
            "c) Deletes just the softlink",
            "d) backup of the destination is automatically created"
        ],
        "Answer": "  Answer: b\nExplanation: None."
    },
    {
        "id": 84,
        "Question": "Creation of hardlinks that point across partitions",
        "Options": [
            "a) is allowed only to root user",
            "b) can be done by all users",
            "c) the effects are unspecified",
            "d) is not allowed"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 85,
        "Question": "Which command is used to change permissions of files and directories?",
        "Options": [
            "a) mv",
            "b) chgrp",
            "c) chmod",
            "d) set"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 86,
        "Question": "Where can I find the printer in the file structure?",
        "Options": [
            "a) /etc",
            "b) /dev",
            "c) /lib",
            "d) /printer"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 87,
        "Question": "Which of the following statement is true?",
        "Options": [
            "a) The cp command will preserve the meta data of the file",
            "b) The sort command by default sorts in the numeric order",
            "c) The mv command will preserve the meta data of the file",
            "d) The command ps will display the filesystem usage"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 88,
        "Question": "What UNIX command is used to update the modification time of a file?",
        "Options": [
            "a) time",
            "b) modify",
            "c) cat",
            "d) touch"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 89,
        "Question": "When you use the ln command, which of the following occurs?",
        "Options": [
            "a) a file is created that points to an existing file",
            "b) a file is created that is a copy of an existing file",
            "c) a file is moved from one location to another",
            "d) a file is renamed"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 90,
        "Question": "srwxr-xrw- is a",
        "Options": [
            "a) internet socket file",
            "b) unix domain socket file",
            "c) symbolic link",
            "d) shared file"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 91,
        "Question": "Binary or executable files are:",
        "Options": [
            "a) Regular files",
            "b) Device files",
            "c) Special files",
            "d) Directory files"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 92,
        "Question": "The directory file contains:",
        "Options": [
            "a) File names & File Sizes",
            "b) File names & Inode Numbers",
            "c) File names & Address",
            "d) File names & Permissions"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 93,
        "Question": "Which directory contain device special files?",
        "Options": [
            "a)  /etc",
            "b) /etc/dev",
            "c) /root/bin",
            "d) /dev"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 94,
        "Question": "Which of the following is not a valid file type on Linux",
        "Options": [
            "a) Socket",
            "b) Softlink",
            "c) Inode",
            "d) FIFO"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 95,
        "Question": "Which of the following is not correct statement regarding file types?",
        "Options": [
            "a) Hard links share same inode number",
            "b) Soft links cannot be created across partitions",
            "c) Socket files are Unix domain sockets",
            "d) Character file is a special file"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 96,
        "Question": "Which are the two types of device files?",
        "Options": [
            "a) Character & Block",
            "b) Character & Socket",
            "c) Block & FIFO",
            "d) Input & output"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 97,
        "Question": "Which is an example for character special file?",
        "Options": [
            "a) Hard disk",
            "b) CD-ROM",
            "c) Terminal",
            "d) Memory"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 98,
        "Question": "Which is an example for block special file?",
        "Options": [
            "a) Virtual Terminal",
            "b) CD-ROM",
            "c) Terminal",
            "d) Serial modem"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 99,
        "Question": "All device files are stored in which directory?",
        "Options": [
            "a) /etc",
            "b) /bin",
            "c) /dev",
            "d) /usr"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 100,
        "Question": "The file permission 764 means:",
        "Options": [
            "a) Every one can read, group can execute only and the owner can read and write",
            "b) Every one can read and write, but owner alone can execute",
            "c) Every one can read, group including owner can write, owner alone can execute",
            "d) Every one can read and write and execute"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 101,
        "Question": "The permission -rwxr–r– represented in octal expression will be",
        "Options": [
            "a) 777",
            "b) 666",
            "c) 744",
            "d) 711"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 102,
        "Question": "Effective user id can be set using following permission",
        "Options": [
            "a) 0777",
            "b) 2666",
            "c) 4744",
            "d) 1711"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 103,
        "Question": "Effective group id can be set using following permission",
        "Options": [
            "a) 0777",
            "b) 2666",
            "c) 4744",
            "d) 1711"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 104,
        "Question": "Sticky bit can be set using following permission",
        "Options": [
            "a) 0777",
            "b) 2666",
            "c) 4744",
            "d) 1711"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 105,
        "Question": "The permission -rwSr–r– represented in octal expression will be",
        "Options": [
            "a) 0777",
            "b) 2666",
            "c) 4744",
            "d) 4644"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 106,
        "Question": "The permission -rwxr-sr– represented in octal expression will be",
        "Options": [
            "a) 0777",
            "b) 2766",
            "c) 2744",
            "d) 2754"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 107,
        "Question": "If user tries to remove (rm) a readonly file (444 permission), what will happen?",
        "Options": [
            "a) The file is removed successfully (and silently)",
            "b) The rm command prompts for a confirmation, the command is successful upon confirmation",
            "c) The rm command prompts for a confirmation, however the operation fails because of insufficient permissions",
            "d) The rm command fails because of insufficient permissions"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 108,
        "Question": "A user does a chmod operation on a file. Which of the following is true?",
        "Options": [
            "a) The last accessed time of the file is updated",
            "b) The last modification time of the file is updated",
            "c) The last change time of the file is updated",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 109,
        "Question": "If the umask value is 0002. what will be the permissions of new directory",
        "Options": [
            "a) 777",
            "b) 775",
            "c) 774",
            "d) 664"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 110,
        "Question": "What is the command to set the execute permissions to all the files and subdirectories within the directory /home/user1/direct",
        "Options": [
            "a) chmod –r +x /home/user1/direct",
            "b) chmod –R +x /home/user1/direct",
            "c) chmod –f –r +x /home/user1/direct",
            "d) chmod –F +x /home/user1/direct"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 111,
        "Question": "The permission -rwxr-xr-t represented in octal expression will be",
        "Options": [
            "a) 0777",
            "b) 1755",
            "c) 1754",
            "d) 2754"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 112,
        "Question": "With a umask value of 112, what is the default permission assigned to newly created regular file?",
        "Options": [
            "a) —x–x-wx",
            "b) -rw-rw-r–",
            "c) -r-xr-x-r–",
            "d) -rw-rw-r–"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 113,
        "Question": "Which command is used to assign read-write permission to the owner?",
        "Options": [
            "a) chmod a+r file",
            "b) chmod o+r file",
            "c) chmod u=rw file",
            "d) chmod og-r file"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 114,
        "Question": "Which of these commands will set the permissions on file textfile to read and write for the owner, read for the group, and nothing for everyone else?",
        "Options": [
            "a) chmod 046 textfile",
            "b) chmod 640 textfile",
            "c) chmod 310 textfile",
            "d) chmod rw r nil textfile"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 115,
        "Question": "If you are a root user, how can you grand execute permission only for the owner of the file project1?",
        "Options": [
            "a) chmod +x project1",
            "b) chmod u+x project1",
            "c) chmod a+x project1",
            "d) chmod U+X project1"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 116,
        "Question": "What does chmod +t  do?",
        "Options": [
            "a) wrong syntax",
            "b) set effective userid for filename",
            "c) set effective groupid for filename",
            "d) set the sticky bit"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 117,
        "Question": "Which of the following umask settings doesn’t allow execute permission to be set by default on directory files",
        "Options": [
            "a) 222",
            "b) 111",
            "c) 000",
            "d) 444"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 118,
        "Question": "Which of the following umask settings allow execute permission to be set by default on regular files",
        "Options": [
            "a) 222",
            "b) 111",
            "c) 000",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 119,
        "Question": "The command chmod 4777 a.out",
        "Options": [
            "a) will set the suid bit of a.out",
            "b) will set the suid bit of a.out only if the command is issued by root",
            "c) is not a valid command",
            "d) will set the sticky bit of a.out"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 120,
        "Question": "Which command is used to check filesystem usage in a system?",
        "Options": [
            "a) mount",
            "b) df",
            "c) du",
            "d) dd"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 121,
        "Question": "Which among the following allows fast file system recovery?",
        "Options": [
            "a) Ext2",
            "b) Journaling",
            "c) Caching",
            "d) Sysfs"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 122,
        "Question": "Which filesystem can be used to change certain kernel parameters at runtime using sysctl command?",
        "Options": [
            "a) Ext3",
            "b) Sysfs",
            "c) Ext4",
            "d) Procfs"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 123,
        "Question": "Filesystem for CDROM is:",
        "Options": [
            "a) Ext2",
            "b) Ext3",
            "c) Isofs",
            "d) Procfs"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 124,
        "Question": "Which file system has journaling capability?",
        "Options": [
            "a) Ext2",
            "b) Ext4",
            "c) Isofs",
            "d) Procfs"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 125,
        "Question": "Which file contains the filesystems to be automatically mounted during boot?",
        "Options": [
            "a) /etc/mount",
            "b) /etc/fstab",
            "c) /etc/inittab",
            "d) /etc/boot"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 126,
        "Question": "____ is a directory (which should exist), on which to mount the file system?",
        "Options": [
            "a) Root",
            "b) Boot",
            "c) Mount-point",
            "d) Partition"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 127,
        "Question": "Which command is used to mount file system read only.",
        "Options": [
            "a) mount –a",
            "b) mount –v",
            "c) mount –f",
            "d) mount –r"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 128,
        "Question": "Which of the following is not a valid run-level",
        "Options": [
            "a) S",
            "b) 0",
            "c) 8",
            "d) 1"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 129,
        "Question": "On Linux, initrd is a file",
        "Options": [
            "a) Containing root file-system required during bootup",
            "b) Contains only scripts to be executed during bootup",
            "c) Contains root-file system and drivers required to be preloaded during bootup",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 130,
        "Question": "Which is loaded into memory when system is booted?",
        "Options": [
            "a) Kernel",
            "b) Shell",
            "c) Commands",
            "d) Script"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 131,
        "Question": "The process of starting up a computer is known as",
        "Options": [
            "a) Boot Loading",
            "b) Boot Record",
            "c) Boot Strapping",
            "d) Booting"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 132,
        "Question": "Bootstrapping is also known as",
        "Options": [
            "a) Quick boot",
            "b) Cold boot",
            "c) Hot boot",
            "d) Fast boot"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 133,
        "Question": "The shell used for Single user mode shell is:",
        "Options": [
            "a) bash",
            "b) Csh",
            "c) ksh",
            "d) sh"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 134,
        "Question": "Single user mode shell runs as",
        "Options": [
            "a) Admin user",
            "b) Root user",
            "c) Normal user",
            "d) Log user"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 135,
        "Question": "Which is the only partition mounted in Single user mode",
        "Options": [
            "a) boot",
            "b) usr",
            "c) root",
            "d) tmp"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 136,
        "Question": "Which daemon manages the physical memory by moving process from physical memory to swap space when more physical memory is needed.",
        "Options": [
            "a) Sched daemon",
            "b) Swap daemon",
            "c) Init daemon",
            "d) Process daemon"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 137,
        "Question": "At the end of kernel bootstrap, which process is started?",
        "Options": [
            "a) /etc/init",
            "b) /etc/sched",
            "c) /etc/swap",
            "d) /etc/kernel"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 138,
        "Question": "The process id of init process is:",
        "Options": [
            "a) -1",
            "b) 0",
            "c) 1",
            "d) 2"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 139,
        "Question": "Which file is read by init to get the default runlevel",
        "Options": [
            "a) /etc/profile",
            "b) /etc/init",
            "c) /etc/boot",
            "d) /etc/inittab"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 140,
        "Question": "If a program executing in background attempts to read from STDIN",
        "Options": [
            "a) It is terminated",
            "b) It’s execution is suspended",
            "c) STDIN is made available to it",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 141,
        "Question": "Which command is used to bring the background process to forground?",
        "Options": [
            "a) bg",
            "b) fg",
            "c) background",
            "d) forground"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 142,
        "Question": "How to run a process in the background?",
        "Options": [
            "a) &",
            "b) *",
            "c) ?",
            "d) |"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 143,
        "Question": "Which command can be executed by a user who is already logged into the system, in order to change to the root user? (type the command without any parameters)",
        "Options": [
            "a) su",
            "b) root",
            "c) chroot",
            "d) user"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 144,
        "Question": "Process information in the current shell can be obtained by using",
        "Options": [
            "a) kill",
            "b) bg",
            "c) fg",
            "d) ps"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 145,
        "Question": "Which signal is sent by the command “kill -9 ” ?",
        "Options": [
            "a) INT",
            "b) TERM",
            "c) KILL",
            "d) STOP"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 146,
        "Question": "Which of the following values for STAT column of ps command is not true:",
        "Options": [
            "a) status R means running",
            "b) Status S means sleeping",
            "c) Status E means exited",
            "d) Status Z means zombie"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 147,
        "Question": "When a child process exits before the parent process exits, which of the following is true:",
        "Options": [
            "a) the child process becomes defunct",
            "b) the parent process becomes defunct",
            "c) if the parent process does not handle SIGCHLD, the child process becomes a zombie",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 148,
        "Question": "If the user kills the bash process, then which of the following is true?",
        "Options": [
            "a) the second a.out process is also terminated",
            "b) the second a.out process becomes a defunct process",
            "c) the first a.out process becomes a zombie process",
            "d) init process becomes parent of second a.out process"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 149,
        "Question": "The signal sent to a process when the Ctrl-C key is pressed is",
        "Options": [
            "a) KILL",
            "b) TSTP",
            "c) TERM",
            "d) INT"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 150,
        "Question": "we can change the priority of a running process using",
        "Options": [
            "a) nice",
            "b) renice",
            "c) priority cannot be changed for a running process",
            "d) only superuser can change the priority"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 151,
        "Question": "nohup is used to",
        "Options": [
            "a) automatically hang up the process after logout",
            "b) continue the process after logout",
            "c) create backgroung process",
            "d) manually hang up the process after logout"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 152,
        "Question": "User’s Primary Group id is listed in which file, at the time of creation of the user (On a standard Unix system)",
        "Options": [
            "a) /etc/passwd",
            "b) /etc/groups",
            "c) /etc/login",
            "d) /etc/profile"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 153,
        "Question": "The encrypted password of a user is stored in",
        "Options": [
            "a) /etc/shadow",
            "b) /etc/enpasswwd",
            "c) /etc/.passwd",
            "d) /etc/passwd"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 154,
        "Question": "A user can change the default log-in shell using",
        "Options": [
            "a) chmod",
            "b) chsh",
            "c) rmsh",
            "d) tchsh"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 155,
        "Question": "Which of the following identifiers associated with a process decide its privilege level",
        "Options": [
            "a) uid",
            "b) suid",
            "c) euid",
            "d) gid"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 156,
        "Question": "The /etc/passwd file doesn’t contain",
        "Options": [
            "a) userid",
            "b) home directory for a user",
            "c) login shell name",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 157,
        "Question": "User id 0 is",
        "Options": [
            "a) An innvalid user id",
            "b) The id of the root user",
            "c) The id of a user when the user’s account is deleted",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 158,
        "Question": "The login shell is",
        "Options": [
            "a) The shell program that runs when the user logs in",
            "b) The shell program that authenticates the user while logging in",
            "c) Common shell for all the users that belong to the same group",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 159,
        "Question": "Which of the following command can be used to change the user password?",
        "Options": [
            "a) user can’t change the password",
            "b) passwd",
            "c) passd",
            "d) pwd"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 160,
        "Question": "By default, a Linux user falls under which group?",
        "Options": [
            "a) staff",
            "b) others",
            "c) same as userid (UPG)",
            "d) system"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 161,
        "Question": " Which of the following files need to be referred for user’s secondary group?",
        "Options": [
            "a) /etc/passwd",
            "b) /etc/shadow",
            "c) /etc/group",
            "d) /etc/profile"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 162,
        "Question": "12. The ls –l output for /etc/passwd and /usr/bin/passwd is as follows:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"text\"><pre class=\"de1\">-rw-rw-r-- 1 root root 2807 Apr 26 13:50 /etc/passwd\n-r-s—x—x 1 root root 17008 May 25 02:30 /usr/bin/passwd\n&nbsp;\nIf a user, not belonging to the group ‘root’, runs the passwd executable in an attempt to modify his password, then which of the following is true?</pre></div></div></div></div></div></div>",
        "Options": [
            "a) password change fails since user does not have permission to update /etc/passwd file",
            "b) password change is successful because the program runs as root",
            "c) passwd change program runs in kernel mode where write access to the /etc/passwd file is possible",
            "d) /etc/passwd is a special file and the system by default allows all users to update it"
        ],
        "Answer": "  Answer: c\nExplanation: None.   "
    },
    {
        "id": 163,
        "Question": "2. What would be the current working directory at the end of the following command sequence?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><pre class=\"de1\"> $ <span class=\"kw3\">pwd</span>\n <span class=\"sy0\">/</span>home<span class=\"sy0\">/</span>user1<span class=\"sy0\">/</span>proj\n $ <span class=\"kw3\">cd</span>  src\n $ <span class=\"kw3\">cd</span>  generic\n $ <span class=\"kw3\">cd</span>  .\n $ <span class=\"kw3\">pwd</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) /home/user1/proj",
            "b) /home/user1/proj/src",
            "c) /home/user1",
            "d) /home/user1/proj/src/generic"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 164,
        "Question": "How do you print the lines between 5 and 10, both inclusive",
        "Options": [
            "a) cat filename | head | tail -6",
            "b) cat filename | head | tail -5",
            "c) cat filename | tail +5 | head",
            "d) cat filename | tail -5 | head -10"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 165,
        "Question": "Create a new file “new.txt” that is a concatenation of “file1.txt” and “file2.txt”",
        "Options": [
            "a) cp file.txt file2.txt new.txt",
            "b) cat file1.txt file2.txt > new.txt",
            "c) mv file[12].txt new.txt",
            "d) ls file1.txt file2.txt | new.txt"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 166,
        "Question": "which of these is NOT a valid variable in bash",
        "Options": [
            "a) __ (double underscore)",
            "b) _1var (underscore 1 var )",
            "c) _var_ (underscore var underscore)",
            "d) some-var (some hyphen var)"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 167,
        "Question": "6. What is the output of the following code:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><pre class=\"de1\"><span class=\"re2\">os</span>=Unix\n<span class=\"kw3\">echo</span> <span class=\"nu0\">1</span>.<span class=\"re1\">$os</span> <span class=\"nu0\">2</span>.<span class=\"st0\">\"<span class=\"es2\">$os</span>\"</span> <span class=\"nu0\">3</span>.<span class=\"st_h\">'$os'</span> <span class=\"nu0\">4</span>.<span class=\"re1\">$os</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1.Unix 2.Unix 3.Unix 4.Unix",
            "b) 1.Unix 2.Unix 3.$os 4.Unix",
            "c) 1.Unix 2.Unix 3.Unix 4.$os",
            "d) 1.Unix 2.$os 3.$os 4.$os"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 168,
        "Question": "7. What is the return value ($?) of this code:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><pre class=\"de1\">os = Unix\n<span class=\"br0\">[</span><span class=\"re1\">$osName</span> = UnixName<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span> <span class=\"nu0\">2</span>\n<span class=\"br0\">[</span><span class=\"co1\">${os}</span>Name = UnixName<span class=\"br0\">]</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"kw3\">exit</span> <span class=\"nu0\">3</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 169,
        "Question": "8. What is the output of the following program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><pre class=\"de1\">x = <span class=\"nu0\">3</span>; y = <span class=\"nu0\">5</span>; z = <span class=\"nu0\">10</span>;\n<span class=\"kw1\">if</span> <span class=\"br0\">[</span><span class=\"br0\">(</span> <span class=\"re1\">$x</span> <span class=\"re5\">-eq</span> <span class=\"nu0\">3</span> <span class=\"br0\">)</span> <span class=\"re5\">-a</span> <span class=\"br0\">(</span> <span class=\"re1\">$y</span> <span class=\"re5\">-eq</span> <span class=\"nu0\">5</span> <span class=\"re5\">-o</span>  <span class=\"re1\">$z</span> <span class=\"re5\">-eq</span> <span class=\"nu0\">10</span> <span class=\"br0\">)</span><span class=\"br0\">]</span>\n<span class=\"kw1\">then</span>\n    <span class=\"kw3\">echo</span> <span class=\"re1\">$x</span>\n<span class=\"kw1\">else</span>\n    <span class=\"kw3\">echo</span> <span class=\"re1\">$y</span>\n<span class=\"kw1\">fi</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 3",
            "c) 5",
            "d) Error"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 170,
        "Question": "The expression expr -9 % 2 evaluates to:",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -1",
            "d) 2"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 171,
        "Question": "The statement z = ‘expr 5 / 2’ would store which of the following values in z?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 2.5"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 172,
        "Question": "To feed standard output of one command to standard input of another in a single shell session",
        "Options": [
            "a) IO redirection can be used",
            "b) Named pipes can be used",
            "c) The pipe operator provided by the shell can be used",
            "d) It can not be done"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 173,
        "Question": "Which of the following commands allows definition and assignment of environment variables under bash",
        "Options": [
            "a) env",
            "b) export",
            "c) environ",
            "d) setenviron"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 174,
        "Question": "While executing a command, the shell",
        "Options": [
            "a) Executes it in the same process (as shell)",
            "b) Creates a child shell to execute it",
            "c) Loads a special program to take care of the execution",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 175,
        "Question": "Which variable contains current shell process id",
        "Options": [
            "a) $*",
            "b) $?",
            "c) $$",
            "d) $!"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 176,
        "Question": "Which command is used to debug a shell script program",
        "Options": [
            "a) set",
            "b) set -x",
            "c) debug",
            "d) db"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 177,
        "Question": "For every successful login, which script will be executed?",
        "Options": [
            "a) /etc/inittab",
            "b) /etc/profile",
            "c) /etc/login",
            "d) /etc/init"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 178,
        "Question": "Hidden files are",
        "Options": [
            "a) Those whose ‘read’ bit is set to ‘h’",
            "b) Permitted for (can be accessed) only superusers",
            "c) Files that begin with a ‘.’",
            "d) Files that cannot be opened by ordinary user for writing"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 179,
        "Question": "Shell is ?",
        "Options": [
            "a) Command Interpreter",
            "b) Interface between Kernel and Hardware",
            "c) Interface between user and applications",
            "d) Command Compiler"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 180,
        "Question": "If a file with execute permissions set, but with unknown file format is executed",
        "Options": [
            "a) The file is passed to /bin/sh",
            "b) The system returns an error",
            "c) The current shell will try to execute it",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 181,
        "Question": "Which of the following is true?",
        "Options": [
            "a) Shell is a process and can be started by superuser only",
            "b) Shell is a built-in Kernel functionality",
            "c) Shell is a wrapper for all the commands and utilities",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 182,
        "Question": "Which is true with regards to the shell prompt",
        "Options": [
            "a) It can be accidentally erased with backspace",
            "b) The prompt cannot be modified",
            "c) The prompt can be customized (modified)",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 183,
        "Question": "What is a shell in UNIX?",
        "Options": [
            "a) a program through which users can issue commands to UNIX",
            "b) a window management system",
            "c) the login screen",
            "d) the thing that rides on the back of a turtle in UNIX"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 184,
        "Question": "Which of the following represents an absolute path?",
        "Options": [
            "a)  ../home/file.txt",
            "b)  bin/cat",
            "c)  cs2204/",
            "d)  /usr/bin/cat"
        ],
        "Answer": "  Answer: d\nExplanation: None. "
    },
    {
        "id": 185,
        "Question": "BASH shell stands for?",
        "Options": [
            "a) Bourne-again Shell",
            "b) Basic Access Shell",
            "c) Basic to Advanced Shell",
            "d) Big & Advanced Shell"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 186,
        "Question": "Which of the following files will not be displayed by the command cat re* ?",
        "Options": [
            "a) reminder",
            "b) receipt",
            "c) Receipt",
            "d) recipe-cake"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 187,
        "Question": "The redirection 2> abc  implies",
        "Options": [
            "a) Write file 2 to file abc",
            "b) Write standard output to abc",
            "c) Write standard error to abc",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 188,
        "Question": "cmd 2>&1 > abc will",
        "Options": [
            "a) Write file2 to file1",
            "b) Write standard output and standard error to abc",
            "c) Write standard error to abc",
            "d) Write standard output to abc & standard error to monitor"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 189,
        "Question": "cmd > abc 2>&1 will",
        "Options": [
            "a) Write file2 to file1",
            "b) Write standard output and standard error to abc",
            "c) Write standard error to abc",
            "d) Write standard output to abc & standard error to monitor"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 190,
        "Question": "Which of these is the correct method for appending “foo” in /tmp/bar file?",
        "Options": [
            "a) echo foo > /tmp/bar",
            "b) echo foo >> /tmp/bar",
            "c) echo foo | /tmp/var",
            "d) /tmp/bar < echo foo"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 191,
        "Question": "Syntax to suppress the display of command error to monitor?",
        "Options": [
            "a) command > &2",
            "b) command 2> &1",
            "c) command 2> &2",
            "d) command 2> /dev/null"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 192,
        "Question": "6. The following commands gives the output like this<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">    #cat file1 file2\n    #cat: file1: No such file or directory\n    hello\n    If we execute the command “cat file1 file2  1&gt;2  2&gt;&amp;1” the output would be</pre></div></div></div></div></div></div>",
        "Options": [
            "a)  cat: file1: No such file or directory hello",
            "b)  No output is displayed",
            "c)  Cat: 1>2: No such file or directory",
            "d)  hello"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 193,
        "Question": "cat < file1 >> file2 | file3",
        "Options": [
            "a) file1 content will be appended to file2 and finally stored in file3",
            "b) file1 content will be appended to file2 and file3 will be ignored",
            "c) file2 and file3 will have same content",
            "d) syntax error"
        ],
        "Answer": "  Answer: d\nExplanation: None."
    },
    {
        "id": 194,
        "Question": "Executing cat /etc/password > /dev/sda as superuser will",
        "Options": [
            "a) Write data into a regular file called /dev/sda",
            "b) Write data to the physical device sda",
            "c) Create a temporary file /dev/sda and write data to it",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 195,
        "Question": "9. From where would the read statement read if the following statements were executed?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">   exec <span class=\"sy0\">&lt;</span> file1\n   exec <span class=\"sy0\">&lt;</span> file2\n   exec <span class=\"sy0\">&lt;</span> file3\n   read line</pre></div></div></div></div></div></div>",
        "Options": [
            "a) It would read all the files",
            "b) It would not read any files",
            "c) It would read all the files in reverse order",
            "d) It would read only file3"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 196,
        "Question": "The $ variables in a shell script context designates",
        "Options": [
            "a) The runtime of the script",
            "b) Number of command line arguments",
            "c) PID of the shell running the script",
            "d) The exit status of the shell script"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 197,
        "Question": "Which variable is used to display number of arguments specified in command line",
        "Options": [
            "a) $0",
            "b) $#",
            "c) $*",
            "d) $?"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 198,
        "Question": "Which variable contains last background job process id",
        "Options": [
            "a) $*",
            "b) $?",
            "c) $$",
            "d) $!"
        ],
        "Answer": "  Answer: d\nExplanation: None.  "
    },
    {
        "id": 199,
        "Question": "Which command can be used to test various file attributes",
        "Options": [
            "a) if",
            "b) file",
            "c) test",
            "d) type"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 200,
        "Question": "* Specifies",
        "Options": [
            "a) one or more character",
            "b) zero or more charecter",
            "c) nothing",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None."
    },
    {
        "id": 201,
        "Question": "? Specifies",
        "Options": [
            "a) one or more character",
            "b) zero or more charecter",
            "c) one character",
            "d) none of the mentioned"
        ],
        "Answer": "  Answer: c\nExplanation: None.  "
    },
    {
        "id": 202,
        "Question": "Which of the following file set in the current directory are identified by the regular expression a?b*",
        "Options": [
            "a) afcc, aabb",
            "b) aabb, axbc",
            "c) abbb, abxy",
            "d) abcd, axbb"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 203,
        "Question": "What command would send the output of cmd1 to the input of cmd2?",
        "Options": [
            "a) cmd1 | cmd2",
            "b) cmd1 || cmd2",
            "c) cmd1 && cmd2",
            "d) cmd1 ; cmd2"
        ],
        "Answer": "  Answer: a\nExplanation: None.  "
    },
    {
        "id": 204,
        "Question": "Which variable will display the list of the positional parameters?",
        "Options": [
            "a) $#",
            "b) $*",
            "c) $?",
            "d) $$"
        ],
        "Answer": "  Answer: c\nExplanation: None."
    },
    {
        "id": 205,
        "Question": "Which option of grep displays the line number as well?",
        "Options": [
            "a) -v",
            "b) -l",
            "c) -n",
            "d) -E"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 206,
        "Question": "How can you search for blank line in a file?",
        "Options": [
            "a) $ grep “ “ file",
            "b) $ grep “^$” file",
            "c) $ grep [“ “] file",
            "d) $ grep [^$] file"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 207,
        "Question": "Assuming the files fileA, fileB, fileAB, fileBC  and  fileABC, exist in a directory, which files match with the pattern file[ABC]?",
        "Options": [
            "a) fileA, fileB and fileABC",
            "b) fileABC",
            "c) fileA and fileB",
            "d) fileAB, fileBC and fileABC"
        ],
        "Answer": "  Answer: c\nExplanation: None. "
    },
    {
        "id": 208,
        "Question": "Which one is used to select only one copy of the repeated lines?",
        "Options": [
            "a) uniq -u",
            "b) uniq -d",
            "c) uniq -c",
            "d) uniq –I"
        ],
        "Answer": "  Answer: b\nExplanation: None.  "
    },
    {
        "id": 209,
        "Question": "Indicate the right option to search for BOB, Bob, BOb or BoB?",
        "Options": [
            "a) grep –i Bob files",
            "b) grep ‘B[oO][bB]’ files",
            "c) grep ‘[BOB]’ files",
            "d) grep -v ‘Bob’ files"
        ],
        "Answer": "  Answer: a\nExplanation: None."
    },
    {
        "id": 210,
        "Question": "Indicate the right option to search for anything not a letter or number",
        "Options": [
            "a) grep ‘^[a-zA-Z0-9]’",
            "b) grep ‘[^a-zA-Z0-9]’",
            "c) grep ‘[a-zA-Z0-9]’",
            "d) None of the mentioned"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 211,
        "Question": "How do you remove duplicate lines from the file foo using uniq?",
        "Options": [
            "a)  sort foo | uniq –u",
            "b)  sort -u foo | uniq -d",
            "c)  sort foo | uniq –c",
            "d)  sort foo | uniq –I"
        ],
        "Answer": "  Answer: b\nExplanation: None. "
    },
    {
        "id": 212,
        "Question": "What is the command that can print lines of first file matching with second file?",
        "Options": [
            "a) printline",
            "b) cmp",
            "c) com",
            "d) comm"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 213,
        "Question": "Which character to use to escape meaning of special characters in search operations?",
        "Options": [
            "a) [] ",
            "b) ^",
            "c) .",
            "d) backslash (\\)"
        ],
        "Answer": "  Answer: a\nExplanation: None. "
    },
    {
        "id": 214,
        "Question": "When the return value of any function is not specified within the function, what function returns?",
        "Options": [
            "a) nothing",
            "b) exit status of the last command executed",
            "c) 0",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 215,
        "Question": "Parameters can be passed to a function",
        "Options": [
            "a) by using the parameter variables $1, $2, $3…….",
            "b) by using the environment variables",
            "c) by using the parameter & environment variables",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 216,
        "Question": "Which of the following command provides the list of the functions defined in the login session?",
        "Options": [
            "a) declare -f",
            "b) declare -F",
            "c) both declare -f and -F",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:’declare -F’ provides just the name of the functions and ‘declare -f’ provides their definitions also.\n"
    },
    {
        "id": 217,
        "Question": "The keyword ‘local’ is used",
        "Options": [
            "a) to define a variable within a function for its local scope",
            "b) to redefine any global variable",
            "c) this is not a valid keyword",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 218,
        "Question": "Functions improves the shell’s programmability significantly, because",
        "Options": [
            "a) when we invoke a function,  it is already in the shell’s memory, therefore a function runs faster than seperate scripts",
            "b) function will not provides a piece of code for repetative tasks",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 219,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/sh\t</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">var</span>=<span class=\"st0\">\"Sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   san_function<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"re2\">var</span>=<span class=\"st0\">\"Linux\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">echo</span> <span class=\"re1\">$var</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   san_function</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sanfoundry",
            "b) Linux",
            "c) Command not found",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: If local variable name is same as the global variable, it overlays the variable, but only within the function.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nLinux\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 220,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/sh</span></pre></li><li class=\"li1\"><pre class=\"de1\">   san_function<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">echo</span> <span class=\"st0\">\"Welcome to the Sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span> <span class=\"st0\">\"World of Linux<span class=\"es1\">\\n</span>\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">unset</span> <span class=\"re5\">-f</span> san_function</pre></li><li class=\"li1\"><pre class=\"de1\">   san_function</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Welcome to the Sanfoundry",
            "b) World of Linux",
            "c) both Welcome to the Sanfoundry and World of Linux",
            "d) nothing will print"
        ],
        "Answer": " Answer: d\nExplanation: Function definition was deleted before calling the function. command ‘unset -f function_name’ deletes the function definition.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n./test.sh: 6: san_function: not found\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 221,
        "Question": "a) This is the first function",
        "Options": [
            "b) This is the second function",
            "c) This is the first function",
            "   This is the second function",
            "d) program will generate error because first function definition is not correct"
        ],
        "Answer": " Answer: c\nExplanation: In bash shell, functions can be defined in both the ways, used in the script.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nThis is first function\nThis is second function\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 222,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/sh</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Just call the function\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   san_function</pre></li><li class=\"li1\"><pre class=\"de1\">   san_function<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw3\">echo</span> <span class=\"st0\">\"This is a function\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) only first string will print without any error",
            "b) only second string will print without any error",
            "c) both strings will print",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Function must be defined prior to call. Hence only first string will print and program will generate an error also.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nJust call the function\n./test.sh: 3: san_function: not found\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 223,
        "Question": "In the shell, by default, all variables are considered and stored as",
        "Options": [
            "a) string",
            "b) integer",
            "c) character",
            "d) float"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 224,
        "Question": "Which command reads user input from the terminal and assign this value to a variable name?",
        "Options": [
            "a) read",
            "b) get",
            "c) declare",
            "d) set"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 225,
        "Question": "Which one of the following statement is true about variables in shell?",
        "Options": [
            "a) variables do not require declaration before assigning value to them",
            "b) variables are case sensitive",
            "c) to extract the contents of a variable, we have to provide the variable a preceding $",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 226,
        "Question": "Which one of the following is not a valid shell variable?",
        "Options": [
            "a) _san",
            "b) san_2",
            "c) _san_2",
            "d) 2_san"
        ],
        "Answer": " Answer: d\nExplanation: The shell variable can contain only letters(a to z or A to Z), numbers(0 to 9), or a underscore character(_) and a variable can not start with a number.\n"
    },
    {
        "id": 227,
        "Question": "To redefine a variable, it can be removed from the list of variables by using the command",
        "Options": [
            "a) unset",
            "b) delete",
            "c) remove",
            "d) clear"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 228,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">var1</span>=<span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re1\">$var1</span>=<span class=\"nu0\">20</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$var1</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) program will print 10",
            "b) program will generate a warning message",
            "c) program will print 20",
            "d) program will print 10 & 20"
        ],
        "Answer": " Answer: a\nExplanation: Using double quotes does not affect the substitution of the variable, while single quotes and backslash do.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nSanfoundry\n$san_var\n“$san_var”\n‘Sanfoundry’\n$san_var\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 229,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   var<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>=san_1</pre></li><li class=\"li1\"><pre class=\"de1\">   var<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>=san_2</pre></li><li class=\"li1\"><pre class=\"de1\">   var<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>=san_3</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"co1\">${var[*]}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) san_1",
            "b) san_2",
            "c) san_3",
            "d) san_1 san_2 san_3"
        ],
        "Answer": " Answer: d\nExplanation: The doller sign ($) is used to access a variable’s value, not to define it.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n./test.sh: line 3: 10=20: command not found\n10\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 230,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">san_var</span>=hello</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">readonly</span> san_var</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">san_var</span>=hi</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$san_var</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) hi",
            "c) nothing will print",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: All items of an array can be accessed by using ${[*]} or ${[@]}.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nsan_1 san_2 san_3\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 231,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re2\">san_var</span>=<span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">echo</span> <span class=\"st0\">\"the value of <span class=\"es1\">\\\"</span>san_var<span class=\"es1\">\\\"</span> is <span class=\"es2\">$san_var</span>\"</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the value of “san_var” is 10",
            "b) the value of is 10",
            "c) the value of san_var is $san_var",
            "d) the value of “san_var” is $san_var"
        ],
        "Answer": " Answer: a\nExplanation: After the execution of the ‘readonly’ command, shell will not provide the permission to overwrite the value stored in variable ‘san_var’.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n./test.sh: line 4: san_var: readonly variable\nhello\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 232,
        "Question": "Which built-in command performs integer arithmetic in bash shell?",
        "Options": [
            "a) let",
            "b) get",
            "c) set",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 233,
        "Question": "Which expression use the value of the enclosed arithmetic expression?",
        "Options": [
            "a) $(())",
            "b) $()",
            "c) ${}",
            "d) $[]."
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 234,
        "Question": "If a and b are 2 variables then the meaning of a<<=b is",
        "Options": [
            "a) b = a << b",
            "b) a = a << b",
            "c) b = b << a",
            "d) a = a << b"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 235,
        "Question": "Which one of the following is bitwise ‘exclusive or’ operator?",
        "Options": [
            "a) ^=",
            "b) |=",
            "c) !=",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 236,
        "Question": "Which one of the following is not a valid operator in bash shell?",
        "Options": [
            "a) ||",
            "b) ~",
            "c) =<<",
            "d) -="
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 237,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">a</span>=<span class=\"nu0\">2</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">b</span>=<span class=\"nu0\">4</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">let</span> <span class=\"re2\">c</span>=a<span class=\"sy0\">**</span>b</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$c</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 16",
            "c) 32",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:’**’ is the exponentation operator in bash shell.\nOutput:\n[email protected]:/home/sanfoundry#./test.sh\n16\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 238,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">a</span>=<span class=\"nu0\">10</span>; <span class=\"re2\">b</span>=<span class=\"nu0\">20</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">c</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span>++a<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">let</span> <span class=\"re2\">a</span>=c+a</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$a</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 21",
            "b) 22",
            "c) program will generate an error message",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry#./test.sh\n22\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 239,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">a</span>=<span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">b</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re1\">$a</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>?<span class=\"nu0\">10</span>:<span class=\"re1\">$a</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">100</span> <span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$b</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 20",
            "c) 1",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: Firstly the ‘$a<0’ condition has been checked. Because it is false hence the right hand side condition of the colon (:) has been checked and this is true so program output is 1.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n1\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 240,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">a</span>=<span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"re2\">b</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> <span class=\"re1\">$a</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span><span class=\"sy0\">&amp;&amp;</span><span class=\"re1\">$a</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">100</span> <span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"re1\">$b</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 0",
            "c) 1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The condition ‘$a<0’ is false so logical and operator provides the output 0.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n0\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 241,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re2\">a</span>=<span class=\"nu0\">1</span>; <span class=\"re2\">b</span>=<span class=\"nu0\">2</span>; <span class=\"re2\">c</span>=<span class=\"nu0\">3</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"re2\">d</span>=$<span class=\"br0\">(</span><span class=\"br0\">(</span> ++a<span class=\"sy0\">**</span>b<span class=\"sy0\">*</span><span class=\"kw2\">c++</span> + a <span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">echo</span> <span class=\"re1\">$d</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 14",
            "b) 12",
            "c) program will generate an error message",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The operators in decreasing order of precedence are ++, **, *, +.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\n14\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 242,
        "Question": "fc stands for",
        "Options": [
            "a) find command",
            "b) fix command",
            "c) both find & fix command",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:’fc -l’ is used to list history of commands and ‘fc -e’ to edit them and ‘history’ command also provides the histroy of commands.\n"
    },
    {
        "id": 243,
        "Question": "Which command is used to reexecute the previous command?",
        "Options": [
            "a) !!",
            "b) !cat",
            "c) !3",
            "d) !$"
        ],
        "Answer": " Answer: a\nExplanation:’!cat’ will reexecute the last cat command, ‘!3’ will reexecute the third last command and ‘!$’ will execute the last argument of previous command.\n"
    },
    {
        "id": 244,
        "Question": "Which one of the following is not correct about job control in bash shell?",
        "Options": [
            "a) it is the ability to stop and resume any process running in shell at a later point",
            "b) user employs this facility via an interactive interface supplied by the kernel’s terminal driver and bash",
            "c) it is the ability to create any process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 245,
        "Question": "Which command allows to view the current jobs being handled by the shell?",
        "Options": [
            "a) jobs",
            "b) view",
            "c) show",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 246,
        "Question": "What is job number?",
        "Options": [
            "a) same as PID",
            "b) a unique number, assigned to each job in shell",
            "c) same as PID and a unique number, assigned to each job in shell",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 247,
        "Question": "Ctrl-Z key combination",
        "Options": [
            "a) generates a SIGINT signal",
            "b) stops the process running in the shell",
            "c) kills the process running in the shell",
            "d) generates a SIGINT signal & kills the process running in the shell"
        ],
        "Answer": " Answer: b\nExplanation: Ctrl-Z key combination generates a SIGTSTP signal and stops the process running in the shell.\n"
    },
    {
        "id": 248,
        "Question": "Which command brings a background job into the foreground?",
        "Options": [
            "a) fg",
            "b) bg",
            "c) jobs %1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: bg command brings a foreground job into the background.\n"
    },
    {
        "id": 249,
        "Question": "‘kill %s’ command will",
        "Options": [
            "a) terminate the job whose command line starts with s",
            "b) terminate the last job",
            "c) terminate the first job",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 250,
        "Question": "‘stty tostop’ command will",
        "Options": [
            "a) stop all jobs running in the shell",
            "b) stop background jobs if they try to send output to the terminal",
            "c) this is not a valid command",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 251,
        "Question": "Which command terminates a running process by name of the process?",
        "Options": [
            "a) kill",
            "b) pkill",
            "c) killall",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 252,
        "Question": "Which command sets up shorthand for command or command line?",
        "Options": [
            "a) set",
            "b) alias",
            "c) new",
            "d) echo"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 253,
        "Question": "What is the function of bind command in bash shell?",
        "Options": [
            "a) defining new macros",
            "b) defining new key bindings for existing commands",
            "c) dumping the installed key bindings",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 254,
        "Question": "The command ‘compgen -c’ shows",
        "Options": [
            "a) all variable names",
            "b) all system wide aliases",
            "c) full list of all commands",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 255,
        "Question": "Which statement resumes the next iteration of a for, while, select, or untill loop?",
        "Options": [
            "a) continue",
            "b) break",
            "c) complete",
            "d) command"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 256,
        "Question": "Which command prints the directory stack?",
        "Options": [
            "a) cd",
            "b) dirs",
            "c) popd",
            "d) pushd"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 257,
        "Question": "The command ‘disown -r’",
        "Options": [
            "a) removes all jobs",
            "b) removes all running jobs",
            "c) marks jobs to not receive SIGHUP when bash exits",
            "d) marks all jobs"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 258,
        "Question": "The command ‘enable -n ‘",
        "Options": [
            "a) enables the specified built-in command",
            "b) disables the specified built-in command",
            "c) print the status of the command",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 259,
        "Question": "Which command can create environment variable?",
        "Options": [
            "a) export",
            "b) set",
            "c) read",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 260,
        "Question": "Which command concatenate the specified argument into a single command, then execute the command?",
        "Options": [
            "a) fc",
            "b) eval",
            "c) exec",
            "d) getopts"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 261,
        "Question": "The command ‘hash’",
        "Options": [
            "a) manages a internal hash table",
            "b) find and remember the full path name of the specified command",
            "c) displays used command names and the number of hits",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 262,
        "Question": "The ‘logout’ built in command is used to",
        "Options": [
            "a) shutdown the computer",
            "b) logoff of the computer",
            "c) logout the current user",
            "d) to exit the current shell"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 263,
        "Question": "The command ‘umask -S’",
        "Options": [
            "a) prints the current mask using symbolic notation",
            "b) prints the current mask using octal numbers",
            "c) sets the mask to 000",
            "d) sets the mask to 777"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 264,
        "Question": "The ‘mapfile’ command",
        "Options": [
            "a) reads lines of standard input and assigns each to the element of an indexed array",
            "b) reads lines of standard output file",
            "c) reads lines of standard error file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 265,
        "Question": "Which option of the kill command sends the given signal name to the specified process?",
        "Options": [
            "a) -l",
            "b) -n",
            "c) -s",
            "d) -a"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 266,
        "Question": "Which command removes a directory from directory stack?",
        "Options": [
            "a) dirs",
            "b) popd",
            "c) pushd",
            "d) rm"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 267,
        "Question": "Which command puts a script to sleep untill a signal is recieved?",
        "Options": [
            "a) sleep",
            "b) suspend",
            "c) disown",
            "d) break"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 268,
        "Question": "The command ‘ulimit’",
        "Options": [
            "a) set a limit on specified resource for system users",
            "b) set/show process resource limit",
            "c) set a limit on specified resource for system users & set/show process resource limit",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 269,
        "Question": "Which command identifies the resource of a command?",
        "Options": [
            "a) type",
            "b) typeset",
            "c) select",
            "d) source"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 270,
        "Question": "Which command wait for the specified process to complete and return the exit status?",
        "Options": [
            "a) sleep",
            "b) wait",
            "c) delay",
            "d) stop"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 271,
        "Question": "Which command prints the accumulated user and system times for processes run from the shell?",
        "Options": [
            "a) time",
            "b) times",
            "c) both time and times",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 272,
        "Question": "Which command runs the shell built-in command ‘command’ with the given argument?",
        "Options": [
            "a) builtin",
            "b) caller",
            "c) there is no command present for this purpose",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 273,
        "Question": "Which option of the command ‘cd’ use the actual filesystem path for cd.. and the value of pwd?",
        "Options": [
            "a) -l",
            "b) -L",
            "c) -p",
            "d) -P"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 274,
        "Question": "Which command generates possible completions for string according to the and write it to standard output?",
        "Options": [
            "a) compgen",
            "b) complete",
            "c) continue",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 275,
        "Question": "Which command executes ‘command’ in place of the current process instead of creating a new process?",
        "Options": [
            "a) exec",
            "b) command",
            "c) trap",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 276,
        "Question": "5. After running this program, as you press ‘s’, what will be the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"press 's' to print Sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> var</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">if</span> <span class=\"re1\">$var</span>=s</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">then</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"You did not press s\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">fi</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sanfoudry",
            "b) You did not press s",
            "c) Program will generate an error message",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The condition of if statement must be in square brackets.\nOutput:\n[email protected]:/home/sanfoundry#./test.sh\npress ‘s’ to print Sanfoundry\ns\n./test.sh: line 4: s=s: command not found\nYou did not press s\n"
    },
    {
        "id": 277,
        "Question": "6. After running this program, as your press 4, what will be the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"How many times you want to print 'Sanfoundry'\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> value</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"re2\">i</span>=<span class=\"nu0\">0</span>;i<span class=\"sy0\">&lt;</span><span class=\"re1\">$value</span>;i++<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Sanfoundry\"</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">done</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ‘Sanfoudry’ will print 4 times",
            "b) ‘Sanfoudry’ will print 3 times",
            "c) ‘Sanfoudry’ will print 5 times",
            "d) Program will generate an error message"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nHow many times you want to print ‘Sanfoundry’\n4\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 278,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"nu0\">2</span> <span class=\"nu0\">3</span> <span class=\"nu0\">7</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">done</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ‘Sanfoundry’ will print 3 times",
            "b) Nothing will print",
            "c) Program will generate an error message",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nSanfoundry\nSanfoundry\nSanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 279,
        "Question": "8. How can you come out of the loop in this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">while</span> <span class=\"br0\">[</span> <span class=\"re1\">$x</span> <span class=\"sy0\">!</span>= <span class=\"st0\">\"hello\"</span> <span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">do</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Try to come out of the loop\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">done</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Welcome\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) by entering “hello”",
            "b) by entering anything except “hello”",
            "c) it is not possible",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nhi\nTry to come out of the loop\nhey\nTry to come out of the loop\nhello\nWelcome\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 280,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Which file do you want to check\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">until</span> <span class=\"br0\">[</span> <span class=\"re5\">-e</span> <span class=\"re1\">$x</span> <span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">do</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"The file does not exist. Do you want to create? y/n\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">read</span> a</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"re1\">$a</span> = y <span class=\"br0\">]</span>; <span class=\"kw1\">then</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">touch</span> <span class=\"re1\">$x</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"Your file has been created successfully.\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">fi</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">done</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">echo</span> <span class=\"st0\">\"The file is present in this directory\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it checks the existance of your entered file in the present working directory",
            "b) it creates the file if file does not exists",
            "c) program runs untill you create the file",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nWhich file do you want to check\nsan.c\nThe file does not exist. Do you want to create? y/n\nn\nThe file does not exist. Do you want to create? y/n\nn\nThe file does not exist. Do you want to create? y/n\ny\nYour file has been created successfully.\nThe file is present in this directory\n[email protected]:/home/sanfoundry# ls\nsan.c  test2.txt  test2.txt~  test.sh  test.sh~  test.txt  test.txt~\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 281,
        "Question": "10. After running this program, if you enter 1000, then what will be the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">\t<span class=\"co0\">#!/bin/bash</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"Please enter a number\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">read</span> a</pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">if</span> <span class=\"br0\">[</span> <span class=\"re1\">$a</span> <span class=\"re5\">-lt</span> <span class=\"nu0\">100</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"It is less than 100\"</span>; </pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">elif</span> <span class=\"br0\">[</span> <span class=\"re1\">$a</span> <span class=\"re5\">-lt</span> <span class=\"nu0\">1000</span> <span class=\"br0\">]</span>; <span class=\"kw1\">then</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"It is less than 1000\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">echo</span> <span class=\"st0\">\"It is greater than 1000\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">fi</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw3\">exit</span> <span class=\"nu0\">0</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) It is greater than 1000",
            "b) It is less then 1000",
            "c) It is equal to 1000",
            "d) None of then mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.sh\nPlease enter a number\n1000\nIt is greater than 1000\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 282,
        "Question": "Which one of the following statement is not true?",
        "Options": [
            "a) vim editor is the improved version of vi editor",
            "b) vi editor commands are not case sensitive",
            "c) vi editor has two modes of operation: command mode and insert mode",
            "d) vi stands for visual editor"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 283,
        "Question": "Which command is used to close the vi editor?",
        "Options": [
            "a) q",
            "b) wq",
            "c) both q and wq",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The command ‘q’ just closes the file and ‘wq’ saves and closes the file.\n"
    },
    {
        "id": 284,
        "Question": "In vi editor, the key combination CTRL+f",
        "Options": [
            "a) moves screen down one page",
            "b) moves screen up one page",
            "c) moves screen up one line",
            "d) moves screen down one line"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 285,
        "Question": "Which vi editor command copies the current line of the file?",
        "Options": [
            "a) yy",
            "b) yw",
            "c) yc",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The command ‘p’ puts the copied text after the cursor.\n"
    },
    {
        "id": 286,
        "Question": "Which command is used to delete the character before the cursor location in vi editor?",
        "Options": [
            "a) X",
            "b) x",
            "c) D",
            "d) d"
        ],
        "Answer": " Answer: a\nExplanation: The command ‘x’ is used to delete the character under the cursor locarion.\n"
    },
    {
        "id": 287,
        "Question": "Which one of the following statement is true?",
        "Options": [
            "a) autoindentation is not possible in vi editor",
            "b) autoindentation can be set using the command ‘:set ai’",
            "c) autoindentation can be set using the command ‘:set noai’",
            "d) autoindentation is set by default in vi editor"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 288,
        "Question": "Which command searches the string in file opened in vi editor?",
        "Options": [
            "a) / or ?",
            "b) f or F",
            "c) t or T",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The command ‘/’ searches downward in the file and command ‘?’ searches upward in the file.\n"
    },
    {
        "id": 289,
        "Question": "In vi editor, which command reads the content of another file?",
        "Options": [
            "a) read",
            "b) r",
            "c) ex",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 290,
        "Question": "Which command shows all the abbreviations in vi editor?",
        "Options": [
            "a) ab",
            "b) abb",
            "c) show",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 291,
        "Question": "Which command sets the number for all lines?",
        "Options": [
            "a) :set li",
            "b) :set ln",
            "c) :set nu",
            "d) :set nl"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 292,
        "Question": "What is sed?",
        "Options": [
            "a) a non-interactive stream editor",
            "b) an IDE",
            "c) a hex editor",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 293,
        "Question": "Sed maintains the hold space (a buffer) to",
        "Options": [
            "a) copy the each line of input",
            "b) save the data for later retrieval",
            "c) copy the each line of input & save the data for later retrieval",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: To copy the each line of input, sed maintains the pattern space.\n"
    },
    {
        "id": 294,
        "Question": "Which is the correct syntax for sed on command line?",
        "Options": [
            "a) sed [options] ‘[command]’ [filename].",
            "b) sed ‘[command]’ [options] [filename].",
            "c) sed [filename] [options] ‘[command]’",
            "d) sed ‘[command]’ [filename] [options]."
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 295,
        "Question": "If any sed command does not specify any address then the command is applied to",
        "Options": [
            "a) each input line",
            "b) none of the input line",
            "c) last input line",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 296,
        "Question": "If no file is specified in sed command then",
        "Options": [
            "a) sed command will not work",
            "b) sed reads from standard input",
            "c) sed reads the data already present in buffer",
            "d) it is necessary to provide the filename"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 297,
        "Question": "Which sed command deletes the specified address range",
        "Options": [
            "a) [address range]/s",
            "b) [address range]/p",
            "c) [address range]/d",
            "d) [address range]/y"
        ],
        "Answer": " Answer: c\nExplanation: To use the command correct syntax specified for sed editor should be followed.\n"
    },
    {
        "id": 298,
        "Question": "Which command is used to replace word ‘cat’ (already present in the file) with ‘mouse’ at all places in a file ‘old.txt’ and save the result in a new file ‘new.txt’?",
        "Options": [
            "a) sed ‘s/cat/mouce/g’ old.txt > new.txt",
            "b) sed ‘s/cat/mouse’ old.txt new.txt",
            "c) sed ‘/s/cat/mouse/g’ old.txt new.txt",
            "d) sed ‘/s/cat/mouse’ old.txt > new.txt"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 299,
        "Question": "Which command will delete all the blank lines in file old.txt?",
        "Options": [
            "a) sed ‘/d’ old.txt",
            "b) sed ‘/^/d’ old.txt",
            "c) sed ‘/^$/d’ old.txt",
            "d) sed ‘/^*/d’ old.txt"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 300,
        "Question": "The command “sed -n ‘/sanfoundry/p’ old.txt” will",
        "Options": [
            "a) print the lines containing the word ‘sanfoundry’ in file old.txt",
            "b) delete the lines containing the word ‘sanfoundry’ in file old.txt",
            "c) will generate an error message",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 301,
        "Question": "Which option is used by sed to specify that the following string is an instruction or set of instructions?",
        "Options": [
            "a) -n",
            "b) -e",
            "c) -f",
            "d) -i"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 302,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) nawk is the new version of awk",
            "b) gawk is the GNU version of awk",
            "c) linux users have the gawk",
            "d) nawk does not provide the additional capabilities in comparison of awk"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 303,
        "Question": "An awk program can be run by",
        "Options": [
            "a) including the program in the command that runs awk",
            "b) putting it into a file and run with a command",
            "c) running an executable awk script",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The method used to run awk program depends on the program size and input files.\n"
    },
    {
        "id": 304,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) in typical awk program, all input is read either from standard input or specified files",
            "b) awk language divides its input into records and fields",
            "c) awk reads an input record and the record is automatically seperated by the interpreter into pieces called “fields”",
            "d) the number of fields need to be a constant"
        ],
        "Answer": " Answer: d\nExplanation: The number of fields does not need to be a constant.\n"
    },
    {
        "id": 305,
        "Question": "What is the meaning of $ sign in awk programming?",
        "Options": [
            "a) the word following is the name of variable",
            "b) we are refering to a field or column in the current line",
            "c) $ sign is used for comment",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 306,
        "Question": "In awk program, the statement “print” with no items",
        "Options": [
            "a) is equivalent to “print $0”",
            "b) prints the entire current record",
            "c) is equivalent to “print $0” & prints the entire current record",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 307,
        "Question": "The print and printf statements can be told to send their output to other place except standard output, is called",
        "Options": [
            "a) redirection",
            "b) redistribution",
            "c) reinsertion",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 308,
        "Question": "The command “awk {print $1} san.txt” will",
        "Options": [
            "a) print the first line of file san.txt",
            "b) print the first field of every line in san.txt",
            "c) generate syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 309,
        "Question": "What is the output of the command awk ‘BEGIN {printf “%c\\n”,65}’",
        "Options": [
            "a) A",
            "b) 65",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The ASCII value of A is 65.\n"
    },
    {
        "id": 310,
        "Question": "Which one of the following statement is not true about the format-control letters for printf statement in awk program?",
        "Options": [
            "a) “c” prints a number as an ASCII character",
            "b) “d” prints a decimal integer",
            "c) “h” prints an unsigned hexadecimal integer",
            "d) “o” prints an unsigned octal integer"
        ],
        "Answer": " Answer: c\nExplanation: “x” prints and unsigned hexadecimal integer\n"
    },
    {
        "id": 311,
        "Question": "10. Which command on the command line provides the same output as this executable awk script?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"bash\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co0\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">    BEGIN <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        print <span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) awk ‘BEGIN {print “sanfoundry”}’",
            "b) awk ‘print “sanfoundry”‘",
            "c) awk ‘print {sanfoundry}’",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 312,
        "Question": "What is expression in awk programming?",
        "Options": [
            "a) expression evaluates a value to print, test or pass to a function",
            "b) expression assigns a new value to a variable or field",
            "c) expression evaluates a value to print, test or pass to a function & also assigns a new value to a variable or field",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 313,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) there are 3 types of constant expressions: numeric, string and regular",
            "b) arithmetic operators are used to evaluate expressions",
            "c) assignment expression is an expression that stores a value into a variable",
            "d) comparison expressions does not compare strings for relationship"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 314,
        "Question": "All numeric values are represented within awk in",
        "Options": [
            "a) double precision floating point",
            "b) integer",
            "c) exponential notation",
            "d) fixed point"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 315,
        "Question": "Concatenation is performed by",
        "Options": [
            "a) writing expressions next to one another, with no operator",
            "b) conditional operator",
            "c) relational operator",
            "d) matching operator"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 316,
        "Question": "The comparison expression “x ~ y” will true if",
        "Options": [
            "a) x is not equal to y",
            "b) the string x does not match the regular expression denoted by y",
            "c) the string x matches the regular expression denoted by y",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 317,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"st0\">\"20\"</span><span class=\"sy2\">&lt;</span><span class=\"st0\">\"9\"</span> <span class=\"sy5\">?</span> <span class=\"st0\">\"true\"</span><span class=\"sy5\">:</span><span class=\"st0\">\"false\"</span>\t      </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The operands of relational operators are converted to, and compared as string if both are not numbers. Strings are compared by comparing the characters of each. Hence 20 is less then 9.\nOutput:\n[email protected]:/home/sanfoundry# chmod +x test.awk\n[email protected]:/home/sanfoundry# ./test.awk\ntrue\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 318,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a=<span class=\"nu0\">10</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">       b=<span class=\"nu0\">10</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> a<span class=\"sy2\">==</span>b <span class=\"sy5\">?</span> <span class=\"st0\">\"true\"</span><span class=\"sy5\">:</span><span class=\"st0\">\"false\"</span>\t      </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# chmod +x test.awk\n[email protected]:/home/sanfoundry# ./test.awk\ntrue\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 319,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       var1=<span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       var2=<span class=\"st0\">\"linux\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> var1<span class=\"st0\">\" provides \"</span>var2<span class=\"st0\">\" MCQs \"</span>\t      </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry provides linux MCQs",
            "b) var1 provides var2 MCQs",
            "c) provides MCQs",
            "d) syntax error"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# chmod +x test.awk\n[email protected]:/home/sanfoundry# ./test.awk\nsanfoundry provides linux MCQs\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 320,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       two=<span class=\"nu0\">2</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">       two<span class=\"sy3\">++</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> two </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) two",
            "b) three",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# chmod +x test.awk\n[email protected]:/home/sanfoundry# ./test.awk\n3\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 321,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        one=<span class=\"nu0\">10</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">        two=<span class=\"nu0\">3</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw5\">print</span> <span class=\"br0\">(</span>one<span class=\"sy3\">%</span>two<span class=\"br0\">)</span><span class=\"sy3\">+</span><span class=\"nu0\">10</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) (one%two)+10",
            "b) 13",
            "c) 11",
            "d) syntax error"
        ],
        "Answer": " Answer: c\nExplanation: The remainder of 10/3 is 1. remainder is added to 10.\nOutput:\n[email protected]:/home/sanfoundry# chmod +x test.awk\n[email protected]:/home/sanfoundry# ./test.awk\n11\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 322,
        "Question": "The break statement",
        "Options": [
            "a) jumps out of the innermost for loop",
            "b) jumps out of the innermost while loop",
            "c) jumps out of the innermost do-while loop",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 323,
        "Question": "Which statement skips over the rest of the loop body, causing the next cycle around the loop to begin immediately?",
        "Options": [
            "a) continue",
            "b) break",
            "c) next",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 324,
        "Question": "The next statement",
        "Options": [
            "a) immediately stops processing the current record",
            "b) go to the next record",
            "c) immediately stops processing the current record & go to the next record",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 325,
        "Question": "If the argument is supplied to the exit statement,",
        "Options": [
            "a) its value is used as the exit status code for the awk process",
            "b) syntax error will generate",
            "c) exit returns status 0",
            "d) exit returns status 1"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 326,
        "Question": "Which statement instructs gawk to stop processing the current data file?",
        "Options": [
            "a) next",
            "b) nextfile",
            "c) exit",
            "d) exitfile"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 327,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a=<span class=\"nu0\">5</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span> <span class=\"br0\">(</span>a<span class=\"sy2\">&lt;</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw5\">print</span> <span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">           a<span class=\"sy3\">++</span>;</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) nothing will print",
            "b) “sanfoundry” will print 5 times",
            "c) program will generate syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The condition of while statement is false so commands inside the loop will not execute.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 328,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a=<span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">do</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw5\">print</span> <span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">           a<span class=\"sy3\">++</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>a<span class=\"sy2\">&lt;</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “sanfoundry” will print 4 times",
            "b) “sanfoundry” will print 5 times",
            "c) nothing will print",
            "d) syntax error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nsanfoundry\nsanfoundry\nsanfoundry\nsanfoundry\nsanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 329,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a=<span class=\"nu0\">6</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">do</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw5\">print</span> <span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">           a<span class=\"sy3\">++</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>a<span class=\"sy2\">&lt;</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) nothing will print",
            "b) “sanfoundry” will print 5 times",
            "c) “sanfoundry” will print 4 times",
            "d) “sanfoundry” will print only 1 time"
        ],
        "Answer": " Answer: d\nExplanation: Even the condition is false of do-while loop, the body is executed once.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nsanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 330,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">0</span>;i<span class=\"sy2\">&lt;=</span><span class=\"nu0\">5</span>;i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw5\">print</span> i</pre></li><li class=\"li1\"><pre class=\"de1\">           i<span class=\"sy3\">++</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0,2,4 will print",
            "b) 1,3,5 will print",
            "c) 1,2,3,4,5 will print",
            "d) syntax error because i is not initialised"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n0\n2\n4\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 331,
        "Question": "The command “awk ‘{if (“9″>”10”) print “sanfoundry” else print “linux”}'”",
        "Options": [
            "a) will print “sanfoundry”",
            "b) will print “linux”",
            "c) will generate syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Semicolon is required just before the else statement to parse the statement.\nOutput:\n[email protected]:/home/sanfoundry# awk ‘{if (“9″>”10”) print “sanfoundry” else print “linux”}’\nawk: {if (“9″>”10”) print “sanfoundry” else print “linux”}\nawk:                                   ^ syntax error\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 332,
        "Question": "Which one of the following statement is not true?",
        "Options": [
            "a) awk’s built-in functions can be categorised into three categories: numeric, string and I/O",
            "b) built-in functions are always available to call",
            "c) extra arguments to built-in function causes syntax error",
            "d) we can also define the function in awk program"
        ],
        "Answer": " Answer: c\nExplanation: Extra arguments to built-in function causes fatal error.\n"
    },
    {
        "id": 333,
        "Question": "What is the difference between the built-in functions rand() and srand() in awk programming?",
        "Options": [
            "a) rand() generates the random number but srand() does not generate the random number",
            "b) rand() generates the same random number always whenever the program runs but srand() generates the different",
            "c) srand() requires the seed() function but rand() does not require to produce the same result",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 334,
        "Question": "Which built-in function returns the arctangent of a/b in radians.",
        "Options": [
            "a) atan2(a/b)",
            "b) atan(a/b)",
            "c) atan_2(a/b)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 335,
        "Question": "Which built-in function divides string into pieces seperated by fieldsep and stores the pieces in array?",
        "Options": [
            "a) split()",
            "b) divide()",
            "c) index()",
            "d) sub()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 336,
        "Question": "The built-in function tolower()",
        "Options": [
            "a) converts all lowercase characters into uppercase characters",
            "b) returns the string with all lowercase characters",
            "c) changes the nonalphabetic characters",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 337,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"kw4\">log</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) syntax error",
            "c) fatal error",
            "d) segmentation fault"
        ],
        "Answer": " Answer: a\nExplanation: The function log() is built-in function and need not to be defined. This function calculates the natural logarithm of positive numbers.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n0\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 338,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"kw4\">index</span><span class=\"br0\">(</span><span class=\"st0\">\"sanfoundry\"</span>,<span class=\"st0\">\"linux\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry linux",
            "b) sanfoundry",
            "c) 0",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The function index() searches the string “sanfoundry” for the first occurence of the string “linux”. The function usually returns the character position but here the string is not found, hence function returns 0.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n0\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 339,
        "Question": "8. What is the output of this pogram?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">system</span><span class=\"br0\">(</span><span class=\"st0\">\"date\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t   <span class=\"kw5\">print</span> <span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will execute the date command and then program will print “sanfoundry”",
            "b) program will generate fatal error because function system() is neither defined nor built-in function",
            "c) program will generate syntax error because the syntax of function system() is wrong",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The function system() allow to execute operating system command and then return to the awk program.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nWed Apr 17 10:22:47 IST 2013\nsanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 340,
        "Question": "9. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a=<span class=\"kw4\">int</span><span class=\"br0\">(</span><span class=\"nu0\">2.5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"br0\">(</span>a<span class=\"sy3\">*</span><span class=\"nu0\">20</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 50",
            "b) 40",
            "c) a*20",
            "d) syntax error"
        ],
        "Answer": " Answer: b\nExplanation: The function int() returns the integer part of the value. In this program it returns 2.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n40\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 341,
        "Question": "10. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"kw4\">toupper</span><span class=\"br0\">(</span><span class=\"st0\">\"sAnFoUnDrY_1_$\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) SANFOUNDRY_1_$",
            "b) sAnFoUnDrY 1 $",
            "c) SaNfOuNdRy_1_$",
            "d) SANFOUNDRY"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nSANFOUNDRY_1_$\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 342,
        "Question": "In awk, the built-in variable FS is",
        "Options": [
            "a) input field seperator",
            "b) output field seperator",
            "c) record seperator",
            "d) subscript seperator"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 343,
        "Question": "What is FNR?",
        "Options": [
            "a) FNR is the current record number in the current file",
            "b) FNR is the number of fields in the current input record",
            "c) FNR is an array contains the value of environment",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 344,
        "Question": "RSTART is set by invoking the",
        "Options": [
            "a) match function",
            "b) index function",
            "c) asort function",
            "d) split function"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 345,
        "Question": "Which one of the following is used by awk to control the conversion of numbers to string?",
        "Options": [
            "a) RS",
            "b) OFMT",
            "c) SUBSEP",
            "d) RSTART"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 346,
        "Question": "In awk program, the name of the array can not be same with the",
        "Options": [
            "a) name of variable",
            "b) value of the array element",
            "c) name of variable & value of the array element",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 347,
        "Question": "6. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#This filename is text.awk</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> <span class=\"kw3\">FILENAME</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) test.awk",
            "b) program will print nothing",
            "c) syntax error",
            "d) fatal error"
        ],
        "Answer": " Answer: b\nExplanation: The built-in variable FILENAME is the name of file that awk is currently reading and in this program there is no file listed on the command line.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n\n\n\t[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 348,
        "Question": "7. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>=<span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>=<span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>;i<span class=\"sy2\">&lt;</span><span class=\"nu0\">3</span>;i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw5\">print</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “sanfoundry” will print 2 times",
            "b) “sanfoundry” will print 3 times",
            "c) program will generate error becasue 2 array elements have the same value",
            "d) program will generate syntax error"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nsanfoundry\nsanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 349,
        "Question": "8. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>=<span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       delete a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) program will print “sanfoundry”",
            "b) program will print nothing",
            "c) program will generate syntax error",
            "d) program will generate fatal error"
        ],
        "Answer": " Answer: b\nExplanation: The delete command deletes the array element.\nOutput:[email protected]:/home/sanfoundry# ./test.awk\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 350,
        "Question": "9. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a<span class=\"br0\">[</span><span class=\"st0\">\"linux\"</span>,<span class=\"st0\">\"MCQ\"</span><span class=\"br0\">]</span>=<span class=\"st0\">\"sanfoundry\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw5\">print</span> a<span class=\"br0\">[</span><span class=\"st0\">\"linux\"</span>,<span class=\"st0\">\"MCQ\"</span><span class=\"br0\">]</span>\t   </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry",
            "b) linux MCQ",
            "c) a[“linux”,”MCQ”].",
            "d) syntax error"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\nsanfoundry\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 351,
        "Question": "10. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"awk\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co1\">#! /usr/bin/awk -f</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw2\">BEGIN</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a<span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span>=<span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a<span class=\"br0\">[</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">]</span>=<span class=\"nu0\">1</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a<span class=\"br0\">[</span><span class=\"nu0\">2</span>,<span class=\"nu0\">1</span><span class=\"br0\">]</span>=<span class=\"nu0\">2</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a<span class=\"br0\">[</span><span class=\"nu0\">2</span>,<span class=\"nu0\">2</span><span class=\"br0\">]</span>=<span class=\"nu0\">3</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">for</span><span class=\"br0\">(</span>i=<span class=\"nu0\">1</span>;i<span class=\"sy2\">&lt;</span><span class=\"nu0\">3</span>;i<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw1\">for</span><span class=\"br0\">(</span>j=<span class=\"nu0\">1</span>;j<span class=\"sy2\">&lt;</span><span class=\"nu0\">3</span>;j<span class=\"sy3\">++</span><span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"kw5\">print</span> a<span class=\"br0\">[</span>i,j<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3",
            "b) 0 2",
            "c) 1 3",
            "d) syntax error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[email protected]:/home/sanfoundry# ./test.awk\n0\n2\n[email protected]:/home/sanfoundry#\n"
    },
    {
        "id": 352,
        "Question": "Operating system kernel must be located in",
        "Options": [
            "a) /",
            "b) /boot",
            "c) either in / or in /boot",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 353,
        "Question": "Which one of the following is a mount point for a temporarily mounted filesystem?",
        "Options": [
            "a) /mnt directory",
            "b) /media directory",
            "c) /dev directory",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 354,
        "Question": "What is /root?",
        "Options": [
            "a) root filesystem",
            "b) home directory of the root user",
            "c) the directory which contains all the directories of the filesystem",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 355,
        "Question": "System binaries are stored in",
        "Options": [
            "a) /sbin directory",
            "b) /usr/sbin directory",
            "c) /usr/local/sbin directory",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 356,
        "Question": "The /dev directory contains the",
        "Options": [
            "a) device drivers",
            "b) device files",
            "c) kernel modules of device drivers",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 357,
        "Question": "The contents of root filesystem is responsible to",
        "Options": [
            "a) boot the system",
            "b) recover the system",
            "c) repair the system",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 358,
        "Question": "Static files of the bootloader are installed in",
        "Options": [
            "a) /boot directory",
            "b) /root directory",
            "c) /bin directory",
            "d) /sbin directory"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 359,
        "Question": "Linux filesystem contains mainly",
        "Options": [
            "a) ordinary files",
            "b) device files",
            "c) directory files",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 360,
        "Question": "In linux filesystem, the passwords of different users are stored in",
        "Options": [
            "a) /etc/passwd file",
            "b) /bin/passwd file",
            "c) /etc/shadow file",
            "d) /bin/shadow file"
        ],
        "Answer": " Answer: c\nExplanation: Passwords are visible in encrypted format in the file.\n"
    },
    {
        "id": 361,
        "Question": "Superuser can change the _______ permissions of any file.",
        "Options": [
            "a) owner",
            "b) group",
            "c) other",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 362,
        "Question": "When we install a new package in linux system, then",
        "Options": [
            "a) all the files of the packages are installed in a single directory",
            "b) different files are installed at different locations of the file system",
            "c) package works just after extraction, installation is not required",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 363,
        "Question": "Host specific configuration files are installed in",
        "Options": [
            "a) /etc directory",
            "b) /lib directory",
            "c) /root directory",
            "d) /bin directory"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 364,
        "Question": "The directory /media is the",
        "Options": [
            "a) mount point for removable media",
            "b) mount point for filesystem",
            "c) mount point for removable media & filesystem",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 365,
        "Question": "What is /bin/sh ?",
        "Options": [
            "a) bourne shell",
            "b) hard or symbolic link to the real shell command",
            "c) bash shell",
            "d) both bash shell and bourne shell"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 366,
        "Question": "The /boot directory stores the data that is used",
        "Options": [
            "a) before the kernel begins executing user mode programs",
            "b) after the kernel begins executing user mode programs",
            "c) before the bootloader is loaded in the RAM",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 367,
        "Question": "Which one of the directory does not contain binary files?",
        "Options": [
            "a) /bin",
            "b) /sbin",
            "c) /etc",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 368,
        "Question": "Kernel modules are present in",
        "Options": [
            "a) /lib directory",
            "b) /root directory",
            "c) /boot directory",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 369,
        "Question": "The directory /opt is reserved for",
        "Options": [
            "a) installation of add-on application software packages",
            "b) optional booting files",
            "c) optional user specific files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 370,
        "Question": "The directory /srv contains",
        "Options": [
            "a) site-specific data which is served by the system",
            "b) all the system files",
            "c) all the service files provided by the specific user",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 371,
        "Question": "Any file or directory present in the ______ directory may not be reserved between the invocation of the program.",
        "Options": [
            "a) /var",
            "b) /tmp",
            "c) /etc",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 372,
        "Question": "Which one of the following is not true about proc filesystem?",
        "Options": [
            "a) proc filesystem is a pseudo-filesystem",
            "b) proc filesystem is used as an interface to kernel data structures",
            "c) some files in proc filesystem allow kernel variables to be changed",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 373,
        "Question": "Proc filesystem provides the information about",
        "Options": [
            "a) processes",
            "b) processor",
            "c) proxy server",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 374,
        "Question": "The /proc directory contains",
        "Options": [
            "a) numerical sub-directory for each running process",
            "b) sub-directories for installed buses",
            "c) a text listing of filesystems which are supported by the kernel",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 375,
        "Question": "The file /proc/[PID]/cgroups",
        "Options": [
            "a) describes control groups to which the process belongs",
            "b) contains the information about all groups of the system",
            "c) provides the information about the group which has generated the process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: [PID] represents the process ID of the process. Every system has various running processes, so /proc directory contains various numerical sub-directories and the number shows the PID of the process.\n"
    },
    {
        "id": 376,
        "Question": "The file /proc/[PID]/cmdline holds the complete command line for the process, unless the process is a",
        "Options": [
            "a) child process",
            "b) zombie process",
            "c) orphan process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: A zombie process is the process which has completed execution but still has an entry in the process table.\n"
    },
    {
        "id": 377,
        "Question": "What is /proc/[PID]/cwd?",
        "Options": [
            "a) symbolic link to current directory of the process",
            "b) regular file containing the information about the current status of the process",
            "c) directory containing various sub-directories",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 378,
        "Question": "Which one of the following file contains the environment for the process?",
        "Options": [
            "a) /proc/[PID]/environ",
            "b) /proc/[PID]/env",
            "c) /proc/[PID]/path",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 379,
        "Question": "The entry for each file opened by the process is present in",
        "Options": [
            "a) /proc/[PID]/fd",
            "b) /proc/[PID]/file",
            "c) /proc/[PID]/maps",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 380,
        "Question": "The file /proc/[PID]/limits displays the ______ for each of the process’s resource limits.",
        "Options": [
            "a) hard limit",
            "b) soft limit",
            "c) units of measurement",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 381,
        "Question": "The file /proc/[PID]/maps contains the",
        "Options": [
            "a) currently mapped memory regions",
            "b) available memory regions",
            "c) memory regions which are free to map",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 382,
        "Question": "What is /proc/[PID]/root?",
        "Options": [
            "a) symbolic link that points to the process’s root directory",
            "b) regular file which holds all the PID of the system",
            "c) root directory",
            "d) does not exists in the proc filesystem"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 383,
        "Question": "“ps” command uses the file _____ to provide the information.",
        "Options": [
            "a) /proc/[PID]/stat",
            "b) /proc/[PID]/smaps",
            "c) /proc/[PID]/oom_score_adj",
            "d) /proc/[PID]/oom_score"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 384,
        "Question": "Which one of the following is not correct?",
        "Options": [
            "a) proc filesystem does not contain any directory for thread in the process",
            "b) in multithread process thread details will not be available if the main thread is already terminated",
            "c) proc filesystem contain any directory",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 385,
        "Question": "Proc filesystem does not contains",
        "Options": [
            "a) sub-directories for installed buses",
            "b) device files",
            "c) list of registered DMA",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 386,
        "Question": "The file /proc/devices is the",
        "Options": [
            "a) text listing of major numbers",
            "b) text listing of device groups",
            "c) text listing of major numbers & device groups",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 387,
        "Question": "The file /proc/cpuinfo is a collection of",
        "Options": [
            "a) cpu items",
            "b) architecture independent items",
            "c) both cpu items and architecture independent items",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 388,
        "Question": "The proc filesystem records the number of interrupts",
        "Options": [
            "a) per CPU only",
            "b) per IO device only",
            "c) per CPU per IO device",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 389,
        "Question": "Which file of the proc filesystem can be used instead of “syslog” system call to read kernel messages?",
        "Options": [
            "a) /proc/kmsg",
            "b) /proc/moudle/kmsg",
            "c) /proc/module/msg",
            "d) /proc/msg"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 390,
        "Question": "The file /proc/modules is a text list of",
        "Options": [
            "a) static modules",
            "b) dynamic modules",
            "c) modules that have been loaded by the system",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 391,
        "Question": "/proc/partitions contains",
        "Options": [
            "a) major number of each partition",
            "b) minor number of each partition",
            "c) number of block and partition name",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 392,
        "Question": "Which one of the following operating system does not supports proc filesystem?",
        "Options": [
            "a) IBM AIX",
            "b) QNX",
            "c) Solaries",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 393,
        "Question": "Obtaining of the PID can be done by the utility",
        "Options": [
            "a) pgrep",
            "b) pidof",
            "c) ps",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 394,
        "Question": "Which one of the following contains various bits of information about the state of power management?",
        "Options": [
            "a) /proc/acpi",
            "b) /proc/apm",
            "c) both /proc/acpi and /proc/apm",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 395,
        "Question": "Which file contains the boot options passed to the kernel?",
        "Options": [
            "a) /proc/cmdline",
            "b) /proc/root",
            "c) /proc/boot",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 396,
        "Question": "Which one of the following is a symlink to the root path as seen by the process?",
        "Options": [
            "a) /proc/[PID]/root",
            "b) /proc/[PID]/path",
            "c) both /proc/apm and /proc/[PID]/path",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 397,
        "Question": "The directory /proc/[PID]/tasks contains",
        "Options": [
            "a) hard links to any task that have been started by this process",
            "b) files that containing tasks that have been started by this process",
            "c) sub-direcories of various tasks",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 398,
        "Question": "The list of available frame buffers are stored in",
        "Options": [
            "a) /proc/[PID]/fb",
            "b) /proc/fb",
            "c) /proc/etc/fb",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 399,
        "Question": "The buddy algorithm handles the",
        "Options": [
            "a) Memory fragmentation",
            "b) DHCP server",
            "c) Routing",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 400,
        "Question": "The file /proc/swaps contains the",
        "Options": [
            "a) list of active swap partitions",
            "b) sizes of the swap partitions",
            "c) priorities of the swap partitions",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 401,
        "Question": "/proc/tty contains the information about",
        "Options": [
            "a) current terminal",
            "b) all terminals",
            "c) both current & all terminals",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 402,
        "Question": "The command “cd /proc/10/cwd” provides the",
        "Options": [
            "a) current working directory of process having PID 10",
            "b) current status of the process having PID 10",
            "c) current version of the filesystem",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 403,
        "Question": "Which one of the following command will print the environement of process 1?",
        "Options": [
            "a) cat /proc/1/environ",
            "b) cat /proc/bin/1/env",
            "c) cat /proc/1/var/env",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 404,
        "Question": "The file /proc/[PID]/mountinfo contains",
        "Options": [
            "a) major minor numbers of device files",
            "b) root of the mount within the filesystem",
            "c) mount point relative to the process’s root",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 405,
        "Question": "With the help of proc filesystem",
        "Options": [
            "a) kernel and kernel modules can send the information to processes",
            "b) process information can be accessed",
            "c) kernel modules can send the information to processes & process information can be accessed",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 406,
        "Question": "Most files and directories within /proc are 0 bytes in size because",
        "Options": [
            "a) proc filesystem exists only as a reflection of the in-memory kernel data structure",
            "b) these files contains very only one or two instructions",
            "c) proc filesystem doesn’t exists only as a reflection",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 407,
        "Question": "Proc files are",
        "Options": [
            "a) read-only files",
            "b) read-write files",
            "c) both read-write and read-only files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 408,
        "Question": "Accessing the file /proc/meminfo gives the different result each time because",
        "Options": [
            "a) memory usages is always fluctuating",
            "b) a new process id is assigned",
            "c) logical address is different from the physical address",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 409,
        "Question": "The files of /proc directory are",
        "Options": [
            "a) stored in secondary memory",
            "b) generated by the kernel",
            "c) stored in secondary memory & generated by the kernel",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 410,
        "Question": "The directory /proc/net contains information about",
        "Options": [
            "a) Different network system compiled into the system",
            "b) IP address of the system",
            "c) MAC address of the system",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 411,
        "Question": "The command “echo www.sanfoundry.com > /proc/sys/kernel/hostname” will",
        "Options": [
            "a) change the hostname",
            "b) print “www.sanfoundry.com”",
            "c) do nothing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 412,
        "Question": "Which file is used primarily for diagnosing memory fragmentation issues ?",
        "Options": [
            "a) /proc/buddyinfo",
            "b) /proc/meminfo",
            "c) /proc/apm",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 413,
        "Question": "Which file shows the parameter passed to kernel at the time of starting?",
        "Options": [
            "a) /proc/apm",
            "b) /proc/cmdline",
            "c) both /proc/apm and /proc/cmdline",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 414,
        "Question": "For the system having one processor, the processor identifying number in the file /proc/cpuinfo is",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 415,
        "Question": "The file /proc/execdomains lists the",
        "Options": [
            "a) execution domains currently supported by the linux kernel",
            "b) all domains of all processes",
            "c) registered ISA DMA channel in use",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 416,
        "Question": "The file /proc/kcore displays a size of",
        "Options": [
            "a) RAM",
            "b) RAM plus 4 KB",
            "c) RAM plus 8 KB",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 417,
        "Question": "/bin/dmesg picks the messages from",
        "Options": [
            "a) /proc/kmesg",
            "b) /sbin/klogd",
            "c) both /proc/kmesg and /sbin/klogd",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 418,
        "Question": "The file /proc/locks displays the file currently locked by the",
        "Options": [
            "a) kernel",
            "b) user",
            "c) superuser",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 419,
        "Question": "The file /proc version shows the version of ______ used in the system.",
        "Options": [
            "a) kernel",
            "b) gcc",
            "c) both kernel and gcc",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 420,
        "Question": "What is /proc/self ?",
        "Options": [
            "a) a directory",
            "b) link to the currently running process",
            "c) it allows a process to look itself without having to know its process ID",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 421,
        "Question": "The /sbin/sysctl command is used to",
        "Options": [
            "a) view kernel settings in the /proc/sys/ directory",
            "b) set kernel settings in the /proc/sys/ directory",
            "c) automate kernel settings in the /proc/sys/ directory",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 422,
        "Question": "What is makefile?",
        "Options": [
            "a) makefile describes to the make command that how to compile the program",
            "b) makefile contains various statements related with the compilation of target",
            "c) makefile contains various statements",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 423,
        "Question": "What is phony target in the makefile?",
        "Options": [
            "a) the target which is not a filename",
            "b) the target which is a filename",
            "c) the target which does not used for compilation",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 424,
        "Question": "As we type “make” command on the terminal",
        "Options": [
            "a) make reads the makefile in the current directory",
            "b) make reads the makefile in the parent directory",
            "c) make reads the makefile in the predefined environment variable",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 425,
        "Question": "The makefile starts executing from",
        "Options": [
            "a) first target",
            "b) first target whose name starts with “.”",
            "c) first target whose name does not starts with “.”",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 426,
        "Question": "The command “make sanfoundry” will",
        "Options": [
            "a) create the executable if sanfoundry.c file is present in the current directory",
            "b) create the object file named as sanfoundry.o",
            "c) give an error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 427,
        "Question": "If our makefile is named as “sanfoundry”, then which one of the following command will compile the code with this makefile",
        "Options": [
            "a) make -a sanfoundry",
            "b) make -f sanfoundry",
            "c) make sanfoudry",
            "d) make"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 428,
        "Question": "Which option of make command print the commands that would be executed, but do not execute them?",
        "Options": [
            "a) -m",
            "b) -n",
            "c) -o",
            "d) -p"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 429,
        "Question": "If we want to get the exit status that specified targets are up to date or not, we have to execute the make command with option",
        "Options": [
            "a) -q",
            "b) -r",
            "c) -s",
            "d) -t"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 430,
        "Question": "Which make command option ignores all errors in commands executed to remark files?",
        "Options": [
            "a) -i",
            "b) -j",
            "c) -k",
            "d) -l"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 431,
        "Question": "If make command is executed as “make -j 2”, then",
        "Options": [
            "a) two jobs will run simultaneously",
            "b) only two will be executed",
            "c) it will give an error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 432,
        "Question": "If we want to execute the makefile by just giving the “make” command, makefile should be named as",
        "Options": [
            "a) Makefile",
            "b) makefile",
            "c) MAKEFILE",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 433,
        "Question": "Running “make” command without the arguments starts the target ____ in the makefile.",
        "Options": [
            "a) “.phony”",
            "b) “clean”",
            "c) first",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 434,
        "Question": "In makefile the comment begins with the character",
        "Options": [
            "a) $",
            "b) #",
            "c) /*",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 435,
        "Question": "Which one of the following is used for the target filename in the makefile?",
        "Options": [
            "a) [email protected]",
            "b) $*",
            "c) $?",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 436,
        "Question": "Which one of the following can be used to specify the directory to search the dependencies and target files?",
        "Options": [
            "a) VPATH",
            "b) CPATH",
            "c) FPATH",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 437,
        "Question": "In the makefile the target and dependencies are separated by the character",
        "Options": [
            "a) –",
            "b) :",
            "c) /",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 438,
        "Question": "Macros for the makefile can be defined in",
        "Options": [
            "a) makefile",
            "b) command line",
            "c) both makefile and command line",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 439,
        "Question": "Which one of the following is not a valid makefile directive?",
        "Options": [
            "a) if",
            "b) elif",
            "c) endif",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 440,
        "Question": "When a target of makefile fails to execute",
        "Options": [
            "a) make does not executes any other target dependent on it",
            "b) it returns a status",
            "c) make does not executes any other target dependent on it & it returns a status",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 441,
        "Question": "Which one of the following provides all dependencies in the makefile?",
        "Options": [
            "a) $^",
            "b) $*",
            "c) $:",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 442,
        "Question": "Which one of the following command creates the executable file a.out?",
        "Options": [
            "a) gcc -o sanfoundry.c",
            "b) gcc sanfoundry.c",
            "c) gcc -o a.out",
            "d) gcc a.out"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 443,
        "Question": "If we compile the sanfoudry.c file with the command “gcc -o sanfoundry sanfoundry.c”, then the executable file will be",
        "Options": [
            "a) a.out",
            "b) sanfoundry",
            "c) sanfoundry.out",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 444,
        "Question": "If we compile the sanfoundry.c file with the command “gcc -c sanfoundry.c”, then the output file will be",
        "Options": [
            "a) sanfoundry.o",
            "b) sanfoundry.s",
            "c) sanfoundry.i",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 445,
        "Question": "Which gcc option includes debugging info in the generated object code?",
        "Options": [
            "a) -g",
            "b) -c",
            "c) -p",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 446,
        "Question": "The command “gcc -S sanfoundry.c” will",
        "Options": [
            "a) stop compilation process after the generation of assembly code file",
            "b) generate sanfoundry.s file",
            "c) stop compilation process after the generation of assembly code file & generate sanfoundry.s file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 447,
        "Question": "Which gcc option stops compilation process after preprocessing stage?",
        "Options": [
            "a) -e",
            "b) -f",
            "c) -E",
            "d) -F"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 448,
        "Question": "The -v option of gcc",
        "Options": [
            "a) print the commands executed to run the stages of compilation",
            "b) version of the gcc compiler",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 449,
        "Question": "Which gcc option turns off certain features of gcc that are incompatible with ISO C89?",
        "Options": [
            "a) -ansi",
            "b) -ISO",
            "c) -ver",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 450,
        "Question": "The option -fsyntax-only of gcc",
        "Options": [
            "a) checks the code for syntax error",
            "b) checks the code for fatal error",
            "c) checks the code for syntax & fatal error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 451,
        "Question": "Which option of gcc inhibit all warning messages?",
        "Options": [
            "a) -w",
            "b) -x",
            "c) -y",
            "d) -z"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 452,
        "Question": "What is the job of -Werror option in gcc?",
        "Options": [
            "a) it avoids all the errors present in the source code",
            "b) it makes all warnings into errors",
            "c) it stores all the errors of source code into a seperate file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 453,
        "Question": "The command “as -o sanfoundry.o sanfoundry.s” will",
        "Options": [
            "a) generate object file sanfoundry.o",
            "b) provide an error if sanfoundry.s exists",
            "c) generate object file sanfoundry.o & provide an error if sanfoundry.s exists",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 454,
        "Question": "The command “gcc -save-temps sanfoundry.c” will generate",
        "Options": [
            "a) sanfoundry.i",
            "b) sanfoundry.s",
            "c) sanfoundry.o",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 455,
        "Question": "The -H option of gcc",
        "Options": [
            "a) prints the name of each header file used",
            "b) is used to include header file",
            "c) ignores the header file which are not required by source code",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 456,
        "Question": "Which option of gcc enables compiler’s all warning messages?",
        "Options": [
            "a) -Wall",
            "b) -War",
            "c) -Warn",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 457,
        "Question": "Which option of gcc adds include directory of header files?",
        "Options": [
            "a) -i",
            "b) -I",
            "c) -e",
            "d) -E"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 458,
        "Question": "The -fPIC option of gcc",
        "Options": [
            "a) generates the position independent code of shared libraries",
            "b) opens the source file in readonly mode",
            "c) opens the source file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 459,
        "Question": "The -shared option of gcc generates shared ______ for shared library.",
        "Options": [
            "a) object file",
            "b) preprocessed file",
            "c) source file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 460,
        "Question": "Which option of gcc links with a library file?",
        "Options": [
            "a) -l",
            "b) -L",
            "c) -link",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 461,
        "Question": "Which option of gcc looks in the provided directory for library files?",
        "Options": [
            "a) -l",
            "b) -L",
            "c) -link",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 462,
        "Question": "The command “cpp sanfoundry.c > sanfoundry.i” will",
        "Options": [
            "a) create the expanded source code file sanfoudry.i for the source code file sanfoundry.c",
            "b) append the content of the sanfoundry.c into sanfoundry.i",
            "c) give an error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 463,
        "Question": "Which option of gcc makes the compiler print out each function name as it is compiled, and print some statistics about each pass when it finishes?",
        "Options": [
            "a) -p",
            "b) -P",
            "c) -q",
            "d) -Q"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 464,
        "Question": "The -Wextra option of gcc",
        "Options": [
            "a) is same as -w option",
            "b) does not exist",
            "c) enables extra warning messages",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 465,
        "Question": "Which gcc option undefines a preprocessor macro?",
        "Options": [
            "a) -U",
            "b) -u",
            "c) -undefine",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 466,
        "Question": "Pipes are used rather than temporary files for communication between the various stages of compilation in gcc when",
        "Options": [
            "a) -pipe option is used",
            "b) -temp option is used",
            "c) –disable -temp option is used",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 467,
        "Question": "The gcc option -Wunused warns when a _____ variable is unused aside from its declaration.",
        "Options": [
            "a) variable",
            "b) function",
            "c) macro",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 468,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) source codes can not be compiled with static libraries in gcc",
            "b) -O is used for optimization in gcc",
            "c) source codes can be compiled",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 469,
        "Question": "The command line options of gcc can also be read from a file with",
        "Options": [
            "a) @",
            "b) $",
            "c) #",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 470,
        "Question": "Which option of the gcc is used to warn is padding is included in structure?",
        "Options": [
            "a) -Wpadded",
            "b) -Wpad",
            "c) -Wpadding",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 471,
        "Question": "Which gcc option reports the cpu time taken by each subprocess in the compilation sequence?",
        "Options": [
            "a) -time",
            "b) -cpu",
            "c) -process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 472,
        "Question": "The correct sequence of GCC compilation process is",
        "Options": [
            "a) preprocessing -> compilation -> assemble -> linking",
            "b) assemble -> preprocessing -> compilation -> linking",
            "c) preprocessing -> assemble -> compilation -> linking",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 473,
        "Question": "The preprocessor removes the _______ from the source code.",
        "Options": [
            "a) comments",
            "b) header files",
            "c) both comments and header files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 474,
        "Question": "The compiler converts",
        "Options": [
            "a) assembly code into machine code",
            "b) preprocessed source code into assembly code",
            "c) machine code into assembly code",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 475,
        "Question": "The assembly code is converted into the machine code by",
        "Options": [
            "a) compiler",
            "b) assembler",
            "c) linker",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 476,
        "Question": "What is the role of linker in the compilation process?",
        "Options": [
            "a) linker links the object code with the library code",
            "b) linker converts machine code into executable machine code",
            "c) linker generates an executable file",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 477,
        "Question": "If sanfoundry.c is compiled with GCC, then the sanfoundry.s file will contain the",
        "Options": [
            "a) assembly code",
            "b) machine code",
            "c) preprocessed code",
            "d) expanded source code"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 478,
        "Question": "The object file contains the",
        "Options": [
            "a) assembly code",
            "b) machine code",
            "c) modified source code",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 479,
        "Question": "If we do not specify the executable file name at the compilation time in GCC, then in linux the compiler creates executable named as",
        "Options": [
            "a) a.out",
            "b) a.exe",
            "c) x.out",
            "d) x.exe"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 480,
        "Question": "The macros specifies in source code are expanded by",
        "Options": [
            "a) preprocessor",
            "b) assembler",
            "c) compiler",
            "d) linker"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 481,
        "Question": "The preprocessor creates the file with extension",
        "Options": [
            "a) .a",
            "b) .i",
            "c) .s",
            "d) .o"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 482,
        "Question": "The a.out file is in the",
        "Options": [
            "a) ELF format",
            "b) EXE format",
            "c) Both EXE and ELF format",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 483,
        "Question": "Which one of the following command can be used to provide executable permissions for a file?",
        "Options": [
            "a) chmod +x <filename>",
            "b) chmod 777 <filename>",
            "c) both chmod +x  and chmod 777 ",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 484,
        "Question": "The lines in our code that begin with the “#” character are",
        "Options": [
            "a) preprocessor directives",
            "b) macros",
            "c) header files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 485,
        "Question": "Command line parameters are passed by the",
        "Options": [
            "a) preprocessor",
            "b) assembler",
            "c) compiler",
            "d) linker"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 486,
        "Question": "In the preprocessing stage of compilation",
        "Options": [
            "a) header files are actually expanded and included in the source code of the program",
            "b) macros are replaced by their respective values",
            "c) all the comments are stripped off",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 487,
        "Question": "Which compilation step makes sure that all the undefined symbols in the code are resolved.",
        "Options": [
            "a) linking",
            "b) compiling",
            "c) preporcessing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: An undefined symbol is one for which there is no definition available.\n"
    },
    {
        "id": 488,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) we need to manually go through all intermediate stages to generate an executable in gcc",
            "b) gcc compilation process always contains 4 stages",
            "c) gcc compilation process always contains 3 stages",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 489,
        "Question": "Preprocessed files are given the file extension _____ for c++ programs.",
        "Options": [
            "a) .i",
            "b) .ii",
            "c) .iii",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 490,
        "Question": "The assmebly code generated depends upon the",
        "Options": [
            "a) processor archietecture",
            "b) ram size",
            "c) both processor archietecture and RAM size",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 491,
        "Question": "The COFF stands for",
        "Options": [
            "a) common object file format",
            "b) combined operation for file formats",
            "c) combined object file format",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 492,
        "Question": "In Linux, the static library has the extension of",
        "Options": [
            "a) .a",
            "b) .b",
            "c) .c",
            "d) .d"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 493,
        "Question": "The library contains the",
        "Options": [
            "a) pre-compiled object files",
            "b) source files",
            "c) header files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 494,
        "Question": "Libraries can be linked with ____ to create executables.",
        "Options": [
            "a) other libraries",
            "b) other object files",
            "c) both other libraries and object files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 495,
        "Question": "In Linux, the static libraries can be created by",
        "Options": [
            "a) ar command",
            "b) as command",
            "c) ap command",
            "d) aq command"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 496,
        "Question": "If a program is linked against a static library then",
        "Options": [
            "a) machine code of the used function is copied in the executable",
            "b) used function definition is copied into the preprocessd code",
            "c) used function definition is provided at the time of compiling",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 497,
        "Question": "To use the static library in the program",
        "Options": [
            "a) header file must be provided to in the source code",
            "b) path for the library must be specified",
            "c) header file must be provided to in the source code & path for the library must be specified",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 498,
        "Question": "Which gcc option is used to specify the library?",
        "Options": [
            "a) -c",
            "b) -l",
            "c) -a",
            "d) -o"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 499,
        "Question": "In linux, the static libraries are mostly installed in",
        "Options": [
            "a) /usr/lib",
            "b) /usr/local/lib",
            "c) both /usr/lib and /usr/local/lib",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 500,
        "Question": "Which one of the following command can list the symbols defined in a library?",
        "Options": [
            "a) mn",
            "b) nm",
            "c) nn",
            "d) mm"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 501,
        "Question": "The archive(ar) utility in linux can",
        "Options": [
            "a) create a new static library",
            "b) insert the object files into the static library",
            "c) replace the object files into the static library",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 502,
        "Question": "In linux shared libraries has the extension of",
        "Options": [
            "a) .so",
            "b) .si",
            "c) .sl",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 503,
        "Question": "When a program is linked with a shared library",
        "Options": [
            "a) only a small table is created in the executable",
            "b) executable contains the whole content of respective .so file",
            "c) executable contains nothing related with the shared libraries",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 504,
        "Question": "Shared libraries can be shared between",
        "Options": [
            "a) various running programs",
            "b) only 2 running programs",
            "c) only 8 running programs",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 505,
        "Question": "In linux, shared library is a",
        "Options": [
            "a) text file",
            "b) binary file",
            "c) device file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 506,
        "Question": "In GCC compiler, “-shared” option is given to create the shared library with",
        "Options": [
            "a) source files",
            "b) object files",
            "c) executables",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 507,
        "Question": "Which option of GCC compiler provides the linking with shared libraries?",
        "Options": [
            "a) -lmylib",
            "b) -lib",
            "c) -mylib",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 508,
        "Question": "After using the shared library, memory can be done free by calling",
        "Options": [
            "a) dlclose",
            "b) slclose",
            "c) lclose",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 509,
        "Question": "Shared libraries are linked with the program",
        "Options": [
            "a) at the time of creation of executable",
            "b) at the run time",
            "c) at the time of creation of executable & run time",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 510,
        "Question": "For a shared library, version number is changed when",
        "Options": [
            "a) changes done in code make the shared library incompatible with the previous version",
            "b) changes done in code does not make the shared library incompatible with the previous version",
            "c) when minor number is changed",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 511,
        "Question": "Which command can be used to update the shared library system?",
        "Options": [
            "a) lconfig",
            "b) ldconfig",
            "c) slconfig",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 512,
        "Question": "For debugging with GDB, the file “sanfoundry” can be created with the command",
        "Options": [
            "a) gcc -g -o sanfoundry sanfoundry.c",
            "b) gcc -g sanfoundry.c",
            "c) gdb sanfoundry",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 513,
        "Question": "For debugging with GDB, the compiled program can be run by the command",
        "Options": [
            "a) run",
            "b) execute",
            "c) ./<filename>",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 514,
        "Question": "In GDB, breakpoints can be set by the command",
        "Options": [
            "a) break",
            "b) b",
            "c) both break and b",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 515,
        "Question": "GDB stands for",
        "Options": [
            "a) GNU debugger",
            "b) General debugging breakpoint",
            "c) General debugger",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 516,
        "Question": "GDB can be used for",
        "Options": [
            "a) c language",
            "b) c++ language",
            "c) both c and c++ language",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 517,
        "Question": "The command “gdb sanfoundy”",
        "Options": [
            "a) will start debugging for the file “sanfoundry” if the file is compiled with -g option with GCC",
            "b) will create executable for debugging",
            "c) will provide all errors present in the file “sanfoundry”",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 518,
        "Question": "In debugging with GDB, break points can be set to",
        "Options": [
            "a) any line",
            "b) any function",
            "c) both any line and function",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 519,
        "Question": "In GDB debugging, we can proceed to the next breakpoint with command",
        "Options": [
            "a) next",
            "b) continue",
            "c) both next and continue",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 520,
        "Question": "At the time of debugging with GDB, if we just press ENTER",
        "Options": [
            "a) GDB will repeat the same command you just gave it",
            "b) GDB will do nothing",
            "c) GDB will exit",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 521,
        "Question": "To print the value of a variable while debugging with GDB, ______ command can be used.",
        "Options": [
            "a) printf",
            "b) print",
            "c) show",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 522,
        "Question": "Which GDB command prints the value of a variable in hex.",
        "Options": [
            "a) print/x",
            "b) print/h",
            "c) print/e",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 523,
        "Question": "Which GDB command interrupts the program whenever the value of a variable is modified and prints the value old and new values of the variable?",
        "Options": [
            "a) watch",
            "b) show",
            "c) trace",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 524,
        "Question": "Which GDB command produces a stack trace of the function calls that lead to a segmentation fault?",
        "Options": [
            "a) trace",
            "b) backtrace",
            "c) forwardtrace",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 525,
        "Question": "The specific break point can be deleted by _____ command in GDB.",
        "Options": [
            "a) delete",
            "b) del",
            "c) remove",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 526,
        "Question": "The “step” command of GDB",
        "Options": [
            "a) executes the current line of the program",
            "b) stops the next statement to be executed",
            "c) executes the current line of the program & stops the next statement to be executed",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 527,
        "Question": "Which GDB command reloads the debugging information?",
        "Options": [
            "a) file",
            "b) reload",
            "c) debug",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 528,
        "Question": "GDB can be used",
        "Options": [
            "a) to find out the memory leakages",
            "b) to get the result of a particular expression in a program",
            "c) to find the reason of segementation fault",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 529,
        "Question": "Which GDB command can be used to put a breakpoint at the beginning of the program?",
        "Options": [
            "a) b main",
            "b) b start",
            "c) break",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 530,
        "Question": "To put the breakpoint at the current line ____ command can be used?",
        "Options": [
            "a) b",
            "b) break",
            "c) both b and break",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 531,
        "Question": "We can list all the breakpoint in GDB by the command",
        "Options": [
            "a) info break",
            "b) break all",
            "c) both info break and break all",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 532,
        "Question": "Which one of the following is not true about GDB?",
        "Options": [
            "a) quit command is used to exit the GDB",
            "b) kill command is used to stop execution in GDB",
            "c) if the execution is stopped by kill command then it can not be started again",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  None.\n"
    },
    {
        "id": 533,
        "Question": "While debugging with GDB",
        "Options": [
            "a) variables can be print",
            "b) variables can be modify",
            "c) variables can be print & modify",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 534,
        "Question": "GDB command “frame” is used",
        "Options": [
            "a) to change the stack frames",
            "b) to check the stack frames only",
            "c) it is not a valid command",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 535,
        "Question": "The GDB command “info local”",
        "Options": [
            "a) displays the list of local variables",
            "b) value of local values for the current stack frame",
            "c) displays the list of local variables & value of local values for the current stack frame",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 536,
        "Question": "If we have multiple source files, then during the debugging with GDB",
        "Options": [
            "a) breakpoint can not be set",
            "b) break point can be set by “break” command with a filename",
            "c) break point can be set only to makefile",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 537,
        "Question": "What is temporary breakpoint?",
        "Options": [
            "a) it stops the program once",
            "b) it is removed after one execution of the program",
            "c) it stops the program once & removes after one execution of the program",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 538,
        "Question": "In GDB breakpoints can be skipped by the command",
        "Options": [
            "a) ignore",
            "b) reject",
            "c) skip",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 539,
        "Question": "Which GDB command is used to examine the memory?",
        "Options": [
            "a) x",
            "b) y",
            "c) z",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 540,
        "Question": "Which one of the following is not true about the GDB?",
        "Options": [
            "a) info register is used to see that what is in the processor registers",
            "b) processor registers can not be accessed by GDB",
            "c) first 32 bits of the variable can not be examined",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 541,
        "Question": "Assemble code of the program can be displayed in GDB by the command",
        "Options": [
            "a) disassemble",
            "b) assemble",
            "c) assembly",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 542,
        "Question": "The execution of the program in GDB can be affected by",
        "Options": [
            "a) arguments",
            "b) working directory",
            "c) environment",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 543,
        "Question": "While debugging with GDB, arguments to the program can be specified by the arguments of _____ command.",
        "Options": [
            "a) run",
            "b) gdb",
            "c) make",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 544,
        "Question": "Inside GDB, a program may stop because of",
        "Options": [
            "a) a signal",
            "b) a breakpoint",
            "c) step command",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 545,
        "Question": "Which one of the following is a special breakpoint that stops the program when the value of an expression changes in GDB?",
        "Options": [
            "a) watchpoint",
            "b) catchpoint",
            "c) getpoint",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 546,
        "Question": "With the list command, by default GDB prints the ____ source lines.",
        "Options": [
            "a) 20",
            "b) 10",
            "c) all",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 547,
        "Question": "In GDB which one of the following allows us to specify a variable in terms of the file or function where it is defined?",
        "Options": [
            "a) ::",
            "b) @",
            "c) $",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 548,
        "Question": "If we want to print the value of a variable in hexadecimal, we have to use “print” command with the option ___ in GDB.",
        "Options": [
            "a) x",
            "b) h",
            "c) hex",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 549,
        "Question": "Which one of the following variables is used within GDB to hold on to a value and refer to it later?",
        "Options": [
            "a) convenience variables",
            "b) environment variables",
            "c) temporary variables",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 550,
        "Question": "In GDB, we can refer to machine register contents, in expressions, as variables with names starting with",
        "Options": [
            "a) $",
            "b) #",
            "c) !",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 551,
        "Question": "In GDB hardware-dependent information about the floating point unit can be displayed by the command",
        "Options": [
            "a) info float",
            "b) display float",
            "c) show float",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 552,
        "Question": "In GDB, a tracepoint can be set by the command",
        "Options": [
            "a) trace",
            "b) set",
            "c) break trace",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 553,
        "Question": "Which one of the following command saves the command history of GDB in a file?",
        "Options": [
            "a) history",
            "b) set history",
            "c) set history save on",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 554,
        "Question": "The command “show commands” of GDB",
        "Options": [
            "a) displays the last 10 commands in the command history",
            "b) displays all commands of the command history",
            "c) displays all the commands available in GDB",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 555,
        "Question": "The GDB command “show output-radix”",
        "Options": [
            "a) sets the default base for numeric display",
            "b) displays the current default base for numeric display",
            "c) sets the default base",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 556,
        "Question": "The user can define a command for GDB with the command",
        "Options": [
            "a) define",
            "b) command",
            "c) assign",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 557,
        "Question": "By default the GDB automatically executes the command from its",
        "Options": [
            "a) init files",
            "b) start files",
            "c) begin files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 558,
        "Question": "The GDB text user interface uses the ____ library to show the source file.",
        "Options": [
            "a) Curses",
            "b) YUI",
            "c) JUI",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 559,
        "Question": "Which one of the following GDB command allows to move from one stack frame to another without printing the frame?",
        "Options": [
            "a) select-frame",
            "b) frame",
            "c) frame move",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 560,
        "Question": "Which one of the following GDB command deletes any breakpoint at the next instruction to be executed in the selected stack frame?",
        "Options": [
            "a) clear",
            "b) delete",
            "c) disable",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 561,
        "Question": "The result of an expression can be assigned to an environement variable with the command",
        "Options": [
            "a) assign",
            "b) set",
            "c) env",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 562,
        "Question": "Sysfs was originally called",
        "Options": [
            "a) device driver filesystem",
            "b) kernel interface filesystem",
            "c) kernel filesystem",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 563,
        "Question": "What is sysfs?",
        "Options": [
            "a) it is a virtual filesystem",
            "b) users use it to get the information about the running kernel",
            "c) it is used for exporting kernel objects.",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 564,
        "Question": "Sysfs can be considered as the reflection of the",
        "Options": [
            "a) kernel’s device model",
            "b) user’s device model",
            "c) network’s device model",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 565,
        "Question": "The files of sysfs contains the information about",
        "Options": [
            "a) devices and drivers",
            "b) memory mapping",
            "c) ports",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 566,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) any file of the sysfs can not be edited",
            "b) some files of the sysfs are writable for configuration of devices",
            "c) any file of the sysfs may not be edited",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 567,
        "Question": "In linux sysfs is always mounted at",
        "Options": [
            "a) /sys",
            "b) /proc/sys",
            "c) /proc/mounts",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 568,
        "Question": "Libsysfs is a",
        "Options": [
            "a) user space library",
            "b) kernel space library",
            "c) not a library",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 569,
        "Question": "Sysfs represents the",
        "Options": [
            "a) kernel objects",
            "b) libraries",
            "c) api",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 570,
        "Question": "Sysfs does not contains",
        "Options": [
            "a) regular files",
            "b) symbolic links",
            "c) directories",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 571,
        "Question": "The directories in the /sys directory represents",
        "Options": [
            "a) the device files",
            "b) major subsystems that are registered with sysfs",
            "c) details of buses only",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 572,
        "Question": "The directories of /sys directory",
        "Options": [
            "a) are created at system startup when the subsystems register themselves with kobject core",
            "b) are created when any device is connects with the system",
            "c) are created at the time of kernel compilation",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 573,
        "Question": "The directory /sys/block contains",
        "Options": [
            "a) sub-directories for each block device",
            "b) symbolic link for each block device only",
            "c) device file for each block device only",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 574,
        "Question": "In sysfs, each represented bus type has two directories named as",
        "Options": [
            "a) attributes and kobjects",
            "b) devices and drivers",
            "c) devices and kobjects",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 575,
        "Question": "A device class describes the ____ type of device.",
        "Options": [
            "a) physical",
            "b) stuctural",
            "c) functional",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 576,
        "Question": "Which one of the following directory contains every physical device that has been discovered by the bus types registered with the kernel?",
        "Options": [
            "a) /sys/devices",
            "b) /sys/bus/devices",
            "c) /devices",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 577,
        "Question": "Which type of devices are peripheral devices?",
        "Options": [
            "a) platform devices",
            "b) system devices",
            "c) both system and platform devices",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 578,
        "Question": "Which one of the following is not a system device?",
        "Options": [
            "a) CPU",
            "b) APIC",
            "c) Timer",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 579,
        "Question": "Which one of the following is not a platform specific code?",
        "Options": [
            "a) x86 BIOS",
            "b) EFI on ia64",
            "c) both x86 BIOS and EFI on ia64",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 580,
        "Question": "In device driver model bus_type object contains the",
        "Options": [
            "a) name of the bus type",
            "b) set of kobjects of the drivers",
            "c) set of kobjects of the devices",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 581,
        "Question": "The file fs/sysfs/sysfs.h contains the",
        "Options": [
            "a) internal header files for sysfs",
            "b) function definitions will not shared locally among the sysfs source",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 582,
        "Question": "Sysfs is initialised in ______ file via sysfs_init function.",
        "Options": [
            "a) fs/sysfs/mount.c",
            "b) sysfs/mount.c",
            "c) fs/mount.c",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 583,
        "Question": "Kernel objects are exported as _____ via sysfs.",
        "Options": [
            "a) regular files",
            "b) symbolic links",
            "c) directories",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 584,
        "Question": "Sysfs internally stores the pointer to the ____ that implements the directory in the file system.",
        "Options": [
            "a) kobjects",
            "b) kstructures",
            "c) kinodes",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 585,
        "Question": "Attributes can be exported for objects in the form of _______ in the file system.",
        "Options": [
            "a) regular files",
            "b) directories",
            "c) symbolic links",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 586,
        "Question": "In sysfs every subsystem has",
        "Options": [
            "a) a shared attribute structure",
            "b) its own attribute structure",
            "c) a shared & own attribute structure",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 587,
        "Question": "sysfs is based on",
        "Options": [
            "a) rootfs",
            "b) ramfs",
            "c) initramfs",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 588,
        "Question": "Which one of the following is a notification to user space from the kernel that something has changed in the system’s configuration?",
        "Options": [
            "a) hotplug event",
            "b) module event",
            "c) attach event",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 589,
        "Question": "In the device driver model the device_driver object contains the",
        "Options": [
            "a) name of the device driver",
            "b) embedded kobjects",
            "c) method for probing a device",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 590,
        "Question": "A ____ is a higher level view of a device that abstracts out low level implementation details/",
        "Options": [
            "a) inode",
            "b) class",
            "c) major number",
            "d) minor number"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 591,
        "Question": "When a device is removed from the system",
        "Options": [
            "a) files and directories of that device in the sysfs are removed automatically",
            "b) all the files of sysfs are preserved until the system turn offs",
            "c) it does not create any change in the sysfs",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 592,
        "Question": "Relationship between components of device driver models are expressed in the sysfs as",
        "Options": [
            "a) a directory",
            "b) a regular file",
            "c) symbolic links between files and directories",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 593,
        "Question": "What is the main role of the regular files in the sysfs?",
        "Options": [
            "a) regular files represent the attributes of devices and drivers",
            "b) regular files represent the kernel objects",
            "c) regular files represent the kernel sets",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 594,
        "Question": "The core data structure of device driver model is",
        "Options": [
            "a) kobject",
            "b) kfile",
            "c) kmodule",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 595,
        "Question": "The kset contains",
        "Options": [
            "a) pointer to subsystem descriptor",
            "b) pointer to the kobject type descriptor of the kset",
            "c) head of the kobjects included in the kset",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 596,
        "Question": "Which one of the following is a read-write semaphore in linux that protects all ksets and kobjects included in the filesystem?",
        "Options": [
            "a) rwsem",
            "b) rwsemaphore",
            "c) rws",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 597,
        "Question": "Each device in the device driver model is represented by a _____ object.",
        "Options": [
            "a) driver",
            "b) device",
            "c) node",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 598,
        "Question": "Each driver in the device driver model is described by a ______ object.",
        "Options": [
            "a) dev_d",
            "b) device_d",
            "c) dev_driver",
            "d) device_driver"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 599,
        "Question": "The channel between the processor and devices is called?",
        "Options": [
            "a) bus",
            "b) driver",
            "c) class",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 600,
        "Question": "In which directory every kernel module of the system is represented?",
        "Options": [
            "a) /sys/kernel",
            "b) /sys/module",
            "c) /sys/kernel/module",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 601,
        "Question": "In sysfs the device drivers of same _____ are expected to provide same functionalities to the user mode application.",
        "Options": [
            "a) class",
            "b) kobjects",
            "c) ksets",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 602,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) kobjects are included in a hierarchic organisation",
            "b) kobjects can have a parent",
            "c) kobjects can be included in a kset",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 603,
        "Question": "In sysfs.h which one of the following structure represents the directory entries?",
        "Options": [
            "a) struct sysfs_dirent",
            "b) struct sysfs_dir",
            "c) struct sysfs",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 604,
        "Question": "The name pointer of the attribute data structure represents the _____ in sysfs.",
        "Options": [
            "a) directory",
            "b) file",
            "c) symbolic link",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 605,
        "Question": "To read/write attribute, which one of the following method is required?",
        "Options": [
            "a) show",
            "b) store",
            "c) both show and store",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 606,
        "Question": "Which one of the following is not contained in the kobject data structure?",
        "Options": [
            "a) pointer to the kobject type descriptor",
            "b) pointer to the containing kset",
            "c) pointer to the parent kobject",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 607,
        "Question": "The kobjects can be organized in a hierarchical tree by means of",
        "Options": [
            "a) ksets",
            "b) kref",
            "c) ktype",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 608,
        "Question": "Which one of the following is a element of a kset data structure?",
        "Options": [
            "a) pointer to the subsystem descriptor",
            "b) pointer to the kobject type descriptor of the kset",
            "c) pointer to the subsystem descriptor & kobject type descriptor of the kset",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 609,
        "Question": "Which one of the following function is used to add the kobject to sysfs?",
        "Options": [
            "a) kobject_add()",
            "b) kobject_register()",
            "c) kobject_init()",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 610,
        "Question": "Which one of the following function is used to create a new attribute?",
        "Options": [
            "a) sysfs_create_file()",
            "b) sysfs_attribute",
            "c) both sysfs_create_file() and sysfs_attribute",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 611,
        "Question": "Sysfs attribute should export ____ value per file.",
        "Options": [
            "a) one",
            "b) two",
            "c) three",
            "d) four"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 612,
        "Question": "The major number identifies the _____ associated with the device.",
        "Options": [
            "a) driver",
            "b) protocol",
            "c) port",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 613,
        "Question": "The minor number range should be",
        "Options": [
            "a) 0 to 15",
            "b) 0 to 63",
            "c) 0 to 255",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 614,
        "Question": "Which one of the following is not true?",
        "Options": [
            "a) dynamic allocation of major numbers is not possible",
            "b) major number can not be shared among drivers",
            "c) dynamic allocation of major numbers is not possible & also major number can not be shared among drivers",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 615,
        "Question": "In linux kernel 2.4, we can have",
        "Options": [
            "a) 256 character drivers only",
            "b) 256 block drivers only",
            "c) 256 character drivers and 256 block drivers at the same time",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: c\n"
    },
    {
        "id": 616,
        "Question": "In we use a driver for N number of files, then we have to create ____ device files.",
        "Options": [
            "a) N",
            "b) 1",
            "c) N-1",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 617,
        "Question": "If we use a driver for various device files, then",
        "Options": [
            "a) minor number will be different for every device file",
            "b) minor number will be same for every device file",
            "c) minor number can not be allocated for any device file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 618,
        "Question": "The connection between the device file and device driver is based on the",
        "Options": [
            "a) name of device file",
            "b) number of device file",
            "c) name & number of device file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 619,
        "Question": "In linux kernel 2.1, the minor numbers were used to",
        "Options": [
            "a) represnt the sub-functionalitites of the driver",
            "b) identify the driver",
            "c) represent the device files",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 620,
        "Question": "The kernel identifies the driver with its",
        "Options": [
            "a) module",
            "b) major number",
            "c) device file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 621,
        "Question": "In linux, a device driver can work without the",
        "Options": [
            "a) major number",
            "b) minor number",
            "c) device file name",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 622,
        "Question": "What is a context switch?",
        "Options": [
            "a) Kernel switches from executing one process to another",
            "b) Process switches from kernel mode to user mode",
            "c) Process switches from user mode to kernel mode",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 623,
        "Question": "Pid of init process",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 32767",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 624,
        "Question": "What is the default maximum number of processes that can exist in Linux?",
        "Options": [
            "a) 32768",
            "b) 1024",
            "c) 4096",
            "d) unlimited"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 625,
        "Question": "How do you get parent process identification number?",
        "Options": [
            "a) waitpid",
            "b) getpid()",
            "c) getppid()",
            "d) parentid()"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 626,
        "Question": "Parent process id of a deamon process is_________________",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 4",
            "d) 1"
        ],
        "Answer": " Answer:  d\nExplanation: None."
    },
    {
        "id": 627,
        "Question": "The process which terminates before the parent process exits becomes",
        "Options": [
            "a) Zombie",
            "b) Orphan",
            "c) Child",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 628,
        "Question": "Return value of fork() system call can be:",
        "Options": [
            "a) -1,<0, 0",
            "b) -1,>0, 0",
            "c) -1,<0",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 629,
        "Question": "If the fork() system call returns -1, then it means?",
        "Options": [
            "a) No new child process is created",
            "b) The child process is an orphan",
            "c) The child process is in Zombie",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 630,
        "Question": "Fork returns _____ to parent process on success",
        "Options": [
            "a) 0",
            "b) child process id",
            "c) parent process id",
            "d) none"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 631,
        "Question": "10. How many times printf() will be executed in the below mentioned program?  <div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">&nbsp;\n main() \n {\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i;&lt;br&gt;&lt;br&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      for (i = 0; i &lt; 4; i++)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n      fork();\n &nbsp;&nbsp;&nbsp;&nbsp; printf(\"my pid = %d\\n\", getpid());\n}</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 8",
            "c) 16",
            "d) 32"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 632,
        "Question": "11. What is the output of the below code?\n  <div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">&nbsp;\n void exit_handler1();&nbsp;&nbsp; \n void exit_handler2();&nbsp;&nbsp;&nbsp; \n int main() \n {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\tint pid;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\tatexit(exit_handler1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\tatexit(exit_handler2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\tpid = fork();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\tif(pid == 0) \n\t{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\t\t_exit(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n        } \n        else \n\t{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\tsleep(2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\t\texit(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\treturn 0;&nbsp;&nbsp;&nbsp; \n}</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Only child executes the exit_handler 1 and 2",
            "b) Only parent executes the exit_handler 1 and 2",
            "c) Both parent and child executes the exit_handler 1 and 2",
            "d) Neither parent nor child executes the exit_handler 1 and 2"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 633,
        "Question": "12. What is output of the following program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\"> int main() \n { &nbsp; &nbsp;&nbsp;\n\tfork();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\tfork();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n\tfork(); &nbsp; &nbsp; &nbsp; \n\tif (wait(0) == -1)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n\tprintf(\"leaf child\\n\");&nbsp;&nbsp;\n }</pre></div></div></div></div></div></div>",
        "Options": [
            "a) “leaf child” will be printed 1 times",
            "b) “leaf child” will be printed 3 times",
            "c) “leaf child” will be printed 4 times",
            "d) “leaf child” will be printed 8 times"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 634,
        "Question": "Which niceness value among the following indicate most favorable scheduling?",
        "Options": [
            "a) 0",
            "b) 19",
            "c) 5 ",
            "d) -20"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 635,
        "Question": "The maximum time slice that can be given to a process in Linux (where tick is 10ms) is",
        "Options": [
            "a) 150ms",
            "b) 10ms",
            "c) 300 ms",
            "d) 600ms"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 636,
        "Question": "Nice can be used by an ordinary process to",
        "Options": [
            "a) increase the priority of a process",
            "b) decrease the priority of a process",
            "c) increase or decrease the priority of a process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 637,
        "Question": "On x86-32 Linux, at which address the code segment of the program starts?",
        "Options": [
            "a) 0x00000000",
            "b) 0x08048000",
            "c) 0x80000000",
            "d) 0xbfff0000"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 638,
        "Question": "On x86-32 Linux, at which address the user stack resides normally?",
        "Options": [
            "a) 0x00000000",
            "b) 0x3fff0000",
            "c) 0x7fff0000",
            "d) 0xbfff0000"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 639,
        "Question": "A system has 512MB of physical memory. Which among the following is not a suitable virtual memory size for this system architecture?",
        "Options": [
            "a) 512MB",
            "b) 256M",
            "c) 4GB",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 640,
        "Question": "LRU stands for",
        "Options": [
            "a) Last received Unit",
            "b) Least recently Used",
            "c) Least recently usable",
            "d) Lost Recoverd unit"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 641,
        "Question": "Mm_struct maintains?",
        "Options": [
            "a) memory files",
            "b) open files",
            "c) pipe",
            "d) active memory regions"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 642,
        "Question": "Which sytem call can be used by a user process to lock a memory so that it cannot be swapped out?",
        "Options": [
            "a) memory files()",
            "b) memlock()",
            "c) pipe()",
            "d) active memory regions"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 643,
        "Question": "Among these files which has an ELF format",
        "Options": [
            "a) shared objects",
            "b) core",
            "c) executables",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 644,
        "Question": "What is the use of strace command?",
        "Options": [
            "a) strace can be used to check the system calls called by the program. So, this can be used for debugging and benchmarking purposes",
            "b) strace cannot be used to check the system calls called by the program",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 645,
        "Question": "If one of the thread in multithreaded process is blocked on an I/O, which of the following is true?",
        "Options": [
            "a) The entire process with block if their is no kernel supported threads",
            "b) Other threads of the process will continue to execute even if there is no kernel supported threads",
            "c) It depends on specific implementatation",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 646,
        "Question": "Which one can be a real time schedule policy?",
        "Options": [
            "a) SCHED_FIFO",
            "b) SCHED_SPF",
            "c) SCHED_OTHER",
            "d) SCHED_FILO"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 647,
        "Question": "In Linux kernel-2.6 Real time priority ranges from",
        "Options": [
            "a) 0 to 99",
            "b) 0 to 139",
            "c) -20 to 19",
            "d) 100 to 139"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 648,
        "Question": "Solaris real time class priority is",
        "Options": [
            "a) 0-59",
            "b) 60-99",
            "c) 100-159",
            "d) 160-169"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 649,
        "Question": "Solaris System class priority is",
        "Options": [
            "a) 0-59",
            "b) 60-99",
            "c) 100-159",
            "d) 160-169"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 650,
        "Question": "Each process has unique",
        "Options": [
            "a) fd table",
            "b) file table",
            "c) inode table",
            "d) data block table"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 651,
        "Question": "File descriptor table indexes which kernel structure?",
        "Options": [
            "a) struct file",
            "b) strruct fs_struct",
            "c) files_struct",
            "d) struct inode"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 652,
        "Question": "What is the default  number of files open per user process?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 653,
        "Question": "The file system information is stored in",
        "Options": [
            "a) Boot block",
            "b) Super Block",
            "c) Inode Table",
            "d) Data Block"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 654,
        "Question": "Switch table is used by",
        "Options": [
            "a) device special file",
            "b) directory file",
            "c) fifo",
            "d) link file"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 655,
        "Question": "What is the use of fcntl function?",
        "Options": [
            "a) locking a file",
            "b) reading the file descriptor flag",
            "c) changing the file status flag",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 656,
        "Question": "Which function can be used instead of the dup2 to duplicate the file descriptor?",
        "Options": [
            "a) read()",
            "b) open()",
            "c) stat()",
            "d) fcntl()"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 657,
        "Question": "printf() uses which system call",
        "Options": [
            "a) open",
            "b) read",
            "c) write",
            "d) close"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 658,
        "Question": "read() system call on success returns",
        "Options": [
            "a) 0",
            "b) -1",
            "c) number of character",
            "d) none"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 659,
        "Question": "Which system call is used to create a hard link?",
        "Options": [
            "a) hardlink",
            "b) link",
            "c) symlink",
            "d) ln"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 660,
        "Question": "namei() is",
        "Options": [
            "a) ANSI C library function",
            "b) C library function",
            "c) System call",
            "d) kernel routine"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 661,
        "Question": "dup2(1,0)",
        "Options": [
            "a) closes the stdout and copies the stdin descriptor to stdout",
            "b) closes the stdin and copies the stdout descriptor to stdin",
            "c) will produce compilation error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 662,
        "Question": "The newly created files file1 and file2 will have the permissions respectively",
        "Options": [
            "a) rw-rw-rw-   r——–",
            "b) r——–   rw-rw-rw-",
            "c) rw-rw-rw-   rw——-",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 663,
        "Question": "Before running the program, the file 1.txt and 2.txt size is 20 each. What is the output?",
        "Options": [
            "a) 30        30",
            "b) 100020    20",
            "c) 100030    30",
            "d) 100010    30"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 664,
        "Question": "3. What is stored in logfile as per below mentioned code if we execute ./a.out > logfile?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">    int main() \n    {\n        int fd;\n        close(1);\n        fd = open(“logfile”,O_RDWR, 0744);\n        write(fd, “Hello”, 5);\n        printf(“World\\n”);\n        return 0;\n    }</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello",
            "b) HelloWorld",
            "c) World",
            "d) None"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 665,
        "Question": "What is the logfile size now if it’s initially was 1024 bytes?",
        "Options": [
            "a) 5",
            "b) 1024",
            "c) 1029",
            "d) 1034"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 666,
        "Question": "5. Code snippets<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">    str1=”45678\\n”\n    str2=”123\\n”\n    f1 = fopen(file1,RDWR,RWX)\n    f2 = fopen(file1,RDWR,RWX)\n    write(f1,str1,len_str1)\n    write(f2,str2,len_str2)\n&nbsp;\n    o/p:</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 12378",
            "b) 123(newline)8(newline)",
            "c) 123(newline)78(newline)",
            "d) 45678(newline)123(newline)"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 667,
        "Question": "6. Code snippets<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">    str1=”45678\\n”\n    str2=”123\\n”\n    f1 = fopen(file1,RDWR,RWX)\n    f2 = dup(f1)\n    write(f1,str1,len_str1)\n    write(f2,str2,len_str2)\n&nbsp;\n    o/p:</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 12378",
            "b) 123(newline)8(newline)",
            "c) 123(newline)78(newline)",
            "d) 45678(newline)123(newline)"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 668,
        "Question": "7. Code snippet (file1 size is 2024)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"txt\"><pre class=\"de1\">    f1 = fopen (file1, RDWR, RWX)\n    lseek(f1,1024,SEEK_SET)\n    write(f1,buf,10) \n    What is offset now.</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1024",
            "b) 1034",
            "c) 2034",
            "d) 2054"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 669,
        "Question": "If a signal is received by a process, when will it be processed?",
        "Options": [
            "a) It is processed immediately",
            "b) It is processed when process is switching to kernel mode",
            "c) It is processsed in the next timeslice given to the process",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 670,
        "Question": "Which signal is generated when we press control-C?",
        "Options": [
            "a) SIGINT",
            "b) SIGTERM",
            "c) SIGKILL",
            "d) SIGSEGV"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 671,
        "Question": "Which signal is generated when we press ctrl-Z?",
        "Options": [
            "a) SIGKILL",
            "b) SIGSTOP",
            "c) SIGABRT",
            "d) SIGINT"
        ],
        "Answer": "Answer: b\nExplanation: None."
    },
    {
        "id": 672,
        "Question": "Which signal is sent when the Child process terminates?",
        "Options": [
            "a) SIGINIT",
            "b) SIGKILL",
            "c) SIGSTOP",
            "d) SIGCHLD"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 673,
        "Question": "Which of the following signal cannot be handled or ignored?",
        "Options": [
            "a) SIGINT",
            "b) SIGCHLD",
            "c) SIGKILL",
            "d) SIGALRM"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 674,
        "Question": "Another signal that cannot be caught is:",
        "Options": [
            "a) SIGPIPE",
            "b) SIGHUP",
            "c) SIGSTOP",
            "d) SIGUSR1"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 675,
        "Question": "When real interval timer expires which signal is generated?",
        "Options": [
            "a) SIGINT",
            "b) SIGCHLD",
            "c) SIGKILL",
            "d) SIGALRM"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 676,
        "Question": "Signals are handled using which system call?",
        "Options": [
            "a) kill",
            "b) signal",
            "c) both",
            "d) none"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 677,
        "Question": "Default action of SIGSEGV is",
        "Options": [
            "a) Terminate",
            "b) Core dump + Terminate",
            "c) Stop",
            "d) Cont"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 678,
        "Question": "The kill system call is used to",
        "Options": [
            "a) Send shutdown messages to all by superuser",
            "b) Send a signal to a process",
            "c) Kill processes",
            "d) Stop the processes"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 679,
        "Question": "11. What is the output of the below code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><pre class=\"de1\">    <span class=\"kw4\">void</span> sig_handler <span class=\"br0\">(</span> <span class=\"kw4\">int</span> signum<span class=\"br0\">)</span> <span class=\"br0\">{</span>\n        <span class=\"kw3\">printf</span><span class=\"br0\">(</span>“Handled the signal\\n”<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span>\n&nbsp;\n    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n        <span class=\"kw4\">int</span> pid<span class=\"sy0\">;</span>\n        signal <span class=\"br0\">(</span>SIGKILL<span class=\"sy0\">,</span> sig_handler<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n        pid <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pid<span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"br0\">{</span>\n            kill<span class=\"br0\">(</span>getppid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> SIGKILL<span class=\"br0\">)</span><span class=\"sy0\">;</span>\n            <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n        <span class=\"br0\">}</span> <span class=\"kw1\">else</span> <span class=\"br0\">{</span>\n            sleep<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n        <span class=\"br0\">}</span>\n        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\n    <span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error child cannot send a SIGKILL signal to parent",
            "b) Parent goes to the signal handler, prints handled the signal and goes back to sleep",
            "c) Parent goes to the signal handler, prints handled the signal and exits",
            "d) Parent exits without going to the signal handler"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 680,
        "Question": "Which is true regarding pipes?",
        "Options": [
            "a) half duplex",
            "b) full duplex",
            "c) message boundaries are preserved",
            "d) unordered data"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 681,
        "Question": "The persistancy of a FIFO is",
        "Options": [
            "a) process",
            "b) kernel",
            "c) file system",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 682,
        "Question": "Advantage of FIFO over pipe is",
        "Options": [
            "a) related processes can communicate",
            "b) unrelated processes can communicate",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 683,
        "Question": "What mkfifo() creats?",
        "Options": [
            "a) pipe",
            "b) unnamed pipe",
            "c) named pipe",
            "d) msg queue"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 684,
        "Question": "System V IPC common attributes are",
        "Options": [
            "a) key",
            "b) id",
            "c) owner",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 685,
        "Question": "Which one of the following is not system V IPC ?",
        "Options": [
            "a) Shared Memory",
            "b) Semaphores",
            "c) FIFO",
            "d) Message Queues"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 686,
        "Question": "Which system call is used to create Sys V message Queue.",
        "Options": [
            "a)  msgget",
            "b)  shemget",
            "c)  semget",
            "d)  msgctl"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 687,
        "Question": "Which is not the correct option for removing a message queue",
        "Options": [
            "a) ipcrm -Q",
            "b) ipcrm -q",
            "c) ipcrm -m",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 688,
        "Question": "Message queues are created in",
        "Options": [
            "a) userspace",
            "b) kernelspace",
            "c) userspace & kernelspace",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 689,
        "Question": "Command used to check shared memory is",
        "Options": [
            "a) ipcs",
            "b) ipcs  -m",
            "c) ipcs  -s",
            "d) ipcs  -q"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 690,
        "Question": "Which is Fastest IPC?",
        "Options": [
            "a) Message Queue",
            "b) shared memory",
            "c) Socket",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 691,
        "Question": "What is the persistancy level of Shared memory segments?",
        "Options": [
            "a) signal",
            "b) process",
            "c) file system",
            "d) kernel"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 692,
        "Question": "The structure which keeps the information about shared memory in  the kernel is",
        "Options": [
            "a) struct ipc_perm",
            "b) struct semid_ds",
            "c) struct shmid_ds",
            "d) struct msgid_ds"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 693,
        "Question": "One process requires M resource to complete a job. What should be the minimum number of resources available for N processes so that at least one process can continue to execute without blocking/waiting?",
        "Options": [
            "a) M * N",
            "b) M * N – 1",
            "c) M * N + 1",
            "d) M"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 694,
        "Question": "Semaphore P( ) operation usually does the following:",
        "Options": [
            "a) descrements the semaphore count and the process sleeps if needed",
            "b) increments the semaphore count",
            "c) wakes up a sleeping process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 695,
        "Question": "Which call to use to set the resource count of semaphore?",
        "Options": [
            "a) semget( )",
            "b) semctl( )",
            "c) sem_setcount( )",
            "d) sem_set_count( )"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 696,
        "Question": "Race condition can be avoided by using",
        "Options": [
            "a) semaphore",
            "b) mutex",
            "c) socket",
            "d) both semaphore & mutex"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 697,
        "Question": "A server which is handling one client at a time is called as",
        "Options": [
            "a) single server",
            "b) multiserver",
            "c) concurrent server",
            "d) iterative server"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 698,
        "Question": "A server which is handling many clients at a time is called as",
        "Options": [
            "a) single server",
            "b) multiserver",
            "c) concurrent server",
            "d) iterative server"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 699,
        "Question": "A communication end-point is identified by",
        "Options": [
            "a) ip address",
            "b) port number",
            "c) both IP address and port number",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 700,
        "Question": "UNIX/Linux kernel is?",
        "Options": [
            "a) Monolithic",
            "b) Micro",
            "c) Exo",
            "d) Nano"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 701,
        "Question": "Monolithic kernel",
        "Options": [
            "a) is highly extensiblity",
            "b) has less run time overhead",
            "c) smaller than micro level",
            "d) suitable for real time system"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 702,
        "Question": "Runlevel system command is used for?",
        "Options": [
            "a) getting the present and previous runlevel of the system",
            "b) setting the runlevel attribute of the system in the inittab file",
            "c) can be used to restart or reboot the system",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 703,
        "Question": "Pick the run level to run Linux in multi user mode with networking?",
        "Options": [
            "a) 0",
            "b) 3",
            "c) 5",
            "d) 6"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 704,
        "Question": "Section 2 of manpage describes",
        "Options": [
            "a) Commands",
            "b) System calls",
            "c) Function calls",
            "d) Drivers"
        ],
        "Answer": " Answer: b\nExplanation: None."
    },
    {
        "id": 705,
        "Question": "System call can be implemented using which assembly instruction(s) on x86 processors?",
        "Options": [
            "a) int 0×80",
            "b) sysenter",
            "c) both int 0×80 & sysenter",
            "d) None"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 706,
        "Question": "Which of the following exec call is a system call?",
        "Options": [
            "a) execl",
            "b) execlp",
            "c) execve",
            "d) execvp"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 707,
        "Question": "x86 architecture uses big endian or little endian addressing mechanism?",
        "Options": [
            "a) little-endian",
            "b) endian",
            "c) big-endian",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 708,
        "Question": "______________ timer is decremented only when the process is executing",
        "Options": [
            "a) ITIMER_REAL",
            "b) ITIMER_VIRTUAL",
            "c) ITIMER_PROF",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 709,
        "Question": "Daemon process is a?",
        "Options": [
            "a) group leader",
            "b) session leader",
            "c) orphan process",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None."
    },
    {
        "id": 710,
        "Question": "The terminal used by a Daemon process is:",
        "Options": [
            "a) any terminal",
            "b) no terminal",
            "c) root terminal",
            "d) system console"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 711,
        "Question": "shared memory can be used for?",
        "Options": [
            "a) read only operations",
            "b) append",
            "c) read or read write operations",
            "d) write only"
        ],
        "Answer": " Answer: c\nExplanation: None."
    },
    {
        "id": 712,
        "Question": "Sysconf(_SC_PAGE_SIZE) returns?",
        "Options": [
            "a) size of the page",
            "b) max size of the page",
            "c) min size of the page",
            "d) paging allowed or not"
        ],
        "Answer": " Answer: a\nExplanation: None."
    },
    {
        "id": 713,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">calloc</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>ptr <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 10",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This program will give an error because calloc() requires the header file stdlib.h.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:6:15: warning: incompatible implicit declaration of built-in function ‘calloc’ [enabled by default]\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 714,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>ptr <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>ptr <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 20",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The segmentation fault occurs because memory for the pointer has not been allocated in this program.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 715,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr1<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>ptr2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr1 <span class=\"sy0\">=</span> <span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>ptr1 <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>ptr2 <span class=\"sy0\">=</span> <span class=\"kw3\">free</span><span class=\"br0\">(</span>ptr1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) it will print the address stored in ptr1",
            "c) it will print the address stored in ptr2",
            "d) it will give an error"
        ],
        "Answer": " Answer: d\nExplanation: The free() function returns no value.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:8:8: error: void value not ignored as it ought to be\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 716,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           ptr1 <span class=\"sy0\">=</span> <span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"nu0\">1024</span><span class=\"sy0\">*</span><span class=\"nu0\">1024</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">if</span><span class=\"br0\">(</span>ptr1 <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">free</span><span class=\"br0\">(</span>ptr1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span>\t\t</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will print “Sanfoundry” until the process has been stopeed by any signal",
            "b) it will print nothing",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\n^Z\n[10]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 717,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">free</span><span class=\"br0\">(</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">free</span><span class=\"br0\">(</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will print nothing",
            "b) it will give segmentaion fault",
            "c) undefined behaviour",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If the free() has already called before, undefined behaviour occurs.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n*** glibc detected *** ./san: double free or corruption (fasttop): 0x08f1b008 ***\n======= Backtrace: =========\n/lib/libc.so.6[0x4a6489f2]\n./san[0x8048425]\n/lib/libc.so.6(__libc_start_main+0xf3)[0x4a5e96b3]\n./san[0x8048361]\n======= Memory map: ========\n08048000-08049000 r-xp 00000000 fd:01 394194     /home/sanfoundry/san\n08049000-0804a000 rw-p 00000000 fd:01 394194     /home/sanfoundry/san\n08f1b000-08f3c000 rw-p 00000000 00:00 0          [heap]\n4a5ab000-4a5cc000 r-xp 00000000 fd:01 785334     /lib/ld-2.14.90.so\n4a5cc000-4a5cd000 r–p 00020000 fd:01 785334     /lib/ld-2.14.90.so\n4a5cd000-4a5ce000 rw-p 00021000 fd:01 785334     /lib/ld-2.14.90.so\n4a5d0000-4a77a000 r-xp 00000000 fd:01 789110     /lib/libc-2.14.90.so\n4a77a000-4a77b000 —p 001aa000 fd:01 789110     /lib/libc-2.14.90.so\n4a77b000-4a77d000 r–p 001aa000 fd:01 789110     /lib/libc-2.14.90.so\n4a77d000-4a77e000 rw-p 001ac000 fd:01 789110     /lib/libc-2.14.90.so\n4a77e000-4a781000 rw-p 00000000 00:00 0\n4a7e0000-4a7fc000 r-xp 00000000 fd:01 789128     /lib/libgcc_s-4.6.2-20111027.so.1\n4a7fc000-4a7fd000 rw-p 0001b000 fd:01 789128     /lib/libgcc_s-4.6.2-20111027.so.1\nb76f4000-b76f5000 rw-p 00000000 00:00 0\nb770d000-b770f000 rw-p 00000000 00:00 0\nb770f000-b7710000 r-xp 00000000 00:00 0          [vdso]\nbfc0a000-bfc2b000 rw-p 00000000 00:00 0          [stack]\nAborted (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 718,
        "Question": "6. In which condition this prgram will print the string “Sanfoundry”?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>ptr <span class=\"sy0\">==</span> NULL<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) if the memory could not be allocated to the pointer “ptr”",
            "b) if the memory has been allocated to the pointer “ptr” successfully",
            "c) it will never print",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The malloc() returns NULL when the memory is not allocated.\n"
    },
    {
        "id": 719,
        "Question": "7. This program will allocate the memory of ___ bytes for pointer “ptr”.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"kw3\">realloc</span><span class=\"br0\">(</span>ptr<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 4",
            "c) 8",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: We can also use the realloc() to make memory block smaller.\n"
    },
    {
        "id": 720,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">calloc</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>ptr <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) garbage value",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The memory allocated by calloc() contains 0 until process does not make any change to it.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0\n[[email protected] sanfoundry]\n"
    },
    {
        "id": 721,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) -1",
            "c) undefined",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The content of the memory block allocated by malloc() is undefined.\nOuput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 722,
        "Question": "10. In this program the allocated memory block can store<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptr <span class=\"sy0\">=</span> <span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) int",
            "b) char",
            "c) float",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: When the malloc() is used without typecasting the default type is void*.\n"
    },
    {
        "id": 723,
        "Question": "1. This program will allocate the memory of ___ bytes for pointer “ptr”.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"kw3\">realloc</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 10",
            "c) 40",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If the first argument of realloc() is NULL, then it behaves just like malloc().\n"
    },
    {
        "id": 724,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t   <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">free</span><span class=\"br0\">(</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>\t   </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print nothing after execution",
            "b) segmentation fault",
            "c) Aborted (core dumped)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: This prgram is trying to free the memory which is not available in the heap segment.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n*** glibc detected *** ./san: free(): invalid pointer: 0x4a77cff4 ***\n======= Backtrace: =========\n/lib/libc.so.6[0x4a6489f2]\n./san[0x80483c9]\n/lib/libc.so.6(__libc_start_main+0xf3)[0x4a5e96b3]\n./san[0x8048321]\n======= Memory map: ========\n08048000-08049000 r-xp 00000000 fd:01 394194     /home/sanfoundry/san\n08049000-0804a000 rw-p 00000000 fd:01 394194     /home/sanfoundry/san\n09233000-09254000 rw-p 00000000 00:00 0          [heap]\n4a5ab000-4a5cc000 r-xp 00000000 fd:01 785334     /lib/ld-2.14.90.so\n4a5cc000-4a5cd000 r–p 00020000 fd:01 785334     /lib/ld-2.14.90.so\n4a5cd000-4a5ce000 rw-p 00021000 fd:01 785334     /lib/ld-2.14.90.so\n4a5d0000-4a77a000 r-xp 00000000 fd:01 789110     /lib/libc-2.14.90.so\n4a77a000-4a77b000 —p 001aa000 fd:01 789110     /lib/libc-2.14.90.so\n4a77b000-4a77d000 r–p 001aa000 fd:01 789110     /lib/libc-2.14.90.so\n4a77d000-4a77e000 rw-p 001ac000 fd:01 789110     /lib/libc-2.14.90.so\n4a77e000-4a781000 rw-p 00000000 00:00 0\n4a7e0000-4a7fc000 r-xp 00000000 fd:01 789128     /lib/libgcc_s-4.6.2-20111027.so.1\n4a7fc000-4a7fd000 rw-p 0001b000 fd:01 789128     /lib/libgcc_s-4.6.2-20111027.so.1\nb7724000-b7725000 rw-p 00000000 00:00 0\nb773d000-b773f000 rw-p 00000000 00:00 0\nb773f000-b7740000 r-xp 00000000 00:00 0          [vdso]\nbfc83000-bfca4000 rw-p 00000000 00:00 0          [stack]\nAborted (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 725,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> st<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> st <span class=\"sy0\">*</span>st_ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       st_ptr <span class=\"sy0\">=</span> <span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> st<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> st<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 5",
            "c) 0",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Maximum size of the data type is 4 byte(int) in the structure.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n8\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 726,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"st0\">\"sanfoundry\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry",
            "b) segmentation fault",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: value of a string can not be assign to a pointer.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 727,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;                              </span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">memcpy</span><span class=\"br0\">(</span>ptr<span class=\"sy0\">,</span><span class=\"st0\">\"sanfoundry\"</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoudry",
            "b) segmentation fault",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Memory must be allocated to pointer “ptr”.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 728,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;                              </span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>ptr<span class=\"sy0\">,</span><span class=\"st0\">\"sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,*</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) s",
            "b) sanfoundry",
            "c) 115",
            "d) segmentation fault"
        ],
        "Answer": " Answer: c\nExplanation: This program will print the equivalent decimal value at location pointed by “ptr”.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n115\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 729,
        "Question": "7. Which one of the following in true about this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;                              </span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%p<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%p<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will give segmentation fault",
            "b) this program will print two same values",
            "c) this program has some syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This program will print two different values.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0x4a77cff4\n0x980c008\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 730,
        "Question": "8. In this program the two printed memory locations has the difference of ___ bytes.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%p<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ptr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%p<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ptr<span class=\"sy0\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 4",
            "c) can not be determined",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Pointer will increment by 4 bytes because it is the types of integer.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0x9b4e008\n0x9b4e00c\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 731,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#inlcude&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">double</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>ptr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>\t   </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 8",
            "c) the compiler will give the error",
            "d) segmentaion fault"
        ],
        "Answer": " Answer: c\nExplanation: Just see the output carefully.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:8:10: error: conflicting types for ‘ptr’\nsan.c:7:7: note: previous declaration of ‘ptr’ was here\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 732,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;string.h&gt;                              </span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) syntax error",
            "b) segmentaion fault",
            "c) run time error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The memory has been allocated but we can not access rest of the memory other than 4 bytes.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 733,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">do</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>fd<span class=\"sy0\">,&amp;</span>ch<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%c\"</span><span class=\"sy0\">,</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span><span class=\"kw1\">while</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will print nothing",
            "b) it will print the source code of the source file “san.c”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: none.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n\n\n\t\n\n#include<stdio.h>#include<fcntl.h> int main(){        int fd, count;        char ch;        fd = open(\"san.c\",O_RDONLY);        do{                count = read(fd,&ch,1);                printf(\"%c\",ch);        }while(count);}\n\n\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 734,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"sanfoundry.txt\"</span><span class=\"sy0\">,</span>O_WRONLY<span class=\"sy0\">|</span>O_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"Linux System Programming\"</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>count <span class=\"sy0\">!=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"write\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will create a file “sanfoundry.txt” in the present working directory",
            "b) it will write the string “Linux System Programming” in the file “sanfoundry.txt”",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This program will write only “Linux” in the file “sanfoundry.txt” because we are writing only 5 bytes with “write” system call.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ls\nsan  san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]# ls\nsan  san.c  sanfoundry.txt\n[[email protected] sanfoundry]# vim sanfoundry.txt\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 735,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"Linux\"</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>count <span class=\"sy0\">!=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"write\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will write the string “Linux” in the beginning of source file “san.c”",
            "b) it will write the string “Linux” in the end of the source file “san.c”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This program will write nothing in the source file “san.c” because we are opening the file in read only mode.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nwrite: Bad file descriptor\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 736,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">,</span> <span class=\"sy0\">*</span>buff<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       buff <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 10",
            "c) 0",
            "d) -1"
        ],
        "Answer": " Answer: a\nExplanation: The “read” system call returns the number of bytes successfully read.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n5\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 737,
        "Question": "5. In the output of this program, the string “/* Linux */” will be added at the ____ of the source file.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDWR<span class=\"sy0\">|</span>O_APPEND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"/* Linux */\"</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) end",
            "b) beginning",
            "c) second line",
            "d) third line"
        ],
        "Answer": " Answer: a\nExplanation: The write system call writes at the end of the file because the file is opened with O_APPEND flag.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]# vim san.c\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 738,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buff<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       buff <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"sanfoundry.txt\"</span><span class=\"sy0\">,</span>O_RDWR<span class=\"sy0\">|</span>O_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"Linux\"</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buff<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will print nothing",
            "b) it will print the string “Linux”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: We have to use “lseek” system call if we want to read the file from the beginning just after writing into it.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ls\nsan  san.c\n[[email protected] sanfoundry]# ./san \n[[email protected] sanfoundry]# ls\nsan  san.c  sanfoundry.txt\n[[email protected] sanfoundry]# vim sanfoundry.txt\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 739,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"sanfoundry.txt\"</span><span class=\"sy0\">,</span>O_RDWR<span class=\"sy0\">|</span>O_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"s\"</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       lseek<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>SEEK_SET<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"d\"</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       lseek<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd<span class=\"sy0\">,&amp;</span>ch<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%c<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) d",
            "b) s",
            "c) sd",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Because of “lseek” system call the character “s” is overwritten by character “d” in the file “sanfoundry.txt”.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nd\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 740,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"sanfoundry.txt\"</span><span class=\"sy0\">,</span>O_RDWR<span class=\"sy0\">|</span>O_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"linux\"</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       lseek<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span>SEEK_END<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"san\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       lseek<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>ch<span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) linux",
            "b) linuxsan",
            "c) linux  san",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The lseek function allows the file offset to be set beyond the end of the file and if the data is latter written this point, subsequent reads of the data in the gap returns NULL.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nlinux\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 741,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> new_fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>buff<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       buff <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"kw3\">malloc</span><span class=\"br0\">(</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       new_fd <span class=\"sy0\">=</span> dup<span class=\"br0\">(</span>fd<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       close<span class=\"br0\">(</span>fd<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>new_fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buff<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will not print anything",
            "b) this program will print “#include”",
            "c) this program will give the segmentation fault",
            "d) this program will give the syntax error"
        ],
        "Answer": " Answer: b\nExplanation: The “dup” system creates the a copy of the file descriptor.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n#include\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 742,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> fd2<span class=\"sy0\">,</span> ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ret <span class=\"sy0\">=</span> close<span class=\"br0\">(</span>fd2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The “close” system call closes a file descriptor but in the program “fd2” in not a file descriptor. Hence close system call returns -1.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n-1\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 743,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the string “Sanfoundry” will print 1 time",
            "b) the string “Sanfoundry” will print 2 times",
            "c) the string “Sanfoundry” will print 3 times",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The “fork” system call creates a new process by duplicating the calling process. Hence the next statement is executed by two processes.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]# Sanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 744,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>child<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it will print “0”",
            "b) it will print the PID of the child process",
            "c) it will print “0” & the PID of the child process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The “fork” system call returns the PID of the child process when it is executed by the parent process and returns 0 when it is executed by the child process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n17654\n[[email protected] sanfoundry]# 0\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 745,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> status<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>getppid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>getpid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print two same integer values",
            "b) this program will print two different integer values",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In this program the child process is printing its parent PID and the parent process is printing its own PID. Hence both the integer values are same.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n17729\n17729\n[[email protected] sanfoundry]# ./san\n17731\n17731\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 746,
        "Question": "4. This program will print ____ as output.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               sleep<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>getppid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) an integer value except 0 and 1 i.e. PID of a process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In this program the parent process terminates before the child process. Hence the child process prints 1 as its parent process ID. The output of this program will appear after 10 seconds.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]# 1\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 747,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> a<span class=\"sy0\">,</span> status<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) garbage value",
            "c) segmentation fault",
            "d) program will give an error because variable “a” is not defined in child process"
        ],
        "Answer": " Answer: a\nExplanation: The child’s stack, data and heap segments are exact duplicates of its parent process when the process is created by “fork” system call.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n10\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 748,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> status<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">default</span> <span class=\"sy0\">:</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">                   wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>WEXITSTATUS<span class=\"br0\">(</span>status<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The “WEXITSTATUS” returns the low-order 8 bits of the exit status value from the child process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n2\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 749,
        "Question": "7. What is the output of this progarm?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       execl<span class=\"br0\">(</span><span class=\"st0\">\"/bin/ls\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"ls\"</span><span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will give an compilation error",
            "b) the program will give segmentation fault",
            "c) the program will execute just like “ls” command",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The “execl” system call replaces the current process image with a new process image according to the arguments.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nsan  san.c\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 750,
        "Question": "8. How many time “Sanfoundry” will print in this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> execl<span class=\"br0\">(</span><span class=\"st0\">\"/bin/ls\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"ls\"</span><span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span>         </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"execl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In this program, the next statement of “execl” will never execute because the current process is replaced by the process created by the “execl” system call.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nsan  san.c\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 751,
        "Question": "9. This program will create ____ child processes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 5",
            "c) 7",
            "d) 9"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]# Sanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 752,
        "Question": "10. What is the output of this progarm?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a<span class=\"sy0\">,</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>child <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 30",
            "c) 50",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n30\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 753,
        "Question": "1. What will happen as we press the “Ctrl+c” key after running this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span>          </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the string “Linux” will print",
            "b) the process will be terminated after printing the string “Linux”",
            "c) the process will terminate",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The signal handler function “response” executes after recieving the signal SIGINT.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\n^Z\n[2]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 754,
        "Question": "2. What will happen if we press “Ctrl+c” key two times after running this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response<span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response<span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,</span>SIG_DFL<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) process will terminate in the first time",
            "b) process will terminate in the second time",
            "c) process will never terminate",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: According to the signal handler function of this program as the SIGINT signal arrives second time, the signal performs its default operation i.e. termination of the process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\n^C\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 755,
        "Question": "3. What happens as the SIGINT signal hits the running process of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,</span>SIG_IGN<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child<span class=\"sy0\">=</span>fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span>             </pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Child Process<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Parent Process<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   pause<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) child process terminates",
            "b) parent process terminates",
            "c) both child and parent process ignores the signal",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If a process ignores a signal then by default its child also ignores that signal.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nParent Process\nChild Process\nChild Process\n^CChild Process\n^CChild Process\n^CChild Process\n^Z\n[3]+  Stopped                 ./san\n[[email protected] signal]#\n"
    },
    {
        "id": 756,
        "Question": "4. What will print as the SIGINT signal hits the running process of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span><span class=\"sy0\">,</span>sys_siglist<span class=\"br0\">[</span>sig_no<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Interrupt",
            "b) Stop",
            "c) Terminate",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The messages associated with signals can be access by the function sys_siglist().\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\nSanfoundry\nSanfoundry\n^CInterruptSanfoundry\nSanfoundry\n^CInterruptSanfoundry\nSanfoundry\n^CInterruptSanfoundry\nSanfoundry\nSanfoundry\n^Z\n[4]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 757,
        "Question": "5. In this program<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child<span class=\"sy0\">=</span>fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Child Process<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span>              </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               sleep<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               kill<span class=\"br0\">(</span>child<span class=\"sy0\">,</span>SIGINT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"The child process has been killed by the parent process<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the child process kills the parent process",
            "b) the parent process kills the child process",
            "c) both the processes are killed by each other",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The parnet process kills the child by sending a signal.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nChild Process\nChild Process\nChild Process\nChild Process\nChild Process\nThe child process has been killed by the parent process\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 758,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>sys_siglist<span class=\"br0\">[</span>sig_no<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> status<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span>               </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               signal<span class=\"br0\">(</span>SIGCHLD<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print nothing",
            "b) this program will print “Child Exited”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The child process sends SIGCHILD signal to its parent as it terminates.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nChild exited\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 759,
        "Question": "7. Which one of the following is not true about this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> signo<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>sys_siglist<span class=\"br0\">[</span>signo<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGSEGV<span class=\"sy0\">,</span>SIG_IGN<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       signal <span class=\"br0\">(</span>SIGSEGV<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>str<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">*</span>str <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) kernel sends SIGSEGV signal to a process as segmentation fault occurs",
            "b) in this process signal handler will execute only one time of recieving the signal SIGSEGV",
            "c) all of the mentioned",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: In this process the segmentation fault occurs because the memory is not allocated to the pointer *str.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSegmentation fault\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 760,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>sys_siglist<span class=\"br0\">[</span>sig_no<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"This is singal handler<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pid_t child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> status<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child <span class=\"sy0\">=</span> fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               kill<span class=\"br0\">(</span>getppid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>SIGKILL<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"I am an orphan process because my parent has been killed by me<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Handler failed<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               signal<span class=\"br0\">(</span>SIGKILL<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>status<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"The parent process is still alive<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the child process kills the parent process",
            "b) the parent process kills the child process",
            "c) handler function executes as the signal arrives to the parent process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The SIGKILL signal can not be handled by singal handler function.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nKilled\n[[email protected] sanfoundry]# I am an orphan process because my parent has been killed by me\nHandler failed\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 761,
        "Question": "9. This program will print<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s is working<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>sys_siglist<span class=\"br0\">[</span>sig_no<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       alarm<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sleep<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       signal<span class=\"br0\">(</span>SIGALRM<span class=\"sy0\">,</span>response<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “Sanfoundry”",
            "b) “Alarm clock”",
            "c) nothing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: After 5 seconds of the execution of this program, the signal SIGALRM hits the process and handler executes.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nAlarm clock\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 762,
        "Question": "10. What happnes as the signal SIGINT hits the current process in the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;signal.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> response <span class=\"br0\">(</span><span class=\"kw4\">int</span> sig_no<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">struct</span> sigaction act<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        act.<span class=\"me1\">sa_handler</span> <span class=\"sy0\">=</span> response<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        act.<span class=\"me1\">sa_flags</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sigemptyset<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>act.<span class=\"me1\">sa_mask</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sigaction<span class=\"br0\">(</span>SIGINT<span class=\"sy0\">,&amp;</span>act<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">while</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the process terminates",
            "b) the string “Linux” prints",
            "c) the string “Linux” prints and then process terminates",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sigaction]# gcc -o san san.c\n[[email protected] sigaction]# ./san\nSanfoundry\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\nSanfoundry\n^CLinux\nSanfoundry\n^Z\n[7]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 763,
        "Question": "1. This program will print the<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       value <span class=\"sy0\">=</span> sysconf<span class=\"br0\">(</span>_SC_CHILD_MAX<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%ld<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) maximum number of simultaneous processes per user id",
            "b) maximum number of child processes of the current process",
            "c) minimum number of simultaneous processes per user id",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n1024\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 764,
        "Question": "2. This program will print the<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       value <span class=\"sy0\">=</span> sysconf<span class=\"br0\">(</span>_SC_OPEN_MAX<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%ld<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) maximum number of threads in current process",
            "b) maximum number of files that a process can have open at a time",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n1024\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 765,
        "Question": "3. This program will print the<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       value <span class=\"sy0\">=</span> pathconf<span class=\"br0\">(</span><span class=\"st0\">\"/home/sanfoundry\"</span><span class=\"sy0\">,</span>_PC_NAME_MAX<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%ld<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) maximum numbers of the file that can store in this directory",
            "b) maximum length of a filename in this directory that the process is allowed to create",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n255\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 766,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;unistd.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"/home/sanfoundry/san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       value <span class=\"sy0\">=</span> fpathconf<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>_PC_LINK_MAX<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%ld<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the maximum number of links to the file “san.c”",
            "b) this program will print nothing",
            "c) this program will give an error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n65000\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 767,
        "Question": "5. This program will print the<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       getrlimit<span class=\"br0\">(</span>RLIMIT_FSIZE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_cur</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_max</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) soft limit of the size of the file in bytes that can be created by the process",
            "b) hard limit of the size of the file in bytes that can be created by the process",
            "c) soft 7 hard limit of the size of the file in bytes that can be created by the process",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The rlim_cur member specifies the soft limit and rlim_max specifies the hard limit of the resource.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n4294967295\n4294967295\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 768,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>getrlimit<span class=\"br0\">(</span>RLIMIT_NOFILE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"getrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_max</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the maximum numbers of the file descriptors that can be opened by a process",
            "b) this program will print the maximum numbers of the child processes of the current process",
            "c) this program will give an error because RLIMIT_NOFILE does not exist",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n4096\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 769,
        "Question": "7. The hard limit of the file descriptors that can be opened by this process will become<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       limit.<span class=\"me1\">rlim_cur</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       limit.<span class=\"me1\">rlim_max</span> <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>setrlimit<span class=\"br0\">(</span>RLIMIT_NOFILE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"setrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>getrlimit<span class=\"br0\">(</span>RLIMIT_NOFILE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"getrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_cur</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_max</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 20",
            "c) permisssion denied",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 770,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       limit.<span class=\"me1\">rlim_cur</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>setrlimit<span class=\"br0\">(</span>RLIMIT_NOFILE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"setrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the soft limit of the file decriptors that can be opened by this process will become 10",
            "b) the hard limit of the file decriptors that can be opened by this process will become 10",
            "c) permission denied",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nsetrlimit: Operation not permitted\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 771,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>getrlimit<span class=\"br0\">(</span>RLIMIT_CORE<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"getrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_max</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) maximum size of a core file that can be created by this process",
            "b) maximum number of core files that can be created by this process",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n4294967295\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 772,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/time.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/resource.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">struct</span> rlimit limit<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>getrlimit<span class=\"br0\">(</span>RLIMIT_DATA<span class=\"sy0\">,&amp;</span>limit<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"getrlimit\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%lu<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>limit.<span class=\"me1\">rlim_max</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) maximum size of data segment of this process in bytes",
            "b) maximum size of total available storage for this process in bytes",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n4294967295\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 773,
        "Question": "1. Which one of the following string will print first by this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Linux",
            "b) Sanfoundry",
            "c) it can not be predicted",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: It depends upon the scheduler.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nSanfoundry\nLinux\n[[email protected] threads]#\n"
    },
    {
        "id": 774,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ret <span class=\"sy0\">=</span> pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The function pthread_exit() does not return any value. Hence this program will give an error.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\nsan.c: In function ‘fun_t’:\nsan.c:8:6: error: void value not ignored as it ought to be\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 775,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>                </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this program will print nothing",
            "c) segmentation fault",
            "d) run time error"
        ],
        "Answer": " Answer: b\nExplanation: The pthread_join() function waits for the thread to terminate.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 776,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span>         </pre></li><li class=\"li1\"><pre class=\"de1\">       a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 0",
            "c) -1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Each thread has its own stack so local variables are not shared among thread. Hence this program will give an error.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\nsan.c: In function ‘fun_t’:\nsan.c:7:16: error: ‘a’ undeclared (first use in this function)\nsan.c:7:16: note: each undeclared identifier is reported only once for each function it appears in\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 777,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span>         </pre></li><li class=\"li1\"><pre class=\"de1\">       a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 0",
            "c) -1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Thread of the same process shares the global variables.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n10\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 778,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       a <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 20",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In this program the value of variable “a” is changed by the thread “fun_t”.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n20\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 779,
        "Question": "7. Which one of the following statement is not true about this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>getpid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>getpid<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) both printf statements will print the same value",
            "b) both printf statements will print the different values",
            "c) this program will print nothing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: All the threads of the same process have same PID.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n12981\n12981\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 780,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"san.c\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 0",
            "c) -1",
            "d) segmentation fault"
        ],
        "Answer": " Answer: a\nExplanation: Open file descritpors can be shares between threads of the same process\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n10\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 781,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>                </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>res_t<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sanfoundry",
            "b) Bye",
            "c) segementation fault",
            "d) run time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nBye\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 782,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sleep<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>res_t<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this process will pause",
            "b) segmentation fault",
            "c) run time error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: This program is trying to print the return value of the thread, but pthread_exit() function is not present in the thread.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 783,
        "Question": "1. What is the output of this program<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> ret<span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       ret <span class=\"sy0\">=</span> pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: The function pthread_join() returns the error number on error.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n3\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 784,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print nothing",
            "b) this program will give an error",
            "c) this program will give segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The header file semaphore.h is required for the function sem_init.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\nsan.c:4:4: error: unknown type name ‘sem_t’\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 785,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span>st<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print nothing",
            "b) this program will give an error",
            "c) this program will give segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The first arguement of the sem_init() if of type sem_t*.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n2_thread.c: In function ‘main’:\n2_thread.c:17:2: error: incompatible type for argument 1 of ‘sem_init’\n/usr/include/semaphore.h:37:12: note: expected ‘union sem_t *’ but argument is of type ‘sem_t’\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 786,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this program will give segmentation fault",
            "c) this process will remain block",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: In this program, initial value of semaphore is 0. The sem_wait() function call blocks the process until the value of semaphore becomes 1.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n^Z\n[3]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 787,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this program will give an error",
            "c) this program will print the string “Sanfoundry” & gives an error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The semaphore object st is locally declared.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\nsan.c: In function ‘fun_t’:\nsan.c:8:12: error: ‘st’ undeclared (first use in this function)\nsan.c:8:12: note: each undeclared identifier is reported only once for each function it appears in\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 788,
        "Question": "6. Which one of the following string will print first by this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Linux",
            "b) Sanfoundry",
            "c) Can not be predicted",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The string “Linux” will print first because of semaphores.\nOuptut:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nLinux\nSanoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 789,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt; </span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the only string “Linux”",
            "b) this program will print the only string “Sanfoundry”",
            "c) this program will print both the strings “Linux” and “Sanfoundry”",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The value of semaphore will never become 1 in this program.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nLinux\n^Z\n[4]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 790,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_wait<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_wait\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the only string “Linux”",
            "b) this program will print the only string “Sanfoundry”",
            "c) this program will print both the strings “Linux” and “Sanfoundry”",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The initial value of semaphore is 2. Hence sem_wait() will only decrement the value of semaphore and the process will not block.\nOuptut:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nLinux\nSanoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 791,
        "Question": "9. In this program the semaphore<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   sem_t st<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>fun_t<span class=\"br0\">(</span><span class=\"kw4\">void</span> <span class=\"sy0\">*</span>arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       pthread_t pt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">void</span> <span class=\"sy0\">*</span>res_t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_create<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>pt<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>fun_t<span class=\"sy0\">,</span>NULL<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_create\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_init<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_init\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pthread_join<span class=\"br0\">(</span>pt<span class=\"sy0\">,&amp;</span>res_t<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pthread_join\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_destroy<span class=\"br0\">(</span><span class=\"sy0\">&amp;</span>st<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_destroy\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) can be used only for this process",
            "b) can be used for any other process also",
            "c) can be used",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The value of second argument of sem_init() is 1.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 792,
        "Question": "10. Which one of the following string will print by this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;pthread.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        pthread_exit<span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Linux\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Linux",
            "b) Sanfoundry",
            "c) Bye",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The main thread exits before printing the string “Linux”;\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 793,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buffer<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> pipe<span class=\"br0\">(</span>fd<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pipe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">memset</span><span class=\"br0\">(</span>buffer<span class=\"sy0\">,</span><span class=\"st0\">'<span class=\"es5\">\\0</span>'</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count<span class=\"sy0\">=</span>write<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">\"Linux\"</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>buffer<span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buffer<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>put</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Linux”",
            "b) this program will print nothing because the buffer is empty",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The data in buffer is written by the pipe.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nLinux\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 794,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> child<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>pipe<span class=\"br0\">(</span>fd<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>               </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pipe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       child<span class=\"sy0\">=</span>fork<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span><span class=\"br0\">(</span>child<span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fork\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">if</span> <span class=\"br0\">(</span>write<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">\"Linux\"</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"write\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">default</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   read<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buff<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw2\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Linux”",
            "b) this program will print nothing",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: One process can read and write to another process by pipe.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nLinux\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 795,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">512</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>       </pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">512</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buff<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the garbage of 512 bytes",
            "b) this program will print nothing",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In this program the fifo is opened in read only mode. Hence the process will remain block on read.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n^Z\n[12]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 796,
        "Question": "4. This program will print the _____ string.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pipe<span class=\"br0\">(</span>fd<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pipe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       lseek<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>buff<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “Sanfoundry”",
            "b) “San”",
            "c) “foundry”",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The “lseek” system call does not work with pipes.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 797,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will create two named pipes “test_fifo” in the /tmp directory",
            "b) this program will create one named pipe “test_fifo” in the /tmp directory",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In this program when the mkfifo executes second time, the fifo already exists. Hence it gives error.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nmkfifo: File exists\n[[email protected]host sanfoundry]#\n"
    },
    {
        "id": 798,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"sy0\">|</span>O_NONBLOCK<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 10",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The read system call will return 0 bytes.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 799,
        "Question": "7. This program will print the value<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> rfd<span class=\"sy0\">,</span> wfd<span class=\"sy0\">,</span> count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       wfd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span>O_WRONLY<span class=\"sy0\">|</span>O_NONBLOCK<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> write<span class=\"br0\">(</span>wfd<span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       rfd <span class=\"sy0\">=</span> open<span class=\"br0\">(</span><span class=\"st0\">\"/tmp/test_fifo\"</span><span class=\"sy0\">,</span>O_RDONLY<span class=\"sy0\">|</span>O_NONBLOCK<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> read<span class=\"br0\">(</span>rfd<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 11",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The “write” system call will return -1 because named pipe is open only for writing. In named pipe writing can only be done when it is open for read and write both.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n-1\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 800,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>count<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>pipe<span class=\"br0\">(</span>fd<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"pipe\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       count <span class=\"sy0\">=</span> write<span class=\"br0\">(</span>fd<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">\"Hello\"</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>count<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6",
            "b) 0",
            "c) -1",
            "d) segmentation fault"
        ],
        "Answer": " Answer: c\nExplanation: Data can be written only in fd[1].\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n-1\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 801,
        "Question": "9. In this program the fifo “my_fifo”<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>mkfifo<span class=\"br0\">(</span><span class=\"st0\">\"my_fifo\"</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mkfifo\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) can not be created",
            "b) will be created in present working directory",
            "c) will have the execute permissions",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# ls\nsan  san.c\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]# ll\ntotal 12\nprw-r–r–. 1 root root    0 Aug 21 15:04 my_fifo\n-rwxr-xr-x. 1 root root 4925 Aug 21 15:04 san\n-rw-r–r–. 1 root root   99 Aug 21 15:01 san.c\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 802,
        "Question": "10. What is the output of this when the pipe is successfully created?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> ret_val<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> fd<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ret_val <span class=\"sy0\">=</span> pipe<span class=\"br0\">(</span>fd<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret_val<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The “pipe” system call returns 0 on the successfull creation of the pipe.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 803,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t<span class=\"sy0\">*</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> sem_open<span class=\"br0\">(</span><span class=\"st0\">\"sem_value\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_id <span class=\"sy0\">==</span> SEM_FAILED<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_close<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_close\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this process will block",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The initial value of semaphore is 0. As we call the sem_wait() in this program, it blocks the process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n^Z\n[37]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 804,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t<span class=\"sy0\">*</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> sem_open<span class=\"br0\">(</span><span class=\"st0\">\"sem_value\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_id <span class=\"sy0\">==</span> SEM_FAILED<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_getvalue<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>value<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_getvalue\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_close<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_close\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) Sanfoundry",
            "c) Both 0 and Sanfoundry",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The sem_getvalue() is used to get the current value of the semaphore.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n0\n^Z\n[58]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 805,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t<span class=\"sy0\">*</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> sem_open<span class=\"br0\">(</span><span class=\"st0\">\"sem_value\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_id <span class=\"sy0\">==</span> SEM_FAILED<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_close<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_close\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this process will block",
            "b) this program will print the string “Sanfoundry”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The initial value of semaphore is 0 but the sem_post() increments the value of semaphore by 1.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 806,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t<span class=\"sy0\">*</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> sem_open<span class=\"br0\">(</span><span class=\"st0\">\"sem_value\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_id <span class=\"sy0\">==</span> SEM_FAILED<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_close<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_close\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this process will block",
            "b) this program will print the string “Sanfoundry”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The sem_wait() is trying to use the semaphore when it is already closed.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\nSegmentation fault (core dumped)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 807,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;semaphore.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_t<span class=\"sy0\">*</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> value<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> sem_open<span class=\"br0\">(</span><span class=\"st0\">\"new_13\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_id <span class=\"sy0\">==</span> SEM_FAILED<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_wait<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_post<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_getvalue<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>value<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>sem_close<span class=\"br0\">(</span>sem_id<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"sem_close\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 0",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This process will block when the sem_wait() has been called last time in this program.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lpthread\n[[email protected] sanfoundry]# ./san\n^Z\n[64]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 808,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/mman.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> s_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       s_id <span class=\"sy0\">=</span> shm_open<span class=\"br0\">(</span><span class=\"st0\">\"shared_mem\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">|</span>O_RDWR<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>s_id<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_unlink<span class=\"br0\">(</span><span class=\"st0\">\"shared_mem\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shm_unlink\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: On success the shm_open() returns a nonnegative file descriptor.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lrt\n[[email protected] sanfoundry]# ./san\n3\n[[email protected]alhost sanfoundry]\n"
    },
    {
        "id": 809,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/mman.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> s_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>ptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       s_id <span class=\"sy0\">=</span> shm_open<span class=\"br0\">(</span><span class=\"st0\">\"shared_mem\"</span><span class=\"sy0\">,</span>O_CREAT<span class=\"sy0\">|</span>O_RDWR<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>s_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shm_open\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ptr <span class=\"sy0\">=</span> mmap<span class=\"br0\">(</span>NULL<span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span>PROT_WRITE<span class=\"sy0\">,</span>MAP_PRIVATE<span class=\"sy0\">,</span>s_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>ptr <span class=\"sy0\">==</span> MAP_FAILED<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"mmap\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>munmap<span class=\"br0\">(</span>ptr<span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"munmap\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_unlink<span class=\"br0\">(</span><span class=\"st0\">\"shared_mem\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shm_unlink\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) mmap: Success",
            "b) mmap: Failure",
            "c) munmap: Success",
            "d) munmap: Failure"
        ],
        "Answer": " Answer: a\nExplanation: Memory of the 100 bytes is mapped successfully as shared memory.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lrt\n[[email protected] sanfoundry]# ./san\nmmap: Success\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 810,
        "Question": "a) Permission granted",
        "Options": [
            "   : Success",
            "b) Permission granted",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The shm_open() returns the error EACCES, when the permission is denied.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lrt\n[[email protected] sanfoundry]# ./san\nPermission granted\n: Success\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 811,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;fcntl.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;errno.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/stat.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/mman.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> s_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        s_id <span class=\"sy0\">=</span> shm_open<span class=\"br0\">(</span><span class=\"st0\">\"shared_memory\"</span><span class=\"sy0\">,</span>O_TRUNC<span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>s_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shm_open<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will give an error because OTRUNC is not a valid flag",
            "b) this program will give an error",
            "c) this program will give segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c -lrt\n[[email protected] sanfoundry]# ./san\nmmap: Success\nmmap: Success\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 812,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/msg.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> data_st<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> m_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> data_st data1<span class=\"sy0\">,</span> data2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       m_id <span class=\"sy0\">=</span> msgget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">181</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>m_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       data1.<span class=\"me1\">id</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>data1.<span class=\"me1\">buff</span><span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgsnd<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data1<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgsnd\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgrcv<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data2<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgrcv\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>data2.<span class=\"me1\">buff</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgctl<span class=\"br0\">(</span>m_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “sanfoundry”",
            "b) this program will give an error",
            "c) this program will give segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The fourth argument of the function msgrcv() is missing in this program.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:24:2: error: too few arguments to function ‘msgrcv’\n/usr/include/sys/msg.h:73:16: note: declared here\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 813,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/msg.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> data_st<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> m_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> data_st data1<span class=\"sy0\">,</span> data2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       m_id <span class=\"sy0\">=</span> msgget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">181</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>m_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       data1.<span class=\"me1\">id</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>data1.<span class=\"me1\">buff</span><span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgsnd<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data1<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgsnd\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgctl<span class=\"br0\">(</span>m_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgrcv<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data2<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgrcv\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>data2.<span class=\"me1\">buff</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this program will print the garbage value",
            "c) this program will give segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The message queue has been removed before recieving the message. Hence the program prints the grabage value of the buffer.\nOutput:\n[[email protected] sanfoundry]# ./san\nmsgrcv: Invalid argument\nЅ\u0010�\u0004\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 814,
        "Question": "3. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/msg.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> data_st<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> m_id<span class=\"sy0\">,</span>ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> data_st data1<span class=\"sy0\">,</span> data2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       m_id <span class=\"sy0\">=</span> msgget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">181</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>m_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       data1.<span class=\"me1\">id</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>data1.<span class=\"me1\">buff</span><span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ret <span class=\"sy0\">=</span> msgsnd<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data1<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgrcv<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data2<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgrcv\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgctl<span class=\"br0\">(</span>m_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -1",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The function msgsnd() returns 0 when there is no error.\nOuptut:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n0\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 815,
        "Question": "4. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/msg.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> data_st<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">long</span> <span class=\"kw4\">int</span> id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> m_id<span class=\"sy0\">,</span>ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> data_st data1<span class=\"sy0\">,</span> data2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       m_id <span class=\"sy0\">=</span> msgget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">181</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>m_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       data1.<span class=\"me1\">id</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>data1.<span class=\"me1\">buff</span><span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgsnd<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data1<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgsnd\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ret <span class=\"sy0\">=</span> msgrcv<span class=\"br0\">(</span>m_id<span class=\"sy0\">,&amp;</span>data2<span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>msgctl<span class=\"br0\">(</span>m_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"msgctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) 1",
            "d) 11"
        ],
        "Answer": " Answer: d\nExplanation: The function msgrcv() returns the number of bytes actually copied into its second argument.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n11\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 816,
        "Question": "5. What is the output of this pogram?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/sem.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> val<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> semid_ds <span class=\"sy0\">*</span>buf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">unsigned</span> <span class=\"kw4\">short</span> array<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> semid_ds myds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> sembuf mybuf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun myun<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> wfd<span class=\"sy0\">,</span> rfd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> semget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">911</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span> <span class=\"sy0\">|</span> IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       myun.<span class=\"me1\">val</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>SETVAL<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_p<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this process will remain block",
            "c) this program will print the string “Sanfoundry” & process will remain block",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The function sem_p() will increment the value of semaphore but it will not block the process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 817,
        "Question": "6. What is the output of this pogram?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/sem.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> val<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> semid_ds <span class=\"sy0\">*</span>buf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">unsigned</span> <span class=\"kw4\">short</span> array<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> semid_ds myds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> sembuf mybuf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun myun<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> wfd<span class=\"sy0\">,</span> rfd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> semget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">911</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span> <span class=\"sy0\">|</span> IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       myun.<span class=\"me1\">val</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>SETVAL<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_p<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this process will remain block",
            "c) this program will print the string “Sanfoundry” & process will remain block",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The initial value of semaphore in this program is 0. Hence the function sem_p() will block the process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n^Z\n[24]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 818,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/sem.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun<span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> val<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> semid_ds <span class=\"sy0\">*</span>buf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">unsigned</span> <span class=\"kw4\">short</span> array<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> sem_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> semid_ds myds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">struct</span> sembuf mybuf<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">union</span> semun myun<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_p<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">static</span> <span class=\"kw4\">int</span> sem_v<span class=\"br0\">(</span><span class=\"kw4\">void</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_num</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_op</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       mybuf.<span class=\"me1\">sem_flg</span> <span class=\"sy0\">=</span> SEM_UNDO<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semop<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,&amp;</span>mybuf<span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> wfd<span class=\"sy0\">,</span> rfd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_id <span class=\"sy0\">=</span> semget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">911</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span> <span class=\"sy0\">|</span> IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       myun.<span class=\"me1\">val</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       semctl<span class=\"br0\">(</span>sem_id<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span>SETVAL<span class=\"sy0\">,</span>myun<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_p<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sem_v<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this process will remain block",
            "b) this program will print the string “Sanfoundry”",
            "c) this program will print the string “Sanfoundry” & process will remain block",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The semaphore has been removed before calling the function sem_p(). Hence the function sem() will not affect the process.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 819,
        "Question": "8. What is the output of second program if we run the san1 first and after that we run san2 in the different terminal?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is san1.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">1234</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>addr<span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       sleep<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>      </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> shmctl<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is san2.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">1234</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>addr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will print the string “Sanfoundry”",
            "b) the program will nothing",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The process of san1.c has written the string “Sanfoundry” in the shared memory and the process of san2.c accessed the string from the shared memory. This is valid only for 10 seconds from the execution of first program san1.c.\nOutput1:\n[[email protected] sanfoundry]# gcc -o san1 san1.c\n[[email protected] sanfoundry]# ./san1 \nOutput2:\n[[email protected] sanfoundry]# gcc -o san2 san2.c\n[[email protected] sanfoundry]# ./san2\nSanfoundry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 820,
        "Question": "Output2:",
        "Options": [
            "[[email protected] sanfoundry]# gcc -o san2 san2.c",
            "[[email protected] sanfoundry]# ./san2",
            "Sanfoundry",
            "[[email protected] sanfoundry]#"
        ],
        "Answer": " Answer: b\nExplanation: The process of san1.c has written the string “Sanfoundry” in the shared memory and the process of san2.c could not access the string from the shared memory due to delay.\nOutput1:\n[[email protected] sanfoundry]# gcc -o san1 san1.c\n[[email protected] sanfoundry]# ./san1\nOutput2:\n[[email protected] sanfoundry]# gcc -o san2 san2.c\n[[email protected] sanfoundry]# ./san2 \n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 821,
        "Question": "9. What is the output of second program if we run the san1 first and after that we run san2 in the different terminal?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is san1.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">1234</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>addr<span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> shmctl<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is san2.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">1234</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>addr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will print the string “Sanfoundry”",
            "b) the program will nothing",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The process of san1.c has written the string “Sanfoundry” in the shared memory and the process of san2.c could not access that shared memory because the key is different.\nOutput1:\n[[email protected] sanfoundry]# gcc -o san1 san1.c\n[[email protected] sanfoundry]# ./san1 \nOutput2:\n[[email protected] sanfoundry]# gcc -o san2 san2.c\n[[email protected] sanfoundry]# ./san2 \n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 822,
        "Question": "10. What is the output of second program if we run the san1 first and after that we run san2 in the different terminal?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"coMULTI\">/*This is san1.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;string.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">1234</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>addr<span class=\"sy0\">,</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sleep<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>      </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span> shmctl<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>IPC_RMID<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmctl\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"coMULTI\">/*This is san2.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/ipc.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/shm.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> shm_id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">char</span> <span class=\"sy0\">*</span>addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">struct</span> shmid_ds ds<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        shm_id <span class=\"sy0\">=</span> shmget<span class=\"br0\">(</span><span class=\"br0\">(</span>key_t<span class=\"br0\">)</span><span class=\"nu0\">111</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu8\">0666</span><span class=\"sy0\">|</span>IPC_CREAT<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>shm_id <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmget\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        addr <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span><span class=\"br0\">)</span>shmat<span class=\"br0\">(</span>shm_id<span class=\"sy0\">,</span>NULL<span class=\"sy0\">,</span>SHM_RND<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>addr <span class=\"sy0\">==</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> <span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmat\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%s<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>addr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>shmdt<span class=\"br0\">(</span>addr<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"shmdt\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will print the string “Sanfoundry”",
            "b) the program will nothing",
            "c) segmentaion fault",
            "d) none of the mentioned"
        ]
    },
    {
        "id": 823,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_socket<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_socket <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>fd_socket<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 0",
            "c) any integer value",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: To use socket(), the header files sys/types.h and sys/socket.h are required.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:6:21: error: ‘AF_UNIX’ undeclared (first use in this function)\nsan.c:6:21: note: each undeclared identifier is reported only once for each function it appears in\nsan.c:6:29: error: ‘SOCK_STREAM’ undeclared (first use in this function)\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 824,
        "Question": "2. In this program, the third argument of the socket() is used for _____ potocol.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_socket<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) TCP/IP",
            "b) UDP",
            "c) both TCP/IP and UDP",
            "d) none of mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 825,
        "Question": "3. By this program the soket “san_sock” will create<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>add_server.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) in the /tmp directory",
            "b) in the /usr directory",
            "c) in the present working directory",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n[[email protected] sanfoundry]# ls\nsan.c\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n[[email protected] sanfoundry]# ls\nsan  san.c  san_sock\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 826,
        "Question": "4. What is the length of of the queue for pending connections in this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>add_server.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"server_sock2\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: The second argument of listen() specifies the length for the queue for pending connections.\n"
    },
    {
        "id": 827,
        "Question": "5. What is the output of the program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un add_server<span class=\"sy0\">,</span> add_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>add_server.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_client<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the program will print the string “Sanfoundry”",
            "b) the process will remain block",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: There is no peding request in the queue for listening socket “san_sock”.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n^Z\n[4]+  Stopped                 ./san\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 828,
        "Question": "6. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>fd<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) 3"
        ],
        "Answer": " Answer: d\nExplanation: The socket() returns the lowest available file descriptor and in this program i.e. 3.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n3\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 829,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;errno.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       addr.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>addr.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bind<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>addr<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>addr<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoudnry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) this program will not print the string “Sanfoundry”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The first argument of the bind() is not a valid file descriptor in this program.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\nSanfoudnry\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 830,
        "Question": "8. What this program is not able to connect with any client program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un add_server<span class=\"sy0\">,</span> add_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>add_server.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_client<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the listen() is missing",
            "b) the connect() is missing",
            "c) the read() and write() are missing",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 831,
        "Question": "9. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/un.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_un add_server<span class=\"sy0\">,</span> add_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>add_server.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> connect<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_client<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) this program will print the string “Sanfoundry”",
            "b) segmentation fault",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The syntax of the connect() is wrong. connect() should be used in client program only.\nOuptut:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:20:46: warning: passing argument 3 of ‘connect’ makes integer from pointer without a cast [enabled by default]\n/usr/include/sys/socket.h:129:12: note: expected ‘socklen_t’ but argument is of type ‘int *’\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 832,
        "Question": "10. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"co2\">#include&lt;errno.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">struct</span> sockaddr_in addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        fd <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_UNIX<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"socket\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        addr.<span class=\"me1\">sun_family</span> <span class=\"sy0\">=</span> AF_UNIX<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw3\">strcpy</span><span class=\"br0\">(</span>addr.<span class=\"me1\">sun_path</span><span class=\"sy0\">,</span><span class=\"st0\">\"san_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>bind<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>addr<span class=\"sy0\">,</span><span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>addr<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoudnry<span class=\"es1\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) “Sanfoundry”",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The structure used for AF_UNIX if sockaddr_un.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:14:6: error: ‘struct sockaddr_in’ has no member named ‘sun_family’\nsan.c:15:2: warning: incompatible implicit declaration of built-in function ‘strcpy’ [enabled by default]\nsan.c:15:13: error: ‘struct sockaddr_in’ has no member named ‘sun_path’\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 833,
        "Question": "1. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in addr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>fd<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 3",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The header file netinet/in.h is required to use the structure sockaddr_in.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:7:21: error: storage size of ‘addr’ isn’t known\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 834,
        "Question": "2. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> len_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">,</span> add_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len_client <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_client<span class=\"sy0\">,</span>len_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"accept\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) segmentation fault",
            "b) error at the time of compilation",
            "c) syntax error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The third argument of the accept is the type of pointer.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\nsan.c: In function ‘main’:\nsan.c:26:39: warning: passing argument 3 of ‘accept’ makes pointer from integer without a cast [enabled by default]\n/usr/include/sys/socket.h:214:12: note: expected ‘socklen_t * __restrict__’ but argument is of type ‘int’\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 835,
        "Question": "3. This program can send the request to<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_client<span class=\"sy0\">,</span>fd<span class=\"sy0\">,</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> ntohs<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"193.39.0.4\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd  <span class=\"sy0\">=</span> connect<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"connect\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the system having IP address 193.39.0.4",
            "b) any system present in the network",
            "c) any system of the private network",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The IP address is mentioned in the proper element of the structure sockaddr_in\n"
    },
    {
        "id": 836,
        "Question": "4. This program is valid for<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_client<span class=\"sy0\">,</span>fd<span class=\"sy0\">,</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> ntohs<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"144.29.8.2\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd  <span class=\"sy0\">=</span> connect<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) IPv4",
            "b) IPv6",
            "c) both IPv4 and IPv6",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 837,
        "Question": "5. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> ret<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       ret <span class=\"sy0\">=</span> shutdown<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">printf</span><span class=\"br0\">(</span><span class=\"st0\">\"%d<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span>ret<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) -1",
            "c) can not be determined",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The shutdown() is used to close a socket and the first argument in shutdown() is socket.\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\n-1\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 838,
        "Question": "6. What is the problem with this server program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">,</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> htons<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"122.23.1.1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"accept\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) it can not accept the request of any client",
            "b) it will give the segmentation fault",
            "c) there is no problem with this program",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The address format of the client must match in the server.\n"
    },
    {
        "id": 839,
        "Question": "7. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> len_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"accept\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) syntax error",
            "b) error at the time of compilation",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The listen() must always be used before accept().\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\naccept: Invalid argument\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 840,
        "Question": "8. What is the output of this program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> len_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       close<span class=\"br0\">(</span>fd_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"accept\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,&amp;</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) syntax error",
            "b) error at the time of compilation",
            "c) segmentation fault",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The program will not work properly because the file descriptor is not available in the for listen() and accept().\nOutput:\n[[email protected] sanfoundry]# gcc -o san san.c\n[[email protected] sanfoundry]# ./san\naccept: Success\nlisten: Bad file descriptor\n[[email protected] sanfoundry]#\n"
    },
    {
        "id": 841,
        "Question": "9. On which system call, this program (process) waits until the server responds?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_client<span class=\"sy0\">,</span>fd<span class=\"sy0\">,</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> ntohs<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   fd  <span class=\"sy0\">=</span> connect<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"connect\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"Hello<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) socket()",
            "b) connect()",
            "c) both socket() and connect()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 842,
        "Question": "10. What is the the response of this server for this client if both programs are running on the same system?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"c\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is server.c*/</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdlib.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_server<span class=\"sy0\">,</span> fd_client<span class=\"sy0\">,</span> len<span class=\"sy0\">,</span> len_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">,</span> add_client<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">char</span> buff<span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_server <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_server <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> htons<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span><span class=\"br0\">(</span> bind<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"bind\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>listen<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"listen\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> accept<span class=\"br0\">(</span>fd_server<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_client<span class=\"sy0\">,&amp;</span>len_client<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"accept\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       read<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span>buff<span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"coMULTI\">/*This is the client.c*/</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;stdio.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;netinet/in.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/types.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"co2\">#include&lt;sys/socket.h&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">int</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> fd_client<span class=\"sy0\">,</span>fd<span class=\"sy0\">,</span> len<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">struct</span> sockaddr_in add_server<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd_client <span class=\"sy0\">=</span> socket<span class=\"br0\">(</span>AF_INET<span class=\"sy0\">,</span>SOCK_STREAM<span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span>fd_client <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"fd_sock\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw3\">exit</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_family</span> <span class=\"sy0\">=</span> AF_INET<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_port</span> <span class=\"sy0\">=</span> ntohs<span class=\"br0\">(</span><span class=\"nu0\">4001</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       add_server.<span class=\"me1\">sin_addr</span>.<span class=\"me1\">s_addr</span> <span class=\"sy0\">=</span> inet_addr<span class=\"br0\">(</span><span class=\"st0\">\"127.0.0.1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       len <span class=\"sy0\">=</span> <span class=\"kw4\">sizeof</span><span class=\"br0\">(</span>add_server<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fd  <span class=\"sy0\">=</span> connect<span class=\"br0\">(</span>fd_client<span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"kw4\">struct</span> sockaddr<span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"sy0\">&amp;</span>add_server<span class=\"sy0\">,</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span><span class=\"br0\">(</span>fd <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw3\">perror</span><span class=\"br0\">(</span><span class=\"st0\">\"connect\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       write<span class=\"br0\">(</span>fd<span class=\"sy0\">,</span><span class=\"st0\">\"Hello<span class=\"es1\">\\n</span>\"</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) the server will write back to the client whatever the clinet will write to the server",
            "b) the client server communication will not work",
            "c) the response can not be determined",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The loopback address is used as IP address in both the programs.\n"
    }
]
[
    {
        "id": 1,
        "Question": "Is Python case sensitive when dealing with identifiers?",
        "Options": [
            "a) yes",
            "b) no",
            "c) machine dependent",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Case is always significant."
    },
    {
        "id": 2,
        "Question": "What is the maximum possible length of an identifier?",
        "Options": [
            "a) 31 characters",
            "b) 63 characters",
            "c) 79 characters",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Identifiers can be of any length."
    },
    {
        "id": 3,
        "Question": "Which of the following is invalid?",
        "Options": [
            "a) _a = 1",
            "b) __a = 1",
            "c) __str__ = 1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: All the statements will execute successfully but at the cost of reduced readability."
    },
    {
        "id": 4,
        "Question": "Which of the following is an invalid variable?",
        "Options": [
            "a) my_string_1",
            "b) 1st_string",
            "c) foo",
            "d) _"
        ],
        "Answer": "Answer: b\nExplanation: Variable names should not start with a number."
    },
    {
        "id": 5,
        "Question": "Why are local variable names beginning with an underscore discouraged?",
        "Options": [
            "a) they are used to indicate a private variables of a class",
            "b) they confuse the interpreter",
            "c) they are used to indicate global variables",
            "d) they slow down execution"
        ],
        "Answer": "Answer: a\nExplanation: As Python has no concept of private variables, leading underscores are used to indicate variables that must not be accessed from outside the class."
    },
    {
        "id": 6,
        "Question": "Which of the following is not a keyword?",
        "Options": [
            "a) eval",
            "b) assert",
            "c) nonlocal",
            "d) pass"
        ],
        "Answer": "Answer: a\nExplanation: eval can be used as a variable."
    },
    {
        "id": 7,
        "Question": "All keywords in Python are in _________",
        "Options": [
            "a) lower case",
            "b) UPPER CASE",
            "c) Capitalized",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: True, False and None are capitalized while the others are in lower case."
    },
    {
        "id": 8,
        "Question": "Which of the following is true for variable names in Python?",
        "Options": [
            "a) unlimited length",
            "b) all private members must have leading and trailing underscores",
            "c) underscore and ampersand are the only two special characters allowed",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Variable names can be of any length."
    },
    {
        "id": 9,
        "Question": "Which of the following is an invalid statement?",
        "Options": [
            "a) abc = 1,000,000",
            "b) a b c = 1000 2000 3000",
            "c) a,b,c = 1000, 2000, 3000",
            "d) a_b_c = 1,000,000"
        ],
        "Answer": "Answer: b\nExplanation: Spaces are not allowed in variable names."
    },
    {
        "id": 10,
        "Question": "Which of the following cannot be a variable?",
        "Options": [
            "a) __init__",
            "b) in",
            "c) it",
            "d) on"
        ],
        "Answer": "Answer: b\nExplanation: in is a keyword."
    },
    {
        "id": 11,
        "Question": "Which is the correct operator for power(xy)?",
        "Options": [
            "a) X^y",
            "b) X**y",
            "c) X^^y",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In python, power operator is x**y i.e. 2**3=8.\n"
    },
    {
        "id": 12,
        "Question": "Which one of these is floor division?",
        "Options": [
            "a) /",
            "b) //",
            "c) %",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: When both of the operands are integer then python chops out the fraction part and gives you the round off value, to get the accurate answer use floor division. This is floor division. For ex, 5/2 = 2.5 but both of the operands are integer so answer of this expression in python is 2. To get the 2.5 answer, use floor division.\n"
    },
    {
        "id": 13,
        "Question": "What is the answer to this expression, 22 % 3 is?",
        "Options": [
            "a) 7",
            "b) 1",
            "c) 0",
            "d) 5"
        ],
        "Answer": " Answer: a\nExplanation: For order of precedence, just remember this PEMDAS (similar to BODMAS).\n"
    },
    {
        "id": 14,
        "Question": "Operators with the same precedence are evaluated in which manner?",
        "Options": [
            "a) Left to Right",
            "b) Right to Left",
            "c) Can’t say",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Modulus operator gives the remainder. So, 22%3 gives the remainder, that is, 1.\n"
    },
    {
        "id": 15,
        "Question": "What is the output of this expression, 3*1**3?",
        "Options": [
            "a) 27",
            "b) 9",
            "c) 3",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: You can’t perform mathematical operation on string even if the string is in the form: ‘1234…’.\n"
    },
    {
        "id": 16,
        "Question": "Which one of the following has the same precedence level?",
        "Options": [
            "a) Addition and Subtraction",
            "b) Multiplication, Division and Addition",
            "c) Multiplication, Division, Addition and Subtraction",
            "d) Addition and Multiplication"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 17,
        "Question": "Which one of the following has the highest precedence in the expression?",
        "Options": [
            "a) Exponential",
            "b) Addition",
            "c) Multiplication",
            "d) Parentheses"
        ],
        "Answer": " Answer: c\nExplanation: First this expression will solve 1**3 because exponential has higher precedence than multiplication, so 1**3 = 1 and 3*1 = 3. Final answer is 3.\n"
    },
    {
        "id": 18,
        "Question": "Which of these in not a core data type?",
        "Options": [
            "a) Lists",
            "b) Dictionary",
            "c) Tuples",
            "d) Class"
        ],
        "Answer": " Answer: d\nExplanation: Class is a user defined data type. "
    },
    {
        "id": 19,
        "Question": "Given a function that does not return any value, What value is thrown by default when executed in shell.",
        "Options": [
            "a) int",
            "b) bool",
            "c) void",
            "d) None"
        ],
        "Answer": " Answer: d\nExplanation: Python shell throws a NoneType object back. "
    },
    {
        "id": 20,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>str<span class=\"sy1\">=</span><span class=\"st0\">\"hello\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>str<span class=\"br0\">[</span><span class=\"sy4\">:</span><span class=\"nu0\">2</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) he",
            "b) lo",
            "c) olleh",
            "d) hello"
        ],
        "Answer": " Answer: a\nExplanation: We are printing only the 1st two bytes of string and hence the answer is “he”. "
    },
    {
        "id": 21,
        "Question": "Which of the following will run without errors?",
        "Options": [
            "a) round(45.8)",
            "b) round(6352.898,2,5)",
            "c) round()",
            "d) round(7463.123,2,1)"
        ],
        "Answer": " Answer: a\nExplanation: Execute help(round) in the shell to get details of the parameters that are passed into the round function."
    },
    {
        "id": 22,
        "Question": "What is the return type of function id?",
        "Options": [
            "a) int",
            "b) float",
            "c) bool",
            "d) dict"
        ],
        "Answer": " Answer: a\nExplanation: Execute help(id) to find out details in python shell.id returns a integer value that is unique."
    },
    {
        "id": 23,
        "Question": "objective is to make sure x has a integer value, select all that apply (python 3.xx)",
        "Options": [
            "a) x = 13 // 2",
            "b) x = int(13 / 2)",
            "c) x = 13 % 2",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: // is integer operation in python 3.0 and int(..) is a type cast operator."
    },
    {
        "id": 24,
        "Question": "6. In python we do not specify types, it is directly interpreted by the compiler, so consider the following operation to be performed.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>x <span class=\"sy1\">=</span> <span class=\"nu0\">13</span> <span class=\"sy4\">?</span> <span class=\"nu0\">2</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) SyntaxError",
            "b) NameError",
            "c) ValueError",
            "d) TypeError"
        ],
        "Answer": " Answer: b\nExplanation: Mango is not defined hence name error."
    },
    {
        "id": 25,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def example<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a <span class=\"sy1\">=</span> a <span class=\"sy2\">+</span> <span class=\"st0\">'2'</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a <span class=\"sy1\">=</span> a<span class=\"sy2\">*</span><span class=\"nu0\">2</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> a</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example<span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) indentation Error",
            "b) cannot perform mathematical operation on strings",
            "c) hello2",
            "d) hello2hello2"
        ],
        "Answer": " Answer: a\nExplanation: Python codes have to be indented properly."
    },
    {
        "id": 26,
        "Question": "",
        "Options": [
            "a) list",
            "b) dictionary",
            "c) array",
            "d) tuple"
        ],
        "Answer": " Answer: a\nExplanation: List data type can store any values within it."
    },
    {
        "id": 27,
        "Question": "In order to store values in terms of key and value we use what core data type.",
        "Options": [
            "a) list",
            "b) tuple",
            "c) class",
            "d) dictionary"
        ],
        "Answer": " Answer: d\nExplanation: Dictionary stores values in terms of keys and values."
    },
    {
        "id": 28,
        "Question": "Which of the following results in a SyntaxError?",
        "Options": [
            "a) ‘”Once upon a time…”, she said.’",
            "b) “He said, ‘Yes!'”",
            "c) ‘3\\’",
            "d) ”’That’s okay”’"
        ],
        "Answer": " Answer:  c\nExplanation: Carefully look at the colons."
    },
    {
        "id": 29,
        "Question": "13. What is the average value of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>grade1 <span class=\"sy1\">=</span> <span class=\"nu0\">80</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>grade2 <span class=\"sy1\">=</span> <span class=\"nu0\">90</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>average <span class=\"sy1\">=</span> <span class=\"br0\">(</span>grade1 <span class=\"sy2\">+</span> grade2<span class=\"br0\">)</span> <span class=\"sy2\">/</span> <span class=\"nu0\">2</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 85.0",
            "b) 85.1",
            "c) 95.0",
            "d) 95.1"
        ],
        "Answer": " Answer: c\nExplanation: The \\n adds a new line."
    },
    {
        "id": 30,
        "Question": "",
        "Options": [
            "a) print(‘hello’, ‘how’, ‘are’, ‘you’)",
            "b) print(‘hello’, ‘how’, ‘are’, ‘you’ + ‘-‘ * 4)",
            "c) print(‘hello-‘ + ‘how-are-you’)",
            "d) print(‘hello’ + ‘-‘ + ‘how’ + ‘-‘ + ‘are’ + ‘you’)"
        ],
        "Answer": " Answer: a\nExplanation: Cause a decimal value of 0 to appear as output."
    },
    {
        "id": 31,
        "Question": "What is the return value of trunc()?",
        "Options": [
            "a) int",
            "b) bool",
            "c) float",
            "d) None"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell."
    },
    {
        "id": 32,
        "Question": "What is the output of print 0.1 + 0.2 == 0.3?",
        "Options": [
            "a) True",
            "b) False",
            "c) Machine dependent",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Neither of 0.1, 0.2 and 0.3 can be represented accurately in binary. The round off errors from 0.1 and 0.2 accumulate and hence there is a difference of 5.5511e-17 between (0.1 + 0.2) and 0.3."
    },
    {
        "id": 33,
        "Question": "Which of the following is not a complex number?",
        "Options": [
            "a) k = 2 + 3j",
            "b) k = complex(2, 3)",
            "c) k = 2 + 3l",
            "d) k = 2 + 3J"
        ],
        "Answer": "Answer: c\nExplanation: l (or L) stands for long."
    },
    {
        "id": 34,
        "Question": "What is the type of inf?",
        "Options": [
            "a) Boolean",
            "b) Integer",
            "c) Float",
            "d) Complex"
        ],
        "Answer": "Answer: c\nExplanation: Infinity is a special case of floating point numbers. It can be obtained by float(‘inf’)."
    },
    {
        "id": 35,
        "Question": "What does ~4 evaluate to?",
        "Options": [
            "a) -5",
            "b) -4",
            "c) -3",
            "d) +3"
        ],
        "Answer": "Answer: a\nExplanation: ~x is equivalent to -(x+1)."
    },
    {
        "id": 36,
        "Question": "What does ~~~~~~5 evaluate to?",
        "Options": [
            "a) +5",
            "b) -11",
            "c) +11",
            "d) -5"
        ],
        "Answer": "Answer: a\nExplanation: ~x is equivalent to -(x+1).\n~~x = – (-(x+1) + 1) = (x+1) – 1 = x\n~~x is equivalent to x\nExtrapolating further ~~~~~~x would be same as x in the final result.\nIn the question, x value is given as 5 and “~” is repeated 6 times. So, the correct answer for “~~~~~~5” is 5.\n"
    },
    {
        "id": 37,
        "Question": "Which of the following is incorrect?",
        "Options": [
            "a) x = 0b101",
            "b) x = 0x4f5",
            "c) x = 19023",
            "d) x = 03964"
        ],
        "Answer": "Answer: d\nExplanation: Numbers starting with a 0 are octal numbers but 9 isn’t allowed in octal numbers."
    },
    {
        "id": 38,
        "Question": "What is the result of cmp(3, 1)?",
        "Options": [
            "a) 1",
            "b) 0",
            "c) True",
            "d) False"
        ],
        "Answer": "Answer: a\nExplanation: cmp(x, y) returns 1 if x > y, 0 if x == y and -1 if x < y."
    },
    {
        "id": 39,
        "Question": "Which of the following is incorrect?",
        "Options": [
            "a) float(‘inf’)",
            "b) float(‘nan’)",
            "c) float(’56’+’78’)",
            "d) float(’12+34′)"
        ],
        "Answer": "Answer: d\nExplanation: ‘+’ cannot be converted to a float."
    },
    {
        "id": 40,
        "Question": "What is the result of round(0.5) – round(-0.5)?",
        "Options": [
            "a) 1.0",
            "b) 2.0",
            "c) 0.0",
            "d) Value depends on Python version"
        ],
        "Answer": "Answer: d\nExplanation: The behavior of the round() function is different in Python 2 and Python 3. In Python 2, it rounds off numbers away from 0 when the number to be rounded off is exactly halfway through. round(0.5) is 1 and round(-0.5) is -1 whereas in Python 3, it rounds off numbers towards nearest even number when the number to be rounded off is exactly halfway through. See the below output.\n\n\n\tHere’s the runtime output for Python version 2.7 interpreter.\n$ python\nPython 2.7.17 (default, Nov  7 2019, 10:07:09)\n>>> round(0.5)\n1.0\n>>> round(-0.5)\n-1.0\n>>>\n\nIn the above output, you can see that the round() functions on 0.5 and -0.5 are moving away from 0 and hence “round(0.5) – (round(-0.5)) = 1 – (-1) = 2”\nHere’s the runtime output for Python version 3.6 interpreter.\n$ python3\nPython 3.6.8 (default, Oct  7 2019, 12:59:55)\n>>> round(0.5)\n0\n>>> round(-0.5)\n0\n>>> round(2.5)\n2\n>>> round(3.5)\n4\n>>>\n\nIn the above output, you can see that the round() functions on 0.5 and -0.5 are moving towards 0 and hence “round(0.5) – (round(-0.5)) = 0 – 0 = 0“. Also note that the round(2.5) is 2 (which is an even number) whereas round(3.5) is 4 (which is an even number).\n"
    },
    {
        "id": 41,
        "Question": "What does 3 ^ 4 evaluate to?",
        "Options": [
            "a) 81",
            "b) 12",
            "c) 0.75",
            "d) 7"
        ],
        "Answer": "Answer: d\nExplanation: ^ is the Binary XOR operator."
    },
    {
        "id": 42,
        "Question": "2. What will be the value of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">4</span> + <span class=\"nu0\">3</span> % <span class=\"nu0\">5</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 7",
            "c) 2",
            "d) 0"
        ],
        "Answer": "Answer: a\nExplanation: Although the presence of parenthesis does affect the order of precedence, in the case shown above, it is not making a difference. The result of both of these expressions is 1.333333333. Hence the statement is true."
    },
    {
        "id": 43,
        "Question": "3. Evaluate the expression given below if A = 16 and B = 15.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A % B // A</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0",
            "b) 0",
            "c) 1.0",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: The order of precedence is: %, +. Hence the expression above, on simplification results in   4 + 3 = 7. Hence the result is 7."
    },
    {
        "id": 44,
        "Question": "Which of the following operators has its associativity from right to left?",
        "Options": [
            "a) +",
            "b) //",
            "c) %",
            "d) **"
        ],
        "Answer": "Answer: b\nExplanation: The above expression is evaluated as: 16%15//16, which is equal to 1//16, which results in 0."
    },
    {
        "id": 45,
        "Question": "5.  What will be the value of x in the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"nu0\">43.55</span>+<span class=\"nu0\">2</span>/<span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 43",
            "b) 44",
            "c) 22",
            "d) 23"
        ],
        "Answer": "Answer: d\nExplanation: All of the operators shown above have associativity from left to right, except exponentiation operator (**) which has its associativity from right to left."
    },
    {
        "id": 46,
        "Question": "6. What is the value of the following expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">2</span>+<span class=\"nu0\">4.00</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>**<span class=\"nu0\">4.0</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (6.0, 16.0)",
            "b) (6.00, 16.00)",
            "c) (6, 16)",
            "d) (6.00, 16.0)"
        ],
        "Answer": "Answer: b\nExplanation: The expression shown above is an example of explicit conversion. It is evaluated as int(43.55+1) = int(44.55) = 44. Hence the result of this expression is 44."
    },
    {
        "id": 47,
        "Question": "Which of the following is the truncation division operator?",
        "Options": [
            "a) /",
            "b) %",
            "c) //",
            "d) |"
        ],
        "Answer": "Answer: a\nExplanation: The result of the expression shown above is (6.0, 16.0). This is because the result is automatically rounded off to one decimal place."
    },
    {
        "id": 48,
        "Question": "8. What are the values of the following Python expressions?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> <span class=\"nu0\">2</span>**<span class=\"br0\">(</span><span class=\"nu0\">3</span>**<span class=\"nu0\">2</span><span class=\"br0\">)</span>\n <span class=\"br0\">(</span><span class=\"nu0\">2</span>**<span class=\"nu0\">3</span><span class=\"br0\">)</span>**<span class=\"nu0\">2</span>\n <span class=\"nu0\">2</span>**<span class=\"nu0\">3</span>**<span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 64, 512, 64",
            "b) 64, 64, 64",
            "c) 512, 512, 512",
            "d) 512, 64, 512"
        ],
        "Answer": "Answer: c\nExplanation: // is the operator for truncation division. It is called so because it returns only the integer part of the quotient, truncating the decimal part. For example: 20//3 = 6."
    },
    {
        "id": 49,
        "Question": "9. What is the value of the following expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">8</span>/<span class=\"nu0\">4</span>/<span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span>/<span class=\"br0\">(</span><span class=\"nu0\">4</span>/<span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (1.0, 4.0)",
            "b) (1.0, 1.0)",
            "c) (4.0. 1.0)",
            "d) (4.0, 4.0)"
        ],
        "Answer": "Answer: d\nExplanation: Expression 1 is evaluated as: 2**9, which is equal to 512. Expression 2 is evaluated as 8**2, which is equal to 64. The last expression is evaluated as 2**(3**2). This is because the associativity of ** operator is from right to left. Hence the result of the third expression is 512."
    },
    {
        "id": 50,
        "Question": "10. What is the value of the following expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"nu0\">22</span>//<span class=\"nu0\">3</span>+<span class=\"nu0\">3</span>/<span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 8.0",
            "c) 8.3",
            "d) 8.33"
        ],
        "Answer": "Answer: a\nExplanation: The above expressions are evaluated as: 2/2, 8/2, which is equal to (1.0, 4.0)."
    },
    {
        "id": 51,
        "Question": "1. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"nu0\">4.00</span>/<span class=\"br0\">(</span><span class=\"nu0\">2.0</span>+<span class=\"nu0\">2.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 1.0",
            "c) 1.00",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: The result of the expression shown above is 1.0 because print rounds off digits."
    },
    {
        "id": 52,
        "Question": "2. What will be the value of X in the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">X <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>+<span class=\"nu0\">9</span>*<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>*<span class=\"nu0\">12</span><span class=\"br0\">)</span>-<span class=\"nu0\">8</span><span class=\"br0\">)</span>/<span class=\"nu0\">10</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 30.0",
            "b) 30.8",
            "c) 28.4",
            "d) 27.2"
        ],
        "Answer": "Answer: d\nExplanation: The expression shown above is evaluated as: 2+9*(36-8)/10, which simplifies to give 2+9*(2.8), which is equal to 2+25.2 = 27.2. Hence the result of this expression is 27.2."
    },
    {
        "id": 53,
        "Question": "Which of the following expressions involves coercion when evaluated in Python?",
        "Options": [
            "a) 4.7 – 1.5",
            "b) 7.9 * 6.3",
            "c) 1.7 % 2",
            "d) 3.4 + 4.6"
        ],
        "Answer": "Answer: c\nExplanation: Coercion is the implicit (automatic) conversion of operands to a common type. Coercion is automatically performed on mixed-type expressions. The expression 1.7 % 2 is evaluated as 1.7 % 2.0 (that is, automatic conversion of int to float)."
    },
    {
        "id": 54,
        "Question": "4. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">24</span>//<span class=\"nu0\">6</span>%<span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">24</span>//<span class=\"nu0\">4</span>//<span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (1,3)",
            "b) (0,3)",
            "c) (1,0)",
            "d) (3,1)"
        ],
        "Answer": "Answer: a\nExplanation: The expressions are evaluated as: 4%3 and 6//2 respectively. This results in the answer (1,3). This is because the associativity of both of the expressions shown above is left to right."
    },
    {
        "id": 55,
        "Question": "5. Which among the following list of operators has the highest precedence?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> +<span class=\"sy0\">,</span> -<span class=\"sy0\">,</span> **<span class=\"sy0\">,</span> %<span class=\"sy0\">,</span> /<span class=\"sy0\">,</span> <span class=\"sy0\">&lt;&lt;,</span> <span class=\"sy0\">&gt;&gt;,</span> |</pre></div></div></div></div></div></div>",
        "Options": [
            "a) <<, >>",
            "b) **",
            "c) |",
            "d) %"
        ],
        "Answer": "Answer: b\nExplanation: The highest precedence is that of the exponentiation operator, that is of **."
    },
    {
        "id": 56,
        "Question": "6. What will be the value of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"nu0\">4</span>+<span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"nu0\">2.39</span><span class=\"br0\">)</span>%<span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 5.0",
            "b) 5",
            "c) 4.0",
            "d) 4"
        ],
        "Answer": "Answer: c\nExplanation: The above expression is an example of explicit conversion. It is evaluated as: float(4+int(2.39)%2) = float(4+2%2) = float(4+0) = 4.0. Hence the result of this expression is 4.0."
    },
    {
        "id": 57,
        "Question": "Which of the following expressions is an example of type conversion?",
        "Options": [
            "a) 4.0 + float(3)",
            "b) 5.3 + 6.3",
            "c) 5.0 + 3",
            "d) 3 + 7"
        ],
        "Answer": "Answer: a\nExplanation: Type conversion is nothing but explicit conversion of operands to a specific type. Options 5.3 + 6.3 and 5.0 + 3 are examples of implicit conversion whereas option 4.0 + float(3) is an example of explicit conversion or type conversion."
    },
    {
        "id": 58,
        "Question": "Which of the following expressions results in an error?",
        "Options": [
            "a) float(‘10’)",
            "b) int(‘10’)",
            "c) float(’10.8’)",
            "d) int(’10.8’)"
        ],
        "Answer": "Answer: d\nExplanation: All of the above examples show explicit conversion. However the expression int(’10.8’) results in an error."
    },
    {
        "id": 59,
        "Question": "9. What will be the value of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">4</span>+<span class=\"nu0\">2</span>**<span class=\"nu0\">5</span>//<span class=\"nu0\">10</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 7",
            "c) 77",
            "d) 0"
        ],
        "Answer": "Answer: b\nExplanation: The order of precedence is: **, //, +. The expression 4+2**5//10 is evaluated as 4+32//10, which is equal to 4+3 = 7. Hence the result of the expression shown above is 7."
    },
    {
        "id": 60,
        "Question": "1. What will be the output of the following Python code snippet if x=1?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">&lt;&lt;</span><span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 1",
            "c) 2",
            "d) 4"
        ],
        "Answer": "Answer: d\nExplanation: The binary form of 1 is 0001. The expression x<<2 implies we are performing bitwise left shift on x. This shift yields the value: 0100, which is the binary form of the number 4."
    },
    {
        "id": 61,
        "Question": "2. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">bin<span class=\"br0\">(</span><span class=\"nu0\">29</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘0b10111’",
            "b) ‘0b11101’",
            "c) ‘0b11111’",
            "d) ‘0b11011’"
        ],
        "Answer": "Answer: b\nExplanation: The binary form of the number 29 is 11101. Hence the output of this expression is ‘0b11101’."
    },
    {
        "id": 62,
        "Question": "3. What will be the value of x in the following Python expression, if the result of that expression is 2?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">&gt;&gt;</span><span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 4",
            "c) 2",
            "d) 1"
        ],
        "Answer": "Answer: a\nExplanation: When the value of x is equal to 8 (1000), then x>>2 (bitwise right shift) yields the value 0010, which is equal to 2. Hence the value of x is 8."
    },
    {
        "id": 63,
        "Question": "4. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"nu0\">1011</span><span class=\"br0\">)</span>?</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1011",
            "b) 11",
            "c) 13",
            "d) 1101"
        ],
        "Answer": "Answer: a\nExplanation: The result of the expression shown will be 1011. This is because we have not specified the base in this expression. Hence it automatically takes the base as 10."
    },
    {
        "id": 64,
        "Question": " To find the decimal value of 1111, that is 15, we can use the function:",
        "Options": [
            "a) int(1111,10)",
            "b) int(‘1111’,10)",
            "c) int(1111,2)",
            "d) int(‘1111’,2)"
        ],
        "Answer": "Answer: d\nExplanation: The expression int(‘1111’,2) gives the result 15. The expression int(‘1111’, 10) will give the result 1111."
    },
    {
        "id": 65,
        "Question": "6. What will be the output of the following Python expression if x=15 and y=12?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x &amp; y</pre></div></div></div></div></div></div>",
        "Options": [
            "a) b1101",
            "b) 0b1101",
            "c) 12",
            "d) 1101"
        ],
        "Answer": "Answer: c\nExplanation: The symbol ‘&’ represents bitwise AND. This gives 1 if both the bits are equal to 1, else it gives 0. The binary form of 15 is 1111 and that of 12 is 1100. Hence on performing the bitwise AND operation, we get 1100, which is equal to 12."
    },
    {
        "id": 66,
        "Question": "Which of the following expressions results in an error?",
        "Options": [
            "a) int(1011)",
            "b) int(‘1011’,23)",
            "c) int(1011,2)",
            "d) int(‘1011’)"
        ],
        "Answer": "Answer: c\nExplanation: The expression int(1011,2) results in an error. Had we written this expression as int(‘1011’,2), then there would not be an error."
    },
    {
        "id": 67,
        "Question": " Which of the following represents the bitwise XOR operator?",
        "Options": [
            "a) &",
            "b) ^",
            "c) |",
            "d) !"
        ],
        "Answer": "Answer: b\nExplanation: The ^ operator represent bitwise XOR operation. &: bitwise AND, | : bitwise OR and ! represents bitwise NOT."
    },
    {
        "id": 68,
        "Question": "9. What is the value of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">bin<span class=\"br0\">(</span><span class=\"nu0\">0x8</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘0bx1000’",
            "b) 8",
            "c) 1000",
            "d) ‘0b1000’"
        ],
        "Answer": "Answer: d\nExplanation: The prefix 0x specifies that the value is hexadecimal in nature. When we convert this hexadecimal value to binary form, we get the result as: ‘0b1000’."
    },
    {
        "id": 69,
        "Question": "10. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">0x35</span> | <span class=\"nu0\">0x75</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 115",
            "b) 116",
            "c) 117",
            "d) 118"
        ],
        "Answer": "Answer: c\nExplanation: The binary value of 0x35 is 110101 and that of 0x75 is 1110101. On OR-ing these two values we get the output as: 1110101, which is equal to 117. Hence the result of the above expression is 117."
    },
    {
        "id": 70,
        "Question": "The one’s complement of 110010101 is:",
        "Options": [
            "a) 001101010",
            "b) 110010101",
            "c) 001101011",
            "d) 110010100"
        ],
        "Answer": "Answer: b\nExplanation: In most cases the value of two’s complement is different from the original value. However, there are cases in which the two’s complement value may be equal to the original value. For example, the two’s complement of 10000000 is also equal to 10000000. Hence the statement is false."
    },
    {
        "id": 71,
        "Question": "Bitwise _________ gives 1 if either of the bits is 1 and 0 when both of the bits are 1.",
        "Options": [
            "a) OR",
            "b) AND",
            "c) XOR",
            "d) NOT"
        ],
        "Answer": "Answer: a\nExplanation: The one’s complement of a value is obtained by simply changing all the 1’s to 0’s and all the 0’s to 1’s. Hence the one’s complement of 110010101 is 001101010."
    },
    {
        "id": 72,
        "Question": "4. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">4</span>^<span class=\"nu0\">12</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 4",
            "c) 8",
            "d) 12"
        ],
        "Answer": "Answer: c\nExplanation: Bitwise XOR gives 1 if either of the bits is 1 and 0 when both of the bits are 1."
    },
    {
        "id": 73,
        "Question": "Any odd number on being AND-ed with ________ always gives 1. Hint: Any even number on being AND-ed with this value always gives 0.",
        "Options": [
            "a) 10",
            "b) 2",
            "c) 1",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation:  ^ is the XOR operator. The binary form of 4 is 0100 and that of 12 is 1100. Therefore, 0100^1100 is 1000, which is equal to 8."
    },
    {
        "id": 74,
        "Question": "6. What will be the value of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> bin<span class=\"br0\">(</span><span class=\"nu0\">10</span>-<span class=\"nu0\">2</span><span class=\"br0\">)</span>+bin<span class=\"br0\">(</span><span class=\"nu0\">12</span>^<span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0b10000",
            "b) 0b10001000",
            "c) 0b1000b1000",
            "d) 0b10000b1000"
        ],
        "Answer": "Answer: c\nExplanation: Any odd number on being AND-ed with 1 always gives 1. Any even number on being AND-ed with this value always gives 0."
    },
    {
        "id": 75,
        "Question": "Which of the following expressions can be used to multiply a given number ‘a’ by 4?",
        "Options": [
            "a) a<<2",
            "b) a<<4",
            "c) a>>2",
            "d) a>>4"
        ],
        "Answer": "Answer: d\nExplanation: The output of bin(10-2) = 0b1000 and that of bin(12^4) is ob1000. Hence the output of the above expression is: 0b10000b1000."
    },
    {
        "id": 76,
        "Question": "8. What will be the output of the following Python code if a=10 and b =20?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"nu0\">10</span>\nb<span class=\"sy0\">=</span><span class=\"nu0\">20</span>\na<span class=\"sy0\">=</span>a^b\nb<span class=\"sy0\">=</span>a^b\na<span class=\"sy0\">=</span>a^b\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 10 20",
            "b) 10 10",
            "c) 20 10",
            "d) 20 20"
        ],
        "Answer": "Answer: a\nExplanation: Let us consider an example wherein a=2. The binary form of 2 is 0010. When we left shift this value by 2, we get 1000, the value of which is 8. Hence if we want to multiply a given number ‘a’ by 4, we can use the expression: a<<2."
    },
    {
        "id": 77,
        "Question": "What is the two’s complement of -44?",
        "Options": [
            "a) 1011011",
            "b) 11010100",
            "c) 11101011",
            "d) 10110011"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above is used to swap the contents of two memory locations using bitwise X0R operator. Hence the output of the code shown above is: 20 10."
    },
    {
        "id": 78,
        "Question": "10. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">~</span><span class=\"nu0\">100</span>?</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 101",
            "b) -101",
            "c) 100",
            "d) -100"
        ],
        "Answer": "Answer: b\nExplanation: The binary form of -44 is 00101100. The one’s complement of this value is 11010011. On adding one to this we get: 11010100 (two’s complement)."
    },
    {
        "id": 79,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"br0\">[</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"st0\">'morning'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"kw2\">bool</span><span class=\"br0\">(</span><span class=\"st0\">''</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) no output",
            "c) hello",
            "d) morning"
        ],
        "Answer": "Answer: d\nExplanation: The Boolean function returns true if the argument passed to the bool function does not amount to zero. In the first example, the string ‘False’ is passed to the function bool. This does not amount to zero and hence the output is true. In the second function, an empty list is passed to the function bool. Hence the output is false."
    },
    {
        "id": 80,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"br0\">[</span><span class=\"st0\">'f'</span><span class=\"sy0\">,</span> <span class=\"st0\">'t'</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"kw2\">bool</span><span class=\"br0\">(</span><span class=\"st0\">'spam'</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) t",
            "b) f",
            "c) No output",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The line of code shown above can be simplified to state that ‘hello’ should be printed if the argument passed to the Boolean function amounts to zero, else ‘morning’ will be printed."
    },
    {
        "id": 81,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"st0\">''</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">filter</span><span class=\"br0\">(</span><span class=\"kw2\">bool</span><span class=\"sy0\">,</span> l<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [1, 0, 2, 0, ‘hello’, ”, []] ",
            "c) [1, 0, 2, ‘hello’, ”, []] ",
            "d) [1, 2, ‘hello’]"
        ],
        "Answer": "Answer: b\nExplanation: The function not returns true if the argument amounts to false, and false if the argument amounts to true. Hence the first function returns false, and the second function returns false."
    },
    {
        "id": 82,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Truth:\n\t<span class=\"kw1\">pass</span>\nx<span class=\"sy0\">=</span>Truth<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw2\">bool</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) pass",
            "b) true",
            "c) false",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: The line of code can be translated to state that ‘f’ is printed if the argument passed to the Boolean function amount to zero. Else ‘t’ is printed. The argument given to the Boolean function in the above case is ‘spam’, which does not amount to zero. Hence the output is t."
    },
    {
        "id": 83,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span> <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">&lt;</span> -<span class=\"nu0\">9</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span>\n<span class=\"kw1\">elif</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> <span class=\"kw2\">False</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"good\"</span><span class=\"br0\">)</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"bad\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) hello",
            "c) good",
            "d) bad"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above returns a new list containing only those elements of the list l which do not amount to zero. Hence the output is: [1, 2, ‘hello’]."
    },
    {
        "id": 84,
        "Question": "Which of the following Boolean expressions is not logically equivalent to the other three?",
        "Options": [
            "a) not(-6<0 or-6>10)",
            "b) -6>=0 and -6<=10",
            "c) not(-6<10 or-6==10)",
            "d) not(-6>10 or-6==10)"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above shows two functions. In both the cases the right operand is returned. This is because each function is evaluated from left to right. Since the left operand is false, it is assumed that the right operand must be true and hence the right operand is returned in each of the above case."
    },
    {
        "id": 85,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">not</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">&lt;</span><span class=\"nu0\">20</span><span class=\"br0\">)</span> <span class=\"kw1\">and</span> <span class=\"kw1\">not</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">30</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) No output"
        ],
        "Answer": "Answer: b\nExplanation: If the truth method is not defined, the object is considered true. Hence the output of the code shown above is true."
    },
    {
        "id": 86,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">X<span class=\"sy0\">=</span>”hi”\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>“05d”%X<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 00000hi",
            "b) 000hi",
            "c) hi000",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: The code snippet shown above results in an error because the above formatting option works only if ‘X’ is a number. Since in the above case ‘X’ is a string, an error is thrown."
    },
    {
        "id": 87,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">X<span class=\"sy0\">=</span>”san-foundry”\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>“%56s”<span class=\"sy0\">,</span>X<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 56 blank spaces before san-foundry",
            "b) 56 blank spaces before san and foundry",
            "c) 56 blank spaces after san-foundry",
            "d) no change"
        ],
        "Answer": "Answer: a\nExplanation: The formatting option print(“%Ns”,X) helps us add ‘N’ number of spaces before a given string ‘X’. Hence the output for the code snippet shown above will be 56 blank spaces before the string “san-foundry”."
    },
    {
        "id": 88,
        "Question": "3. What will be the output of the following Python expression if x=456?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"%-06d\"</span>%x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 000456",
            "b) 456000",
            "c) 456",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: The expression shown above results in the output 456."
    },
    {
        "id": 89,
        "Question": "4. What will be the output of the following Python expression if X=345?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span>“%06d”%X<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 345000",
            "b) 000345",
            "c) 000000345",
            "d) 345000000"
        ],
        "Answer": "Answer: b\nExplanation: The above expression returns the output 000345. It adds the required number of zeroes before the given number in order to make the number of digits 6 (as specified in this case)."
    },
    {
        "id": 90,
        "Question": "Which of the following formatting options can be used in order to add ‘n’ blank spaces after a given string ‘S’?",
        "Options": [
            "a) print(“-ns”%S)",
            "b) print(“-ns”%S)",
            "c) print(“%ns”%S)",
            "d) print(“%-ns”%S)"
        ],
        "Answer": "Answer: d\nExplanation: In order to add ‘n’ blank spaces after a given string ‘S’, we use the formatting option:(“%-ns”%S)."
    },
    {
        "id": 91,
        "Question": "6. What will be the output of the following Python expression if X = -122?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"-%06d\"</span>%x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) -000122",
            "b) 000122",
            "c) –00122",
            "d) -00122"
        ],
        "Answer": "Answer: c\nExplanation: The given number is -122. Here the total number of digits (including the negative sign) should be 6 according to the expression. In addition to this, there is a negative sign in the given expression. Hence the output will be – -00122."
    },
    {
        "id": 92,
        "Question": "7. What will be the output of the following Python expression if the value of x is 34?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span>“%f”%x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 34.00",
            "b) 34.0000",
            "c) 34.000000",
            "d) 34.00000000"
        ],
        "Answer": "Answer: c\nExplanation: The expression shown above normally returns the value with 6 decimal points if it is not specified with any number. Hence the output of this expression will be: 34.000000 (6 decimal points)."
    },
    {
        "id": 93,
        "Question": "8. What will be the output of the following Python expression if x=56.236?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"%.2f\"</span>%x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 56.00",
            "b) 56.24",
            "c) 56.23",
            "d) 0056.236"
        ],
        "Answer": "Answer: b\nExplanation: The expression shown above rounds off the given number to the number of decimal places specified. Since the expression given specifies rounding off to two decimal places, the output of this expression will be 56.24. Had the value been x=56.234 (last digit being any number less than 5), the output would have been 56.23."
    },
    {
        "id": 94,
        "Question": "9. What will be the output of the following Python expression if x=22.19?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"%5.2f\"</span>%x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 22.1900",
            "b) 22.00000",
            "c) 22.19",
            "d) 22.20"
        ],
        "Answer": "Answer: c\nExplanation: The output of the expression above will be 22.19. This expression specifies that the total number of digits (including the decimal point) should be 5, rounded off to two decimal places."
    },
    {
        "id": 95,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'%d %s %g you'</span> %<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"nu0\">4.0</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 1 hello you 4.0",
            "c) 1 hello 4 you",
            "d) 1 4 hello you"
        ],
        "Answer": "Answer: c\nExplanation: In the snippet of code shown above, three values are inserted into the target string. When we insert more than one value, we should group the values on the right in a tuple. The % formatting expression operator expects either a single item or a tuple of one or more items on its right side."
    },
    {
        "id": 96,
        "Question": "The output of which of the codes shown below will be: “There are 4 blue birds.”?",
        "Options": [
            "a) ‘There are %g %d birds.’ %4 %blue",
            "b) ‘There are %d %s birds.’ %(4, blue)",
            "c) ‘There are %s %d birds.’ %[4, blue] ",
            "d) ‘There are %d %s birds.’ 4, blue"
        ],
        "Answer": "Answer: b\nExplanation: The code ‘There are %d %s birds.’ %(4, blue) results in the output: There are 4 blue birds. When we insert more than one value, we should group the values on the right in a tuple."
    },
    {
        "id": 97,
        "Question": "3. What will be the output of the python code shown below for various styles of format specifiers?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">1234</span>\nres<span class=\"sy0\">=</span><span class=\"st0\">'integers:...%d...%-6d...%06d'</span> %<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> x<span class=\"br0\">)</span>\nres</pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘integers:…1234…1234  …001234’",
            "b) ‘integers…1234…1234…123400’",
            "c) ‘integers:…  1234…1234…001234’",
            "d) ‘integers:…1234…1234…001234’"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above prints 1234 for the format specified %d, ‘1234  ’ for the format specifier %-6d (minus ‘-‘ sign signifies left justification), and 001234 for the format specifier %06d. Hence the output of this code is: ‘integers:…1234…1234  …001234’"
    },
    {
        "id": 98,
        "Question": "4. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">3.3456789</span>\n<span class=\"st0\">'%f | %e | %g'</span> %<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) ‘3.3456789 | 3.3456789+00 | 3.345678’",
            "c) ‘3.345678 | 3.345678e+0 | 3.345678’",
            "d) ‘3.345679 | 3.345679e+00 | 3.34568’"
        ],
        "Answer": "Answer: d\nExplanation: The %f %e and %g format specifiers represent floating point numbers in different ways.  %e and %E are the same, except that the exponent is in lowercase. %g chooses the format by number content. Hence the output of this code is: ‘3.345679 | 3.345679e+00 | 3.34568’."
    },
    {
        "id": 99,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">3.3456789</span>\n<span class=\"st0\">'%-6.2f | %05.2f | %+06.1f'</span> %<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘3.35   | 03.35 | +003.3’",
            "b) ‘3.3456789 | 03.3456789 | +03.3456789’",
            "c) Error",
            "d) ‘3.34 | 03.34 | 03.34+’"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above rounds the floating point value to two decimal places. In this code, a variety of addition formatting features such as zero padding, total field width etc. Hence the output of this code is: ‘3.35   | 03.35 | +003.3’."
    },
    {
        "id": 100,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">3.3456789</span>\n<span class=\"st0\">'%s'</span> %x<span class=\"sy0\">,</span> <span class=\"kw2\">str</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) (‘3.3456789’, ‘3.3456789’)",
            "c) (3.3456789, 3.3456789)",
            "d) (‘3.3456789’, 3.3456789)"
        ],
        "Answer": "Answer: b\nExplanation: We can simply convert strings with a %s format expression or the str built-in function. Both of these methods have been shown in this code. Hence the output is: ) (‘3.3456789’, ‘3.3456789’)"
    },
    {
        "id": 101,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'%(qty)d more %(food)s'</span> %<span class=\"br0\">{</span><span class=\"st0\">'qty'</span>:<span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"st0\">'food'</span>: <span class=\"st0\">'spam'</span><span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) No output",
            "c) ‘1 more foods’",
            "d) ‘1 more spam’"
        ],
        "Answer": "Answer: d\nExplanation: String formatting also allows conversion targets on the left to refer to the keys in a dictionary coded on the right and fetch the corresponding values. In the code shown above, (qty) and (food) in the format string on the left refers to keys in the dictionary literal on the right and fetch their assorted values. Hence the output of the code shown above is: 1 more spam."
    },
    {
        "id": 102,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"st0\">'hello'</span>\nq<span class=\"sy0\">=</span><span class=\"nu0\">10</span>\n<span class=\"kw2\">vars</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {‘a’ : ‘hello’, ‘q’ : 10,  ……..plus built-in names set by Python….}",
            "b) {……Built in names set by Python……}",
            "c) {‘a’ : ‘hello’, ‘q’ : 10}",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The built in function vars() returns a dictionary containing all the variables that exist in the place. Hence the output of the code shown above is: {‘a’ : ‘hello’, ‘q’ : 10,  ……..plus built-in names set by Python….}"
    },
    {
        "id": 103,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"st0\">'{0}, {1}, and {2}'</span>\ns.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"st0\">'good'</span><span class=\"sy0\">,</span> <span class=\"st0\">'morning'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘hello good and morning’",
            "b) ‘hello, good, morning’",
            "c) ‘hello, good, and morning’",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: Within the subject string, curly braces designate substitution targets and arguments to be inserted either by position or keyword. Hence the output of the code shown above:’hello, good,and morning’."
    },
    {
        "id": 104,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"st0\">'%s, %s &amp; %s'</span>\ns%<span class=\"br0\">(</span><span class=\"st0\">'mumbai'</span><span class=\"sy0\">,</span> <span class=\"st0\">'kolkata'</span><span class=\"sy0\">,</span> <span class=\"st0\">'delhi'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) mumbai kolkata & delhi",
            "b) Error",
            "c) No output",
            "d) ‘mumbai, kolkata & delhi’"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, the format specifier %s is replaced by the designated substitution. Hence the output of the code shown above is:  ‘mumbai, kolkata & delhi’."
    },
    {
        "id": 105,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">t <span class=\"sy0\">=</span> <span class=\"st0\">'%(a)s, %(b)s, %(c)s'</span>\nt % <span class=\"kw2\">dict</span><span class=\"br0\">(</span>a<span class=\"sy0\">=</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"st0\">'world'</span><span class=\"sy0\">,</span> c<span class=\"sy0\">=</span><span class=\"st0\">'universe'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘hello, world, universe’",
            "b) ‘hellos, worlds, universes’",
            "c) Error",
            "d) hellos, world, universe"
        ],
        "Answer": "Answer: a\nExplanation: Within the subject string, curly braces represent substitution targets and arguments to be inserted. Hence the output of the code shown above:\n‘hello, world, universe’."
    },
    {
        "id": 106,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'{a}, {0}, {abc}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> a<span class=\"sy0\">=</span><span class=\"nu0\">2.5</span><span class=\"sy0\">,</span> abc<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) ‘2.5, 10, [1, 2]’",
            "c) 2.5, 10, 1, 2",
            "d) ’10, 2.5, [1, 2]’"
        ],
        "Answer": "Answer: b\nExplanation: Since we have specified that the order of the output be: {a}, {0}, {abc}, hence the value of associated with {a} is printed first followed by that of {0} and {abc}. Hence the output of the code shown above is: ‘2.5, 10, [1, 2]’."
    },
    {
        "id": 107,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'{0:.2f}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1.234</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘1’",
            "b) ‘1.234’",
            "c) ‘1.23’",
            "d) ‘1.2’"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above displays the string method to round off a given decimal number to two decimal places. Hence the output of the code is: ‘1.23’."
    },
    {
        "id": 108,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'%x %d'</span> %<span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"sy0\">,</span> <span class=\"nu0\">255</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘ff, 255’",
            "b) ‘255, 255’",
            "c) ‘15f, 15f’",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above converts the given arguments to hexadecimal and decimal values and prints the result. This is done using the format specifiers %x and %d respectively. Hence the output of the code shown above is: ‘ff, 255’."
    },
    {
        "id": 109,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"st0\">'HELLO'</span><span class=\"br0\">)</span>\n<span class=\"st0\">'first={0[0]}, third={0[2]}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘first=H, third=L’",
            "b) ‘first=0, third=2’",
            "c) Error",
            "d) ‘first=0, third=L’"
        ],
        "Answer": "Answer: a\nExplanation: In the code shown above, the value for first is substituted by l[0], that is H and the value for third is substituted by l[2], that is L. Hence the output of the code shown above is: ‘first=H, third=L’. The list l= [‘H’, ‘E’, ‘L’, ‘L’, ‘O’]."
    },
    {
        "id": 110,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"st0\">'HELLO'</span><span class=\"br0\">)</span>\np<span class=\"sy0\">=</span>l<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> l<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> l<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"nu0\">3</span><span class=\"br0\">]</span>\n<span class=\"st0\">'a={0}, b={1}, c={2}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>*p<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) “a=’H’, b=’O’, c=(E, L)”",
            "c) “a=H, b=O, c=[‘E’, ‘L’]”",
            "d) Junk value"
        ],
        "Answer": "Answer: c\nExplanation: In the code shown above, the value for a is substituted by l[0], that is ‘H’, the value of b is substituted by l[-1], that is ‘O’ and the value for c is substituted by l[1:3]. Here the use of *p is to unpack a tuple items into individual function arguments."
    },
    {
        "id": 111,
        "Question": "The formatting method {1:<10} represents the ___________ positional argument, _________ justified in a 10 character wide field.",
        "Options": [
            "a) first, right",
            "b) second, left",
            "c) first, left",
            "d) second, right"
        ],
        "Answer": "Answer: b\nExplanation: The formatting method {1:<10} represents the second positional argument, left justified in a 10 character wide field."
    },
    {
        "id": 112,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">hex</span><span class=\"br0\">(</span><span class=\"nu0\">255</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"st0\">'FF'</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">0xFF</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0xFF, 255, 16, 255]",
            "b) (‘0xff’, 155, 16, 255)",
            "c) Error",
            "d) (‘0xff’, 255, 255)"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above converts the value 255 into hexadecimal, that is, 0xff. The value ‘FF’  into integer. Hence the output of the code shown is: (‘0xff’, 255, 255)."
    },
    {
        "id": 113,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'{a}{b}{a}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>a<span class=\"sy0\">=</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> b<span class=\"sy0\">=</span><span class=\"st0\">'world'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘hello world’",
            "b) ‘hello’ ‘world’ ‘hello’",
            "c) ‘helloworldhello’",
            "d) ‘hello’ ‘hello’ ‘world’"
        ],
        "Answer": "Answer: a\nExplanation: The output of both of the codes shown above is ‘0b1111111111111111’. Hence the statement is true."
    },
    {
        "id": 114,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> D<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span>p<span class=\"sy0\">=</span><span class=\"st0\">'san'</span><span class=\"sy0\">,</span> q<span class=\"sy0\">=</span><span class=\"st0\">'foundry'</span><span class=\"br0\">)</span>\n<span class=\"st0\">'{p}{q}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>**D<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) sanfoundry",
            "c) san foundry",
            "d) {‘san’, ‘foundry’}"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above prints the values substituted for a, b, a, in the same order. This operation is performed using the format function. Hence the output of the code is: ‘helloworldhello’."
    },
    {
        "id": 115,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'The {} side {1} {2}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'bright'</span><span class=\"sy0\">,</span> <span class=\"st0\">'of'</span><span class=\"sy0\">,</span> <span class=\"st0\">'life'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) ‘The bright side of life’",
            "c) ‘The {bright} side {of} {life}’",
            "d) No output"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above prints the values substituted for p and q in the same order. Note that there is no blank space between p and q. Hence the output is: sanfoundry."
    },
    {
        "id": 116,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'{0:f}, {1:2f}, {2:05.2f}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1.23456</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.23456</span><span class=\"sy0\">,</span> <span class=\"nu0\">1.23456</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) ‘1.234560, 1.22345, 1.23’",
            "c) No output",
            "d) ‘1.234560, 1.234560, 01.23’"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above results in an error. This is because we have switched from automatic field numbering to manual field numbering, that is, from {} to {1}. Hence this code results in an error."
    },
    {
        "id": 117,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'%.2f%s'</span> % <span class=\"br0\">(</span><span class=\"nu0\">1.2345</span><span class=\"sy0\">,</span> <span class=\"nu0\">99</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘1.2345’, ‘99’",
            "b) ‘1.2399’",
            "c) ‘1.234599’",
            "d) 1.23, 99"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, various formatting options are displayed using the format option. Hence the output of this code is: ‘1.234560, 1.234560, 01.23’"
    },
    {
        "id": 118,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"st0\">'%s'</span> %<span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"nu0\">1.23</span><span class=\"sy0\">,</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘(1.23,)’",
            "b) 1.23,",
            "c) (,1.23)",
            "d) ‘1.23’"
        ],
        "Answer": "Answer: b\nExplanation: In this code, we must notice that since multiple values haven been given, they should be enclosed in a tuple. Since the formatting format is %.2f, the value 1.2345 is reduced to two decimal places. Hence the output of the code shown above: ‘1.2399’."
    },
    {
        "id": 119,
        "Question": "12. What will be the output of the following two codes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i. <span class=\"st0\">'{0}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">4.56</span><span class=\"br0\">)</span>\nii. <span class=\"st0\">'{0}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">4.56</span><span class=\"sy0\">,</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘4.56’, ‘4.56,’",
            "b) ‘4.56’, ‘[4.56]’",
            "c) 4.56, [4.56,]",
            "d) 4.56, [4.56,]"
        ],
        "Answer": "Answer: a\nExplanation: The formatting expression accepts either a single substitution value, or a tuple of one or more items. Since single item can be given either by itself or within the tuple, a tuple to be formatted must be provided as a tested tuple. Hence the output of the code is: >>> ‘%s’ %((1.23,),)."
    },
    {
        "id": 120,
        "Question": "2. In the following Python code, which function is the decorator?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> mk<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> mk1<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Decorated\"</span><span class=\"br0\">)</span>\n        x<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> mk1\n<span class=\"kw1\">def</span> mk2<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Ordinary\"</span><span class=\"br0\">)</span>\np <span class=\"sy0\">=</span> mk<span class=\"br0\">(</span>mk2<span class=\"br0\">)</span>\np<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) p()",
            "b) mk()",
            "c) mk1()",
            "d) mk2()"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above first prints the word “Decorated” and then “ordinary”. Hence the output of this code is:\nDecorated\nOrdinary."
    },
    {
        "id": 121,
        "Question": "The ______ symbol along with the name of the decorator function can be placed above the definition of the function to be decorated works as an alternate way for decorating a function.",
        "Options": [
            "a) #",
            "b) $",
            "c) @",
            "d) &"
        ],
        "Answer": "Answer: b\nExplanation: In the code shown above, the function mk() is the decorator. The function which is getting decorated is mk2(). The return function is given the name p()."
    },
    {
        "id": 122,
        "Question": "9. The following python code can work with ____ parameters.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>*args<span class=\"sy0\">,</span> **kwargs<span class=\"br0\">)</span>:\n           <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Sanfoundry\"</span><span class=\"br0\">)</span>\n           <span class=\"kw1\">return</span> x<span class=\"br0\">(</span>*args<span class=\"sy0\">,</span> **kwargs<span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> f1</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 1",
            "c) any number of",
            "d) 0"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above returns the address on the function ordi first, after which the word “Ordinary” is printed. Hence the output of this code is:\nAddress\nOrdinary."
    },
    {
        "id": 123,
        "Question": "12. Identify the decorator in the snippet of code shown below.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> sf<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n     <span class=\"kw1\">pass</span>\nsf <span class=\"sy0\">=</span> mk<span class=\"br0\">(</span>sf<span class=\"br0\">)</span>\n<span class=\"sy0\">@</span>f\n<span class=\"kw1\">def</span> sf<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n     <span class=\"kw1\">return</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) @f",
            "b) f",
            "c) sf()",
            "d) mk"
        ],
        "Answer": "Answer: a\nExplanation: The @ symbol can be used as an alternate way to specify a function that needs to be decorated. The output of the codes shown above is the same. Hence they are equivalent. Therefore this statement is true."
    },
    {
        "id": 124,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"sy0\">@</span><span class=\"kw2\">staticmethod</span>\n    <span class=\"kw1\">def</span> a<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\nA.<span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Warning",
            "c) 100",
            "d) No output"
        ],
        "Answer": "Answer: c\nExplanation: The output of f(0, 2) is 0, since o%2 is equal to 0. The output of the f(2, 0) is a Zero Division Error. We can make use of decorators in order to avoid this error."
    },
    {
        "id": 125,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> d<span class=\"br0\">(</span>f<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> n<span class=\"br0\">(</span>*args<span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'$'</span> + <span class=\"kw2\">str</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span>*args<span class=\"br0\">)</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> n\n<span class=\"sy0\">@</span>d\n<span class=\"kw1\">def</span> p<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> t<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> a + a*t \n<span class=\"kw1\">print</span><span class=\"br0\">(</span>p<span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 100",
            "b) $100",
            "c) $0",
            "d) 0"
        ],
        "Answer": "Answer: a\nExplanation: In the code shown above, we have used a decorator in order to avoid the Zero Division Error. Hence the output of this code is:\n    hello\n    NO\n"
    },
    {
        "id": 126,
        "Question": "15. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> c<span class=\"br0\">(</span>f<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> inner<span class=\"br0\">(</span>*args<span class=\"sy0\">,</span> **kargs<span class=\"br0\">)</span>:\n        inner.<span class=\"me1\">co</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n        <span class=\"kw1\">return</span> f<span class=\"br0\">(</span>*args<span class=\"sy0\">,</span> **kargs<span class=\"br0\">)</span>\n    inner.<span class=\"me1\">co</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n    <span class=\"kw1\">return</span> inner\n<span class=\"sy0\">@</span>c\n<span class=\"kw1\">def</span> fnc<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\n<span class=\"kw1\">if</span> __name__ <span class=\"sy0\">==</span> <span class=\"st0\">'__main__'</span>:\n    fnc<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    fnc<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    fnc<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>fnc.<span class=\"me1\">co</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 3",
            "c) 0",
            "d) 1"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above uses multiple decorators. The output of this code is:\n    *****\n    %%%%%\n    hello\n    %%%%%\n    *****\n"
    },
    {
        "id": 127,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘cd’] ",
            "b) [‘AB’, ‘CD’] ",
            "c) [None, None] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The function upper() does not modify a string in place, it returns a new string which isn’t being stored anywhere."
    },
    {
        "id": 128,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    x.<span class=\"me1\">append</span><span class=\"br0\">(</span>i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘AB’, ‘CD’] ",
            "b) [‘ab’, ‘cd’, ‘AB’, ‘CD’] ",
            "c) [‘ab’, ‘cd’] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The loop does not terminate as new elements are being added to the list in each iteration."
    },
    {
        "id": 129,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%<span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n&nbsp;\n    i + <span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2",
            "b) 1 2 3",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SyntaxError, there shouldn’t be a space between + and = in +=."
    },
    {
        "id": 130,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%0O7 <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4 5 6",
            "b) 1 2 3 4 5 6 7",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Control exits the loop when i becomes 7."
    },
    {
        "id": 131,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%0O11 <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 5 6 7 8 9 10",
            "b) 5 6 7 8",
            "c) 5 6",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: 0O11 is an octal number."
    },
    {
        "id": 132,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%0O9 <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 5 6 7 8",
            "b) 5 6 7 8 9",
            "c) 5 6 7 8 9 10 11 12 13 14 15 ….",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: 9 isn’t allowed in an octal number."
    },
    {
        "id": 133,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%<span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 1 2",
            "c) 1 2 3 4 5 6 …",
            "d) 1 3 5 7 9 11 …"
        ],
        "Answer": "Answer: d\nExplanation: The loop does not terminate since i is never an even number."
    },
    {
        "id": 134,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">if</span> i%<span class=\"nu0\">3</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2 4 6 8 10 …",
            "b) 2 4",
            "c) 2 3",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The numbers 2 and 4 are printed. The next value of i is 6 which is divisible by 3 and hence control exits the loop."
    },
    {
        "id": 135,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">False</span>:\n    <span class=\"kw1\">if</span> i%<span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">2</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 1 3 5 7 …",
            "c) 1 2 3 4 …",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Control does not enter the loop because of False."
    },
    {
        "id": 136,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">True</span> <span class=\"sy0\">=</span> <span class=\"kw2\">False</span>\n<span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">True</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">break</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: SyntaxError, True is a keyword and it’s value cannot be changed."
    },
    {
        "id": 137,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">while</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">if</span> i <span class=\"sy0\">==</span> <span class=\"nu0\">3</span>:\n        <span class=\"kw1\">break</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 0",
            "b) 0 1 2",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The else part is not executed if control breaks out of the loop."
    },
    {
        "id": 138,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">while</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 0",
            "b) 0 1 2 0",
            "c) 0 1 2",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The else part is executed when the condition in the while statement is false."
    },
    {
        "id": 139,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d e f",
            "b) abcdef",
            "c) i i i i i i …",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: NameError, i is not defined."
    },
    {
        "id": 140,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"i\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) i i i i i i …",
            "c) a b c d e f",
            "d) abcdef"
        ],
        "Answer": "Answer: a\nExplanation: “i” is not in “abcdef”."
    },
    {
        "id": 141,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) i i i i i i …",
            "c) a a a a a a …",
            "d) a b c d e f"
        ],
        "Answer": "Answer: c\nExplanation: As the value of i or x isn’t changing, the condition will always evaluate to True."
    },
    {
        "id": 142,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'i'</span><span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) no output",
            "b) i i i i i i …",
            "c) a a a a a a …",
            "d) a b c d e f"
        ],
        "Answer": "Answer: b\nExplanation: Here i i i i i … printed continuously because as the value of i or x isn’t changing, the condition will always evaluate to True. But also here we use a citation marks on “i”, so, here i treated as a string, not like a variable."
    },
    {
        "id": 143,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    x <span class=\"sy0\">=</span> x<span class=\"br0\">[</span>:-<span class=\"nu0\">1</span><span class=\"br0\">]</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) i i i i i i",
            "b) a a a a a a",
            "c) a a a a a",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The string x is being shortened by one character in each iteration."
    },
    {
        "id": 144,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x<span class=\"br0\">[</span>:-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a a a a a",
            "b) a a a a a a",
            "c) a a a a a a …",
            "d) a"
        ],
        "Answer": "Answer: c\nExplanation: String x is not being altered and i is in x[:-1]."
    },
    {
        "id": 145,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x:\n    x <span class=\"sy0\">=</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a a a a a a",
            "b) a",
            "c) no output",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The string x is being shortened by one character in each iteration."
    },
    {
        "id": 146,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">\"abcdef\"</span>\ni <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span>\n<span class=\"kw1\">while</span> i <span class=\"kw1\">in</span> x<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a a a a a a",
            "b) a",
            "c) no output",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: i is not in x[1:]."
    },
    {
        "id": 147,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    x.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a B C D",
            "b) a b c d",
            "c) A B C D",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: Changes do not happen in-place, rather a new instance of the string is returned."
    },
    {
        "id": 148,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) A B C D",
            "c) a B C D",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The instance of the string returned by upper() is being printed."
    },
    {
        "id": 149,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) 0 1 2 3",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: range(str) is not allowed."
    },
    {
        "id": 150,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) 0 1 2 3",
            "c) error",
            "d) 1 2 3 4"
        ],
        "Answer": "Answer: b\nExplanation: i takes values 0, 1, 2 and 3."
    },
    {
        "id": 151,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) 0 1 2 3",
            "c) error",
            "d) 1 2 3 4"
        ],
        "Answer": "Answer: c\nExplanation: Objects of type int have no attribute upper()."
    },
    {
        "id": 152,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) 0 1 2 3",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Objects of type int have no attribute upper()."
    },
    {
        "id": 153,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    x<span class=\"br0\">[</span>i<span class=\"br0\">]</span>.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abcd",
            "b) ABCD",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Changes do not happen in-place, rather a new instance of the string is returned."
    },
    {
        "id": 154,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    i<span class=\"br0\">[</span>x<span class=\"br0\">]</span>.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abcd",
            "b) ABCD",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Objects of type int aren’t subscriptable. However, if the statement was x[i], an error would not have been thrown."
    },
    {
        "id": 155,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    x <span class=\"sy0\">=</span> <span class=\"st0\">'a'</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) abcd abcd abcd",
            "c) a a a a",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: range() is computed only at the time of entering the loop."
    },
    {
        "id": 156,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\n    x <span class=\"sy0\">=</span> <span class=\"st0\">'a'</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) abcd abcd abcd abcd",
            "c) a a a a",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: abcd a a a is the output as x is modified only after ‘abcd’ has been printed once."
    },
    {
        "id": 157,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">123</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3",
            "b) 123",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Objects of type int are not iterable."
    },
    {
        "id": 158,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> d:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Loops over the keys of the dictionary."
    },
    {
        "id": 159,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span> y <span class=\"kw1\">in</span> d:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Error, objects of type int aren’t iterable."
    },
    {
        "id": 160,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x<span class=\"sy0\">,</span> y <span class=\"kw1\">in</span> d.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Loops over key, value pairs."
    },
    {
        "id": 161,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d.<span class=\"me1\">keys</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>d<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Loops over the keys and prints the values."
    },
    {
        "id": 162,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Loops over the values."
    },
    {
        "id": 163,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span>: <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span>: <span class=\"st0\">'b'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>: <span class=\"st0\">'c'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>d<span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) a b c",
            "c) 0 a 1 b 2 c",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Causes a KeyError."
    },
    {
        "id": 164,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) None None None",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Objects of type set have no attribute values."
    },
    {
        "id": 165,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) {0, 1, 2} {0, 1, 2} {0, 1, 2}",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Loops over the elements of the set and prints them."
    },
    {
        "id": 166,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">d <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> d:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>d.<span class=\"me1\">add</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) 0 1 2 0 1 2 0 1 2 …",
            "c) None None None",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Variable x takes the values 0, 1 and 2. set.add() returns None which is printed."
    },
    {
        "id": 167,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) no output",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: range(0) is empty."
    },
    {
        "id": 168,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0 1.0",
            "b) 0 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Object of type float cannot be interpreted as an integer."
    },
    {
        "id": 169,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"nu0\">2.0</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0 1.0",
            "b) 0 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: range(int(2.0)) is the same as range(2)."
    },
    {
        "id": 170,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"st0\">'inf'</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0 0.1 0.2 0.3 …",
            "b) 0 1 2 3 …",
            "c) 0.0 1.0 2.0 3.0 …",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Error, objects of type float cannot be interpreted as an integer."
    },
    {
        "id": 171,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"st0\">'inf'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0 0.1 0.2 0.3 …",
            "b) 0 1 2 3 …",
            "c) 0.0 1.0 2.0 3.0 …",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: OverflowError, cannot convert float infinity to integer."
    },
    {
        "id": 172,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">[</span>::-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4",
            "b) 4 3 2 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: [::-1] reverses the list."
    },
    {
        "id": 173,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">reversed</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"st0\">'abcd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) d c b a",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: ‘ ‘.join(reversed(list(‘abcd’))) reverses a string."
    },
    {
        "id": 174,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">'abcd'</span><span class=\"br0\">[</span>::-<span class=\"nu0\">1</span><span class=\"br0\">]</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) a b c d",
            "b) d c b a",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: [::-1] reverses the string."
    },
    {
        "id": 175,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">''</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) None",
            "b) (nothing is printed)",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The string does not have any character to loop over."
    },
    {
        "id": 176,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    x +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 4 …",
            "b) 0 1",
            "c) 3 4",
            "d) 0 1 2 3"
        ],
        "Answer": "Answer: c\nExplanation: Variable x is incremented and printed twice."
    },
    {
        "id": 177,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    x -<span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 4 …",
            "b) 0 -2",
            "c) 0",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The loop is entered twice."
    },
    {
        "id": 178,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> i <span class=\"sy0\">==</span> <span class=\"nu0\">5</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Here\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 4 Here",
            "b) 0 1 2 3 4 5 Here",
            "c) 0 1 2 3 4",
            "d) 1 2 3 4 5"
        ],
        "Answer": "Answer: c\nExplanation: The else part is executed if control doesn’t break out of the loop."
    },
    {
        "id": 179,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> i <span class=\"sy0\">==</span> <span class=\"nu0\">5</span>:\n        <span class=\"kw1\">break</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Here\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3 4 Here",
            "b) 0 1 2 3 4 5 Here",
            "c) 0 1 2 3 4",
            "d) 1 2 3 4 5"
        ],
        "Answer": "Answer: a\nExplanation: The else part is executed if control doesn’t break out of the loop."
    },
    {
        "id": 180,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) error",
            "c) 0 1 2 0 1 2",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The first statement creates a generator object."
    },
    {
        "id": 181,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> x:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2",
            "b) error",
            "c) 0 1 2 0 1 2",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: We can loop over a generator object only once."
    },
    {
        "id": 182,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">string</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"my name is x\"</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw3\">string</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) m, y,  , n, a, m, e,  , i, s,  , x,",
            "b) m, y,  , n, a, m, e,  , i, s,  , x",
            "c) my, name, is, x,",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: Variable i takes the value of one character at a time."
    },
    {
        "id": 183,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">string</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"my name is x\"</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw3\">string</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) m, y,  , n, a, m, e,  , i, s,  , x,",
            "b) m, y,  , n, a, m, e,  , i, s,  , x",
            "c) my, name, is, x,",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: Variable i takes the value of one word at a time."
    },
    {
        "id": 184,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> a<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">in</span> a:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>-<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3",
            "b) 0 1 2 2",
            "c) 3 3 3 3",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The value of a[-1] changes in each iteration."
    },
    {
        "id": 185,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"kw1\">in</span> a:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0 1 2 3",
            "b) 0 1 2 2",
            "c) 3 3 3 3",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: The value of a[0] changes in each iteration. Since the first value that it takes is itself, there is no visible error in the current example."
    },
    {
        "id": 186,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>\ni <span class=\"sy0\">=</span> -<span class=\"nu0\">2</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> a:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    i +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) -2 -1",
            "b) 0",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SyntaxError, not in isn’t allowed in for loops."
    },
    {
        "id": 187,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">string</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"my name is x\"</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw3\">string</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span>i<span class=\"sy0\">,</span> end<span class=\"sy0\">=</span><span class=\"st0\">\", \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) m, y,  , n, a, m, e,  , i, s,  , x,",
            "b) m, y,  , n, a, m, e,  , i, s,  , x",
            "c) my, name, is, x,",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: Variable i takes the value of one character at a time."
    },
    {
        "id": 188,
        "Question": "1. What will be the output of the following Python statement?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span><span class=\"st0\">\"a\"</span><span class=\"sy2\">+</span><span class=\"st0\">\"bc\"</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) bc",
            "c) bca",
            "d) abc"
        ],
        "Answer": " Answer: d\nExplanation: + operator is concatenation operator. "
    },
    {
        "id": 189,
        "Question": "2. What will be the output of the following Python statement?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span><span class=\"st0\">\"abcd\"</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy4\">:</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) ab",
            "c) cd",
            "d) dc"
        ],
        "Answer": " Answer: c\nExplanation: Slice operation is performed on string. "
    },
    {
        "id": 190,
        "Question": "The output of executing string.ascii_letters can also be achieved by:",
        "Options": [
            "a) string.ascii_lowercase_string.digits",
            "b) string.ascii_lowercase+string.ascii_uppercase",
            "c) string.letters",
            "d) string.lowercase_string.uppercase"
        ],
        "Answer": " Answer: b\nExplanation: Execute in shell and check. "
    },
    {
        "id": 191,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span> str1 <span class=\"sy1\">=</span> <span class=\"st0\">'hello'</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span> str2 <span class=\"sy1\">=</span> <span class=\"st0\">','</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span> str3 <span class=\"sy1\">=</span> <span class=\"st0\">'world'</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span> str1<span class=\"br0\">[</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) olleh",
            "b) hello",
            "c) h",
            "d) o"
        ],
        "Answer": " Answer: d\nExplanation: -1 corresponds to the last index."
    },
    {
        "id": 192,
        "Question": "What arithmetic operators cannot be used with strings?",
        "Options": [
            "a) +",
            "b) *",
            "c) –",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: + is used to concatenate and * is used to multiply strings."
    },
    {
        "id": 193,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print <span class=\"br0\">(</span>r<span class=\"st0\">\"<span class=\"es1\">\\n</span>hello\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a new line and hello",
            "b) \\nhello",
            "c) the letter r and then hello",
            "d) error"
        ],
        "Answer": " Answer: b\nExplanation: When prefixed with the letter ‘r’ or ‘R’ a string literal becomes a raw string and the escape sequences such as \\n are not converted. "
    },
    {
        "id": 194,
        "Question": "7. What will be the output of the following Python statement?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">'new'</span> <span class=\"st0\">'line'</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Output equivalent to print ‘new\\nline’",
            "c) newline",
            "d) new line"
        ],
        "Answer": " Answer: c\nExplanation: String literal separated by whitespace are allowed. They are concatenated."
    },
    {
        "id": 195,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>str1<span class=\"sy1\">=</span><span class=\"st0\">\"helloworld\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>str1<span class=\"br0\">[</span><span class=\"sy4\">::</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) dlrowolleh",
            "b) hello",
            "c) world",
            "d) helloworld"
        ],
        "Answer": " Answer: c\nExplanation: \\x is an escape sequence that means the following 2 digits are a hexadecimal number encoding a character."
    },
    {
        "id": 196,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><pre class=\"de1\">print<span class=\"br0\">(</span><span class=\"nu12\">0xA</span> <span class=\"sy2\">+</span> <span class=\"nu12\">0xB</span> <span class=\"sy2\">+</span> <span class=\"nu12\">0xC</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0xA0xB0xC",
            "b) Error",
            "c) 0x22",
            "d) 33"
        ],
        "Answer": " Answer: a\nExplanation: Execute in shell to verify."
    },
    {
        "id": 197,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> father<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    def __init__<span class=\"br0\">(</span>self, param<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">o1</span> <span class=\"sy1\">=</span> param</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> child<span class=\"br0\">(</span>father<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    def __init__<span class=\"br0\">(</span>self, param<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">o2</span> <span class=\"sy1\">=</span> param</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>obj <span class=\"sy1\">=</span> child<span class=\"br0\">(</span><span class=\"nu0\">22</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print <span class=\"st0\">\"%d %d\"</span> <span class=\"sy2\">%</span> <span class=\"br0\">(</span>obj.<span class=\"me1\">o1</span>, obj.<span class=\"me1\">o2</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) None None",
            "b) None 22",
            "c) 22 None",
            "d) Error is generated"
        ],
        "Answer": " Answer: d\nExplanation: self.o1 was never created. "
    },
    {
        "id": 198,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> tester<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    def __init__<span class=\"br0\">(</span>self, id<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">id</span> <span class=\"sy1\">=</span> str<span class=\"br0\">(</span>id<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        id<span class=\"sy1\">=</span><span class=\"st0\">\"224\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>temp <span class=\"sy1\">=</span> tester<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>temp.<span class=\"me1\">id</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 224",
            "b) Error",
            "c) 12",
            "d) None"
        ],
        "Answer": " Answer: c\nExplanation: Id in this case will be the attribute of the class. "
    },
    {
        "id": 199,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example <span class=\"sy1\">=</span> <span class=\"st0\">\"snow world\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">\"%s\"</span> <span class=\"sy2\">%</span> example<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy4\">:</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) wo",
            "b) world",
            "c) sn",
            "d) rl"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell and verify. "
    },
    {
        "id": 200,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example <span class=\"sy1\">=</span> <span class=\"st0\">\"snow world\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'s'</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print example</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) snow",
            "b) snow world",
            "c) Error",
            "d) snos world"
        ],
        "Answer": " Answer: c\nExplanation: Strings cannot be modified."
    },
    {
        "id": 201,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>max<span class=\"br0\">(</span><span class=\"st0\">\"what are you\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) u",
            "c) t",
            "d) y"
        ],
        "Answer": " Answer: d\nExplanation: Max returns the character with the highest ascii value."
    },
    {
        "id": 202,
        "Question": "Given a string example=”hello” what is the output of example.count(‘l’)?",
        "Options": [
            "a) 2",
            "b) 1",
            "c) None",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: l occurs twice in hello. "
    },
    {
        "id": 203,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example <span class=\"sy1\">=</span> <span class=\"st0\">\"helle\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example.<span class=\"me1\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"e\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) -1",
            "c) 1",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: Returns lowest index."
    },
    {
        "id": 204,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example <span class=\"sy1\">=</span> <span class=\"st0\">\"helle\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example.<span class=\"me1\">rfind</span><span class=\"br0\">(</span><span class=\"st0\">\"e\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 4",
            "c) 3",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: Returns highest index."
    },
    {
        "id": 205,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example<span class=\"sy1\">=</span><span class=\"st0\">\"helloworld\"</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>example<span class=\"br0\">[</span><span class=\"sy4\">::</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">startswith</span><span class=\"br0\">(</span><span class=\"st0\">\"d\"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) dlrowolleh",
            "b) True",
            "c) -1",
            "d) None"
        ],
        "Answer": " Answer: b\nExplanation: Starts with checks if the given string starts with the parameter that is passed."
    },
    {
        "id": 206,
        "Question": "To concatenate two strings to a third what statements are applicable?",
        "Options": [
            "a) s3 = s1 . s2",
            "b) s3 = s1.add(s2)",
            "c) s3 = s1.__add__(s2)",
            "d) s3 = s1 * s2"
        ],
        "Answer": " Answer: c\nExplanation: __add__ is another method that can be used for concatenation."
    },
    {
        "id": 207,
        "Question": "1. What will be the output of the following Python statement?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>chr<span class=\"br0\">(</span>ord<span class=\"br0\">(</span><span class=\"st0\">'A'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) a",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Execute in shell to verify. "
    },
    {
        "id": 208,
        "Question": "2. What will be the output of the following Python statement?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>chr<span class=\"br0\">(</span>ord<span class=\"br0\">(</span><span class=\"st0\">'b'</span><span class=\"br0\">)</span><span class=\"sy2\">+</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) b",
            "c) c",
            "d) A"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 209,
        "Question": "Which of the following statement prints hello\\example\\test.txt?",
        "Options": [
            "a) print(“hello\\example\\test.txt”)",
            "b) print(“hello\\\\example\\\\test.txt”)",
            "c) print(“hello\\”example\\”test.txt”)",
            "d) print(“hello”\\example”\\test.txt”)"
        ],
        "Answer": " Answer: b\nExplanation: \\is used to indicate that the next \\ is not an escape sequence. "
    },
    {
        "id": 210,
        "Question": "Suppose s is “\\t\\tWorld\\n”, what is s.strip()?",
        "Options": [
            "a) \\t\\tWorld\\n",
            "b) \\t\\tWorld\\n",
            "c) \\t\\tWORLD\\n",
            "d) World"
        ],
        "Answer": " Answer: d\nExplanation: Execute help(string.strip) to find details."
    },
    {
        "id": 211,
        "Question": "The format function, when applied on a string returns ___________",
        "Options": [
            "a) Error",
            "b) int",
            "c) bool",
            "d) str"
        ],
        "Answer": " Answer: d\nExplanation: Format function returns a string."
    },
    {
        "id": 212,
        "Question": "What will be the output of the “hello” +1+2+3?",
        "Options": [
            "a) hello123",
            "b) hello",
            "c) Error",
            "d) hello6"
        ],
        "Answer": " Answer: c\nExplanation: Cannot concatenate str and int objects. "
    },
    {
        "id": 213,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">\"D\"</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">\"C\"</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">\"B\"</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span><span class=\"st0\">\"A\"</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">' '</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) DCBA",
            "b) A, B, C, D",
            "c) D C B A",
            "d) D, C, B, A will be displayed on four lines"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell."
    },
    {
        "id": 214,
        "Question": "8. What will be the output of the following Python statement?(python 3.xx)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>format<span class=\"br0\">(</span><span class=\"st0\">\"Welcome\"</span>, <span class=\"st0\">\"10s\"</span><span class=\"br0\">)</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">'#'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>format<span class=\"br0\">(</span><span class=\"nu0\">111</span>, <span class=\"st0\">\"4d\"</span><span class=\"br0\">)</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">'#'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>format<span class=\"br0\">(</span><span class=\"nu16\">924.656</span>, <span class=\"st0\">\"3.2f\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a)    Welcome# 111#924.66",
            "b) Welcome#111#924.66",
            "c) Welcome#111#.66",
            "d) Welcome   # 111#924.66"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 215,
        "Question": "What will be displayed by print(ord(‘b’) – ord(‘a’))?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -1",
            "d) 2"
        ],
        "Answer": " Answer: b\nExplanation: ASCII value of b is one more than a. Hence the output of this code is 98-97, which is equal to 1."
    },
    {
        "id": 216,
        "Question": "Say s=”hello” what will be the return value of type(s)?",
        "Options": [
            "a) int",
            "b) bool",
            "c) str",
            "d) String"
        ],
        "Answer": " Answer: c\nExplanation: str is used to represent strings in python."
    },
    {
        "id": 217,
        "Question": "What is “Hello”.replace(“l”, “e”)?",
        "Options": [
            "a) Heeeo",
            "b) Heelo",
            "c) Heleo",
            "d) None"
        ],
        "Answer": " Answer: a\nExplanation: Execute in shell to verify. "
    },
    {
        "id": 218,
        "Question": "To retrieve the character at index 3 from string s=”Hello” what command do we execute (multiple answers allowed)?",
        "Options": [
            "a) s[] ",
            "b) s.getitem(3)",
            "c) s.__getitem__(3)",
            "d) s.getItem(3)"
        ],
        "Answer": " Answer:  c\nExplanation: __getitem(..) can be used to get character at index specified as parameter. "
    },
    {
        "id": 219,
        "Question": "To return the length of string s what command do we execute?",
        "Options": [
            "a) s.__len__()",
            "b) len(s)",
            "c) size(s)",
            "d) s.size()"
        ],
        "Answer": " Answer: a\nExplanation: Execute in shell to verify. "
    },
    {
        "id": 220,
        "Question": "If a class defines the __str__(self) method, for an object obj for the class, you can use which command to invoke the __str__ method.",
        "Options": [
            "a) obj.__str__()",
            "b) str(obj)",
            "c) print obj",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Execute in shell to verify."
    },
    {
        "id": 221,
        "Question": "To check whether string s1 contains another string s2, use ________",
        "Options": [
            "a) s1.__contains__(s2)",
            "b) s2 in s1",
            "c) s1.contains(s2)",
            "d) si.in(s2)"
        ],
        "Answer": " Answer: a\nExplanation: s2 in s1 works in the same way as calling the special function __contains__ ."
    },
    {
        "id": 222,
        "Question": "Suppose i is 5 and j is 4, i + j is same as ________",
        "Options": [
            "a) i.__add(j)",
            "b) i.__add__(j)",
            "c) i.__Add(j)",
            "d) i.__ADD(j)"
        ],
        "Answer": " Answer: b\nExplanation: Execute in shell to verify. "
    },
    {
        "id": 223,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Count<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    def __init__<span class=\"br0\">(</span>self, count <span class=\"sy1\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">       self.__count <span class=\"sy1\">=</span> count</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">c1 <span class=\"sy1\">=</span> Count<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">c2 <span class=\"sy1\">=</span> Count<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>id<span class=\"br0\">(</span>c1<span class=\"br0\">)</span> <span class=\"sy1\">==</span> id<span class=\"br0\">(</span>c2<span class=\"br0\">)</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">s1 <span class=\"sy1\">=</span> <span class=\"st0\">\"Good\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">s2 <span class=\"sy1\">=</span> <span class=\"st0\">\"Good\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>id<span class=\"br0\">(</span>s1<span class=\"br0\">)</span> <span class=\"sy1\">==</span> id<span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True False",
            "b) True True",
            "c) False True",
            "d) False False"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell objects cannot have same id, however in the case of strings its different."
    },
    {
        "id": 224,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">class</span> Name<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    def __init__<span class=\"br0\">(</span>self, firstName, mi, lastName<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">firstName</span> <span class=\"sy1\">=</span> firstName</pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">mi</span> <span class=\"sy1\">=</span> mi</pre></li><li class=\"li1\"><pre class=\"de1\">        self.<span class=\"me1\">lastName</span> <span class=\"sy1\">=</span> lastName</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">firstName <span class=\"sy1\">=</span> <span class=\"st0\">\"John\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">name <span class=\"sy1\">=</span> Name<span class=\"br0\">(</span>firstName, <span class=\"st0\">'F'</span>, <span class=\"st0\">\"Smith\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">firstName <span class=\"sy1\">=</span> <span class=\"st0\">\"Peter\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">name.<span class=\"me1\">lastName</span> <span class=\"sy1\">=</span> <span class=\"st0\">\"Pan\"</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>name.<span class=\"me1\">firstName</span>, name.<span class=\"me1\">lastName</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Peter Pan",
            "b) John Pan",
            "c) Peter Smith",
            "d) John Smith"
        ],
        "Answer": " Answer: b\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 225,
        "Question": "What function do you use to read a string?",
        "Options": [
            "a) input(“Enter a string”)",
            "b) eval(input(“Enter a string”))",
            "c) enter(“Enter a string”)",
            "d) eval(enter(“Enter a string”))"
        ],
        "Answer": " Answer: a\nExplanation: Execute in shell to verify."
    },
    {
        "id": 226,
        "Question": "Suppose x is 345.3546, what is format(x, “10.3f”) (_ indicates space).",
        "Options": [
            "a) __345.355",
            "b) ___345.355",
            "c) ____345.355",
            "d) _____345.354"
        ],
        "Answer": " Answer: b\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 227,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abc DEF\"</span>.<span class=\"me1\">capitalize</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abc def",
            "b) ABC DEF",
            "c) Abc def",
            "d) Abc Def"
        ],
        "Answer": "Answer: c\nExplanation: The first letter of the string is converted to uppercase and the others are converted to lowercase."
    },
    {
        "id": 228,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abc. DEF\"</span>.<span class=\"me1\">capitalize</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abc. def",
            "b) ABC. DEF",
            "c) Abc. def",
            "d) Abc. Def"
        ],
        "Answer": "Answer: c\nExplanation: The first letter of the string is converted to uppercase and the others are converted to lowercase."
    },
    {
        "id": 229,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) cd",
            "b) abcdef",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The function center() takes at least one parameter."
    },
    {
        "id": 230,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) cd",
            "b) abcdef",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The entire string is printed when the argument passed to center() is less than the length of the string."
    },
    {
        "id": 231,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'*'</span><span class=\"sy0\">,</span> <span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'*'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) * abcdef  *",
            "b) *  abcdef *",
            "c) *abcdef *",
            "d) * abcdef*"
        ],
        "Answer": "Answer: b\nExplanation: Padding is done towards the left-hand-side first when the final string is of odd length. Extra spaces are present since we haven’t overridden the value of sep."
    },
    {
        "id": 232,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'*'</span><span class=\"sy0\">,</span> <span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'*'</span><span class=\"sy0\">,</span> sep<span class=\"sy0\">=</span><span class=\"st0\">''</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) * abcdef  *",
            "b) *  abcdef *",
            "c) *abcdef *",
            "d) * abcdef*"
        ],
        "Answer": "Answer: d\nExplanation: Padding is done towards the left-hand-side first when the final string is of odd length."
    },
    {
        "id": 233,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'*'</span><span class=\"sy0\">,</span> <span class=\"st0\">\"abcde\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"st0\">'*'</span><span class=\"sy0\">,</span> sep<span class=\"sy0\">=</span><span class=\"st0\">''</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) * abcde  *",
            "b) *  abcde *",
            "c) *abcde *",
            "d) * abcde*"
        ],
        "Answer": "Answer: c\nExplanation: Padding is done towards the right-hand-side first when the final string is of even length."
    },
    {
        "id": 234,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1abcdef",
            "b) abcdef1",
            "c)  abcdef",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, the fill character must be a character, not an int."
    },
    {
        "id": 235,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"st0\">'1'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1abcdef",
            "b) abcdef1",
            "c)  abcdef",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: The character ‘1’ is used for padding instead of a space."
    },
    {
        "id": 236,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">center</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 12abcdef12",
            "b) abcdef1212",
            "c) 1212abcdef",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: The fill character must be exactly one character long."
    },
    {
        "id": 237,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'yy'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Counts the number of times the substring ‘yy’ is present in the given string."
    },
    {
        "id": 238,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'yy'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) 1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Counts the number of times the substring ‘yy’ is present in the given string, starting from position 1."
    },
    {
        "id": 239,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'yy'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) 1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Counts the number of times the substring ‘yy’ is present in the given string, starting from position 2."
    },
    {
        "id": 240,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'xyy'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) 1",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: An error will not occur if the end value is greater than the length of the string itself."
    },
    {
        "id": 241,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'xyy'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) 1",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: Counts the number of times the substring ‘xyy’ is present in the given string, starting from position 2 and ending at position 11."
    },
    {
        "id": 242,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"st0\">'xyy'</span><span class=\"sy0\">,</span> -<span class=\"nu0\">10</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 0",
            "c) 1",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: Counts the number of times the substring ‘xyy’ is present in the given string, starting from position 2 and ending at position 11."
    },
    {
        "id": 243,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abc'</span>.<span class=\"me1\">encode</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abc",
            "b) ‘abc’",
            "c) b’abc’",
            "d) h’abc’"
        ],
        "Answer": "Answer: c\nExplanation: A bytes object is returned by encode."
    },
    {
        "id": 244,
        "Question": "What is the default value of encoding in encode()?",
        "Options": [
            "a) ascii",
            "b) qwerty",
            "c) utf-8",
            "d) utf-16"
        ],
        "Answer": "Answer: c\nExplanation: The default value of encoding is utf-8."
    },
    {
        "id": 245,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">endswith</span><span class=\"br0\">(</span><span class=\"st0\">\"xyy\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) True",
            "c) 3",
            "d) 2"
        ],
        "Answer": "Answer: b\nExplanation: The function returns True if the given string ends with the specified substring."
    },
    {
        "id": 246,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"xyyzxyzxzxyy\"</span>.<span class=\"me1\">endswith</span><span class=\"br0\">(</span><span class=\"st0\">\"xyy\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) True",
            "d) False"
        ],
        "Answer": "Answer: d\nExplanation: The function returns False if the given string does not end with the specified substring."
    },
    {
        "id": 247,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"ab<span class=\"es0\">\\t</span>cd<span class=\"es0\">\\t</span>ef\"</span>.<span class=\"me1\">expandtabs</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ab  cd  ef",
            "b) abcdef",
            "c) ab\\tcd\\tef",
            "d) ab cd ef"
        ],
        "Answer": "Answer: a\nExplanation: Each \\t is converted to 8 blank spaces by default."
    },
    {
        "id": 248,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"ab<span class=\"es0\">\\t</span>cd<span class=\"es0\">\\t</span>ef\"</span>.<span class=\"me1\">expandtabs</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ab   cd   ef",
            "b) abcdef",
            "c) ab\\tcd\\tef",
            "d) ab cd ef"
        ],
        "Answer": "Answer: d\nExplanation: Each \\t is converted to 4 blank spaces."
    },
    {
        "id": 249,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"ab<span class=\"es0\">\\t</span>cd<span class=\"es0\">\\t</span>ef\"</span>.<span class=\"me1\">expandtabs</span><span class=\"br0\">(</span><span class=\"st0\">'+'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ab+cd+ef",
            "b) ab++++++++cd++++++++ef",
            "c) ab cd ef",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, an integer should be passed as an argument."
    },
    {
        "id": 250,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"cd\"</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"st0\">\"cd\"</span> <span class=\"kw1\">in</span> <span class=\"st0\">\"abcdef\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The function find() returns the position of the sunstring in the given string whereas the in keyword returns a value of Boolean type."
    },
    {
        "id": 251,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"abcdef\"</span>.<span class=\"me1\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"cd\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) 2",
            "c) 3",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The first position in the given string at which the substring can be found is returned."
    },
    {
        "id": 252,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"ccdcddcd\"</span>.<span class=\"me1\">find</span><span class=\"br0\">(</span><span class=\"st0\">\"c\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 0",
            "c) Error",
            "d) True"
        ],
        "Answer": "Answer: b\nExplanation: The first position in the given string at which the substring can be found is returned."
    },
    {
        "id": 253,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {0} and {1}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello {0} and {1} foo bin",
            "c) Error",
            "d) Hello 0 and 1"
        ],
        "Answer": "Answer: a\nExplanation: The numbers 0 and 1 represent the position at which the strings are present."
    },
    {
        "id": 254,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {1} and {0}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'bin'</span><span class=\"sy0\">,</span> <span class=\"st0\">'foo'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello bin and foo",
            "c) Error",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The numbers 0 and 1 represent the position at which the strings are present."
    },
    {
        "id": 255,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {} and {}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello {} and {}",
            "c) Error",
            "d) Hello and"
        ],
        "Answer": "Answer: a\nExplanation: It is the same as Hello {0} and {1}."
    },
    {
        "id": 256,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {name1} and {name2}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello {name1} and {name2}",
            "c) Error",
            "d) Hello and"
        ],
        "Answer": "Answer: c\nExplanation: The arguments passed to the function format aren’t keyword arguments."
    },
    {
        "id": 257,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {name1} and {name2}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>name1<span class=\"sy0\">=</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> name2<span class=\"sy0\">=</span><span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello {name1} and {name2}",
            "c) Error",
            "d) Hello and"
        ],
        "Answer": "Answer: a\nExplanation: The arguments are accessed by their names."
    },
    {
        "id": 258,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {0!r} and {0!s}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and foo",
            "b) Hello ‘foo’ and foo",
            "c) Hello foo and ‘bin’",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: !r causes the characters ‘ or ” to be printed as well."
    },
    {
        "id": 259,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {0} and {1}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello (‘foo’, ‘bin’) and (‘foo’, ‘bin’)",
            "c) Error",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: IndexError, the tuple index is out of range."
    },
    {
        "id": 260,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello {0[0]} and {0[1]}\"</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">'foo'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bin'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hello foo and bin",
            "b) Hello (‘foo’, ‘bin’) and (‘foo’, ‘bin’)",
            "c) Error",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The elements of the tuple are accessed by their indices."
    },
    {
        "id": 261,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'The sum of {0} and {1} is {2}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) The sum of 2 and 10 is 12",
            "b) Error",
            "c) The sum of 0 and 1 is 2",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The arguments passed to the function format can be integers also."
    },
    {
        "id": 262,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'The sum of {0:b} and {1:x} is {2:o}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) The sum of 2 and 10 is 12",
            "b) The sum of 10 and a is 14",
            "c) The sum of 10 and a is c",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: 2 is converted to binary, 10 to hexadecimal and 12 to octal."
    },
    {
        "id": 263,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:,}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1112223334</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1,112,223,334",
            "b) 111,222,333,4",
            "c) 1112223334",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: A comma is added after every third digit from the right."
    },
    {
        "id": 264,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:,}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"st0\">'1112223334'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1,112,223,334",
            "b) 111,222,333,4",
            "c) 1112223334",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: An integer is expected."
    },
    {
        "id": 265,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:$}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1112223334</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1,112,223,334",
            "b) 111,222,333,4",
            "c) 1112223334",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: $ is an invalid format code."
    },
    {
        "id": 266,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{:#}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1112223334</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1,112,223,334",
            "b) 111,222,333,4",
            "c) 1112223334",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The number is printed as it is."
    },
    {
        "id": 267,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{0:.2}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>/<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.333333",
            "b) 0.33",
            "c) 0.333333:.2",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: .2 specifies the precision."
    },
    {
        "id": 268,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{0:.2%}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>/<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.33",
            "b) 0.33%",
            "c) 33.33%",
            "d) 33%"
        ],
        "Answer": "Answer: c\nExplanation: The symbol % is used to represent the result of an expression as a percentage."
    },
    {
        "id": 269,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab12'</span>.<span class=\"me1\">isalnum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The string has only letters and digits."
    },
    {
        "id": 270,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab,12'</span>.<span class=\"me1\">isalnum</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The character , is not a letter or a digit."
    },
    {
        "id": 271,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab'</span>.<span class=\"me1\">isalpha</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The string has only letters."
    },
    {
        "id": 272,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'a B'</span>.<span class=\"me1\">isalpha</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Space is not a letter."
    },
    {
        "id": 273,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'0xa'</span>.<span class=\"me1\">isdigit</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Hexadecimal digits aren’t considered as digits (a-f)."
    },
    {
        "id": 274,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">isdigit</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: If there are no characters then False is returned."
    },
    {
        "id": 275,
        "Question": "9.What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'my_string'</span>.<span class=\"me1\">isidentifier</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: It is a valid identifier."
    },
    {
        "id": 276,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'__foo__'</span>.<span class=\"me1\">isidentifier</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: It is a valid identifier."
    },
    {
        "id": 277,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'for'</span>.<span class=\"me1\">isidentifier</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: Even keywords are considered as valid identifiers."
    },
    {
        "id": 278,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abc'</span>.<span class=\"me1\">islower</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: There are no uppercase letters."
    },
    {
        "id": 279,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"7c1d3c\">[email&nbsp;protected]</a> 1,'</span>.<span class=\"me1\">islower</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: There are no uppercase letters."
    },
    {
        "id": 280,
        "Question": "4. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'11'</span>.<span class=\"me1\">isnumeric</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: All the character are numeric."
    },
    {
        "id": 281,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'1.1'</span>.<span class=\"me1\">isnumeric</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The character . is not a numeric character."
    },
    {
        "id": 282,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"8ebfce\">[email&nbsp;protected]</a> a'</span>.<span class=\"me1\">isprintable</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: All those characters are printable."
    },
    {
        "id": 283,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">''''''</span>.<span class=\"me1\">isspace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: None."
    },
    {
        "id": 284,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\t</span>'</span>.<span class=\"me1\">isspace</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: Tab Spaces are considered as spaces."
    },
    {
        "id": 285,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'HelloWorld'</span>.<span class=\"me1\">istitle</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The letter W is uppercased."
    },
    {
        "id": 286,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Hello World'</span>.<span class=\"me1\">istitle</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: It is in title form."
    },
    {
        "id": 287,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"1d55787171723c2f5d\">[email&nbsp;protected]</a>#World'</span>.<span class=\"me1\">istitle</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: It is in the form of a title."
    },
    {
        "id": 288,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'<a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"5b6a09351b\">[email&nbsp;protected]</a>'</span>.<span class=\"me1\">lower</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) n",
            "b) [email protected]",
            "c) rn",
            "d) r"
        ],
        "Answer": "Answer: b\nExplanation: Uppercase letters are converted to lowercase. The other characters are left unchanged."
    },
    {
        "id": 289,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'''\n <span class=\"es0\">\\t</span>foo'''</span>.<span class=\"me1\">lstrip</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) \\tfoo",
            "b) foo",
            "c)   foo",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: All leading whitespace is removed."
    },
    {
        "id": 290,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'xyyzxxyxyy'</span>.<span class=\"me1\">lstrip</span><span class=\"br0\">(</span><span class=\"st0\">'xyy'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) error",
            "b) zxxyxyy",
            "c) z",
            "d) zxxy"
        ],
        "Answer": "Answer: b\nExplanation: The leading characters containing xyy are removed."
    },
    {
        "id": 291,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'xyxxyyzxxy'</span>.<span class=\"me1\">lstrip</span><span class=\"br0\">(</span><span class=\"st0\">'xyy'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) zxxy",
            "b) xyxxyyzxxy",
            "c) xyxzxxy",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: All combinations of the characters passed as an argument are removed from the left hand side."
    },
    {
        "id": 292,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'cba'</span>.<span class=\"me1\">maketrans</span><span class=\"br0\">(</span><span class=\"st0\">'abc'</span><span class=\"sy0\">,</span> <span class=\"st0\">'123'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {97: 49, 98: 50, 99: 51}",
            "b) {65: 49, 66: 50, 67: 51}",
            "c) 321",
            "d) 123"
        ],
        "Answer": "Answer: a\nExplanation: A translation table is returned by maketrans."
    },
    {
        "id": 293,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span>.<span class=\"me1\">maketrans</span><span class=\"br0\">(</span><span class=\"st0\">'ABC'</span><span class=\"sy0\">,</span> <span class=\"st0\">'123'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {97: 49, 98: 50, 99: 51}",
            "b) {65: 49, 66: 50, 67: 51}",
            "c) {97: 49}",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: maketrans() is a static method so it’s behaviour does not depend on the object from which it is being called."
    },
    {
        "id": 294,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdef'</span>.<span class=\"me1\">partition</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘ab’, ‘ef’)",
            "b) (‘abef’)",
            "c) (‘ab’, ‘cd’, ‘ef’)",
            "d) 2"
        ],
        "Answer": "Answer: c\nExplanation: The string is split into three parts by partition."
    },
    {
        "id": 295,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdefcdgh'</span>.<span class=\"me1\">partition</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘ab’, ‘cd’, ‘ef’, ‘cd’, ‘gh’)",
            "b) (‘ab’, ‘cd’, ‘efcdgh’)",
            "c) (‘abcdef’, ‘cd’, ‘gh’)",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The string is partitioned at the point where the separator first appears."
    },
    {
        "id": 296,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcd'</span>.<span class=\"me1\">partition</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘ab’, ‘cd’, ”)",
            "b) (‘ab’, ‘cd’)",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The last item is a null string."
    },
    {
        "id": 297,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span>.<span class=\"me1\">partition</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘cd’)",
            "b) (”)",
            "c) (‘cd’, ”, ”)",
            "d) (”, ‘cd’, ”)"
        ],
        "Answer": "Answer: d\nExplanation: The entire string has been passed as the separator hence the first and the last item of the tuple returned are null strings."
    },
    {
        "id": 298,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abef'</span>.<span class=\"me1\">partition</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘abef’)",
            "b) (‘abef’, ‘cd’, ”)",
            "c) (‘abef’, ”, ”)",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: The separator is not present in the string hence the second and the third elements of the tuple are null strings."
    },
    {
        "id": 299,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdef12'</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ab12ef12",
            "b) abcdef12",
            "c) ab12efcd",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: All occurrences of the first substring are replaced by the second substring."
    },
    {
        "id": 300,
        "Question": "4. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abef'</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abef",
            "b) 12",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The first substring is not present in the given string and hence nothing is replaced."
    },
    {
        "id": 301,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcefd'</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ab1ef2",
            "b) abcefd",
            "c) ab1efd",
            "d) ab12ed2"
        ],
        "Answer": "Answer: b\nExplanation: The first substring is not present in the given string and hence nothing is replaced."
    },
    {
        "id": 302,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'xyyxyyxyxyxxy'</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'xy'</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) xyyxyyxyxyxxy",
            "b) 12y12y1212x12",
            "c) 12yxyyxyxyxxy",
            "d) xyyxyyxyxyx12"
        ],
        "Answer": "Answer: a\nExplanation: The first 0 occurrences of the given substring are replaced."
    },
    {
        "id": 303,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'xyyxyyxyxyxxy'</span>.<span class=\"me1\">replace</span><span class=\"br0\">(</span><span class=\"st0\">'xy'</span><span class=\"sy0\">,</span> <span class=\"st0\">'12'</span><span class=\"sy0\">,</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) xyyxyyxyxyxxy",
            "b) 12y12y1212x12",
            "c) none of the mentioned",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The first 100 occurrences of the given substring are replaced."
    },
    {
        "id": 304,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdefcdghcd'</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘ef’, ‘gh’] ",
            "b) [‘ab’, ‘ef’, ‘gh’, ”] ",
            "c) (‘ab’, ‘ef’, ‘gh’)",
            "d) (‘ab’, ‘ef’, ‘gh’, ”)"
        ],
        "Answer": "Answer: b\nExplanation: The given string is split and a list of substrings is returned."
    },
    {
        "id": 305,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdefcdghcd'</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘abcdefcdghcd’] ",
            "b) ‘abcdefcdghcd’",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The given string is split at 0 occurances of the specified substring."
    },
    {
        "id": 306,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdefcdghcd'</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> -<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘ef’, ‘gh’] ",
            "b) [‘ab’, ‘ef’, ‘gh’, ”] ",
            "c) (‘ab’, ‘ef’, ‘gh’)",
            "d) (‘ab’, ‘ef’, ‘gh’, ”)"
        ],
        "Answer": "Answer: b\nExplanation: Calling the function with a negative value for maxsplit is the same as calling it without any maxsplit specified. The string will be split into as many substring s as possible."
    },
    {
        "id": 307,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcdefcdghcd'</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'cd'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘ef’, ‘ghcd’] ",
            "b) [‘ab’, ‘efcdghcd’] ",
            "c) [‘abcdef’, ‘ghcd’] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The string is split into a maximum of maxsplit+1 substrings."
    },
    {
        "id": 308,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab<span class=\"es0\">\\n</span>cd<span class=\"es0\">\\n</span>ef'</span>.<span class=\"me1\">splitlines</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘cd’, ‘ef’] ",
            "b) [‘ab\\n’, ‘cd\\n’, ‘ef\\n’] ",
            "c) [‘ab\\n’, ‘cd\\n’, ‘ef’] ",
            "d) [‘ab’, ‘cd’, ‘ef\\n’]"
        ],
        "Answer": "Answer: a\nExplanation: It is similar to calling split(‘\\n’)."
    },
    {
        "id": 309,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'Ab!2'</span>.<span class=\"me1\">swapcase</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [email protected]",
            "b) ab12",
            "c) aB!2",
            "d) [email protected]"
        ],
        "Answer": "Answer: c\nExplanation: Lowercase letters are converted to uppercase and vice-versa."
    },
    {
        "id": 310,
        "Question": "4. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab cd ef'</span>.<span class=\"me1\">title</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Ab cd ef",
            "b) Ab cd eF",
            "c) Ab Cd Ef",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The first letter of every word is capitalized."
    },
    {
        "id": 311,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab cd-ef'</span>.<span class=\"me1\">title</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Ab cd-ef",
            "b) Ab Cd-ef",
            "c) Ab Cd-Ef",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The first letter of every word is capitalized. Special symbols terminate a word."
    },
    {
        "id": 312,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcd'</span>.<span class=\"me1\">translate</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span>.<span class=\"me1\">maketrans</span><span class=\"br0\">(</span><span class=\"st0\">'abc'</span><span class=\"sy0\">,</span> <span class=\"st0\">'bcd'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) bcde",
            "b) abcd",
            "c) error",
            "d) bcdd"
        ],
        "Answer": "Answer: d\nExplanation: The output is bcdd since no translation is provided for d."
    },
    {
        "id": 313,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcd'</span>.<span class=\"me1\">translate</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"nu0\">97</span>: <span class=\"nu0\">98</span><span class=\"sy0\">,</span> <span class=\"nu0\">98</span>: <span class=\"nu0\">99</span><span class=\"sy0\">,</span> <span class=\"nu0\">99</span>: <span class=\"nu0\">100</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) bcde",
            "b) abcd",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The output is bcdd since no translation is provided for d."
    },
    {
        "id": 314,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'abcd'</span>.<span class=\"me1\">translate</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"st0\">'a'</span>: <span class=\"st0\">'1'</span><span class=\"sy0\">,</span> <span class=\"st0\">'b'</span>: <span class=\"st0\">'2'</span><span class=\"sy0\">,</span> <span class=\"st0\">'c'</span>: <span class=\"st0\">'3'</span><span class=\"sy0\">,</span> <span class=\"st0\">'d'</span>: <span class=\"st0\">'4'</span><span class=\"br0\">}</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) abcd",
            "b) 1234",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The function translate expects a dictionary of integers. Use maketrans() instead of doing the above."
    },
    {
        "id": 315,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'ab'</span>.<span class=\"me1\">zfill</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 000ab",
            "b) 00ab0",
            "c) 0ab00",
            "d) ab000"
        ],
        "Answer": "Answer: a\nExplanation: The string is padded with zeros on the left hand side. It is useful for formatting numbers."
    },
    {
        "id": 316,
        "Question": "10. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'+99'</span>.<span class=\"me1\">zfill</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 00+99",
            "b) 00099",
            "c) +0099",
            "d) +++99"
        ],
        "Answer": "Answer: c\nExplanation: zeros are filled in between the first sign and the rest of the string."
    },
    {
        "id": 317,
        "Question": "Which of the following commands will create a list?",
        "Options": [
            "a) list1 = list()",
            "b) list1 = [] ",
            "c) list1 = list([1, 2, 3])",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify"
    },
    {
        "id": 318,
        "Question": "What is the output when we execute list(“hello”)?",
        "Options": [
            "a) [‘h’, ‘e’, ‘l’, ‘l’, ‘o’] ",
            "b) [‘hello’] ",
            "c) [‘llo’] ",
            "d) [‘olleh’]"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 319,
        "Question": "Suppose listExample is [‘h’,’e’,’l’,’l’,’o’], what is len(listExample)?",
        "Options": [
            "a) 5",
            "b) 4",
            "c) None",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell and verify. "
    },
    {
        "id": 320,
        "Question": "Suppose list1 is [2445,133,12454,123], what is max(list1)?",
        "Options": [
            "a) 2445",
            "b) 133",
            "c) 12454",
            "d) 123"
        ],
        "Answer": " Answer: c\nExplanation: Max returns the maximum element in the list."
    },
    {
        "id": 321,
        "Question": "Suppose list1 is [3, 5, 25, 1, 3], what is min(list1)?",
        "Options": [
            "a) 3",
            "b) 5",
            "c) 25",
            "d) 1"
        ],
        "Answer": " Answer: d\nExplanation: Min returns the minimum element in the list."
    },
    {
        "id": 322,
        "Question": "Suppose list1 is [1, 5, 9], what is sum(list1)?",
        "Options": [
            "a) 1",
            "b) 9",
            "c) 15",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Sum returns the sum of all elements in the list. "
    },
    {
        "id": 323,
        "Question": "To shuffle the list(say list1) what function do we use?",
        "Options": [
            "a) list1.shuffle()",
            "b) shuffle(list1)",
            "c) random.shuffle(list1)",
            "d) random.shuffleList(list1)"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 324,
        "Question": "Suppose list1 is [4, 2, 2, 4, 5, 2, 1, 0], Which of the following is correct syntax for slicing operation?",
        "Options": [
            "a) print(list1[0])",
            "b) print(list1[:2])",
            "c) print(list1[:-2])",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Slicing is allowed in lists just as in the case of strings."
    },
    {
        "id": 325,
        "Question": "Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1]?",
        "Options": [
            "a) Error",
            "b) None",
            "c) 25",
            "d) 2"
        ],
        "Answer": " Answer: c\nExplanation: -1 corresponds to the last index in the list."
    },
    {
        "id": 326,
        "Question": "Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1]?",
        "Options": [
            "a) [2, 33, 222, 14] ",
            "b) Error",
            "c) 25",
            "d) [25, 14, 222, 33, 2]"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 327,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>names <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'Amir'</span>, <span class=\"st0\">'Bear'</span>, <span class=\"st0\">'Charlton'</span>, <span class=\"st0\">'Daman'</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>names<span class=\"br0\">[</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) Daman",
            "c) Error",
            "d) n"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 328,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">names1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'Amir'</span>, <span class=\"st0\">'Bear'</span>, <span class=\"st0\">'Charlton'</span>, <span class=\"st0\">'Daman'</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">names2 <span class=\"sy1\">=</span> names1</pre></li><li class=\"li1\"><pre class=\"de1\">names3 <span class=\"sy1\">=</span> names1<span class=\"br0\">[</span><span class=\"sy4\">:</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">names2<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'Alice'</span></pre></li><li class=\"li1\"><pre class=\"de1\">names3<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"st0\">'Bob'</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">sum <span class=\"sy1\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> ls in <span class=\"br0\">(</span>names1, names2, names3<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> ls<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">'Alice'</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sum <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">1</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> ls<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">==</span> <span class=\"st0\">'Bob'</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sum <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print sum</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) 12",
            "c) 21",
            "d) 22"
        ],
        "Answer": " Answer: b\nExplanation: When assigning names1 to names2, we create a second reference to the same list. Changes to names2 affect names1. When assigning the slice of all elements in names1 to names3, we are creating a full copy of names1 which can be modified independently. "
    },
    {
        "id": 329,
        "Question": "Suppose list1 is [1, 3, 2], What is list1 * 2?",
        "Options": [
            "a) [2, 6, 4] ",
            "b) [1, 3, 2, 1, 3] ",
            "c) [1, 3, 2, 1, 3, 2] ",
            "d) [1, 3, 2, 3, 2, 1]"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell and verify. "
    },
    {
        "id": 330,
        "Question": "Suppose list1 = [0.5 * x for x in range(0, 4)], list1 is:",
        "Options": [
            "a) [0, 1, 2, 3] ",
            "b) [0, 1, 2, 3, 4] ",
            "c) [0.0, 0.5, 1.0, 1.5] ",
            "d) [0.0, 0.5, 1.0, 1.5, 2.0]"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 331,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">11</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">23</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list2 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">11</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list1 <span class=\"sy1\">&lt;</span> list2</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) None"
        ],
        "Answer": " Answer: b\nExplanation: Elements are compared one by one."
    },
    {
        "id": 332,
        "Question": "To add a new element to a list we use which command?",
        "Options": [
            "a) list1.add(5)",
            "b) list1.append(5)",
            "c) list1.addLast(5)",
            "d) list1.addEnd(5)"
        ],
        "Answer": " Answer: b\nExplanation: We use the function append to add an element to the list. "
    },
    {
        "id": 333,
        "Question": "To insert 5 to the third position in list1, we use which command?",
        "Options": [
            "a) list1.insert(3, 5)",
            "b) list1.insert(2, 5)",
            "c) list1.add(3, 5)",
            "d) list1.append(3, 5)"
        ],
        "Answer": " Answer: b\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 334,
        "Question": "To remove string “hello” from list1, we use which command?",
        "Options": [
            "a) list1.remove(“hello”)",
            "b) list1.remove(hello)",
            "c) list1.removeAll(“hello”)",
            "d) list1.removeOne(“hello”)"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 335,
        "Question": "Suppose list1 is [3, 4, 5, 20, 5], what is list1.index(5)?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 4",
            "d) 2"
        ],
        "Answer": " Answer: d\nExplanation: Execute help(list.index) to get details."
    },
    {
        "id": 336,
        "Question": "Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1.count(5)?",
        "Options": [
            "a) 0",
            "b) 4",
            "c) 1",
            "d) 2"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 337,
        "Question": "Suppose list1 is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after list1.reverse()?",
        "Options": [
            "a) [3, 4, 5, 20, 5, 25, 1, 3] ",
            "b) [1, 3, 3, 4, 5, 5, 20, 25] ",
            "c) [25, 20, 5, 5, 4, 3, 3, 1] ",
            "d) [3, 1, 25, 5, 20, 5, 4, 3]"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 338,
        "Question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.extend([34, 5])?",
        "Options": [
            "a) [3, 4, 5, 20, 5, 25, 1, 3, 34, 5] ",
            "b) [1, 3, 3, 4, 5, 5, 20, 25, 34, 5] ",
            "c) [25, 20, 5, 5, 4, 3, 3, 1, 34, 5] ",
            "d) [1, 3, 4, 5, 20, 5, 25, 3, 34, 5]"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 339,
        "Question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop(1)?",
        "Options": [
            "a) [3, 4, 5, 20, 5, 25, 1, 3] ",
            "b) [1, 3, 3, 4, 5, 5, 20, 25] ",
            "c) [3, 5, 20, 5, 25, 1, 3] ",
            "d) [1, 3, 4, 5, 20, 5, 25]"
        ],
        "Answer": " Answer: c\nExplanation: pop() removes the element at the position specified in the parameter. "
    },
    {
        "id": 340,
        "Question": "Suppose listExample is [3, 4, 5, 20, 5, 25, 1, 3], what is list1 after listExample.pop()?",
        "Options": [
            "a) [3, 4, 5, 20, 5, 25, 1] ",
            "b) [1, 3, 3, 4, 5, 5, 20, 25] ",
            "c) [3, 5, 20, 5, 25, 1, 3] ",
            "d) [1, 3, 4, 5, 20, 5, 25]"
        ],
        "Answer": " Answer: a\nExplanation: pop() by default will remove the last element."
    },
    {
        "id": 341,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span><span class=\"st0\">\"Welcome to Python\"</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [“Welcome”, “to”, “Python”] ",
            "b) (“Welcome”, “to”, “Python”)",
            "c) {“Welcome”, “to”, “Python”}",
            "d) “Welcome”, “to”, “Python”"
        ],
        "Answer": " Answer: a\nExplanation: split() function returns the elements in a list."
    },
    {
        "id": 342,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list<span class=\"br0\">(</span><span class=\"st0\">\"a#b#c#d\"</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'#'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [‘a’, ‘b’, ‘c’, ‘d’] ",
            "b) [‘a b c d’] ",
            "c) [‘a#b#c#d’] ",
            "d) [‘abcd’]"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 343,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">myList <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">max <span class=\"sy1\">=</span> myList<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">indexOfMax <span class=\"sy1\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i in range<span class=\"br0\">(</span><span class=\"nu0\">1</span>, len<span class=\"br0\">(</span>myList<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> myList<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy1\">&gt;</span> max<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        max <span class=\"sy1\">=</span> myList<span class=\"br0\">[</span>i<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">        indexOfMax <span class=\"sy1\">=</span> i</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>indexOfMax<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) 4"
        ],
        "Answer": " Answer: a\nExplanation: First time the highest number is encountered is at index 1."
    },
    {
        "id": 344,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">myList <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i in range<span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    myList<span class=\"br0\">[</span>i <span class=\"sy2\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> myList<span class=\"br0\">[</span>i<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy4\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span>myList<span class=\"br0\">[</span>i<span class=\"br0\">]</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2 3 4 5 6 1",
            "b) 6 1 2 3 4 5",
            "c) 2 3 4 5 6 6",
            "d) 1 1 2 3 4 5"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 345,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">3</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list2 <span class=\"sy1\">=</span> list1</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>list1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">4</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print<span class=\"br0\">(</span>list2<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 3] ",
            "b) [4, 3] ",
            "c) [1, 4] ",
            "d) [1, 3, 4]"
        ],
        "Answer": " Answer: b\nExplanation: Lists should be copied by executing [:] operation."
    },
    {
        "id": 346,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def f<span class=\"br0\">(</span>values<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    values<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">44</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">v <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">f<span class=\"br0\">(</span>v<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>v<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 44] ",
            "b) [1, 2, 3, 44] ",
            "c) [44, 2, 3] ",
            "d) [1, 2, 3]"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 347,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def f<span class=\"br0\">(</span>i, values <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    values.<span class=\"me1\">append</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> values</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">f<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">f<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">v <span class=\"sy1\">=</span> f<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>v<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [1] [2] [3] ",
            "b) [1] [1, 2] [1, 2, 3] ",
            "c) [1, 2, 3] ",
            "d) 1 2 3"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify"
    },
    {
        "id": 348,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">names1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'Amir'</span>, <span class=\"st0\">'Bala'</span>, <span class=\"st0\">'Chales'</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">if</span> <span class=\"st0\">'amir'</span> in names1<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">else</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) None",
            "b) 1",
            "c) 2",
            "d) Error"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 349,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">names1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'Amir'</span>, <span class=\"st0\">'Bala'</span>, <span class=\"st0\">'Charlie'</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">names2 <span class=\"sy1\">=</span> <span class=\"br0\">[</span>name.<span class=\"me1\">lower</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> name in names1<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>names2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) None",
            "b) a",
            "c) b",
            "d) c"
        ],
        "Answer": " Answer: d\nExplanation: List Comprehension are a shorthand for creating new lists. "
    },
    {
        "id": 350,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">numbers <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">numbers.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">5</span>,<span class=\"nu0\">6</span>,<span class=\"nu0\">7</span>,<span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>len<span class=\"br0\">(</span>numbers<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 8",
            "d) 12"
        ],
        "Answer": " Answer: b\nExplanation: A list is passed in append so the length is 5."
    },
    {
        "id": 351,
        "Question": "To which of the following the “in” operator can be used to check if an item is in it?",
        "Options": [
            "a) Lists",
            "b) Dictionary",
            "c) Set",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: In can be used in all data structures."
    },
    {
        "id": 352,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">list1 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">list2 <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>len<span class=\"br0\">(</span>list1 <span class=\"sy2\">+</span> list2<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 4",
            "c) 5",
            "d) 8"
        ],
        "Answer": " Answer: d\nExplanation: + appends all the elements individually into a new list. "
    },
    {
        "id": 353,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def addItem<span class=\"br0\">(</span>listParam<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    listParam <span class=\"sy2\">+</span><span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">mylist <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">addItem<span class=\"br0\">(</span>mylist<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>len<span class=\"br0\">(</span>mylist<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 4",
            "c) 5",
            "d) 8"
        ],
        "Answer": " Answer: c\nExplanation: + will append the element to the list."
    },
    {
        "id": 354,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def example<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"st0\">''</span><span class=\"st0\">' (list) -&gt; list</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st0\">    '</span><span class=\"st0\">''</span></pre></li><li class=\"li1\"><pre class=\"de1\">    i <span class=\"sy1\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">    result <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> i <span class=\"sy1\">&lt;</span> len<span class=\"br0\">(</span>L<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        result.<span class=\"me1\">append</span><span class=\"br0\">(</span>L<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        i <span class=\"sy1\">=</span> i <span class=\"sy2\">+</span> <span class=\"nu0\">3</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> result</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Return a list containing every third item from L starting at index 0",
            "b) Return an empty list",
            "c) Return a list containing every third index from L starting at index 0",
            "d) Return a list containing the items from L starting from index 0, omitting every third item"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 355,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>m <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>x, x <span class=\"sy2\">+</span> <span class=\"nu0\">1</span>, x <span class=\"sy2\">+</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> x in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] ",
            "b) [[0, 1, 2], [1, 2, 3], [2, 3, 4]] ",
            "c) [1, 2, 3, 4, 5, 6, 7, 8, 9] ",
            "d) [0, 1, 2, 1, 2, 3, 2, 3, 4]"
        ],
        "Answer": " Answer: b\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 356,
        "Question": "2. How many elements are in m?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">m <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span>x, y<span class=\"br0\">]</span> <span class=\"kw1\">for</span> x in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> y in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 12",
            "c) 16",
            "d) 32"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 357,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">values <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">33</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">v <span class=\"sy1\">=</span> values<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> row in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, len<span class=\"br0\">(</span>values<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> column in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, len<span class=\"br0\">(</span>values<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> v <span class=\"sy1\">&lt;</span> values<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span>column<span class=\"br0\">]</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            v <span class=\"sy1\">=</span> values<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span>column<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>v<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 5",
            "c) 6",
            "d) 33"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 358,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">values <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">33</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">v <span class=\"sy1\">=</span> values<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> lst in values<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> element in lst<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> v <span class=\"sy1\">&gt;</span> element<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            v <span class=\"sy1\">=</span> element</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>v<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 3",
            "c) 5",
            "d) 6"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 359,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">values <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">1</span> <span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">33</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> row in values<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    row.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> element in row<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        print<span class=\"br0\">(</span>element, end <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) The program prints two rows 3 4 5 1 followed by 33 6 1 2",
            "b) The program prints on row 3 4 5 1 33 6 1 2",
            "c) The program prints two rows 3 4 5 1 followed by 33 6 1 2",
            "d) The program prints two rows 1 3 4 5 followed by 1 2 6 33"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 360,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">matrix <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">[</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">]</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">[</span><span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span><span class=\"br0\">]</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">[</span><span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span>matrix<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4",
            "b) 4 5 6 7",
            "c) 1 3 8 12",
            "d) 2 5 9 13"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 361,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def m<span class=\"br0\">(</span>list<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    v <span class=\"sy1\">=</span> list<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> e in list<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> v <span class=\"sy1\">&lt;</span> e<span class=\"sy4\">:</span> v <span class=\"sy1\">=</span> e</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> v</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">values <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">1</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">33</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> row in values<span class=\"sy4\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    print<span class=\"br0\">(</span>m<span class=\"br0\">(</span>row<span class=\"br0\">)</span>, end <span class=\"sy1\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 33",
            "b) 1 1",
            "c) 5 6",
            "d) 5 33"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 362,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">data <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">7</span>, <span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>data<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 4",
            "d) 5"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 363,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">data <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">7</span>, <span class=\"nu0\">8</span><span class=\"br0\">]</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">def ttt<span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    v <span class=\"sy1\">=</span> m<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> row in m<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> element in row<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">if</span> v <span class=\"sy1\">&lt;</span> element<span class=\"sy4\">:</span> v <span class=\"sy1\">=</span> element</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> v</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>ttt<span class=\"br0\">(</span>data<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 4",
            "d) 5"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 364,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">points <span class=\"sy1\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu0\">3</span>, <span class=\"nu16\">1.5</span><span class=\"br0\">]</span>, <span class=\"br0\">[</span><span class=\"nu16\">0.5</span>, <span class=\"nu16\">0.5</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">points.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>points<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [[1, 2], [3, 1.5], [0.5, 0.5]] ",
            "b) [[3, 1.5], [1, 2], [0.5, 0.5]] ",
            "c) [[0.5, 0.5], [1, 2], [3, 1.5]] ",
            "d) [[0.5, 0.5], [3, 1.5], [1, 2]]"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 365,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span><span class=\"nu0\">56</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">78</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nb<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>\na<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">95</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">34</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[10,34,56,[95]] ",
            "b)\t[10,23,56,[78]] ",
            "c)\t[10,23,56,[95]] ",
            "d)\t[10,34,56,[78]]"
        ],
        "Answer": "Answer: c\nExplanation: The above copy is a type of shallow copy and only changes made in sublist is reflected in the copied list."
    },
    {
        "id": 366,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">copy</span>\na<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">23</span><span class=\"sy0\">,</span><span class=\"nu0\">56</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">78</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nb<span class=\"sy0\">=</span><span class=\"kw3\">copy</span>.<span class=\"me1\">deepcopy</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>\na<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">95</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">34</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[10,34,56,[95]] ",
            "b)\t[10,23,56,[78]] ",
            "c)\t[10,23,56,[95]] ",
            "d)\t[10,34,56,[78]]"
        ],
        "Answer": "Answer: d\nExplanation: The zip function combines the individual attributes of the lists into a list of tuples."
    },
    {
        "id": 367,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\nb<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span>:x+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t10",
            "b)\t[1,3,5,7] ",
            "c)\t4",
            "d)\t[1,3,6,10]"
        ],
        "Answer": "Answer: b\nExplanation: The above copy is deepcopy. Any change made in the original list isn’t reflected."
    },
    {
        "id": 368,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"st0\">\"hello\"</span>\nb<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> a<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[(‘H’, 1), (‘E’, 1), (‘L’, 1), (‘L’, 1), (‘O’, 1)] ",
            "b)\t[(‘HELLO’, 5)] ",
            "c)\t[(‘H’, 5), (‘E’, 5), (‘L’, 5), (‘L’, 5), (‘O’, 5)] ",
            "d)\tSyntax error"
        ],
        "Answer": "Answer: c\nExplanation: The partition function only splits for the first parameter along with the separator while split function splits for the number of times given in the second argument but without the separator."
    },
    {
        "id": 369,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\nb<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span>:x+<span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t10",
            "b)\t[1,3,5,7] ",
            "c)\t4",
            "d)\t[1,3,6,10]"
        ],
        "Answer": "Answer: d\nExplanation: The above code returns the cumulative sum of elements in a list."
    },
    {
        "id": 370,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">]</span>*<span class=\"nu0\">3</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"nu0\">7</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tSyntax error",
            "b)\t[[7], [7], [7]] ",
            "c)\t[[7], [], []] ",
            "d)\t[[],7, [], []]"
        ],
        "Answer": "Answer: a\nExplanation: Variable x iterates over each letter in string a hence the length of each letter is 1."
    },
    {
        "id": 371,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">b<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">]</span>\na<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">filter</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:x%<span class=\"nu0\">2</span><span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[2,4] ",
            "b)\t[ ] ",
            "c)\t[3,5] ",
            "d)\tInvalid arguments for filter function"
        ],
        "Answer": "Answer: d\nExplanation: The above code returns the cumulative sum of elements in a list."
    },
    {
        "id": 372,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">lst<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\nlst<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>lst<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[3, 7, 8, 6, 1, 2] ",
            "b)\tSyntax error",
            "c)\t[3,[7,8],6,1,2] ",
            "d)\t[3,4,6,7,8]"
        ],
        "Answer": "Answer: b\nExplanation: The first line of the code creates multiple reference copies of sublist. Hence when 7 is appended, it gets appended to all the sublists."
    },
    {
        "id": 373,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">13</span><span class=\"sy0\">,</span><span class=\"nu0\">56</span><span class=\"sy0\">,</span><span class=\"nu0\">17</span><span class=\"br0\">]</span>\na.<span class=\"me1\">append</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">87</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\na.<span class=\"me1\">extend</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">45</span><span class=\"sy0\">,</span><span class=\"nu0\">67</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[13, 56, 17, [87], 45, 67] ",
            "b)\t[13, 56, 17, 87, 45, 67] ",
            "c)\t[13, 56, 17, 87,[ 45, 67]] ",
            "d)\t[13, 56, 17, [87], [45, 67]]"
        ],
        "Answer": "Answer: b\nExplanation: Append function on lists doesn’t return anything. Thus the value of b is None."
    },
    {
        "id": 374,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">lst<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span>lst<span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[[3],[7]] ",
            "b)\t[1,2,3,4] ",
            "c)\tError",
            "d)\t[10]"
        ],
        "Answer": "Answer: b\nExplanation: List b is just a copy of the original list. Any copy made in list b will not be reflected in list a."
    },
    {
        "id": 375,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> unpack<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>c<span class=\"sy0\">,</span>d<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a+d<span class=\"br0\">)</span>\nx <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\nunpack<span class=\"br0\">(</span>*x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError",
            "b)\t[1,4] ",
            "c)\t[5] ",
            "d)\t5"
        ],
        "Answer": "Answer: a\nExplanation: The append function simply adds its arguments to the list as it is while extend function extends its arguments and later appends it."
    },
    {
        "id": 376,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">places <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'Bangalore'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Mumbai'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Delhi'</span><span class=\"br0\">]</span>\n<span class=\"sy0\">&lt;</span>br <span class=\"kw1\">class</span><span class=\"sy0\">=</span><span class=\"st0\">\"blank\"</span> /<span class=\"sy0\">&gt;</span>places1 <span class=\"sy0\">=</span> places\nplaces2 <span class=\"sy0\">=</span> places<span class=\"br0\">[</span>:<span class=\"br0\">]</span>\n<span class=\"sy0\">&lt;</span>br <span class=\"kw1\">class</span><span class=\"sy0\">=</span><span class=\"st0\">\"blank\"</span> /<span class=\"sy0\">&gt;</span>places1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"Pune\"</span>\nplaces2<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"Hyderabad\"</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>places<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[‘Bangalore’, ‘Pune’, ‘Hyderabad’] ",
            "b)\t[‘Bangalore’, ‘Pune’, ‘Delhi’] ",
            "c)\t[‘Bangalore’, ‘Mumbai’, ‘Delhi’] ",
            "d)\t[‘Bangalore’, ‘Mumbai’, ‘Hyderabad’]"
        ],
        "Answer": "Answer: c\nExplanation: (45) is an int while (45,) is a tuple of one element. Thus when a tuple is multiplied, it created references of itself which is later converted to a list."
    },
    {
        "id": 377,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[1] [2] ",
            "b)\t[49] [50] ",
            "c)\tSyntax error",
            "d)\t[[1]] [[2]]"
        ],
        "Answer": "Answer: b\nExplanation: The above piece of code is used for flattening lists."
    },
    {
        "id": 378,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"nu0\">165</span>\nb<span class=\"sy0\">=</span><span class=\"kw2\">sum</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"sy0\">,</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t561",
            "b)\t5",
            "c)\t12",
            "d)\tSyntax error"
        ],
        "Answer": "Answer: d\nExplanation: In the above case, both the lists are equivalent but not identical as they have different objects."
    },
    {
        "id": 379,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>:\n    a<span class=\"br0\">[</span>i-<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>: \n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">,</span>end <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t5 5 1 2 3",
            "b)\t5 1 2 3 4",
            "c)\t2 3 4 5 1",
            "d)\t2 3 4 5 5"
        ],
        "Answer": "Answer: d\nExplanation: unpack(*x) unpacks the list into the separate variables. Now, a=1 and d=4. Thus 5 gets printed."
    },
    {
        "id": 380,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span>\n<span class=\"sy0\">&lt;</span>br <span class=\"kw1\">class</span><span class=\"sy0\">=</span><span class=\"st0\">\"blank\"</span> /<span class=\"sy0\">&gt;</span>b<span class=\"sy0\">=</span>a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\n<span class=\"sy0\">&lt;</span>br <span class=\"kw1\">class</span><span class=\"sy0\">=</span><span class=\"st0\">\"blank\"</span> /<span class=\"sy0\">&gt;</span>x<span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> a<span class=\"br0\">[</span>x<span class=\"br0\">]</span> <span class=\"sy0\">&gt;</span> b:\n        b <span class=\"sy0\">=</span> a<span class=\"br0\">[</span>x<span class=\"br0\">]</span>\n        b<span class=\"sy0\">=</span> x\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t5",
            "b)\t3",
            "c)\t4",
            "d)\t0"
        ],
        "Answer": "Answer: b\nExplanation: places1 is an alias of the list places. Hence, any change made to places1 is reflected in places. places2 is a copy of the list places. Thus, any change made to places2 isn’t reflected in places."
    },
    {
        "id": 381,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"st0\">\"Apple\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Ball\"</span><span class=\"sy0\">,</span><span class=\"st0\">\"Cobra\"</span><span class=\"br0\">]</span>\n<span class=\"sy0\">&lt;</span>br <span class=\"kw1\">class</span><span class=\"sy0\">=</span><span class=\"st0\">\"blank\"</span> /<span class=\"sy0\">&gt;</span>a.<span class=\"me1\">sort</span><span class=\"br0\">(</span>key<span class=\"sy0\">=</span><span class=\"kw2\">len</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[‘Apple’, ‘Ball’, ‘Cobra’] ",
            "b)\t[‘Ball’, ‘Apple’, ‘Cobra’] ",
            "c)\t[‘Cobra’, ‘Apple’, ‘Ball’] ",
            "d)\tInvalid syntax for sort()"
        ],
        "Answer": "Answer: a\nExplanation: The elements 1 and 2 are first put into separate lists and then combined with a space in between using the join attribute."
    },
    {
        "id": 382,
        "Question": "15. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">num <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'One'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Two'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Three'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i<span class=\"sy0\">,</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">enumerate</span><span class=\"br0\">(</span>num<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'{}: {}'</span>.<span class=\"me1\">format</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1: 2: 3:",
            "b)\tException is thrown",
            "c)\tOne Two Three",
            "d)\t0: One 1: Two 2: Three"
        ],
        "Answer": "Answer: c\nExplanation: First, map converts the number to string and then places the individual digits in a list. Then, sum finds the sum of the digits in the list. The code basically finds the sum of digits in the number."
    },
    {
        "id": 383,
        "Question": "1. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">k <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> my_string <span class=\"kw1\">if</span> i <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> <span class=\"st0\">\"aeiou\"</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) prints all the vowels in my_string",
            "b) prints all the consonants in my_string",
            "c) prints all characters of my_string that aren’t vowels",
            "d) prints only on executing print(k)"
        ],
        "Answer": "Answer: c\nExplanation: print(i) is executed if the given character is not a vowel."
    },
    {
        "id": 384,
        "Question": "2. What is the output of print(k) in the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">k <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> my_string <span class=\"kw1\">if</span> i <span class=\"kw1\">not</span> <span class=\"kw1\">in</span> <span class=\"st0\">\"aeiou\"</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) all characters of my_string that aren’t vowels",
            "b) a list of Nones",
            "c) list of Trues",
            "d) list of Falses"
        ],
        "Answer": "Answer: b\nExplanation: print() returns None."
    },
    {
        "id": 385,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">my_string <span class=\"sy0\">=</span> <span class=\"st0\">\"hello world\"</span>\nk <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">(</span>i.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> my_string<span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [(‘HELLO’, 5), (‘WORLD’, 5)] ",
            "b) [(‘H’, 1), (‘E’, 1), (‘L’, 1), (‘L’, 1), (‘O’, 1), (‘ ‘, 1), (‘W’, 1), (‘O’, 1), (‘R’, 1), (‘L’, 1), (‘D’, 1)] ",
            "c) [(‘HELLO WORLD’, 11)] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: We are iterating over each letter in the string."
    },
    {
        "id": 386,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span>i**+<span class=\"nu0\">1</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 1, 2] ",
            "b) [1, 2, 5] ",
            "c) error, **+ is not a valid operator",
            "d) error, ‘;’ is not allowed"
        ],
        "Answer": "Answer: c\nExplanation: We have to create an empty list, loop over the contents of the existing list and check if a condition is satisfied before performing some operation and adding it to the new list."
    },
    {
        "id": 387,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">[</span>i.<span class=\"me1\">lower</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">\"HELLO\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘h’, ‘e’, ‘l’, ‘l’, ‘o’] ",
            "b) ‘hello’",
            "c) [‘hello’] ",
            "d) hello"
        ],
        "Answer": "Answer: a\nExplanation: i**+1 is evaluated as (i)**(+1)."
    },
    {
        "id": 388,
        "Question": "7. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">[</span>i+j <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">\"abc\"</span> <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"st0\">\"def\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘da’, ‘ea’, ‘fa’, ‘db’, ‘eb’, ‘fb’, ‘dc’, ‘ec’, ‘fc’] ",
            "b) [[‘ad’, ‘bd’, ‘cd’], [‘ae’, ‘be’, ‘ce’], [‘af’, ‘bf’, ‘cf’]] ",
            "c) [[‘da’, ‘db’, ‘dc’], [‘ea’, ‘eb’, ‘ec’], [‘fa’, ‘fb’, ‘fc’]] ",
            "d) [‘ad’, ‘ae’, ‘af’, ‘bd’, ‘be’, ‘bf’, ‘cd’, ‘ce’, ‘cf’]"
        ],
        "Answer": "Answer: a\nExplanation: We are iterating over each letter in the string."
    },
    {
        "id": 389,
        "Question": "8. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">[</span>i+j <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"st0\">\"abc\"</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"st0\">\"def\"</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘da’, ‘ea’, ‘fa’, ‘db’, ‘eb’, ‘fb’, ‘dc’, ‘ec’, ‘fc’] ",
            "b) [[‘ad’, ‘bd’, ‘cd’], [‘ae’, ‘be’, ‘ce’], [‘af’, ‘bf’, ‘cf’]] ",
            "c) [[‘da’, ‘db’, ‘dc’], [‘ea’, ‘eb’, ‘ec’], [‘fa’, ‘fb’, ‘fc’]] ",
            "d) [‘ad’, ‘ae’, ‘af’, ‘bd’, ‘be’, ‘bf’, ‘cd’, ‘ce’, ‘cf’]"
        ],
        "Answer": "Answer: d\nExplanation: If it were to be executed as a nested for loop, i would be the outer loop and j the inner loop."
    },
    {
        "id": 390,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"kw1\">if</span> i%<span class=\"nu0\">2</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span>: i<span class=\"sy0\">;</span> <span class=\"kw1\">else</span>: i+<span class=\"nu0\">1</span><span class=\"sy0\">;</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 2, 2, 4] ",
            "b) [1, 1, 3, 3] ",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The inner list is generated once for each value of j."
    },
    {
        "id": 391,
        "Question": "Which of the following is the same as list(map(lambda x: x**-1, [1, 2, 3]))?",
        "Options": [
            "a) [x**-1 for x in [(1, 2, 3)]] ",
            "b) [1/x for x in [(1, 2, 3)]] ",
            "c) [1/x for x in (1, 2, 3)] ",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: Syntax error."
    },
    {
        "id": 392,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>x&amp;<span class=\"nu0\">1</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> l<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 1, 1, 1, 1]",
            "b) [1, 0, 1, 0, 1]",
            "c) [1, 0, 0, 0, 0]",
            "d) [0, 1, 0, 1, 0]"
        ],
        "Answer": "Answer: b\nExplanation: In the code shown above, each of the numbers of the list, that is, 1, 2, 3, 4 and 5 are AND-ed with 1 and the result is printed in the form of a list. Hence the output is [1, 0, 1, 0, 1]."
    },
    {
        "id": 393,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span>\nl2<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>x*y <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> l1 <span class=\"kw1\">for</span> y <span class=\"kw1\">in</span> l2<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [4, 8, 12, 5, 10, 15, 6, 12, 18]",
            "b) [4, 10, 18]",
            "c) [4, 5, 6, 8, 10, 12, 12, 15, 18]",
            "d) [18, 12, 6, 15, 10, 5, 12, 8, 4]"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above returns x*y, where x belongs to the list l1 and y belongs to the list l2. Therefore, the output is: [4, 5, 6, 8, 10, 12, 12, 15, 18]."
    },
    {
        "id": 394,
        "Question": "Write the list comprehension to pick out only negative integers from a given list ‘l’.",
        "Options": [
            "a) [x<0 in l] ",
            "b) [x for x<0 in l] ",
            "c) [x in l for x<0] ",
            "d) [x for x in l if x<0]"
        ],
        "Answer": "Answer: d\nExplanation: To pick out only the negative numbers from a given list ‘l’, the correct list comprehension statement would be: [x for x in l if x<0].  \nFor example if we have a list l=[-65, 2, 7, -99, -4, 3]                                                                                                       >>> [x for x in l if x<0]                                                                                                                                                 The output would be: [-65, -99, -4]."
    },
    {
        "id": 395,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"st0\">\"pune\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"mumbai\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"delhi\"</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span><span class=\"br0\">(</span>w.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>w<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> w <span class=\"kw1\">in</span> s<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [‘PUNE’, 4, ‘MUMBAI’, 6, ‘DELHI’, 5]",
            "c) [PUNE, 4, MUMBAI, 6, DELHI, 5]",
            "d) [(‘PUNE’, 4), (‘MUMBAI’, 6), (‘DELHI’, 5)]"
        ],
        "Answer": "Answer: d\nExplanation: If we need to generate two results, we need to put it in the form of a tuple. The code shown above returns each word of list in uppercase, along with the length of the word. Hence the output of the code is: [(‘PUNE’, 4), (‘MUMBAI’, 6), (‘DELHI’, 5)]."
    },
    {
        "id": 396,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">]</span>\nl2<span class=\"sy0\">=</span><span class=\"br0\">[</span>-<span class=\"nu0\">10</span><span class=\"sy0\">,</span> -<span class=\"nu0\">20</span><span class=\"sy0\">,</span> -<span class=\"nu0\">30</span><span class=\"br0\">]</span>\nl3<span class=\"sy0\">=</span><span class=\"br0\">[</span>x+y <span class=\"kw1\">for</span> x<span class=\"sy0\">,</span> y <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>l1<span class=\"sy0\">,</span> l2<span class=\"br0\">)</span><span class=\"br0\">]</span>\nl3</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 0",
            "c) [-20, -60, -80]",
            "d) [0, 0, 0]"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown will be:\n (2, -2)\n (4, -4)\n (6, -6)\nThis format is due to the statement print(i)."
    },
    {
        "id": 397,
        "Question": "Write a list comprehension for number and its cube for l=[1, 2, 3, 4, 5, 6, 7, 8, 9].",
        "Options": [
            "a) [x**3 for x in l]",
            "b) [x^3 for x in l]",
            "c) [x**3 in l]",
            "d) [x^3 in l]"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above returns x+y, for x belonging to the list l1 and y belonging to the list l2. That is, l3=[10-10, 20-20, 30-20], which is, [0, 0, 0]."
    },
    {
        "id": 398,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">math</span>\n<span class=\"br0\">[</span><span class=\"kw2\">str</span><span class=\"br0\">(</span><span class=\"kw2\">round</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">pi</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘3’, ‘3’, ‘3’, ‘3’, ‘3’, ‘3’]",
            "b) [‘3.1’, ‘3.14’, ‘3.142’, ‘3.1416’, ‘3.14159’, ‘3.141582’]",
            "c) [‘3’, ‘3’, ‘3’, ‘3’, ‘3’]",
            "d) [‘3.1’, ‘3.14’, ‘3.142’, ‘3.1416’, ‘3.14159’]"
        ],
        "Answer": "Answer: a\nExplanation: The list comprehension to print a list of cube of the numbers for the given list is: [x**3 for x in l]."
    },
    {
        "id": 399,
        "Question": "1. Read the information given below carefully and write a list comprehension such that the output is: [‘e’, ‘o’]\n\n<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">w<span class=\"sy0\">=</span><span class=\"st0\">\"hello\"</span>\nv<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"st0\">'e'</span><span class=\"sy0\">,</span> <span class=\"st0\">'i'</span><span class=\"sy0\">,</span> <span class=\"st0\">'o'</span><span class=\"sy0\">,</span> <span class=\"st0\">'u'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [x for w in v if x in v]",
            "b) [x for x in w if x in v]",
            "c) [x for x in v if w in v]",
            "d) [x for v in w for x in w]"
        ],
        "Answer": "Answer: b\nExplanation: The tuple ‘v’ is used to generate a list containing only vowels in the string ‘w’. The result is a list containing only vowels present in the string “hello”. Hence the required list comprehension is: [x for x in w if x in v]."
    },
    {
        "id": 400,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"br0\">[</span><span class=\"kw2\">ord</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span> <span class=\"kw1\">for</span> ch <span class=\"kw1\">in</span> <span class=\"st0\">'abc'</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [97, 98, 99]",
            "b) [‘97’, ‘98’, ‘99’]",
            "c) [65, 66, 67]",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The list comprehension shown above returns the ASCII value of each alphabet of the string ‘abc’. Hence the output is: [97, 98, 99]. Had the string been ‘ABC’, the output would be: [65, 66, 67]."
    },
    {
        "id": 401,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">t<span class=\"sy0\">=</span><span class=\"nu0\">32.00</span>\n<span class=\"br0\">[</span><span class=\"kw2\">round</span><span class=\"br0\">(</span><span class=\"br0\">(</span>x-<span class=\"nu0\">32</span><span class=\"br0\">)</span>*<span class=\"nu0\">5</span>/<span class=\"nu0\">9</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> t<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0]",
            "b) 0",
            "c) [0.00]",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: The value of t in the code shown above is equal to 32.00, which is a floating point value. ‘Float’ objects are not iterable. Hence the code results in an error."
    },
    {
        "id": 402,
        "Question": "Write a list comprehension for producing a list of numbers between 1 and 1000 that are divisible by 3.",
        "Options": [
            "a) [x in range(1, 1000) if x%3==0]",
            "b) [x for x in range(1000) if x%3==0]",
            "c) [x%3 for x in range(1, 1000)]",
            "d) [x%3=0 for x in range(1, 1000)]"
        ],
        "Answer": "Answer: b\nExplanation: The list comprehension [x for x in range(1000) if x%3==0] produces a list of numbers between 1 and 1000 that are divisible by 3."
    },
    {
        "id": 403,
        "Question": "5. Write a list comprehension equivalent for the Python code shown below.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">101</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">if</span> <span class=\"kw2\">int</span><span class=\"br0\">(</span>i*<span class=\"nu0\">0.5</span><span class=\"br0\">)</span><span class=\"sy0\">==</span>i*<span class=\"nu0\">0.5</span>:\n\t\t<span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [i for i in range(1, 100) if int(i*0.5)==(i*0.5)]",
            "b) [i for i in range(1, 101) if int(i*0.5)==(i*0.5)]",
            "c) [i for i in range(1, 101) if int(i*0.5)=(i*0.5)]",
            "d) [i for i in range(1, 100) if int(i*0.5)=(i*0.5)]"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above prints the value ‘i’ only if it satisfies the condition: int(i*0.5) is equal to (i*0.5). Hence the required list comprehension is: [i for i in range(1, 101) if int(i*0.5)==(i*0.5)]."
    },
    {
        "id": 404,
        "Question": "What is the list comprehension equivalent for: list(map(lambda x:x**-1, [1, 2, 3]))?",
        "Options": [
            "a) [1|x for x in [1, 2, 3]]",
            "b) [-1**x for x in [1, 2, 3]]",
            "c) [x**-1 for x in [1, 2, 3]]",
            "d) [x^-1 for x in range(4)]"
        ],
        "Answer": "Answer: c\nExplanation: The output of the function list(map(lambda x:x**-1, [1, 2, 3])) is [1.0, 0.5, 0.3333333333333333] and that of the list comprehension [x**-1 for x in [1, 2, 3]] is [1.0, 0.5, 0.3333333333333333]. Hence the answer is: [x**-1 for x in [1, 2, 3]]."
    },
    {
        "id": 405,
        "Question": "Write a list comprehension to produce the list: [1, 2, 4, 8, 16……212].",
        "Options": [
            "a) [(2**x) for x in range(0, 13)]",
            "b) [(x**2) for x in range(1, 13)]",
            "c) [(2**x) for x in range(1, 13)]",
            "d) [(x**2) for x in range(0, 13)]"
        ],
        "Answer": "Answer: a\nExplanation: The required list comprehension will print the numbers from 1 to 12, each raised to 2. The required answer is thus, [(2**x) for x in range(0, 13)]."
    },
    {
        "id": 406,
        "Question": "",
        "Options": [
            "a) [x for x in range(1, 20) if (x%2==0)]",
            "b) [x for x in range(0, 20) if (x//2==0)]",
            "c) [x for x in range(1, 20) if (x//2==0)]",
            "d) [x for x in range(0, 20) if (x%2==0)]"
        ],
        "Answer": "Answer: d\nExplanation: The required list comprehension will print a whole number, less than 20, provided that the number is even. Since the output list should contain zero as well, the answer to this question is: [x for x in range(0, 20) if (x%2==0)]."
    },
    {
        "id": 407,
        "Question": "9. What will be the output of the following Python list comprehension?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"br0\">[</span>j <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span>i*<span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A list of prime numbers up to 50",
            "b) A list of numbers divisible by 2, up to 50",
            "c) A list of non prime numbers, up to 50",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The list comprehension shown above returns a list of non-prime numbers up to 50. The logic behind this is that the square root of 50 is almost equal to 7. Hence all the multiples of 2-7 are not prime in this range."
    },
    {
        "id": 408,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"st0\">\"good\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"oh!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"excellent!\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"#450\"</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>n <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> l <span class=\"kw1\">if</span> n.<span class=\"me1\">isalpha</span><span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"kw1\">or</span> n.<span class=\"me1\">isdigit</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘good’, ‘oh’, ‘excellent’, ‘450’\t]",
            "b) [‘good’]",
            "c) [‘good’, ‘#450’]",
            "d) [‘oh!’, ‘excellent!’, ‘#450’]"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above returns a new list containing only strings which do not have any punctuation in them. The only string from the list which does not contain any punctuation is ‘good’. Hence the output of the code shown above is [‘good’]."
    },
    {
        "id": 409,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n          <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n          <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nA<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [4, 5, 6] ",
            "b) [3, 6, 9] ",
            "c) [1, 4, 7] ",
            "d) [1, 2, 3]"
        ],
        "Answer": "Answer: b\nExplanation: In matrix B will result in an error because in the absence of a comma at the end of each row, it behaves like three separate lists. The error thrown states that the list integers must be integers or slices, not tuples."
    },
    {
        "id": 410,
        "Question": "3. Which of the following Python statements will result in the output: 6?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A[2][3] ",
            "b) A[2][1] ",
            "c) A[1][2] ",
            "d) A[3][2]"
        ],
        "Answer": "Answer: a\nExplanation: We can index the rows and columns using normal index operations. The statement A[1] represents the second row, that is, the middle row. Hence the output of the code will be: [4, 5, 6]."
    },
    {
        "id": 411,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n      <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n      <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>A<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> <span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [7, 8, 9] ",
            "b) [4, 5, 6] ",
            "c) [2, 5, 8] ",
            "d) [1, 4, 7]"
        ],
        "Answer": "Answer: c\nExplanation: The output that is required is 6, that is, row 2, item 3. This position is represented by the statement: A[1][2]."
    },
    {
        "id": 412,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>A<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 5, 9] ",
            "b) [3, 5, 7] ",
            "c) [4, 5, 6] ",
            "d) [2, 5, 8]"
        ],
        "Answer": "Answer: c\nExplanation: To get a particular column as output, we can simple iterate across the rows and pull out the desired column, or iterate through positions in rows and index as we go. Hence the output of the code shown above is: [2, 5, 8]."
    },
    {
        "id": 413,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>l<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>:\n\t\tl<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span>j<span class=\"br0\">]</span>+<span class=\"sy0\">=</span><span class=\"nu0\">10</span>\nl</pre></div></div></div></div></div></div>",
        "Options": [
            "a) No output",
            "b) Error",
            "c) [[1, 2, 3], [4, 5, 6]] ",
            "d) [[11, 12, 13], [14, 15, 16]]"
        ],
        "Answer": "Answer: a\nExplanation: We can also perform tasks like pulling out a diagonal. The expression shown above uses range to generate the list of offsets and the indices with the row and column the same, picking out A[0][0], then A[1][1] and so on. Hence the output of the code is: [1, 5, 9]."
    },
    {
        "id": 414,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n&nbsp;\n<span class=\"br0\">[</span><span class=\"br0\">[</span>col + <span class=\"nu0\">10</span> <span class=\"kw1\">for</span> col <span class=\"kw1\">in</span> row<span class=\"br0\">]</span> <span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> A<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [[11, 12, 13], [14, 15, 16], [17, 18, 19]] ",
            "b) Error",
            "c) [11, 12, 13], [14, 15, 16], [17, 18, 19] ",
            "d) [11, 12, 13, 14, 15, 16, 17, 18, 19]"
        ],
        "Answer": "Answer: d\nExplanation: We use range twice if the shapes differ. Each element of list l is increased by 10. Hence the output is: [[11, 12, 13], [14, 15, 16]]"
    },
    {
        "id": 415,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>A<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span>-<span class=\"nu0\">1</span>-i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>A<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 5, 9] ",
            "b) [4, 5, 6] ",
            "c) [3, 5, 7] ",
            "d) [2, 5, 8]"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above shows a list comprehension which adds 10 to each element of the matrix A and prints it row-wise. Hence the output of the code is:  [[11, 12, 13], [14, 15, 16], [17, 18, 19]]"
    },
    {
        "id": 416,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nB <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span>B<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span>col<span class=\"br0\">]</span>*A<span class=\"br0\">[</span>row<span class=\"br0\">]</span><span class=\"br0\">[</span>col<span class=\"br0\">]</span> <span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> <span class=\"kw1\">for</span> col <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [3, 6, 9, 16, 20, 24, 35, 40, 45]",
            "b) Error",
            "c) [0, 30, 60, 120, 160, 200, 300, 350, 400]",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation: This expression scales the common index to fetch A[0][2], A[1][1], etc. We assume the matrix has the same number of rows and columns."
    },
    {
        "id": 417,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">r <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">11</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">13</span><span class=\"sy0\">,</span> <span class=\"nu0\">14</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">16</span><span class=\"sy0\">,</span> <span class=\"nu0\">17</span><span class=\"sy0\">,</span> <span class=\"nu0\">18</span><span class=\"sy0\">,</span> <span class=\"nu0\">19</span><span class=\"br0\">]</span>\nA <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n               <span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">40</span><span class=\"sy0\">,</span> <span class=\"nu0\">50</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n               <span class=\"br0\">[</span><span class=\"nu0\">60</span><span class=\"sy0\">,</span> <span class=\"nu0\">70</span><span class=\"sy0\">,</span> <span class=\"nu0\">80</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">for</span> row <span class=\"kw1\">in</span> A:\n\t<span class=\"kw1\">for</span> col <span class=\"kw1\">in</span> row:\n\t\tr.<span class=\"me1\">append</span><span class=\"br0\">(</span>col+<span class=\"nu0\">10</span><span class=\"br0\">)</span>\nr</pre></div></div></div></div></div></div>",
        "Options": [
            "a) [11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 20, 30, 40, 50, 60, 70, 80, 90]",
            "b) [10, 20, 30, 40, 50, 60, 70, 80, 90]",
            "c) [11, 12, 13, 14, 15, 16, 17, 18, 19]",
            "d) [0, 10, 20, 30, 40, 50, 60, 70, 80]"
        ],
        "Answer": "Answer: a\nExplanation: In the code shown above, we have used list comprehension to combine values of multiple matrices. We have multiplied the elements of the matrix B with that of the matrix A, in the range(3). Hence the output of this code is: [3, 6, 9, 16, 20, 24, 35, 40, 45]."
    },
    {
        "id": 418,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nB <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"br0\">[</span><span class=\"br0\">[</span>col1 * col2 <span class=\"kw1\">for</span> <span class=\"br0\">(</span>col1<span class=\"sy0\">,</span> col2<span class=\"br0\">)</span> <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>row1<span class=\"sy0\">,</span> row2<span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"kw1\">for</span> <span class=\"br0\">(</span>row1<span class=\"sy0\">,</span> row2<span class=\"br0\">)</span> <span class=\"kw1\">in</span> <span class=\"kw2\">zip</span><span class=\"br0\">(</span>A<span class=\"sy0\">,</span> B<span class=\"br0\">)</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 30, 60, 120, 160, 200, 300, 350, 400]",
            "b) [[3, 6, 9], [16, 20, 24], [35, 40, 45]]",
            "c) No output",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above adds 10 to each element of the matrix and prints the output row-wise. Since the list l already contains some elements, the new elements are appended to it. Hence the output of this code is: [11, 12, 13, 14, 15, 16, 17, 18, 19, 10, 20, 30, 40, 50, 60, 70, 80, 90]."
    },
    {
        "id": 419,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">A <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nB <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"sy0\">,</span>\n     <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw2\">zip</span><span class=\"br0\">(</span>A<span class=\"sy0\">,</span> B<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Address of the zip object",
            "b) Address of the matrices A and B",
            "c) No output",
            "d) [3, 6, 9, 16, 20, 24, 35, 40, 45]"
        ],
        "Answer": "Answer: b\nExplanation: The list comprehension shown above results in the output: [[3, 6, 9], [16, 20, 24], [35, 40, 45]]."
    },
    {
        "id": 420,
        "Question": "Which of the following is a Python tuple?",
        "Options": [
            "a) [1, 2, 3] ",
            "b) (1, 2, 3)",
            "c) {1, 2, 3}",
            "d) {}"
        ],
        "Answer": " Answer: b\nExplanation: Tuples are represented with round brackets."
    },
    {
        "id": 421,
        "Question": "Suppose t = (1, 2, 4, 3), which of the following is incorrect?",
        "Options": [
            "a) print(t[3])",
            "b) t[3] = 45",
            "c) print(max(t))",
            "d) print(len(t))"
        ],
        "Answer": " Answer: b\nExplanation: Values cannot be modified in the case of tuple, that is, tuple is immutable. "
    },
    {
        "id": 422,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t<span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"nu0\">3</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) (1, 2)",
            "b) (1, 2, 4)",
            "c) (2, 4)",
            "d) (2, 4, 3)"
        ],
        "Answer": " Answer: c\nExplanation: Slicing in tuples takes place just as it does in strings. "
    },
    {
        "id": 423,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t<span class=\"sy1\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">4</span>,<span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy4\">:</span><span class=\"sy2\">-</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) (1, 2)",
            "b) (1, 2, 4)",
            "c) (2, 4)",
            "d) (2, 4, 3)"
        ],
        "Answer": " Answer: c\nExplanation: Slicing in tuples takes place just as it does in strings."
    },
    {
        "id": 424,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span><span class=\"br0\">[</span>t<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"kw1\">for</span> i in range<span class=\"br0\">(</span><span class=\"nu0\">0</span>, len<span class=\"br0\">(</span>t<span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [2, 3, 9] ",
            "b) [1, 2, 4, 3, 8, 9] ",
            "c) [1, 4, 8] ",
            "d) (1, 4, 8)"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 425,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d<span class=\"br0\">[</span><span class=\"st0\">\"john\"</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 40",
            "b) 45",
            "c) “john”",
            "d) “peter”"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 426,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span><span class=\"nu0\">2</span> <span class=\"sy2\">*</span> t</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) (1, 2, 1, 2)",
            "b) [1, 2, 1, 2] ",
            "c) (1, 1, 2, 2)",
            "d) [1, 1, 2, 2]"
        ],
        "Answer": " Answer: a\nExplanation: * operator concatenates tuple."
    },
    {
        "id": 427,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t1 <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t2 <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>t1 <span class=\"sy1\">&lt;</span> t2</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) None"
        ],
        "Answer": " Answer: b\nExplanation: Elements are compared one by one in this case."
    },
    {
        "id": 428,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>my_tuple <span class=\"sy1\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>my_tuple.<span class=\"me1\">append</span><span class=\"br0\">(</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">)</span> <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy1\">&gt;&gt;&gt;</span>print len<span class=\"br0\">(</span>my_tuple<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 5",
            "d) Error"
        ],
        "Answer": " Answer: d\nExplanation: Tuples are immutable and don’t have an append method. An exception is thrown in this case."
    },
    {
        "id": 429,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">numberGames <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">numberGames<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">8</span></pre></li><li class=\"li1\"><pre class=\"de1\">numberGames<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">4</span>,<span class=\"nu0\">2</span>,<span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">10</span></pre></li><li class=\"li1\"><pre class=\"de1\">numberGames<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy1\">=</span> <span class=\"nu0\">12</span></pre></li><li class=\"li1\"><pre class=\"de1\">sum <span class=\"sy1\">=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> k in numberGames<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    sum <span class=\"sy2\">+</span><span class=\"sy1\">=</span> numberGames<span class=\"br0\">[</span>k<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">print len<span class=\"br0\">(</span>numberGames<span class=\"br0\">)</span> <span class=\"sy2\">+</span> sum</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 30",
            "b) 24",
            "c) 33",
            "d) 12"
        ],
        "Answer": " Answer: c\nExplanation: Tuples can be used for keys into dictionary. The tuples can have mixed length and the order of the items in the tuple is considered when comparing the equality of the keys."
    },
    {
        "id": 430,
        "Question": "1.\tWhat is the data type of (1)?",
        "Options": [
            "a)\tTuple",
            "b)\tInteger",
            "c)\tList",
            "d)\tBoth tuple and integer"
        ],
        "Answer": "Answer: b\nExplanation: A tuple of one element must be created as (1,)."
    },
    {
        "id": 431,
        "Question": "2.\tIf a=(1,2,3,4), a[1:-1] is _________",
        "Options": [
            "a)\tError, tuple slicing doesn’t exist",
            "b)\t[2,3] ",
            "c)\t(2,3,4)",
            "d)\t(2,3)"
        ],
        "Answer": "Answer: d\nExplanation: Tuple slicing exists and a[1:-1] returns (2,3)."
    },
    {
        "id": 432,
        "Question": "3.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">&lt;</span>b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tFalse",
            "b)\tTrue",
            "c)\tError, < operator is not valid for tuples",
            "d)\tError, < operator is valid for tuples but not if there are sub-tuples"
        ],
        "Answer": "Answer: a\nExplanation: Since the first element in the sub-tuple of a is larger that the first element in the subtuple of b, False is printed."
    },
    {
        "id": 433,
        "Question": "4.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"st0\">\"Check\"</span><span class=\"br0\">)</span>*<span class=\"nu0\">3</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)  (‘Check’,’Check’,’Check’)",
            "b) * Operator not valid for tuples",
            "c)  (‘CheckCheckCheck’)",
            "d) Syntax error"
        ],
        "Answer": "Answer: c\nExplanation: Here (“Check”) is a string not a tuple because there is no comma after the element."
    },
    {
        "id": 434,
        "Question": "5.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">del</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tNow, a=(1,2,4)",
            "b)\tNow, a=(1,3,4)",
            "c)\tNow a=(3,4)",
            "d)\tError as tuple is immutable"
        ],
        "Answer": "Answer: d\nExplanation: ‘tuple’ object doesn’t support item deletion."
    },
    {
        "id": 435,
        "Question": "6.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tToo many arguments for sum() method",
            "b)\tThe method sum() doesn’t exist for tuples",
            "c)\t12",
            "d)\t9"
        ],
        "Answer": "Answer: c\nExplanation: In the above case, 3 is the starting value to which the sum of the tuple is added to."
    },
    {
        "id": 436,
        "Question": "7.\tIs the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">del</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tNo because tuple is immutable",
            "b)\tYes, first element in the tuple is deleted",
            "c)\tYes, the entire tuple is deleted",
            "d)\tNo, invalid syntax for del method"
        ],
        "Answer": "Answer: c\nExplanation: The command del a deletes the entire tuple."
    },
    {
        "id": 437,
        "Question": "8.\tWhat type of data is: a=[(1,1),(2,4),(3,9)]?",
        "Options": [
            "a)\tArray of tuples",
            "b)\tList of tuples",
            "c)\tTuples of lists",
            "d)\tInvalid type"
        ],
        "Answer": "Answer: b\nExplanation: The variable a has tuples enclosed in a list making it a list of tuples."
    },
    {
        "id": 438,
        "Question": "9.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw2\">slice</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"br0\">[</span>b<span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tInvalid syntax for slicing",
            "b)\t[0,2] ",
            "c)\t(0,1)",
            "d)\t(0,2)"
        ],
        "Answer": "Answer: c\nExplanation: The method illustrated in the above piece of code is that of naming of slices."
    },
    {
        "id": 439,
        "Question": "10.\tIs the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"st0\">'A'</span><span class=\"sy0\">,</span><span class=\"st0\">'B'</span><span class=\"sy0\">,</span><span class=\"st0\">'C'</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> c<span class=\"sy0\">=</span><span class=\"kw2\">tuple</span><span class=\"br0\">(</span><span class=\"kw2\">zip</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, c will be ((1, ‘A’), (2, ‘B’), (3, ‘C’))",
            "b)\tYes, c will be ((1,2,3),(‘A’,’B’,’C’))",
            "c)\tNo because tuples are immutable",
            "d)\tNo because the syntax for zip function isn’t valid"
        ],
        "Answer": "Answer: a\nExplanation: Zip function combines individual elements of two iterables into tuples. Execute in Python shell to verify."
    },
    {
        "id": 440,
        "Question": "1. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>c<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">,</span>c</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, [1,2,3] is printed",
            "b)\tNo, invalid syntax",
            "c)\tYes, (1,2,3) is printed",
            "d)\t1 is printed"
        ],
        "Answer": "Answer: c\nExplanation: A tuple needn’t be enclosed in parenthesis."
    },
    {
        "id": 441,
        "Question": "3. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">=</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, this is an example of tuple unpacking. a=1 and b=2",
            "b)\tYes, this is an example of tuple unpacking. a=(1,2) and b=3",
            "c)\tNo, too many values to unpack",
            "d)\tYes, this is an example of tuple unpacking. a=1 and b=(2,3)"
        ],
        "Answer": "Answer: b\nExplanation: The loop runs two times and each time the loop runs an extra parenthesis along with a comma is added to the tuple (as a=(a’))."
    },
    {
        "id": 442,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> c<span class=\"sy0\">=</span>a+b\n<span class=\"sy0\">&gt;&gt;&gt;</span> c</pre></div></div></div></div></div></div>",
        "Options": [
            "a) (4,6)",
            "b) (1,2,3,4)",
            "c) Error as tuples are immutable",
            "d) None"
        ],
        "Answer": "Answer: c\nExplanation: For unpacking to happen, the number of values of the right hand side must be equal to the number of variables on the left hand side."
    },
    {
        "id": 443,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">=</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b<span class=\"sy0\">=</span>b<span class=\"sy0\">,</span>a\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">,</span>b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t(6,7)",
            "b)\tInvalid syntax",
            "c)\t(7,6)",
            "d)\tNothing is printed"
        ],
        "Answer": "Answer: b\nExplanation: In the above piece of code, the values of the tuples aren’t being changed. Both the tuples are simply concatenated. "
    },
    {
        "id": 444,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">namedtuple</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"st0\">'i'</span><span class=\"sy0\">,</span><span class=\"st0\">'j'</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> obj<span class=\"sy0\">=</span>a<span class=\"br0\">(</span>i<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span>j<span class=\"sy0\">=</span><span class=\"nu0\">7</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> obj</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\ta(i=4, j=7)",
            "b)\tobj(i=4, j=7)",
            "c)\t(4,7)",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: c\nExplanation: The above piece of code illustrates the unpacking of variables."
    },
    {
        "id": 445,
        "Question": "8. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, 2 is printed",
            "b)\tYes, [2,3,4,5] is printed",
            "c)\tNo, too many values to unpack",
            "d)\tYes, (2,3,4,5) is printed"
        ],
        "Answer": "Answer: a\nExplanation: The above piece of code illustrates the concept of named tuples."
    },
    {
        "id": 446,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t(1,2,3,5)",
            "b)\t(2,3,1,5)",
            "c)\tNone",
            "d)\tError, tuple has no attribute sort"
        ],
        "Answer": "Answer: b\nExplanation: Tuples can be made keys of a dictionary because they are hashable."
    },
    {
        "id": 447,
        "Question": "10. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span>a.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, a=(1,2,3,4) and b=(1,2,3,4)",
            "b)\tYes, a=(1,2,3) and b=(1,2,3,4)",
            "c)\tNo because tuples are immutable",
            "d)\tNo because wrong syntax for update() method"
        ],
        "Answer": "Answer: d\nExplanation: A tuple needn’t be enclosed in parenthesis. "
    },
    {
        "id": 448,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">]</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">sort</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[(1, 2), (2, 4), (3, 9)] ",
            "b)\t[(2,4),(1,2),(3,9)] ",
            "c)\tError because tuples are immutable",
            "d)\tError, tuple has no sort attribute"
        ],
        "Answer": "Answer: d\nExplanation: A tuple is immutable thus it doesn’t have a sort attribute."
    },
    {
        "id": 449,
        "Question": "1.\tWhich of these about a set is not true?",
        "Options": [
            "a)\tMutable data type",
            "b)\tAllows duplicate values",
            "c)\tData type with unordered values",
            "d)\tImmutable data type"
        ],
        "Answer": "Answer: d\nExplanation: A set is a mutable data type with non-duplicate, unordered values, providing the usual mathematical set operations. "
    },
    {
        "id": 450,
        "Question": "2.\tWhich of the following is not the correct syntax for creating a set?",
        "Options": [
            "a)\tset([[1,2],[3,4]])",
            "b)\tset([1,2,2,3,4])",
            "c)\tset((1,2,3,4))",
            "d)\t{1,2,3,4}"
        ],
        "Answer": "Answer: a\nExplanation: The argument given for the set must be an iterable."
    },
    {
        "id": 451,
        "Question": "3.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">nums <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>nums<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t7",
            "b)\tError, invalid syntax for formation of set",
            "c)\t4",
            "d)\t8"
        ],
        "Answer": "Answer: c\nExplanation:  A set doesn’t have duplicate items. "
    },
    {
        "id": 452,
        "Question": "4.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">]</span>\nb <span class=\"sy0\">=</span> <span class=\"kw2\">set</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> <span class=\"kw3\">test</span><span class=\"br0\">(</span>lst<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> lst <span class=\"kw1\">in</span> b:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span>  <span class=\"kw2\">filter</span><span class=\"br0\">(</span><span class=\"kw3\">test</span><span class=\"sy0\">,</span> a<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t5 5 6",
            "b)\t5 6 7",
            "c)\t5 5 6 7 7 7",
            "d)\t5 6 7 7 7"
        ],
        "Answer": "Answer: c\nExplanation: The filter function will return all the values from list a which are true when passed to function test. Since all the members of the set are non-duplicate members of the list, all of the values will return true. Hence all the values in the list are printed."
    },
    {
        "id": 453,
        "Question": "5.\tWhich of the following statements is used to create an empty set?",
        "Options": [
            "a)\t{ }",
            "b)\tset()",
            "c)\t[ ] ",
            "d)\t( )"
        ],
        "Answer": "Answer: b\nExplanation: { } creates a dictionary not a set. Only set() creates an empty set. "
    },
    {
        "id": 454,
        "Question": "6.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">&lt;</span>b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1,2}",
            "b)\tTrue",
            "c)\tFalse",
            "d)\tInvalid operation"
        ],
        "Answer": "Answer: b\nExplanation: a<b returns True if a is a proper subset of b."
    },
    {
        "id": 455,
        "Question": " If a={5,6,7,8}, which of the following statements is false?",
        "Options": [
            "a)\tprint(len(a))",
            "b)\tprint(min(a))",
            "c)\ta.remove(5)",
            "d)\ta[2]=45"
        ],
        "Answer": "Answer: d\nExplanation: The members of a set can be accessed by their index values since the elements of the set are unordered."
    },
    {
        "id": 456,
        "Question": " If a={5,6,7}, what happens when a.add(5) is executed?",
        "Options": [
            "a)\ta={5,5,6,7}",
            "b)\ta={5,6,7}",
            "c)\tError as there is no add function for set data type",
            "d)\tError as 5 already exists in the set"
        ],
        "Answer": "Answer: b\nExplanation: There exists add method for set data type. However 5 isn’t added again as set consists of only non-duplicate elements and 5 already exists in the set. Execute in python shell to verify."
    },
    {
        "id": 457,
        "Question": "9.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a+b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{4,5,6,2,8}",
            "b)\t{4,5,6,2,8,6}",
            "c)\tError as unsupported operand type for sets",
            "d)\tError as the duplicate item 6 is present in both sets"
        ],
        "Answer": "Answer: c\nExplanation: Execute in python shell to verify."
    },
    {
        "id": 458,
        "Question": "10.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a-b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{4,5}",
            "b)\t{6}",
            "c)\tError as unsupported operand type for set data type",
            "d)\tError as the duplicate item 6 is present in both sets"
        ],
        "Answer": "Answer: a\nExplanation: – operator gives the set of elements in set a but not in set b. "
    },
    {
        "id": 459,
        "Question": "11.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">11</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a^b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{5,6,7,8,10,11}",
            "b)\t{7,8}",
            "c)\tError as unsupported operand type of set data type",
            "d)\t{5,6,10,11}"
        ],
        "Answer": "Answer: d\nExplanation: ^ operator returns a set of elements in set A or set B, but not in both (symmetric difference). "
    },
    {
        "id": 460,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> s<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> s*<span class=\"nu0\">3</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError as unsupported operand type for set data type",
            "b)\t{5,6,5,6,5,6}",
            "c)\t{5,6}",
            "d)\tError as multiplication creates duplicate elements which isn’t allowed"
        ],
        "Answer": "Answer: a\nExplanation: The multiplication operator isn’t valid for the set data type."
    },
    {
        "id": 461,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a|b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tInvalid operation",
            "b)\t{3, 4, 5, 6, 7}",
            "c)\t{5}",
            "d)\t{3,4,6,7}"
        ],
        "Answer": "Answer: a\nExplanation:  It is possible to compare two sets and the order of elements in both the sets doesn’t matter if the values of the elements are the same."
    },
    {
        "id": 462,
        "Question": "15. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"br0\">{</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, 7 is printed",
            "b)\tError, elements of a set can’t be printed",
            "c)\tError, subsets aren’t allowed",
            "d)\tYes, {7,5} is printed"
        ],
        "Answer": "Answer: b\nExplanation:  The operation in the above piece of code is union operation. This operation produces a set of elements in both set a and set b."
    },
    {
        "id": 463,
        "Question": "1.\tWhich of these about a frozenset is not true?",
        "Options": [
            "a)\tMutable data type",
            "b)\tAllows duplicate values",
            "c)\tData type with unordered values",
            "d)\tImmutable data type"
        ],
        "Answer": "Answer: a\nExplanation: A frozenset is an immutable data type."
    },
    {
        "id": 464,
        "Question": "2.\tWhat is the syntax of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw2\">frozenset</span><span class=\"br0\">(</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{5,6,7}",
            "b)\tfrozenset({5,6,7})",
            "c)\tError, not possible to convert set into frozenset",
            "d)\tSyntax error"
        ],
        "Answer": "Answer: b\nExplanation: The above piece of code is the correct syntax for creating a frozenset."
    },
    {
        "id": 465,
        "Question": "3.\tIs the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw2\">frozenset</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tYes, now a is {5,5,6,7}",
            "b)\tNo, frozen set is immutable",
            "c)\tNo, invalid syntax for add method",
            "d)\tYes, now a is {5,6,7}"
        ],
        "Answer": "Answer: b\nExplanation:  Since a frozen set is immutable, add method doesn’t exist for frozen method."
    },
    {
        "id": 466,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, no method called update for set data type",
            "b)\t{1, 2, 3, 4, 5}",
            "c)\tError, list can’t be added to set",
            "d)\tError, duplicate item present in list"
        ],
        "Answer": "Answer: b\nExplanation: Set members must always be hashable."
    },
    {
        "id": 467,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">intersection_update</span><span class=\"br0\">(</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{2,3}",
            "b)\tError, duplicate item present in list",
            "c)\tError, no method called intersection_update for set data type",
            "d)\t{1,4,5}"
        ],
        "Answer": "Answer: b\nExplanation: The method update adds elements to a set."
    },
    {
        "id": 468,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span>a\n<span class=\"sy0\">&gt;&gt;&gt;</span> b.<span class=\"me1\">remove</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1,2,3}",
            "b)\tError, copying of sets isn’t allowed",
            "c)\t{1,2}",
            "d)\tError, invalid syntax for remove"
        ],
        "Answer": "Answer: a\nExplanation: The method intersection_update returns a set which is an intersection of both the sets."
    },
    {
        "id": 469,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span>a.<span class=\"kw3\">copy</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1,2,3}",
            "b)\tError, invalid syntax for add",
            "c)\t{1,2,3,4}",
            "d)\tError, copying of sets isn’t allowed"
        ],
        "Answer": "Answer: c\nExplanation: Any change made in b is reflected in a because b is an alias of a."
    },
    {
        "id": 470,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span>a.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t0",
            "b)\t{1,2,3,4}",
            "c)\t{1,2,3}",
            "d)\tNothing is printed"
        ],
        "Answer": "Answer: a\nExplanation: In the above piece of code, b is barely a copy and not an alias of a. Hence any change made in b isn’t reflected in a."
    },
    {
        "id": 471,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw2\">frozenset</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a-b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1,2}",
            "b)\tError as difference between a set and frozenset can’t be found out",
            "c)\tError as unsupported operand type for set data type",
            "d)\tfrozenset({1,2})"
        ],
        "Answer": "Answer: d\nExplanation: The method add returns nothing, hence nothing is printed."
    },
    {
        "id": 472,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">sum</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t5",
            "b)\t23",
            "c)\t18",
            "d)\tInvalid syntax for sum method, too many arguments"
        ],
        "Answer": "Answer: a\nExplanation: – operator gives the set of elements in set a but not in set b."
    },
    {
        "id": 473,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"br0\">{</span>x*<span class=\"nu0\">2</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> a|<span class=\"br0\">{</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{2,4,6}",
            "b)\tError, set comprehensions aren’t allowed",
            "c)\t{8, 2, 10, 4, 6}",
            "d)\t{8,10}"
        ],
        "Answer": "Answer: b\nExplanation: The second parameter is the start value for the sum of elements in set a. Thus, sum(a,5) = 5+(5+6+7)=23."
    },
    {
        "id": 474,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">len</span><span class=\"br0\">(</span>a+b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t8",
            "b)\tError, unsupported operand ‘+’ for sets",
            "c)\t6",
            "d)\tNothing is displayed"
        ],
        "Answer": "Answer: c\nExplanation: Set comprehensions are allowed."
    },
    {
        "id": 475,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\nb<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\nc<span class=\"sy0\">=</span>a.<span class=\"me1\">issubset</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tTrue",
            "b)\tError, no method called issubset() exists",
            "c)\tSyntax error for issubset() method",
            "d)\tFalse"
        ],
        "Answer": "Answer: b\nExplanation:  Duplicate elements in a+b is eliminated and the length of a+b is computed."
    },
    {
        "id": 476,
        "Question": "15. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">}</span>\nb<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">}</span>\nc<span class=\"sy0\">=</span>a.<span class=\"me1\">issuperset</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tFalse",
            "b)\tTrue",
            "c)\tSyntax error for issuperset() method",
            "d)\tError, no method called issuperset() exists"
        ],
        "Answer": "Answer: a\nExplanation:  The method issubset() returns True if b is a proper subset of a."
    },
    {
        "id": 477,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw2\">type</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) <’set’>",
            "b) <class ‘set’>",
            "c) set",
            "d) class set"
        ],
        "Answer": "Answer: b\nExplanation: When we find the type of a set, the output returned is: ."
    },
    {
        "id": 478,
        "Question": "Which of the following lines of code will result in an error?",
        "Options": [
            "a) s={abs}",
            "b) s={4, ‘abc’, (1,2)}",
            "c) s={2, 2.2, 3, ‘xyz’}",
            "d) s={san}"
        ],
        "Answer": "Answer: a\nExplanation: The set data type makes use of a principle known as hashing. This means that each item in the set should be hashable. Hashable in this context means immutable. List is mutable and hence the line of code shown above will result in an error."
    },
    {
        "id": 479,
        "Question": "5.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"br0\">}</span>\ns</pre></div></div></div></div></div></div>",
        "Options": [
            "a) {2, 5, 7}",
            "b) {2, 5, 6, 7}",
            "c) {2, 5, 6, 6, 7}",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: Set makes use of keys.\nDictionary makes use of key values."
    },
    {
        "id": 480,
        "Question": "7. Write a list comprehension for number and its cube for:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">7</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [x**3 for x in l]",
            "b) [x^3 for x in l]",
            "c) [x**3 in l]",
            "d) [x^3 in l]"
        ],
        "Answer": "Answer: d\nExplanation: The line: s={san} will result in an error because ‘san’ is not defined.  The line s={abs} does not result in an error because abs is a built-in function.  The other sets shown do not result in an error because all the items are hashable."
    },
    {
        "id": 481,
        "Question": "8.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">}</span>\ns.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>\ns</pre></div></div></div></div></div></div>",
        "Options": [
            "a) {1, 2, 3, 4}",
            "b) {1, 2, 4, 3}",
            "c) {4, 1, 2, 3}",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Duplicate values are not allowed in sets. Hence, the output of the code shown above will be a set containing the duplicate value only once. Therefore the output is: {2, 5, 6, 7}"
    },
    {
        "id": 482,
        "Question": "Which of the following functions cannot be used on heterogeneous sets?",
        "Options": [
            "a) pop",
            "b) remove",
            "c) update",
            "d) sum"
        ],
        "Answer": "Answer: b\nExplanation: The input order in sets is not maintained. This is demonstrated by the code shown below:\n\n\n>>> s={2, 6, 8, 1, 5}\n>>> s\n{8, 1, 2, 5, 6}\n\n\n "
    },
    {
        "id": 483,
        "Question": "Which of the following functions will return the symmetric difference between two sets, x and y?",
        "Options": [
            "a) x | y",
            "b) x ^ y",
            "c) x & y",
            "d) x – y"
        ],
        "Answer": "Answer: b\nExplanation: The function x ^ y returns the symmetric difference between the two sets x and y. This is basically an XOR operation being performed on the two sets."
    },
    {
        "id": 484,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">z<span class=\"sy0\">=</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"st0\">'abc$de'</span><span class=\"br0\">)</span>\n<span class=\"st0\">'a'</span> <span class=\"kw1\">in</span> z</pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) No output",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above is used to check whether a particular item is a part of a given set or not. Since ‘a’ is a part of the set z, the output is true. Note that this code would result in an error in the absence of the quotes."
    },
    {
        "id": 485,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">z<span class=\"sy0\">=</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"st0\">'abc'</span><span class=\"br0\">)</span>\nz.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"st0\">'san'</span><span class=\"br0\">)</span>\nz.<span class=\"me1\">update</span><span class=\"br0\">(</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st0\">'p'</span><span class=\"sy0\">,</span> <span class=\"st0\">'q'</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\nz</pre></div></div></div></div></div></div>",
        "Options": [
            "a) {‘abc’, ‘p’, ‘q’, ‘san’}",
            "b) {‘a’, ‘b’, ‘c’, [‘p’, ‘q’], ‘san}",
            "c) {‘a’, ‘c’, ‘c’, ‘p’, ‘q’, ‘s’, ‘a’, ‘n’}",
            "d) {‘a’, ‘b’, ‘c’, ‘p’, ‘q’, ‘san’}"
        ],
        "Answer": "Answer: d\nExplanation: The code shown first adds the element ‘san’ to the set z. The set z is then updated and two more elements, namely, ‘p’ and ‘q’ are added to it. Hence the output is: {‘a’, ‘b’, ‘c’, ‘p’, ‘q’, ‘san’}"
    },
    {
        "id": 486,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"br0\">{</span>a**<span class=\"nu0\">2</span> <span class=\"kw1\">for</span> a <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {1, 4, 9, 16}",
            "b) {0, 1, 4, 9, 16}",
            "c) Error",
            "d) {0, 1, 4, 9}"
        ],
        "Answer": "Answer: c\nExplanation: The first function in the code shown above returns the set {1, 2, 3, 4, 5}. This is because the method of the function union allows any iterable. However the second function results in an error because of unsupported data type, that is list and set."
    },
    {
        "id": 487,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s1<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">}</span>\ns2<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">}</span>\ns3<span class=\"sy0\">=</span><span class=\"kw2\">set</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\ni<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\nj<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> s1:\n    <span class=\"kw1\">for</span> j <span class=\"kw1\">in</span> s2:\n        s3.<span class=\"me1\">add</span><span class=\"br0\">(</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span>\n        i+<span class=\"sy0\">=</span><span class=\"nu0\">1</span>\n        j+<span class=\"sy0\">=</span><span class=\"nu0\">1</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>s3<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {(3, 4), (1, 2)}",
            "b) Error",
            "c) {(4, 2), (3, 1), (4, 1), (5, 2)}",
            "d) {(3, 1), (4, 2)}"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above finds the Cartesian product of the two sets, s1 and s2. The Cartesian product of these two sets is stored in a third set, that is, s3. Hence the output of this code is: {(4, 2), (3, 1), (4, 1), (5, 2)}."
    },
    {
        "id": 488,
        "Question": "The ____________ function removes the first element of a set and the last element of a list.",
        "Options": [
            "a) remove",
            "b) pop",
            "c) discard",
            "d) dispose"
        ],
        "Answer": "Answer: b\nExplanation: The function pop removes the first element when used on a set and the last element when used to a list."
    },
    {
        "id": 489,
        "Question": "The difference between the functions discard and remove is that:",
        "Options": [
            "a) Discard removes the last element of the set whereas remove removes the first element of the set",
            "b) Discard throws an error if the specified element is not present in the set whereas remove does not throw an error in case of absence of the specified element",
            "c) Remove removes the last element of the set whereas discard removes the first element of the set",
            "d) Remove throws an error if the specified element is not present in the set whereas discard does not throw an error in case of absence of the specified element"
        ],
        "Answer": "Answer: d\nExplanation: The function remove removes the element if it is present in the set. If the element is not present, it throws an error. The function discard removes the element if it is present in the set. If the element is not present, no action is performed (Error is not thrown)."
    },
    {
        "id": 490,
        "Question": "If we have two sets, s1 and s2, and we want to check if all the elements of s1 are present in s2 or not, we can use the function:",
        "Options": [
            "a) s2.issubset(s1)",
            "b) s2.issuperset(s1)",
            "c) s1.issuperset(s2)",
            "d) s1.isset(s2)"
        ],
        "Answer": "Answer: a\nExplanation: The function s1.difference(s2) returns a set containing the elements which are present in the set s1 but not in the set s2. Similarly, the function s2.difference(s1) returns a set containing elements which are present in the set s2 but not in the set s1. Hence the output of the code shown above will be:\n{1, 2}\n{4, 5, 6}."
    },
    {
        "id": 491,
        "Question": "9. What will be the output of the following Python code, if s1= {1, 2, 3}?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s1.<span class=\"me1\">issubset</span><span class=\"br0\">(</span>s1<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) Error",
            "c) No output",
            "d) False"
        ],
        "Answer": "Answer: c\nExplanation: The function isdisjoint returns true the two sets in question are disjoint, that is if they do not have even a single element in common. The two sets s1 and s2 do not have any elements in common, hence true is returned in both the cases."
    },
    {
        "id": 492,
        "Question": "Which of the following statements create a dictionary?",
        "Options": [
            "a) d = {}",
            "b) d = {“john”:40, “peter”:45}",
            "c) d = {40:”john”, 45:”peter”}",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Dictionaries are created by specifying keys and values."
    },
    {
        "id": 493,
        "Question": "2. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “john”, 40, 45, and “peter”",
            "b) “john” and “peter”",
            "c) 40 and 45",
            "d) d = (40:”john”, 45:”peter”)"
        ],
        "Answer": " Answer: b\nExplanation: Dictionaries appear in the form of keys and values. "
    },
    {
        "id": 494,
        "Question": "3. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"st0\">\"john\"</span> in d</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: In can be used to check if the key is int dictionary. "
    },
    {
        "id": 495,
        "Question": "4. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d1 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d2 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">466</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d1 <span class=\"sy1\">==</span> d2</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": " Answer: b\nExplanation: If d2 was initialized as d2 = d1 the answer would be true."
    },
    {
        "id": 496,
        "Question": "5. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d1 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d2 <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">466</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d1 <span class=\"sy1\">&gt;</span> d2</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) None"
        ],
        "Answer": " Answer: c\nExplanation: Arithmetic > operator cannot be used with dictionaries."
    },
    {
        "id": 497,
        "Question": "6. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">d<span class=\"br0\">[</span><span class=\"st0\">\"john\"</span><span class=\"br0\">]</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 40",
            "b) 45",
            "c) “john”",
            "d) “peter”"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify. "
    },
    {
        "id": 498,
        "Question": "Suppose d = {“john”:40, “peter”:45}, to delete the entry for “john” what command do we use?",
        "Options": [
            "a) d.delete(“john”:40)",
            "b) d.delete(“john”)",
            "c) del d[“john”] ",
            "d) del d(“john”:40)"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 499,
        "Question": "Suppose d = {“john”:40, “peter”:45}. To obtain the number of entries in dictionary which command do we use?",
        "Options": [
            "a) d.size()",
            "b) len(d)",
            "c) size(d)",
            "d) d.len()"
        ],
        "Answer": " Answer: b\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 500,
        "Question": "9. What will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">d <span class=\"sy1\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"john\"</span><span class=\"sy4\">:</span><span class=\"nu0\">40</span>, <span class=\"st0\">\"peter\"</span><span class=\"sy4\">:</span><span class=\"nu0\">45</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>list<span class=\"br0\">(</span>d.<span class=\"me1\">keys</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) [“john”, “peter”] ",
            "b) [“john”:40, “peter”:45] ",
            "c) (“john”, “peter”)",
            "d) (“john”:40, “peter”:45)"
        ],
        "Answer": " Answer: a\nExplanation: The output of the code shown above is a list containing only keys of the dictionary d, in the form of a list."
    },
    {
        "id": 501,
        "Question": "Suppose d = {“john”:40, “peter”:45}, what happens when we try to retrieve a value using the expression d[“susan”]?",
        "Options": [
            "a) Since “susan” is not a value in the set, Python raises a KeyError exception",
            "b) It is executed fine and no exception is raised, and it returns None",
            "c) Since “susan” is not a key in the set, Python raises a KeyError exception",
            "d) Since “susan” is not a key in the set, Python raises a syntax error"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 502,
        "Question": "1.\tWhich of these about a dictionary is false?",
        "Options": [
            "a)\tThe values of a dictionary can be accessed using keys",
            "b)\tThe keys of a dictionary can be accessed using values",
            "c)\tDictionaries aren’t ordered",
            "d)\tDictionaries are mutable"
        ],
        "Answer": "Answer: b\nExplanation: The values of a dictionary can be accessed using keys but the keys of a dictionary can’t be accessed using values."
    },
    {
        "id": 503,
        "Question": "2.\tWhich of the following is not a declaration of the dictionary?",
        "Options": [
            "a)\t{1: ‘A’, 2: ‘B’}",
            "b)\tdict([[1,”A”],[2,”B”]])",
            "c)\t{1,”A”,2”B”}",
            "d)\t{ }"
        ],
        "Answer": "Answer: c\nExplanation: Option c is a set, not a dictionary."
    },
    {
        "id": 504,
        "Question": "3.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> i<span class=\"sy0\">,</span>j <span class=\"kw1\">in</span> a.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1 A 2 B 3 C",
            "b)\t1 2 3",
            "c)\tA B C",
            "d)\t1:”A” 2:”B” 3:”C”"
        ],
        "Answer": "Answer: a\nExplanation: In the above code, variables i and j iterate over the keys and values of the dictionary respectively. "
    },
    {
        "id": 505,
        "Question": "4.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) A",
            "c) 4",
            "d) Invalid syntax for get method"
        ],
        "Answer": "Answer: b\nExplanation: The get() method returns the value of the key if the key is present in the dictionary and the default value(second parameter) if the key isn’t present in the dictionary."
    },
    {
        "id": 506,
        "Question": "5.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, invalid syntax",
            "b)\tA",
            "c)\t5",
            "d)\t4"
        ],
        "Answer": "Answer: d\nExplanation: The get() method returns the default value(second parameter) if the key isn’t present in the dictionary."
    },
    {
        "id": 507,
        "Question": "6.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a.<span class=\"me1\">setdefault</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1: ‘A’, 2: ‘B’, 3: ‘C’}",
            "b)\tC",
            "c)\t{1: 3, 2: 3, 3: 3}",
            "d)      No method called setdefault() exists for dictionary"
        ],
        "Answer": "Answer: b\nExplanation: setdefault() is similar to get() but will set dict[key]=default if key is not already in the dictionary."
    },
    {
        "id": 508,
        "Question": "7.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\na.<span class=\"me1\">setdefault</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"st0\">\"D\"</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1: ‘A’, 2: ‘B’, 3: ‘C’, 4: ‘D’}",
            "b)\tNone",
            "c)\tError",
            "d)\t[1,3,6,10]"
        ],
        "Answer": "Answer: a\nExplanation: setdefault() will set dict[key]=default if key is not already in the dictionary."
    },
    {
        "id": 509,
        "Question": "8.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\nb<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">4</span>:<span class=\"st0\">\"D\"</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span>:<span class=\"st0\">\"E\"</span><span class=\"br0\">}</span>\na.<span class=\"me1\">update</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1: ‘A’, 2: ‘B’, 3: ‘C’}",
            "b)\tMethod update() doesn’t exist for dictionaries",
            "c)\t{1: ‘A’, 2: ‘B’, 3: ‘C’, 4: ‘D’, 5: ‘E’}",
            "d)\t{4: ‘D’, 5: ‘E’}"
        ],
        "Answer": "Answer: c\nExplanation: update() method adds dictionary b’s key-value pairs to dictionary a. Execute in python shell to verify."
    },
    {
        "id": 510,
        "Question": "9.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\nb<span class=\"sy0\">=</span>a.<span class=\"kw3\">copy</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nb<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"st0\">\"D\"</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, copy() method doesn’t exist for dictionaries",
            "b)\t{1: ‘A’, 2: ‘B’, 3: ‘C’}",
            "c)\t{1: ‘A’, 2: ‘D’, 3: ‘C’}",
            "d)\t“None” is printed"
        ],
        "Answer": "Answer: b\nExplanation: Changes made in the copy of the dictionary isn’t reflected in the original one."
    },
    {
        "id": 511,
        "Question": "10.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\na.<span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tNone",
            "b)\t{ None:None, None:None, None:None}",
            "c)\t{1:None, 2:None, 3:None}",
            "d)\t{ }"
        ],
        "Answer": "Answer: d\nExplanation: The clear() method clears all the key-value pairs in the dictionary. "
    },
    {
        "id": 512,
        "Question": "11.\tWhich of the following isn’t true about dictionary keys?",
        "Options": [
            "a)\tMore than one key isn’t allowed",
            "b)\tKeys must be immutable",
            "c)\tKeys must be integers",
            "d)\tWhen duplicate keys encountered, the last assignment wins"
        ],
        "Answer": "Answer: c\nExplanation: Keys of a dictionary may be any data type that is immutable."
    },
    {
        "id": 513,
        "Question": "12.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"nu0\">4</span><span class=\"br0\">}</span>\na.<span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1: 5}",
            "b)\t{1: 5, 2: 3}",
            "c)\tError, syntax error for pop() method",
            "d)\t{1: 5, 3: 4}"
        ],
        "Answer": "Answer: b\nExplanation: pop() method removes the key-value pair for the key mentioned in the pop() method."
    },
    {
        "id": 514,
        "Question": "13.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"nu0\">4</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a.<span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t9",
            "b)\t3",
            "c)\tToo many arguments for pop() method",
            "d)\t4"
        ],
        "Answer": "Answer: a\nExplanation: pop() method returns the value when the key is passed as an argument and otherwise returns the default value(second argument) if the key isn’t present in the dictionary."
    },
    {
        "id": 515,
        "Question": "14.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> a:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1 2 3",
            "b)\t‘A’ ‘B’ ‘C’",
            "c)\t1 ‘A’ 2 ‘B’ 3 ‘C’",
            "d)\tError, it should be: for i in a.items():"
        ],
        "Answer": "Answer: a\nExplanation: The variable i iterates over the keys of the dictionary and hence the keys are printed."
    },
    {
        "id": 516,
        "Question": "15.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">items</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tSyntax error",
            "b)\tdict_items([(‘A’), (‘B’), (‘C’)])",
            "c)\tdict_items([(1,2,3)])",
            "d)\tdict_items([(1, ‘A’), (2, ‘B’), (3, ‘C’)])"
        ],
        "Answer": "Answer: d\nExplanation: The method items() returns list of tuples with each tuple having a key-value pair."
    },
    {
        "id": 517,
        "Question": "1.\tWhich of the statements about dictionary values if false?",
        "Options": [
            "a)\tMore than one key can have the same value",
            "b)\tThe values of the dictionary can be accessed as dict[key] ",
            "c)\tValues of a dictionary must be unique",
            "d)\tValues of a dictionary can be a mixture of letters and numbers"
        ],
        "Answer": "Answer: c\nExplanation: More than one key can have the same value."
    },
    {
        "id": 518,
        "Question": "2.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">\"A\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span>:<span class=\"st0\">\"B\"</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span>:<span class=\"st0\">\"C\"</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">del</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tmethod del doesn’t exist for the dictionary",
            "b)\tdel deletes the values in the dictionary",
            "c)\tdel deletes the entire dictionary",
            "d)\tdel deletes the keys in the dictionary"
        ],
        "Answer": "Answer: c\nExplanation: del deletes the entire dictionary and any further attempt to access it will throw an error."
    },
    {
        "id": 519,
        "Question": "3.\tIf a is a dictionary with some key-value pairs, what does a.popitem() do?",
        "Options": [
            "a)\tRemoves an arbitrary element",
            "b)\tRemoves all the key-value pairs",
            "c)\tRemoves the key-value pair for the key given as an argument",
            "d)\tInvalid method for dictionary"
        ],
        "Answer": "Answer: a\nExplanation: The method popitem() removes a random key-value pair."
    },
    {
        "id": 520,
        "Question": "4.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">total<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\n<span class=\"kw1\">def</span> insert<span class=\"br0\">(</span>items<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> items <span class=\"kw1\">in</span> total:\n        total<span class=\"br0\">[</span>items<span class=\"br0\">]</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">else</span>:\n        total<span class=\"br0\">[</span>items<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\ninsert<span class=\"br0\">(</span><span class=\"st0\">'Apple'</span><span class=\"br0\">)</span>\ninsert<span class=\"br0\">(</span><span class=\"st0\">'Ball'</span><span class=\"br0\">)</span>\ninsert<span class=\"br0\">(</span><span class=\"st0\">'Apple'</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>total<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 1",
            "c) 2",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation: The insert() function counts the number of occurrences of the item being inserted into the dictionary. There are only 2 keys present since the key ‘Apple’ is repeated. Thus, the length of the dictionary is 2."
    },
    {
        "id": 521,
        "Question": "5.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\na<span class=\"br0\">[</span><span class=\"st0\">'1'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>+<span class=\"nu0\">1</span>\ncount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> a:\n    count +<span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1",
            "b)\t2",
            "c)\t4",
            "d)\tError, the keys can’t be a mixture of letters and numbers"
        ],
        "Answer": "Answer: c\nExplanation: The above piece of code basically finds the sum of the values of keys. "
    },
    {
        "id": 522,
        "Question": "6.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">numbers <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\nletters <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\ncomb <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\nnumbers<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">56</span>\nnumbers<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span>\nletters<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'B'</span>\ncomb<span class=\"br0\">[</span><span class=\"st0\">'Numbers'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> numbers\ncomb<span class=\"br0\">[</span><span class=\"st0\">'Letters'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> letters\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>comb<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, dictionary in a dictionary can’t exist",
            "b)\t‘Numbers’: {1: 56, 3: 7}",
            "c)\t{‘Numbers’: {1: 56}, ‘Letters’: {4: ‘B’}}",
            "d)\t{‘Numbers’: {1: 56, 3: 7}, ‘Letters’: {4: ‘B’}}"
        ],
        "Answer": "Answer: d\nExplanation: Dictionary in a dictionary can exist."
    },
    {
        "id": 523,
        "Question": "7.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">test</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">'A'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>:<span class=\"st0\">'B'</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span>:<span class=\"st0\">'C'</span><span class=\"br0\">}</span>\n<span class=\"kw3\">test</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw3\">test</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t0",
            "b)\tNone",
            "c)\t3",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: a\nExplanation: In the second line of code, the dictionary becomes an empty dictionary. Thus, length=0."
    },
    {
        "id": 524,
        "Question": "8.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">test</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>:<span class=\"st0\">'A'</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>:<span class=\"st0\">'B'</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span>:<span class=\"st0\">'C'</span><span class=\"br0\">}</span>\n<span class=\"kw1\">del</span> <span class=\"kw3\">test</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\n<span class=\"kw3\">test</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">'D'</span>\n<span class=\"kw1\">del</span> <span class=\"kw3\">test</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw3\">test</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t0",
            "b)\t2",
            "c)\tError as the key-value pair of 1:’A’ is already deleted",
            "d)\t1"
        ],
        "Answer": "Answer: b\nExplanation: After the key-value pair of 1:’A’ is deleted, the key-value pair of 1:’D’ is added. "
    },
    {
        "id": 525,
        "Question": "9.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"br0\">}</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\na<span class=\"br0\">[</span><span class=\"st0\">'1'</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1.0</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">4</span>\ncount <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> a:\n    count +<span class=\"sy0\">=</span> a<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tAn exception is thrown",
            "b)\t3",
            "c)\t6",
            "d)\t2"
        ],
        "Answer": "Answer: c\nExplanation: The value of key 1 is 4 since 1 and 1.0 are the same. Then, the function count() gives the sum of all the values of the keys (2+4). "
    },
    {
        "id": 526,
        "Question": "10.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\na<span class=\"br0\">[</span><span class=\"st0\">'a'</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span>\na<span class=\"br0\">[</span><span class=\"st0\">'b'</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tException is thrown",
            "b)\t{‘b’: [2], ‘a’: 1}",
            "c)\t{‘b’: [2], ‘a’: [3]}",
            "d)\t{‘b’: [2, 3, 4], ‘a’: 1}"
        ],
        "Answer": "Answer: d\nExplanation: Mutable members can be used as the values of the dictionary but they cannot be used as the keys of the dictionary. "
    },
    {
        "id": 527,
        "Question": "11.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span><span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{1,2,3,4}",
            "b)\tCounter({4, 1, 3, 2})",
            "c)\tCounter({4: 3, 1: 2, 3: 2, 2: 1})",
            "d)\t{4: 3, 1: 2, 3: 2, 2: 1}"
        ],
        "Answer": "Answer: c\nExplanation: The statement a=collections.OrderedDict() generates a dictionary with the number as the key and the count of times the number appears as the value."
    },
    {
        "id": 528,
        "Question": "12.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span><span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b.<span class=\"me1\">most_common</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tCounter({4: 3, 2: 2, 3: 1})",
            "b)\t{3:1}",
            "c)\t{4:3}",
            "d)\t[(4, 3)]"
        ],
        "Answer": "Answer: d\nExplanation: The most_common() method returns the n number key-value pairs where the value is the most recurring."
    },
    {
        "id": 529,
        "Question": "13.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span><span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b.<span class=\"me1\">most_common</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tCounter({4: 3, 2: 2, 3: 1})",
            "b)\t{3:1}",
            "c)\t{4:3}",
            "d)\t[(4, 3)]"
        ],
        "Answer": "Answer: d\nExplanation: The most_common() method returns the n number key-value pairs where the value is the most recurring."
    },
    {
        "id": 530,
        "Question": "14.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a|b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tCounter({3: 3, 2: 2, 4: 2})",
            "b)\tCounter({2: 2, 3: 1, 4: 1})",
            "c)\tCounter({3: 2})",
            "d)\tCounter({4: 1})"
        ],
        "Answer": "Answer: a\nExplanation: a|b returns the pair of keys and the highest recurring value."
    },
    {
        "id": 531,
        "Question": "15.\tWhat will be the output of the following Python code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">Counter</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a&amp;b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tCounter({3: 12, 4: 1, 5: 1})",
            "b)\tCounter({3: 1, 4: 1, 5: 1})",
            "c)\tCounter({4: 2})",
            "d)\tCounter({5: 1})"
        ],
        "Answer": "Answer: b\nExplanation: a&b returns the pair of keys and the lowest recurring value."
    },
    {
        "id": 532,
        "Question": "2.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">count<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\ncount<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>\ncount<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span>\ncount<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">6</span>\ncount<span class=\"br0\">[</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\ntot <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> count:\n    tot<span class=\"sy0\">=</span>tot+count<span class=\"br0\">[</span>i<span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>count<span class=\"br0\">)</span>+tot<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t25",
            "b)\t17",
            "c)\t16",
            "d)\tTuples can’t be made keys of a dictionary"
        ],
        "Answer": "Answer: b\nExplanation: The output of the code is: {‘test’:7}."
    },
    {
        "id": 533,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\na<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">1</span>\na<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[2,3,4] ",
            "b)\t3",
            "c)\t2",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: c\nExplanation: Tuples can be made keys of a dictionary. Length of the dictionary is 3 as the value of the key (4,2,1) is modified to 2. The value of the variable tot is 5+6+2=13."
    },
    {
        "id": 534,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"st0\">'B'</span>:<span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"st0\">'A'</span>:<span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"st0\">'C'</span>:<span class=\"nu0\">7</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">sorted</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t[‘A’,’B’,’C’] ",
            "b)\t[‘B’,’C’,’A’] ",
            "c)\t[5,7,9] ",
            "d)\t[9,5,7]"
        ],
        "Answer": "Answer: b\nExplanation: Now, a={1:[2,3,4],2:1} . a[1][1] refers to second element having key 1. "
    },
    {
        "id": 535,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span>i: i*i <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tDictionary comprehension doesn’t exist",
            "b)\t{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6:36}",
            "c)\t{0: 0, 1: 1, 4: 4, 9: 9, 16: 16, 25: 25}",
            "d)\t{0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25}"
        ],
        "Answer": "Answer: a\nExplanation:  Return a new sorted list of keys in the dictionary."
    },
    {
        "id": 536,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a.<span class=\"me1\">fromkeys</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">,</span><span class=\"st0\">\"check\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tSyntax error",
            "b)\t{1:”check”,2:”check”,3:”check”}",
            "c)\t“check”",
            "d)\t{1:None,2:None,3:None}"
        ],
        "Answer": "Answer: d\nExplanation: Dictionary comprehension is implemented in the above piece of code. "
    },
    {
        "id": 537,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">all</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{ }",
            "b)\tFalse",
            "c)\tTrue",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: The dictionary takes values of keys from the list and initializes it to the default value (value given in the second parameter). Execute in Python shell to verify. "
    },
    {
        "id": 538,
        "Question": "8.\tIf b is a dictionary, what does any(b) do?",
        "Options": [
            "a)\tReturns True if any key of the dictionary is true",
            "b)\tReturns False if dictionary is empty",
            "c)\tReturns True if all keys of the dictionary are true",
            "d)\tMethod any() doesn’t exist for dictionary"
        ],
        "Answer": "Answer: c\nExplanation: Function all() returns True if all keys of the dictionary are true or if the dictionary is empty."
    },
    {
        "id": 539,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"st0\">\"a\"</span>:<span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"st0\">\"b\"</span>:<span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"st0\">\"c\"</span>:<span class=\"nu0\">3</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"kw2\">zip</span><span class=\"br0\">(</span>a.<span class=\"me1\">values</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>a.<span class=\"me1\">keys</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{‘a’: 1, ‘b’: 2, ‘c’: 3}",
            "b)\tAn exception is thrown",
            "c)      {‘a’: ‘b’: ‘c’: }",
            "d)\t{1: ‘a’, 2: ‘b’, 3: ‘c’}"
        ],
        "Answer": "Answer: a\nExplanation: Method any() returns True if any key of the dictionary is true and False if the dictionary is empty."
    },
    {
        "id": 540,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"br0\">{</span>i: <span class=\"st0\">'A'</span> + <span class=\"kw2\">str</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">}</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tAn exception is thrown",
            "b)\t{0: ‘A0’, 1: ‘A1’, 2: ‘A2’, 3: ‘A3’, 4: ‘A4’}",
            "c)\t{0: ‘A’, 1: ‘A’, 2: ‘A’, 3: ‘A’, 4: ‘A’}",
            "d)\t{0: ‘0’, 1: ‘1’, 2: ‘2’, 3: ‘3’, 4: ‘4’}"
        ],
        "Answer": "Answer: d\nExplanation:  The above piece of code inverts the key-value pairs in the dictionary."
    },
    {
        "id": 541,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tAn exception is thrown since the dictionary is empty",
            "b)\t‘ ‘",
            "c)\t1",
            "d)\t0"
        ],
        "Answer": "Answer: b\nExplanation: Dictionary comprehension and string concatenation is implemented in the above piece of code. "
    },
    {
        "id": 542,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">defaultdict</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1",
            "b)\t0",
            "c)\tAn exception is thrown",
            "d)\t‘ ‘"
        ],
        "Answer": "Answer: a\nExplanation: The values of a dictionary can be accessed through the keys only if the keys exist in the dictionary."
    },
    {
        "id": 543,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">defaultdict</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"br0\">[</span><span class=\"st0\">'A'</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tAn exception is thrown since the dictionary is empty",
            "b)\t‘ ‘",
            "c)\t‘A’",
            "d)\t0"
        ],
        "Answer": "Answer: b\nExplanation: The statement a=collections.defaultdict(int) gives the default value of 0\n(since int data type is given within the parenthesis) even if the keys don’t exist in the dictionary."
    },
    {
        "id": 544,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw2\">dict</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">defaultdict</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span>: <span class=\"nu0\">7</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> b<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t4",
            "b)\t0",
            "c)\tAn exception is thrown",
            "d)\t7"
        ],
        "Answer": "Answer: b\nExplanation: The statement a=collections.defaultdict(str) gives the default value of ‘ ‘ even if the keys don’t exist in the dictionary. "
    },
    {
        "id": 545,
        "Question": "15. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">import</span> <span class=\"kw3\">collections</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a<span class=\"sy0\">=</span><span class=\"kw3\">collections</span>.<span class=\"me1\">OrderedDict</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">,</span>x<span class=\"br0\">)</span> <span class=\"kw1\">for</span> x <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> a</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t{‘2’:2, ‘0’:0, ‘1’:1}",
            "b)\tOrderedDict([(‘0’, 0), (‘1’, 1), (‘2’, 2)])",
            "c)\tAn exception is thrown",
            "d)\t‘ ‘"
        ],
        "Answer": "Answer: d\nExplanation: The statement a=collections.defaultdict(lambda: x) gives the default value of x even if the keys don’t exist in the dictionary. "
    },
    {
        "id": 546,
        "Question": "Which of the following functions is a built-in function in python?",
        "Options": [
            "a) seed()",
            "b) sqrt()",
            "c) factorial()",
            "d) print()"
        ],
        "Answer": "Answer: d\nExplanation: The function seed is a function which is present in the random module. The functions sqrt and factorial are a part of the math module. The print function is a built-in function which prints a value directly to the system output."
    },
    {
        "id": 547,
        "Question": "2. What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">round</span><span class=\"br0\">(</span><span class=\"nu0\">4.576</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4.5",
            "b) 5",
            "c) 4",
            "d) 4.6"
        ],
        "Answer": "Answer: b\nExplanation: This is a built-in function which rounds a number to give precision in decimal digits. In the above case, since the number of decimal places has not been specified, the decimal number is rounded off to a whole number. Hence the output will be 5."
    },
    {
        "id": 548,
        "Question": "The function pow(x,y,z) is evaluated as:",
        "Options": [
            "a) (x**y)**z",
            "b) (x**y) / z",
            "c) (x**y) % z",
            "d) (x**y)*z"
        ],
        "Answer": "Answer: c\nExplanation: The built-in function pow() can accept two or three arguments. When it takes in two arguments, they are evaluated as x**y. When it takes in three arguments, they are evaluated as (x**y)%z."
    },
    {
        "id": 549,
        "Question": "4. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">all</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) True",
            "c) False",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation: The function all returns false if any one of the elements of the iterable is zero and true if all the elements of the iterable are non zero. Hence the output of this function will be false."
    },
    {
        "id": 550,
        "Question": "5.  What will be the output of the following Python expression?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">round</span><span class=\"br0\">(</span><span class=\"nu0\">4.5676</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>?</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4.5",
            "b) 4.6",
            "c) 4.57",
            "d) 4.56"
        ],
        "Answer": "Answer: c\nExplanation: The function round is used to round off the given decimal number to the specified decimal places. In this case, the number should be rounded off to two decimal places. Hence the output will be 4.57."
    },
    {
        "id": 551,
        "Question": "6. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">any</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">&gt;</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) True",
            "c) False",
            "d) 4>2"
        ],
        "Answer": "Answer: b\nExplanation: The built-in function any() returns true if any or more of the elements of the iterable is true (non zero), If all the elements are zero, it returns false."
    },
    {
        "id": 552,
        "Question": "7. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">math</span>\n<span class=\"kw2\">abs</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">sqrt</span><span class=\"br0\">(</span><span class=\"nu0\">25</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) -5",
            "c) 5",
            "d) 5.0"
        ],
        "Answer": "Answer: d\nExplanation: The abs() function prints the absolute value of the argument passed. For example: abs(-5)=5. Hence, in this case we get abs(5.0)=5.0."
    },
    {
        "id": 553,
        "Question": "8.  What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">sum</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span>\n<span class=\"kw2\">sum</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error, 6",
            "b) 12, Error",
            "c) 12, 6",
            "d) Error, Error"
        ],
        "Answer": "Answer: a\nExplanation: The first function will result in an error because the function sum() is used to find the sum of iterable numbers. Hence the outcomes will be Error and 6 respectively."
    },
    {
        "id": 554,
        "Question": "9. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">all</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4.2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) 0"
        ],
        "Answer": "Answer: c\nExplanation: The function all() returns ‘True’ if any one or more of the elements of the iterable are non zero. In the above case, the values are not iterable, hence an error is thrown."
    },
    {
        "id": 555,
        "Question": "10. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">min</span><span class=\"br0\">(</span><span class=\"kw2\">max</span><span class=\"br0\">(</span><span class=\"kw2\">False</span><span class=\"sy0\">,</span>-<span class=\"nu0\">3</span><span class=\"sy0\">,</span>-<span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) False",
            "c) -3",
            "d) -4"
        ],
        "Answer": "Answer: b\nExplanation: The function max() is being used to find the maximum value from among -3, -4 and false. Since false amounts to the value zero, hence we are left with min(0, 2, 7) Hence the output is 0 (false)."
    },
    {
        "id": 556,
        "Question": "2. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">complex</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>+2j<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 1",
            "c) 2j",
            "d) 1+2j"
        ],
        "Answer": "Answer: c\nExplanation: The built-in function chr() returns the alphabet corresponding to the value given as an argument. This function accepts only integer type values. In the first function, we have passed a string. Hence the first function throws an error."
    },
    {
        "id": 557,
        "Question": "What is the output of the function complex()?",
        "Options": [
            "a) 0j",
            "b) 0+0j",
            "c) 0",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: The built-in function complex() returns the argument in a complex form. Hence the output of the function shown above will be 1+2j."
    },
    {
        "id": 558,
        "Question": "The function divmod(a,b), where both ‘a’ and ‘b’ are integers is evaluated as:",
        "Options": [
            "a) (a%b, a//b)",
            "b) (a//b, a%b)",
            "c) (a//b, a*b)",
            "d) (a/b, a%b)"
        ],
        "Answer": "Answer: a\nExplanation: The complex function returns 0j if both of the arguments are omitted, that is, if the function is in the form of complex() or complex(0), then the output will be 0j."
    },
    {
        "id": 559,
        "Question": "7. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">enumerate</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [(1, 2), (2, 3)] ",
            "c) [(0, 2), (1, 3)] ",
            "d) [(2, 3)]"
        ],
        "Answer": "Answer: b\nExplanation: The function divmod(a,b) is evaluated as a//b, a%b, if both ‘a’ and ‘b’ are integers."
    },
    {
        "id": 560,
        "Question": "8.  What will be the output of the following Python functions?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">3</span>\n<span class=\"kw2\">eval</span><span class=\"br0\">(</span><span class=\"st0\">'x^2'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 1",
            "c) 9",
            "d) 6"
        ],
        "Answer": "Answer: c\nExplanation: See python documentation for the function divmod."
    },
    {
        "id": 561,
        "Question": "Which of the following functions does not necessarily accept only iterables as arguments?",
        "Options": [
            "a) enumerate()",
            "b) all()",
            "c) chr()",
            "d) max()"
        ],
        "Answer": "Answer: a\nExplanation: When converting from a string, the string must not contain any blank spaces around the + or – operator. Hence the function complex(‘2 – 3j’) will result in an error."
    },
    {
        "id": 562,
        "Question": "Which of the following functions accepts only integers as arguments?",
        "Options": [
            "a) ord()",
            "b) min()",
            "c) chr()",
            "d) any()"
        ],
        "Answer": "Answer: c\nExplanation: The function chr() accepts only integers as arguments. The function ord() accepts only strings. The functions min() and max() can accept floating point as well as integer arguments."
    },
    {
        "id": 563,
        "Question": "Suppose there is a list such that: l=[2,3,4]. If we want to print this list in reverse order, which of the following methods should be used?",
        "Options": [
            "a) reverse(l)",
            "b) list(reverse[(l)])",
            "c) reversed(l)",
            "d) list(reversed(l))"
        ],
        "Answer": "Answer: d\nExplanation: The built-in function reversed() can be used to reverse the elements of a list. This function accepts only an iterable as an argument. To print the output in the form of a list, we use: list(reversed(l)). The output will be: [4,3,2]."
    },
    {
        "id": 564,
        "Question": "(Note that the number of blank spaces before the number is 5)",
        "Options": [
            "a)   -12345.0 (5 blank spaces before the number)",
            "b) -12345.0",
            "c) Error",
            "d) -12345.000000000…. (infinite decimal places)"
        ],
        "Answer": "Answer: b\nExplanation: The function float() will remove all the blank spaces and convert the integer to a floating point number. Hence the output will be: -12345.0."
    },
    {
        "id": 565,
        "Question": "Which of the following functions will not result in an error when no arguments are passed to it?",
        "Options": [
            "a) min()",
            "b) divmod()",
            "c) all()",
            "d) float()"
        ],
        "Answer": "Answer: b\nExplanation: The built-in function ord() is used to return the ASCII value of the alphabet passed to it as an argument. Hence the first function results in an error and the output of the second function is 65."
    },
    {
        "id": 566,
        "Question": "7. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">hex</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) f",
            "b) 0xF",
            "c) 0Xf",
            "d) 0xf"
        ],
        "Answer": "Answer: a\nExplanation: The output of the first function will be –inf and that of the second function will be inf."
    },
    {
        "id": 567,
        "Question": " Which of the following functions does not throw an error?",
        "Options": [
            "a) ord()",
            "b) ord(‘ ‘)",
            "c) ord(”)",
            "d) ord(“”)"
        ],
        "Answer": "Answer: d\nExplanation: The built-in functions min(), max(), divmod(), ord(), any(), all() etc throw an error when no arguments are passed to them. However there are some built-in functions like float(), complex() etc which do not throw an error when no arguments are passed to them. The output of float() is 0.0."
    },
    {
        "id": 568,
        "Question": "9. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"st0\">\"hello\"</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 3",
            "c) Error",
            "d) 6"
        ],
        "Answer": "Answer: d\nExplanation: The function hex() is used to convert the given argument into its hexadecimal representation, in lower case. Hence the output of the function hex(15) is 0xf."
    },
    {
        "id": 569,
        "Question": "Which of the following is the use of function in python?",
        "Options": [
            "a) Functions are reusable pieces of programs",
            "b) Functions don’t provide better modularity for your application",
            "c) you can’t also create your own functions",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Functions are reusable pieces of programs. They allow you to give a name to a block of statements, allowing you to run that block using the specified name anywhere in your program and any number of times. "
    },
    {
        "id": 570,
        "Question": "Which keyword is used for function?",
        "Options": [
            "a) Fun",
            "b) Define",
            "c) Def",
            "d) Function"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 571,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">def printMax<span class=\"br0\">(</span>a, b<span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> a <span class=\"sy1\">&gt;</span> b<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        print<span class=\"br0\">(</span>a, <span class=\"st0\">'is maximum'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    elif a <span class=\"sy1\">==</span> b<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        print<span class=\"br0\">(</span>a, <span class=\"st0\">'is equal to'</span>, b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        print<span class=\"br0\">(</span>b, <span class=\"st0\">'is maximum'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">printMax<span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 4 is maximum",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Functions are defined using the def keyword. After this keyword comes an identifier name for the function, followed by a pair of parentheses which may enclose some names of variables, and by the final colon that ends the line. Next follows the block of statements that are part of this function.\n\n\ndef sayHello():    print('Hello World!') # block belonging to the function# End of function # sayHello() # call the functionsayHello() # call the function again\n\n\n"
    },
    {
        "id": 572,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">def</span> maximum<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">if</span> x <span class=\"sy0\">&gt;</span> y:</pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">elif</span> x <span class=\"sy0\">==</span> y:</pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"st0\">'The numbers are equal'</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">else</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> y</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span>maximum<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) The numbers are equal",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Here, we define a function called printMax that uses two parameters called a and b. We find out the greater number using a simple if..else statement and then print the bigger number. "
    },
    {
        "id": 573,
        "Question": "Which of the following is a feature of DocString?",
        "Options": [
            "a) Provide a convenient way of associating documentation with Python modules, functions, classes, and methods",
            "b) All functions should have a docstring",
            "c) Docstrings can be accessed by the __doc__ attribute on objects",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The first time that we print the value of the name x with the first line in the function’s body, Python uses the value of the parameter declared in the main block, above the function definition.\nNext, we assign the value 2 to x. The name x is local to our function. So, when we change the value of x in the function, the x defined in the main block remains unaffected.\nWith the last print function call, we display the value of x as defined in the main block, thereby confirming that it is actually unaffected by the local assignment within the previously called function. "
    },
    {
        "id": 574,
        "Question": "Which are the advantages of functions in python?",
        "Options": [
            "a) Reducing duplication of code",
            "b) Decomposing complex problems into simpler pieces",
            "c) Improving clarity of the code",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 575,
        "Question": "What are the two main types of functions?",
        "Options": [
            "a) Custom function",
            "b) Built-in function & User defined function",
            "c) User function",
            "d) System function"
        ],
        "Answer": " Answer: b\nExplanation: Built-in functions and user defined ones. The built-in functions are part of the Python language. Examples are: dir(), len() or abs(). The user defined functions are functions created with the def keyword. "
    },
    {
        "id": 576,
        "Question": "Where is function defined?",
        "Options": [
            "a) Module",
            "b) Class",
            "c) Another function",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Functions can be defined inside a module, a class or another function. "
    },
    {
        "id": 577,
        "Question": "What is called when a function is defined inside a class?",
        "Options": [
            "a) Module",
            "b) Class",
            "c) Another function",
            "d) Method"
        ],
        "Answer": " Answer: d\nExplanation: None. "
    },
    {
        "id": 578,
        "Question": "Which of the following is the use of id() function in python?",
        "Options": [
            "a) Id  returns the identity of the object",
            "b) Every object doesn’t have a unique id",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer:  a\nExplanation: Each object in Python has a unique id. The id() function returns the object’s id. "
    },
    {
        "id": 579,
        "Question": "Which of the following refers to mathematical function?",
        "Options": [
            "a) sqrt",
            "b) rhombus",
            "c) add",
            "d) rhombus"
        ],
        "Answer": " Answer: a\nExplanation: Functions that are always available for usage, functions that are contained within external modules, which must be imported and functions defined by a programmer with the def keyword.\nEg:  math import sqrt\nA sqrt() function is imported from the math module.\n"
    },
    {
        "id": 580,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">def</span> cube<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">return</span> x * x * x      </pre></li><li class=\"li1\"><pre class=\"de1\">x <span class=\"sy0\">=</span> cube<span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> x</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 9",
            "b) 3",
            "c) 27",
            "d) 30"
        ],
        "Answer": " Answer: c\nExplanation: A function is created to do a specific task. Often there is a result from such a task. The return keyword is used to return values from a function. A function may or may not return a value. If a function does not have a return keyword, it will send a none value. "
    },
    {
        "id": 581,
        "Question": "Python supports the creation of anonymous functions at runtime, using a construct called __________",
        "Options": [
            "a) lambda",
            "b) pi",
            "c) anonymous",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Python supports the creation of anonymous functions (i.e. functions that are not bound to a name) at runtime, using a construct called lambda. Lambda functions are restricted to a single expression. They can be used wherever normal functions can be used. "
    },
    {
        "id": 582,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\">y <span class=\"sy0\">=</span> <span class=\"nu0\">6</span></pre></li><li class=\"li1\"><pre class=\"de1\">z <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> x: x * y</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> z<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 48",
            "b) 14",
            "c) 64",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The lambda keyword creates an anonymous function. The x is a parameter, that is passed to the lambda function. The parameter is followed by a colon character. The code next to the colon is the expression that is executed, when the lambda function is called. The lambda function is assigned to the z variable.\nThe lambda function is executed. The number 8 is passed to the anonymous function and it returns 48 as the result. Note that z is not a name for this function. It is only a variable to which the anonymous function was assigned. "
    },
    {
        "id": 583,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\">lamb <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> x: x ** <span class=\"nu0\">3</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span>lamb<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 15",
            "b) 555",
            "c) 125",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None. "
    },
    {
        "id": 584,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">def</span> f<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span>: <span class=\"kw1\">return</span> x + y + z</pre></li><li class=\"li1\"><pre class=\"de1\">f<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 432",
            "b) 24000",
            "c) 430",
            "d) No output"
        ],
        "Answer": " Answer: b\nExplanation: lambda definition does not include a return statement. it always contains an expression which is returned. Also note that we can put a lambda definition anywhere a function is expected. We don’t have to assign it to a variable at all. "
    },
    {
        "id": 585,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">def</span> writer<span class=\"br0\">(</span><span class=\"br0\">)</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">\ttitle <span class=\"sy0\">=</span> <span class=\"st0\">'Sir'</span></pre></li><li class=\"li1\"><pre class=\"de1\">\tname <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:title + <span class=\"st0\">' '</span> + x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t<span class=\"kw1\">return</span> name</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">who <span class=\"sy0\">=</span> writer<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">who<span class=\"br0\">(</span><span class=\"st0\">'Arthur'</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Arthur Sir",
            "b) Sir Arthur",
            "c) Arthur",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: lambda is an anonymous function in Python. Hence this statement is false. "
    },
    {
        "id": 586,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw2\">min</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x<span class=\"sy0\">,</span> y: x <span class=\"kw1\">if</span> x <span class=\"sy0\">&lt;</span> y <span class=\"kw1\">else</span> y<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw2\">min</span><span class=\"br0\">(</span><span class=\"nu0\">101</span>*<span class=\"nu0\">99</span><span class=\"sy0\">,</span> <span class=\"nu0\">102</span>*<span class=\"nu0\">98</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 9997",
            "b) 9999",
            "c) 9996",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None. "
    },
    {
        "id": 587,
        "Question": "1.\tWhat is a variable defined outside a function referred to as?",
        "Options": [
            "a)\tA static variable",
            "b)\tA global variable",
            "c)\tA local variable",
            "d)\tAn automatic variable"
        ],
        "Answer": "Answer: b\nExplanation: The value of a variable defined outside all function definitions is referred to as a global variable and can be used by multiple functions of the program."
    },
    {
        "id": 588,
        "Question": "2.\tWhat is a variable defined inside a function referred to as?",
        "Options": [
            "a)\tA global variable",
            "b)\tA volatile variable",
            "c)\tA local variable",
            "d)\tAn automatic variable"
        ],
        "Answer": "Answer: c\nExplanation: The variable inside a function is called as local variable and the variable definition is confined only to that function."
    },
    {
        "id": 589,
        "Question": "3.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">i<span class=\"sy0\">=</span><span class=\"nu0\">0</span>\n<span class=\"kw1\">def</span> change<span class=\"br0\">(</span>i<span class=\"br0\">)</span>:\n   i<span class=\"sy0\">=</span>i+<span class=\"nu0\">1</span>\n   <span class=\"kw1\">return</span> i\nchange<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1",
            "b)\tNothing is displayed",
            "c)\t0",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: c\nExplanation: Any change made in to an immutable data type in a function isn’t reflected outside the function."
    },
    {
        "id": 590,
        "Question": "4.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>b<span class=\"br0\">)</span>:\n    b <span class=\"sy0\">=</span> b + <span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span>\n&nbsp;\nc <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">]</span>\na<span class=\"br0\">(</span>c<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t4",
            "b)\t5",
            "c)\t1",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: Since a list is mutable, any change made in the list in the function is reflected outside the function."
    },
    {
        "id": 591,
        "Question": "6.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> change<span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>:\n    i <span class=\"sy0\">=</span> i + j\n    j <span class=\"sy0\">=</span> j + <span class=\"nu0\">1</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span> j<span class=\"br0\">)</span>\nchange<span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tAn exception is thrown because of conflicting values",
            "b)\t1 2",
            "c)\t3 3",
            "d)\t3 2"
        ],
        "Answer": "Answer: a\nExplanation: The statement “global b” allows the global value of b to be accessed and changed. Whereas the variable a is local and hence the change isn’t reflected outside the function."
    },
    {
        "id": 592,
        "Question": "7.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> change<span class=\"br0\">(</span>one<span class=\"sy0\">,</span> *two<span class=\"br0\">)</span>:\n   <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">type</span><span class=\"br0\">(</span>two<span class=\"br0\">)</span><span class=\"br0\">)</span>\nchange<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tInteger",
            "b)\tTuple",
            "c)\tDictionary",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: d\nExplanation: The values given during function call is taken into consideration, that is, i=2 and j=1."
    },
    {
        "id": 593,
        "Question": " If a function doesn’t have a return statement, which of the following does the function return?",
        "Options": [
            "a)\tint",
            "b)\tnull",
            "c)\tNone",
            "d)\tAn exception is thrown without the return statement"
        ],
        "Answer": "Answer: b\nExplanation: The parameter two is a variable parameter and consists of (2,3,4). Hence the data type is tuple."
    },
    {
        "id": 594,
        "Question": "9.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> display<span class=\"br0\">(</span>b<span class=\"sy0\">,</span> n<span class=\"br0\">)</span>:\n    <span class=\"kw1\">while</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span>b<span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span>\n        n<span class=\"sy0\">=</span>n-<span class=\"nu0\">1</span>\ndisplay<span class=\"br0\">(</span><span class=\"st0\">'z'</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tzzz",
            "b)\tzz",
            "c)\tAn exception is executed",
            "d)\tInfinite loop"
        ],
        "Answer": "Answer: c\nExplanation: A function can exist without a return statement and returns None if the function doesn’t have a return statement."
    },
    {
        "id": 595,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> find<span class=\"br0\">(</span>a<span class=\"sy0\">,</span> **b<span class=\"br0\">)</span>:\n   <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">type</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span>\nfind<span class=\"br0\">(</span><span class=\"st0\">'letters'</span><span class=\"sy0\">,</span>A<span class=\"sy0\">=</span><span class=\"st0\">'1'</span><span class=\"sy0\">,</span>B<span class=\"sy0\">=</span><span class=\"st0\">'2'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tString",
            "b)\tTuple",
            "c)\tDictionary",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: a\nExplanation: The loop runs three times and ‘z’ is printed each time."
    },
    {
        "id": 596,
        "Question": "What is the type of each element in sys.argv?",
        "Options": [
            "a) set",
            "b) list",
            "c) tuple",
            "d) string"
        ],
        "Answer": "Answer: d\nExplanation: It is a list of strings."
    },
    {
        "id": 597,
        "Question": "What is the length of sys.argv?",
        "Options": [
            "a) number of arguments",
            "b) number of arguments + 1",
            "c) number of arguments – 1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The first argument is the name of the program itself. Therefore the length of sys.argv is one more than the number arguments."
    },
    {
        "id": 598,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>k<span class=\"br0\">)</span>:\n    k<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\nq <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\nfoo<span class=\"br0\">(</span>q<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0] ",
            "b) [1] ",
            "c) [1, 0] ",
            "d) [0, 1]"
        ],
        "Answer": "Answer: b\nExplanation: Lists are passed by reference."
    },
    {
        "id": 599,
        "Question": "How are keyword arguments specified in the function heading?",
        "Options": [
            "a) one-star followed by a valid identifier",
            "b) one underscore followed by a valid identifier",
            "c) two stars followed by a valid identifier",
            "d) two underscores followed by a valid identifier"
        ],
        "Answer": "Answer: c\nExplanation: Refer documentation."
    },
    {
        "id": 600,
        "Question": "How many keyword arguments can be passed to a function in a single function call?",
        "Options": [
            "a) zero",
            "b) one",
            "c) zero or more",
            "d) one or more"
        ],
        "Answer": "Answer: c\nExplanation: Zero keyword arguments may be passed if all the arguments have default values."
    },
    {
        "id": 601,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>fname<span class=\"sy0\">,</span> val<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>fname<span class=\"br0\">(</span>val<span class=\"br0\">)</span><span class=\"br0\">)</span>\nfoo<span class=\"br0\">(</span><span class=\"kw2\">max</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span>\nfoo<span class=\"br0\">(</span><span class=\"kw2\">min</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3 1",
            "b) 1 3",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It is possible to pass function names as arguments to other functions."
    },
    {
        "id": 602,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> total + <span class=\"nu0\">1</span>\ntotal <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>foo<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It is possible to read the value of a global variable directly."
    },
    {
        "id": 603,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    total +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">return</span> total\ntotal <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>foo<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: It is not possible to change the value of a global variable without explicitly specifying it."
    },
    {
        "id": 604,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'def'</span><span class=\"sy0\">,</span> <span class=\"st0\">'abc'</span><span class=\"br0\">]</span>\n    <span class=\"kw1\">return</span> <span class=\"kw2\">id</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\nq <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'abc'</span><span class=\"sy0\">,</span> <span class=\"st0\">'def'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">id</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">==</span> foo<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: A new object is created in the function."
    },
    {
        "id": 605,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> x<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span>:\n    x.<span class=\"me1\">append</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> x\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>foo<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0] [1] [2] ",
            "b) [0] [0, 1] [0, 1, 2] ",
            "c) [1] [2] [3] ",
            "d) [1] [1, 2] [1, 2, 3]"
        ],
        "Answer": "Answer: b\nExplanation: When a list is a default value, the same list will be reused."
    },
    {
        "id": 606,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>k<span class=\"br0\">)</span>:\n    k <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span>\nq <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>\nfoo<span class=\"br0\">(</span>q<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0] ",
            "b) [1] ",
            "c) [1, 0] ",
            "d) [0, 1]"
        ],
        "Answer": "Answer: a\nExplanation: A new list object is created in the function and the reference is lost. This can be checked by comparing the id of k before and after k = [1]."
    },
    {
        "id": 607,
        "Question": "How are variable length arguments specified in the function heading?",
        "Options": [
            "a) one star followed by a valid identifier",
            "b) one underscore followed by a valid identifier",
            "c) two stars followed by a valid identifier",
            "d) two underscores followed by a valid identifier"
        ],
        "Answer": "Answer: a\nExplanation: Refer documentation."
    },
    {
        "id": 608,
        "Question": "Which module in the python standard library parses options received from the command line?",
        "Options": [
            "a) getopt",
            "b) os",
            "c) getarg",
            "d) main"
        ],
        "Answer": "Answer: a\nExplanation: getopt parses options received from the command line."
    },
    {
        "id": 609,
        "Question": "What is the type of sys.argv?",
        "Options": [
            "a) set",
            "b) list",
            "c) tuple",
            "d) string"
        ],
        "Answer": "Answer: b\nExplanation: It is a list of elements."
    },
    {
        "id": 610,
        "Question": "What is the value stored in sys.argv[0]?",
        "Options": [
            "a) null",
            "b) you cannot access it",
            "c) the program’s name",
            "d) the first argument"
        ],
        "Answer": "Answer: c\nExplanation: Refer documentation."
    },
    {
        "id": 611,
        "Question": "How are default arguments specified in the function heading?",
        "Options": [
            "a) identifier followed by an equal to sign and the default value",
            "b) identifier followed by the default value within backticks (“)",
            "c) identifier followed by the default value within square brackets ([])",
            "d) identifier"
        ],
        "Answer": "Answer: a\nExplanation: Refer documentation."
    },
    {
        "id": 612,
        "Question": "How are required arguments specified in the function heading?",
        "Options": [
            "a) identifier followed by an equal to sign and the default value",
            "b) identifier followed by the default value within backticks (“)",
            "c) identifier followed by the default value within square brackets ([])",
            "d) identifier"
        ],
        "Answer": "Answer: d\nExplanation: Refer documentation."
    },
    {
        "id": 613,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    x<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'def'</span><span class=\"br0\">]</span>\n    x<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'abc'</span><span class=\"br0\">]</span>\n    <span class=\"kw1\">return</span> <span class=\"kw2\">id</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\nq <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'abc'</span><span class=\"sy0\">,</span> <span class=\"st0\">'def'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">id</span><span class=\"br0\">(</span>q<span class=\"br0\">)</span> <span class=\"sy0\">==</span> foo<span class=\"br0\">(</span>q<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The same object is modified in the function."
    },
    {
        "id": 614,
        "Question": "Where are the arguments received from the command line stored?",
        "Options": [
            "a) sys.argv",
            "b) os.argv",
            "c) argv",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Refer documentation."
    },
    {
        "id": 615,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span>i<span class=\"sy0\">,</span> x<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span>:\n    x.<span class=\"me1\">append</span><span class=\"br0\">(</span>x.<span class=\"me1\">append</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> x\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n    y <span class=\"sy0\">=</span> foo<span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]] ",
            "b) [[0], [[0], 1], [[0], [[0], 1], 2]] ",
            "c) [0, None, 1, None, 2, None] ",
            "d) [[[0]], [[[0]], [1]], [[[0]], [[[0]], [1]], [2]]]"
        ],
        "Answer": "Answer: c\nExplanation: append() returns None."
    },
    {
        "id": 616,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    x<span class=\"sy0\">=</span><span class=\"nu0\">15</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">12</span>\nf1<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 12",
            "c) 15",
            "d) 1512"
        ],
        "Answer": "Answer: c\nExplanation: In the code shown above, x=15 is a local variable whereas x=12 is a global variable. Preference is given to local variable over global variable. Hence the output of the code shown above is 15."
    },
    {
        "id": 617,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    x<span class=\"sy0\">=</span><span class=\"nu0\">100</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span>\nx<span class=\"sy0\">=</span>+<span class=\"nu0\">1</span>\nf1<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 100",
            "c) 101",
            "d) 99"
        ],
        "Answer": "Answer: b\nExplanation: The variable x is a local variable. It is first printed and then modified. Hence the output of this code is 100."
    },
    {
        "id": 618,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> san<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>x+<span class=\"nu0\">1</span><span class=\"br0\">)</span>\nx<span class=\"sy0\">=</span>-<span class=\"nu0\">2</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">4</span>\nsan<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 13",
            "b) 10",
            "c) 2",
            "d) 5"
        ],
        "Answer": "Answer: a\nExplanation: The value passed to the function san() is 12. This value is incremented by one and printed. Hence the output of the code shown above is 13."
    },
    {
        "id": 619,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">12</span>\n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"sy0\">=</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">15</span>\nf1<span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 12 4",
            "c) 4 12",
            "d) 4 15"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, the variable ‘x’ is declared as global within the function. Hence the output is ‘x’. Had the variable ‘x’ been a local variable, the output would have been:\n13\nx"
    },
    {
        "id": 620,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span>:\n    b.<span class=\"me1\">append</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span>\n    <span class=\"kw1\">return</span> b\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>f1<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [3,2,4]",
            "b) [2,3,4]",
            "c) Error",
            "d) [3,4,2]"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will result in an error because ‘x’ is a global variable. Had it been a local variable, the output would be: 16\n    hello"
    },
    {
        "id": 621,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f<span class=\"br0\">(</span>p<span class=\"sy0\">,</span> q<span class=\"sy0\">,</span> r<span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> s\n    p <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>\n    q <span class=\"sy0\">=</span> <span class=\"nu0\">20</span>\n    r <span class=\"sy0\">=</span> <span class=\"nu0\">30</span>\n    s <span class=\"sy0\">=</span> <span class=\"nu0\">40</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>p<span class=\"sy0\">,</span>q<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>s<span class=\"br0\">)</span>\np<span class=\"sy0\">,</span>q<span class=\"sy0\">,</span>r<span class=\"sy0\">,</span>s <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span>\nf<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span><span class=\"nu0\">15</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4",
            "b) 5 10 15 4",
            "c) 10 20 30 40",
            "d) 5 10 15 40"
        ],
        "Answer": "Answer: c\nExplanation: At the time of leader processing, the value of ‘x’ is 12. It is not modified later. The value passed to the function f1 is 4. Hence the output of the code shown above is 4 12."
    },
    {
        "id": 622,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">5</span> \n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> x\n    x <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>\n<span class=\"kw1\">def</span> f2<span class=\"br0\">(</span>a<span class=\"sy0\">,</span>b<span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> x\n    <span class=\"kw1\">return</span> a+b+x\nf1<span class=\"br0\">(</span><span class=\"br0\">)</span>\ntotal <span class=\"sy0\">=</span> f2<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>total<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 7",
            "c) 8",
            "d) 15"
        ],
        "Answer": "Answer: b\nExplanation: Since the variable ‘a’ has been explicitly specified as a global variable, the value of a passed to the function is ‘world’. Hence the output of this code is:\nworld\nhello\nhello"
    },
    {
        "id": 623,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">100</span>\n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> x\n    x<span class=\"sy0\">=</span><span class=\"nu0\">90</span>\n<span class=\"kw1\">def</span> f2<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> x\n    x<span class=\"sy0\">=</span><span class=\"nu0\">80</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 100",
            "b) 90",
            "c) 80",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, the integer 2 is appended to the list [3,4]. Hence the output of the code is [3,4,2]. Both the variables a and b are local variables."
    },
    {
        "id": 624,
        "Question": "13. Read the following Python code carefully and point out the global variables?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">y<span class=\"sy0\">,</span> z <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span>\n<span class=\"kw1\">def</span> f<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">global</span> x\n    x <span class=\"sy0\">=</span> y+z</pre></div></div></div></div></div></div>",
        "Options": [
            "a) x",
            "b) y and z",
            "c) x, y and z",
            "d) Neither x, nor y, nor z"
        ],
        "Answer": "Answer: c\nExplanation: The above code shows a combination of local and global variables. The output of this code is: 10 20 30 40"
    },
    {
        "id": 625,
        "Question": "Which of the following data structures is returned by the functions globals() and locals()?",
        "Options": [
            "a) list",
            "b) set",
            "c) dictionary",
            "d) tuple"
        ],
        "Answer": "Answer: c\nExplanation: Both the functions, that is, globals() and locals() return value of the data structure dictionary."
    },
    {
        "id": 626,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">1</span>\n<span class=\"kw1\">def</span> cg<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">global</span> x\n\tx<span class=\"sy0\">=</span>x+<span class=\"nu0\">1</span>\t\ncg<span class=\"br0\">(</span><span class=\"br0\">)</span>\nx</pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 1",
            "c) 0",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: Since ‘x’ has been declared a global variable, it can be modified very easily within the function. Hence the output is 2."
    },
    {
        "id": 627,
        "Question": "What happens if a local variable exists with the same name as the global variable you want to access?",
        "Options": [
            "a) Error",
            "b) The local variable is shadowed",
            "c) Undefined behavior",
            "d) The global variable is shadowed"
        ],
        "Answer": "Answer: b\nExplanation: On assigning a value to a variable inside a function, t automatically becomes a local variable. Hence the above statement is false."
    },
    {
        "id": 628,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"nu0\">10</span>\n<span class=\"kw2\">globals</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">[</span><span class=\"st0\">'a'</span><span class=\"br0\">]</span><span class=\"sy0\">=</span><span class=\"nu0\">25</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 25",
            "c) Junk value",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown above will be ‘bitter’, followed by an error. The error is because the operand ‘+’ is unsupported on the types used above."
    },
    {
        "id": 629,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f<span class=\"br0\">(</span><span class=\"br0\">)</span>: x<span class=\"sy0\">=</span><span class=\"nu0\">4</span>\nx<span class=\"sy0\">=</span><span class=\"nu0\">1</span>\nf<span class=\"br0\">(</span><span class=\"br0\">)</span>\nx</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 4",
            "c) Junk value",
            "d) 1"
        ],
        "Answer": "Answer: d\nExplanation: If a local variable exists with the same name as the local variable that you want to access, then the global variable is shadowed. That is, preference is given to the local variable."
    },
    {
        "id": 630,
        "Question": "1.\tWhich is the most appropriate definition for recursion?",
        "Options": [
            "a)\tA function that calls itself",
            "b)\tA function execution instance that calls another execution instance of the same function",
            "c)\tA class method that calls another class method",
            "d)\tAn in-built method that is automatically called"
        ],
        "Answer": "Answer: b\nExplanation: The appropriate definition for a recursive function is a function execution instance that calls another execution instance of the same function either directly or indirectly."
    },
    {
        "id": 631,
        "Question": "3.\tWhich of these is false about recursion?",
        "Options": [
            "a)\tRecursive function can be replaced by a non-recursive function",
            "b)\tRecursive functions usually take more memory space than non-recursive function",
            "c)\tRecursive functions run faster than non-recursive function",
            "d)\tRecursion makes programs easier to understand"
        ],
        "Answer": "Answer: b\nExplanation: There are many other problems can also be solved using recursion."
    },
    {
        "id": 632,
        "Question": "4.\tFill in the line of the following Python code for calculating the factorial of a number.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> fact<span class=\"br0\">(</span>num<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> num <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>: \n        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> _____________________</pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tnum*fact(num-1)",
            "b)\t(num-1)*(num-2)",
            "c)\tnum*(num-1)",
            "d)\tfact(num)*fact(num-1)"
        ],
        "Answer": "Answer: c\nExplanation: The speed of a program using recursion is slower than the speed of its non-recursive equivalent."
    },
    {
        "id": 633,
        "Question": "5.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> <span class=\"kw3\">test</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>j<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span><span class=\"br0\">(</span>i<span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> j\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw3\">test</span><span class=\"br0\">(</span>i-<span class=\"nu0\">1</span><span class=\"sy0\">,</span>i+j<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t13",
            "b)\t7",
            "c)\tInfinite loop",
            "d)\t17"
        ],
        "Answer": "Answer: a\nExplanation: Suppose n=5 then, 5*4*3*2*1 is returned which is the factorial of 5."
    },
    {
        "id": 634,
        "Question": "6.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> convert<span class=\"br0\">(</span>b<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span><span class=\"br0\">(</span>b<span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> l\n    dig<span class=\"sy0\">=</span>b%<span class=\"nu0\">2</span>\n    l.<span class=\"me1\">append</span><span class=\"br0\">(</span>dig<span class=\"br0\">)</span>\n    convert<span class=\"br0\">(</span>b//<span class=\"nu0\">2</span><span class=\"br0\">)</span>\nconvert<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span>\nl.<span class=\"me1\">reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> l:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t011",
            "b)\t110",
            "c)\t3",
            "d)\tInfinite loop"
        ],
        "Answer": "Answer: d\nExplanation: The test(i-1,i+j) part of the function keeps calling the function until the base condition of the function is satisfied."
    },
    {
        "id": 635,
        "Question": "7.\tWhat is tail recursion?",
        "Options": [
            "a)\tA recursive function that has two base cases",
            "b)\tA function where the recursive functions leads to an infinite loop",
            "c)\tA recursive function where the function doesn’t return anything and just prints the values",
            "d)\tA function where the recursive call is the last thing executed by the function"
        ],
        "Answer": "Answer: b\nExplanation: The above code gives the binary equivalent of the number."
    },
    {
        "id": 636,
        "Question": "8.  Observe the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>n<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> n*a<span class=\"br0\">(</span>n - <span class=\"nu0\">1</span><span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> b<span class=\"br0\">(</span>n<span class=\"sy0\">,</span> tot<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">return</span> tot\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> b<span class=\"br0\">(</span>n-<span class=\"nu0\">2</span><span class=\"sy0\">,</span> tot-<span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tBoth a() and b() aren’t tail recursive",
            "b)\tBoth a() and b() are tail recursive",
            "c)\tb() is tail recursive but a() isn’t",
            "d)\ta() is tail recursive but b() isn’t"
        ],
        "Answer": "Answer: d\nExplanation: A recursive function is tail recursive when recursive call is executed by the function in the last."
    },
    {
        "id": 637,
        "Question": " Which of the following statements is false about recursion?",
        "Options": [
            "a)\tEvery recursive function must have a base case",
            "b)\tInfinite recursion can occur if the base case isn’t properly mentioned",
            "c)\tA recursive function makes the code easier to understand",
            "d)\tEvery recursive function must have a return value"
        ],
        "Answer": "Answer: c\nExplanation: A recursive function is tail recursive when recursive call is executed by the function in the last."
    },
    {
        "id": 638,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> fun<span class=\"br0\">(</span>n<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">100</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> n - <span class=\"nu0\">5</span>\n    <span class=\"kw1\">return</span> fun<span class=\"br0\">(</span>fun<span class=\"br0\">(</span>n+<span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>\n&nbsp;\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>fun<span class=\"br0\">(</span><span class=\"nu0\">45</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t50",
            "b)\t100",
            "c)\t74",
            "d)\tInfinite loop"
        ],
        "Answer": "Answer: d\nExplanation: A recursive function needn’t have a return value. "
    },
    {
        "id": 639,
        "Question": " What happens if the base condition isn’t defined in recursive programs?",
        "Options": [
            "a)\tProgram gets into an infinite loop",
            "b)\tProgram runs once",
            "c)\tProgram runs n number of times where n is the argument given to the function",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: The fun(fun(n+11)) part of the code keeps executing until the value of n becomes greater than 100, after which n-5 is returned and printed."
    },
    {
        "id": 640,
        "Question": " Which of these is not true about recursion?",
        "Options": [
            "a)\tMaking the code look clean",
            "b)\tA complex task can be broken into sub-problems",
            "c)\tRecursive calls take up less memory",
            "d)\tSequence generation is easier than a nested iteration"
        ],
        "Answer": "Answer: b\nExplanation: In recursion, the function calls itself till the base condition is reached whereas iteration means repetition of process for example in for-loops."
    },
    {
        "id": 641,
        "Question": " Which of these is not true about recursion?",
        "Options": [
            "a)\tIt’s easier to code some real-world problems using recursion than non-recursive equivalent",
            "b)\tRecursive functions are easy to debug",
            "c)\tRecursive calls take up a lot of memory",
            "d)\tPrograms using recursion take longer time than their non-recursive equivalent"
        ],
        "Answer": "Answer: a\nExplanation: The program will run until the system gets out of memory."
    },
    {
        "id": 642,
        "Question": "15.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span>n<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span>\n    <span class=\"kw1\">elif</span> n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">return</span> a<span class=\"br0\">(</span>n-<span class=\"nu0\">1</span><span class=\"br0\">)</span>+a<span class=\"br0\">(</span>n-<span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>a<span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">,</span>end<span class=\"sy0\">=</span><span class=\"st0\">\" \"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t0 1 2 3",
            "b)\tAn exception is thrown",
            "c)\t0 1 1 2 3",
            "d)\t0 1 1 2"
        ],
        "Answer": "Answer: c\nExplanation: Recursive calls take up a lot of memory and time as memory is taken up each time the function is called."
    },
    {
        "id": 643,
        "Question": "1. Which type of copy is shown in the following python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">40</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">60</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nls<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>l1<span class=\"br0\">)</span>\nls\n<span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">30</span><span class=\"sy0\">,</span> <span class=\"nu0\">40</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span> <span class=\"nu0\">60</span><span class=\"br0\">]</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Shallow copy",
            "b) Deep copy",
            "c) memberwise",
            "d) All of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above depicts shallow copy. For deep copy, the command given is: l2 = l1.copy()."
    },
    {
        "id": 644,
        "Question": "In _______________ copy, the base address of the objects are copied. In _______________ copy, the base address of the objects are not copied.",
        "Options": [
            "a) deep. shallow",
            "b) memberwise, shallow",
            "c) shallow, deep",
            "d) deep, memberwise"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above depicts deep copy. In deep copy, the base address of the objects is not copied. Hence the modification done on one list does not affect the other list."
    },
    {
        "id": 645,
        "Question": "5. What will be the output of the following Python code and state the type of copy that is depicted?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"br0\">]</span>\nl2<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>\nl1<span class=\"sy0\">=</span>l2\nl2</pre></div></div></div></div></div></div>",
        "Options": [
            "a) [2, 4, 6, 8], shallow copy",
            "b) [2, 4, 6, 8], deep copy",
            "c) [1, 2, 3], shallow copy",
            "d) [1, 2, 3], deep copy"
        ],
        "Answer": "Answer: c\nExplanation: In shallow copy, the base address of the objects are copied.\nIn deep copy, the base address of the objects are not copied.\nNote that memberwise copy is another name for shallow copy."
    },
    {
        "id": 646,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">30</span><span class=\"br0\">]</span>\nl2<span class=\"sy0\">=</span>l1\n<span class=\"kw2\">id</span><span class=\"br0\">(</span>l1<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"kw2\">id</span><span class=\"br0\">(</span>l2<span class=\"br0\">)</span>\n&nbsp;\nl2<span class=\"sy0\">=</span>l1.<span class=\"kw3\">copy</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw2\">id</span><span class=\"br0\">(</span>l1<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"kw2\">id</span><span class=\"br0\">(</span>l2<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) False, False",
            "b) False, True",
            "c) True, True",
            "d) True, False"
        ],
        "Answer": "Answer: a\nExplanation: A nested list undergoes shallow copy even when the list as a whole undergoes deep copy. Hence, this statement is true."
    },
    {
        "id": 647,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l1<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\nl2<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>l1<span class=\"br0\">)</span>\n<span class=\"kw2\">id</span><span class=\"br0\">(</span>l1<span class=\"br0\">)</span><span class=\"sy0\">==</span><span class=\"kw2\">id</span><span class=\"br0\">(</span>l2<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Error",
            "d) Address of l1"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above depicts shallow copy and the output of the code is: [1, 2, 3]."
    },
    {
        "id": 648,
        "Question": "In ____________________ copy, the modification done on one list affects the other list. In ____________________ copy, the modification done on one list does not affect the other list.",
        "Options": [
            "a) shallow, deep",
            "b) memberwise, shallow",
            "c) deep, shallow",
            "d) deep, memberwise"
        ],
        "Answer": "Answer: d\nExplanation: The first code shown above represents shallow copy. Hence the output of the expression id(l1)==id(l2) is True. The second code depicts deep copy. Hence the output of the expression id(l1)==id(l2) in the second case is False."
    },
    {
        "id": 649,
        "Question": "11.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> check<span class=\"br0\">(</span>n<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span>:\n        <span class=\"kw1\">return</span> n % <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span>\n    <span class=\"kw1\">return</span> check<span class=\"br0\">(</span>n - <span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>check<span class=\"br0\">(</span><span class=\"nu0\">11</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tFalse",
            "b)\tTrue",
            "c)\t1",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above shows a nested list. A nested list will undergo shallow copy when the list as a whole undergoes deep copy. Hence the output of this code is False."
    },
    {
        "id": 650,
        "Question": " What is the base case in the Merge Sort algorithm when it is solved recursively?",
        "Options": [
            "a)\tn=0",
            "b)\tn=1",
            "c)\tA list of length one",
            "d)\tAn empty list"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above depicts deep copy. Hence at the end of the code, l1=[10, 20, 30, [90]] and l2=[10, 20, 30, [40]]."
    },
    {
        "id": 651,
        "Question": "13.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\nb <span class=\"sy0\">=</span> <span class=\"kw1\">lambda</span> x: <span class=\"br0\">(</span>b <span class=\"br0\">(</span>x<span class=\"br0\">[</span><span class=\"nu0\">1</span>:<span class=\"br0\">]</span><span class=\"br0\">)</span> + x<span class=\"br0\">[</span>:<span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"kw1\">if</span> x <span class=\"kw1\">else</span> <span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> \n<span class=\"kw1\">print</span><span class=\"br0\">(</span>b <span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1 2 3 4 5",
            "b)\t[5,4,3,2,1] ",
            "c)\t[] ",
            "d)\tError, lambda functions can’t be called recursively"
        ],
        "Answer": "Answer: a\nExplanation: In shallow copy, the modification done on one list affects the other list. In deep copy, the modification done on one list does not affect the other list."
    },
    {
        "id": 652,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">odd<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> x: <span class=\"kw2\">bool</span><span class=\"br0\">(</span>x%<span class=\"nu0\">2</span><span class=\"br0\">)</span>\nnumbers<span class=\"sy0\">=</span><span class=\"br0\">[</span>n <span class=\"kw1\">for</span> n <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>numbers<span class=\"br0\">)</span>\nn<span class=\"sy0\">=</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> numbers:\n    <span class=\"kw1\">if</span> odd<span class=\"br0\">(</span>i<span class=\"br0\">)</span>:\n        <span class=\"kw1\">continue</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">break</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 2, 4, 6, 8, 10]",
            "b) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
            "c) [1, 3, 5, 7, 9]",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above returns a new list containing whole numbers up to 10 (excluding 10). Hence the output of the code is: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]."
    },
    {
        "id": 653,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">f<span class=\"sy0\">=</span><span class=\"kw1\">lambda</span> x:<span class=\"kw2\">bool</span><span class=\"br0\">(</span>x%<span class=\"nu0\">2</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>f<span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> f<span class=\"br0\">(</span><span class=\"nu0\">21</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) False True",
            "b) False False",
            "c) True True",
            "d) True False"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will return true if the given argument is an odd number, and false if the given argument is an even number. Since the arguments are 20 and 21 respectively, the output of this code is: False True."
    },
    {
        "id": 654,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> functools\nl<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>functools.<span class=\"kw2\">reduce</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x<span class=\"sy0\">,</span>y:x*y<span class=\"sy0\">,</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 10",
            "c) 24",
            "d) No output"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above returns the product of all the elements of the list. Hence the output is 1*2*3*4 = 24."
    },
    {
        "id": 655,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> -<span class=\"nu0\">2</span><span class=\"sy0\">,</span> -<span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">2</span>\nm1<span class=\"sy0\">=</span><span class=\"kw2\">filter</span><span class=\"br0\">(</span>f1<span class=\"sy0\">,</span> l<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m1<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 4, 5\t]",
            "b) Error",
            "c) [-2, -3]",
            "d) [1, -2, -3]"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above returns only those elements from the list, which are less than 2. The functional programming tool used to achieve this operation is filter. Hence the output of the code is:[1, -2, -3]."
    },
    {
        "id": 656,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> -<span class=\"nu0\">2</span><span class=\"sy0\">,</span> -<span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> x<span class=\"sy0\">&lt;</span>-<span class=\"nu0\">1</span>\nm1<span class=\"sy0\">=</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>f1<span class=\"sy0\">,</span> l<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m1<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [False, False, False, False, False]",
            "b) [False, True, True, False, False]",
            "c) [True, False, False, True, True]",
            "d) [True, True, True, True, True]"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above returns the address of m. Had we used the statement: print(list(m)), the output would have been: [-4, 16]."
    },
    {
        "id": 657,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\nm<span class=\"sy0\">=</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:<span class=\"nu0\">2</span>**x<span class=\"sy0\">,</span> l<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 4, 9, 16, 25\t]",
            "b) [2, 4, 8, 16, 32\t]",
            "c) [1, 0, 1, 0, 1]",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: This code shown returns a list which contains True if the corresponding element of the list is less than -1, and false if the corresponding element is greater than -1. Hence the output of the code shown above: [False, True, True, False, False]."
    },
    {
        "id": 658,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> functools\nl<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\nm<span class=\"sy0\">=</span>functools.<span class=\"kw2\">reduce</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x<span class=\"sy0\">,</span> y:x <span class=\"kw1\">if</span> x<span class=\"sy0\">&gt;</span>y <span class=\"kw1\">else</span> y<span class=\"sy0\">,</span> l<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Address of m",
            "c) 1",
            "d) 5"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above prints a list containing each element of the list as the power of two. That is, the output is: [2, 4, 8, 16, 32]."
    },
    {
        "id": 659,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">m<span class=\"sy0\">=</span><span class=\"kw2\">reduce</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x: x-<span class=\"nu0\">3</span> <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 2, 3, 4, 5, 6, 7]",
            "b) No output",
            "c) [1, 2, 3, 4, 5, 6]",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above can be used to find the maximum of the elements from the given list. In the above code, this operation is achieved by using the programming tool reduce. Hence the output of the code shown above is 5."
    },
    {
        "id": 660,
        "Question": "11. Which of the following numbers will not be a part of the output list of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> sf<span class=\"br0\">(</span>a<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> a%<span class=\"nu0\">3</span><span class=\"sy0\">!=</span><span class=\"nu0\">0</span> <span class=\"kw1\">and</span> a%<span class=\"nu0\">5</span><span class=\"sy0\">!=</span><span class=\"nu0\">0</span>\nm<span class=\"sy0\">=</span><span class=\"kw2\">filter</span><span class=\"br0\">(</span>sf<span class=\"sy0\">,</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">31</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 29",
            "c) 6",
            "d) 10"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above prints true if the value entered as an argument is odd, else false is printed. Hence the output: True True. The error is due to the list index being out of range. "
    },
    {
        "id": 661,
        "Question": "12. The single line equivalent of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">l<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> f1<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> x<span class=\"sy0\">&lt;</span><span class=\"nu0\">0</span>\nm1<span class=\"sy0\">=</span><span class=\"kw2\">filter</span><span class=\"br0\">(</span>f1<span class=\"sy0\">,</span> l<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>m1<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) filter(lambda x:x<0, l)",
            "b) filter(lambda x, y: x<0, l)",
            "c) filter(reduce x<0, l)",
            "d) reduce(x: x<0, l)"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above will result in an error. This is because e have not imported functools. Further, ‘reduce’, as such is not defined. We should use functools.reduce to remove the error."
    },
    {
        "id": 662,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:x^<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]",
            "b) Error",
            "c) [2, 3, 0, 1, 6, 7, 4, 5, 10, 11]",
            "d) No output"
        ],
        "Answer": "Answer: d\nExplanation: The output list of the code shown above will not contain any element that is divisible by 3 or 5. Hence the number which is not present in the output list is 10. The output list: [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19, 22, 23, 26, 28, 29]"
    },
    {
        "id": 663,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:x**<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">filter</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw1\">lambda</span> x:x%<span class=\"nu0\">2</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">,</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
            "b) [0, 4, 16, 36, 64]",
            "c) Error",
            "d) No output"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above returns a new list containing only those elements from list l, which are less than 0. Since there are no such elements in the list l, the output of this code is: []. The single line equivalent of this code is filter(lambda x:x<0, l)."
    },
    {
        "id": 664,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">elements <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> incr<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> x+<span class=\"nu0\">1</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>elements<span class=\"sy0\">,</span> incr<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 2, 3] ",
            "b) [0, 1, 2] ",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The list should be the second parameter to the mapping function."
    },
    {
        "id": 665,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">elements <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">]</span>\n<span class=\"kw1\">def</span> incr<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> x+<span class=\"nu0\">1</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>incr<span class=\"sy0\">,</span> elements<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 2, 3] ",
            "b) [0, 1, 2] ",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Each element of the list is incremented."
    },
    {
        "id": 666,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>upper<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘AB’, ‘CD’] ",
            "b) [‘ab’, ‘cd’] ",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: A NameError occurs because upper is a class method."
    },
    {
        "id": 667,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> to_upper<span class=\"br0\">(</span>k<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> k.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nx <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>upper<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘AB’, ‘CD’] ",
            "b) [‘ab’, ‘cd’] ",
            "c) none of the mentioned",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: A NameError occurs because upper is a class method."
    },
    {
        "id": 668,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> to_upper<span class=\"br0\">(</span>k<span class=\"br0\">)</span>:\n    <span class=\"kw1\">return</span> k.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nx <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>to_upper<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘AB’, ‘CD’] ",
            "b) [‘ab’, ‘cd’] ",
            "c) none of the mentioned",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: Each element of the list is converted to uppercase."
    },
    {
        "id": 669,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> to_upper<span class=\"br0\">(</span>k<span class=\"br0\">)</span>:\n    k.<span class=\"me1\">upper</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nx <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span>to_upper<span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘AB’, ‘CD’] ",
            "b) [‘ab’, ‘cd’] ",
            "c) none of the mentioned",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: A list of Nones is printed as to_upper() returns None."
    },
    {
        "id": 670,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘cd’] ",
            "b) [2, 2] ",
            "c) [‘2’, ‘2’] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A map object is generated by map(). We must convert this to a list to be able to print it in a human readable form."
    },
    {
        "id": 671,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘ab’, ‘cd’] ",
            "b) [2, 2] ",
            "c) [‘2’, ‘2’] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: The length of each string is 2."
    },
    {
        "id": 672,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [2, 2] ",
            "b) 2",
            "c) 4",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: A TypeError occurs as map has no len()."
    },
    {
        "id": 673,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 4",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The outer list has two lists in it. So it’s length is 2."
    },
    {
        "id": 674,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 4",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: SyntaxError, unbalanced parenthesis."
    },
    {
        "id": 675,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"st0\">'ab'</span><span class=\"sy0\">,</span> <span class=\"st0\">'cd'</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘a’, ‘b’, ‘c’, ‘d’] ",
            "b) [[‘ab’], [‘cd’]] ",
            "c) [[‘a’, ‘b’], [‘c’, ‘d’]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Each element of x is converted into a list."
    },
    {
        "id": 676,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">34</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: TypeError, int has no len()."
    },
    {
        "id": 677,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">34</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: list(map()) returns a list of two items in this example."
    },
    {
        "id": 678,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">34</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 2",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Cannot perform join on a list of ints."
    },
    {
        "id": 679,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">34</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 6",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: Each number is mapped into a string of length 2."
    },
    {
        "id": 680,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">34</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">int</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 6",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: TypeError. Execute in shell to verify."
    },
    {
        "id": 681,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12.1</span><span class=\"sy0\">,</span> <span class=\"nu0\">34.0</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 6",
            "b) 8",
            "c) 9",
            "d) error"
        ],
        "Answer": "Answer: c\nExplanation: The floating point numbers are converted to strings and joined with a space between them."
    },
    {
        "id": 682,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">12.1</span><span class=\"sy0\">,</span> <span class=\"nu0\">34.0</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 12 1 34 0",
            "b) 12.1 34",
            "c) 121 340",
            "d) 12.1 34.0"
        ],
        "Answer": "Answer: d\nExplanation: str(ab.c) is ‘ab.c’."
    },
    {
        "id": 683,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 3",
            "c) 7",
            "d) 8"
        ],
        "Answer": "Answer: c\nExplanation: map() is applied to the elements of the outer loop."
    },
    {
        "id": 684,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘[0] [1]’,)",
            "b) (’01’,)",
            "c) [0] [1] ",
            "d) 01"
        ],
        "Answer": "Answer: c\nExplanation: (element) is the same as element. It is not a tuple with one item."
    },
    {
        "id": 685,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">' '</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘[0] [1]’,)",
            "b) (’01’)",
            "c) [0] [1] ",
            "d) 01"
        ],
        "Answer": "Answer: a\nExplanation: (element,) is not the same as element. It is a tuple with one item."
    },
    {
        "id": 686,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">34</span><span class=\"sy0\">,</span> <span class=\"nu0\">56</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3456",
            "b) (3456)",
            "c) (‘3456’)",
            "d) (‘3456’,)"
        ],
        "Answer": "Answer: d\nExplanation: We have created a tuple with one string in it."
    },
    {
        "id": 687,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">34</span><span class=\"sy0\">,</span> <span class=\"nu0\">56</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"st0\">''</span>.<span class=\"me1\">join</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">,</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3456",
            "b) (3456)",
            "c) (‘3456’)",
            "d) (‘3456’,)"
        ],
        "Answer": "Answer: a\nExplanation: We have just created a string."
    },
    {
        "id": 688,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">34</span><span class=\"sy0\">,</span> <span class=\"nu0\">56</span><span class=\"br0\">]</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">len</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">str</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [34, 56] ",
            "b) [’34’, ’56’] ",
            "c) 34 56",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, map has no len."
    },
    {
        "id": 689,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘a’, ‘b’, ‘c’, ‘d’] ",
            "b) [‘abcd’] ",
            "c) [[‘a’], [‘b’], [‘c’], [‘d’]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: list() is performed on each character in x."
    },
    {
        "id": 690,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> abcd\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘a’, ‘b’, ‘c’, ‘d’] ",
            "b) [‘abcd’] ",
            "c) [[‘a’], [‘b’], [‘c’], [‘d’]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: NameError, we have not defined abcd."
    },
    {
        "id": 691,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">1234</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 2, 3, 4] ",
            "b) [1234] ",
            "c) [[1], [2], [3], [4]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, int is not iterable."
    },
    {
        "id": 692,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"nu0\">1234</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"sy0\">,</span> <span class=\"br0\">[</span>x<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [1, 2, 3, 4] ",
            "b) [1234] ",
            "c) [[1], [2], [3], [4]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, int is not iterable."
    },
    {
        "id": 693,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x <span class=\"sy0\">=</span> <span class=\"st0\">'abcd'</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span><span class=\"kw2\">map</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">,</span> x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘a’, ‘b’, ‘c’, ‘d’] ",
            "b) [‘abcd’] ",
            "c) [[‘a’], [‘b’], [‘c’], [‘d’]] ",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: TypeError, list object is not callable."
    },
    {
        "id": 694,
        "Question": " Is Python code compiled or interpreted?",
        "Options": [
            "a)\tPython code is only compiled",
            "b)\tPython code is both compiled and interpreted",
            "c)\tPython code is only interpreted",
            "d)\tPython code is neither compiled nor interpreted"
        ],
        "Answer": "Answer: b\nExplanation: Many languages have been implemented using both compilers and interpreters, including C, Pascal, and Python."
    },
    {
        "id": 695,
        "Question": "Which of these is the definition for packages in Python?",
        "Options": [
            "a)\tA folder of python modules",
            "b)\tA set of programs making use of Python modules",
            "c)\tA set of main modules",
            "d)\tA number of files containing Python definitions and statements"
        ],
        "Answer": "Answer: a\nExplanation: A folder of python programs is called as a package of modules."
    },
    {
        "id": 696,
        "Question": "Which of these is false about a package?",
        "Options": [
            "a)\tA package can have subfolders and modules",
            "b)\tEach import package need not introduce a namespace",
            "c)\timport folder.subfolder.mod1 imports packages",
            "d)\tfrom folder.subfolder.mod1 import objects imports packages"
        ],
        "Answer": "Answer: b\nExplanation: Packages provide a way of structuring Python namespace. Each import package introduces a namespace."
    },
    {
        "id": 697,
        "Question": "1.\tWhich of these definitions correctly describes a module?",
        "Options": [
            "a)\tDenoted by triple quotes for providing the specification of certain program elements",
            "b)\tDesign and implementation of specific functionality to be incorporated into a program",
            "c)\tDefines the specification of how it is to be used",
            "d)\tAny program that reuses code"
        ],
        "Answer": "Answer: b\nExplanation: The term “module” refers to the implementation of specific functionality to be incorporated into a program."
    },
    {
        "id": 698,
        "Question": "2.\tWhich of the following is not an advantage of using modules?",
        "Options": [
            "a)\tProvides a means of reuse of program code",
            "b)\tProvides a means of dividing up tasks",
            "c)\tProvides a means of reducing the size of the program",
            "d)\tProvides a means of testing individual parts of the program"
        ],
        "Answer": "Answer: c\nExplanation: The total size of the program remains the same regardless of whether modules are used or not. Modules simply divide the program."
    },
    {
        "id": 699,
        "Question": "3.\tProgram code making use of a given module is called a ______ of the module.",
        "Options": [
            "a)\tClient",
            "b)\tDocstring",
            "c)\tInterface",
            "d)\tModularity"
        ],
        "Answer": "Answer: a\nExplanation: Program code making use of a given module is called the client of the module. There may be multiple clients for a module."
    },
    {
        "id": 700,
        "Question": "4.\t______ is a string literal denoted by triple quotes for providing the specifications of certain program elements.",
        "Options": [
            "a)\tInterface",
            "b)\tModularity",
            "c)\tClient",
            "d)\tDocstring"
        ],
        "Answer": "Answer: d\nExplanation: Docstring used for providing the specifications of program elements."
    },
    {
        "id": 701,
        "Question": "5.\tWhich of the following is true about top-down design process?",
        "Options": [
            "a)\tThe details of a program design are addressed before the overall design",
            "b)\tOnly the details of the program are addressed",
            "c)\tThe overall design of the program is addressed before the details",
            "d)\tOnly the design of the program is addressed"
        ],
        "Answer": "Answer: c\nExplanation: Top-down design is an approach for deriving a modular design in which the overall design."
    },
    {
        "id": 702,
        "Question": " Which of the following isn’t true about main modules?",
        "Options": [
            "a)\tWhen a python file is directly executed, it is considered main module of a program",
            "b)\tMain modules may import any number of modules",
            "c)\tSpecial name given to main modules is: __main__",
            "d)\tOther main modules can import main modules"
        ],
        "Answer": "Answer: b\nExplanation: In top-down design every module can even be broken down into different number of submodules."
    },
    {
        "id": 703,
        "Question": "Which of the following is not a valid namespace?",
        "Options": [
            "a)\tGlobal namespace",
            "b)\tPublic namespace",
            "c)\tBuilt-in namespace",
            "d)\tLocal namespace"
        ],
        "Answer": "Answer: b\nExplanation: The details of the program can be addressed before the overall design too. Hence, all modular designs are not because of a top-down design process."
    },
    {
        "id": 704,
        "Question": " Which of the following is false about “import modulename” form of import?",
        "Options": [
            "a)\tThe namespace of imported module becomes part of importing module",
            "b)\tThis form of import prevents name clash",
            "c)\tThe namespace of imported module becomes available to importing module",
            "d)\tThe identifiers in module are accessed as: modulename.identifier"
        ],
        "Answer": "Answer: d\nExplanation: A name clash is when two different entities with the same identifier become part of the same scope. Since both the modules have the same function name, there is a name clash."
    },
    {
        "id": 705,
        "Question": " Which of the following is false about “from-import” form of import?",
        "Options": [
            "a)\tThe syntax is: from modulename import identifier",
            "b)\tThis form of import prevents name clash",
            "c)\tThe namespace of imported module becomes part of importing module",
            "d)\tThe identifiers in module are accessed directly as: identifier"
        ],
        "Answer": "Answer: d\nExplanation: Main modules are not meant to be imported into other modules."
    },
    {
        "id": 706,
        "Question": " Which of the statements about modules is false?",
        "Options": [
            "a)\tIn the “from-import” form of import, identifiers beginning with two underscores are private and aren’t imported",
            "b)\tdir() built-in function monitors the items in the namespace of the main module",
            "c)\tIn the “from-import” form of import, all identifiers regardless of whether they are private or public are imported",
            "d)\tWhen a module is loaded, a compiled version of the module with file extension .pyc is automatically produced"
        ],
        "Answer": "Answer: b\nExplanation: During a Python program execution, there are as many as three namespaces – built-in namespace, global namespace and local namespace."
    },
    {
        "id": 707,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">from</span> <span class=\"kw3\">math</span> <span class=\"kw1\">import</span> factorial\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">factorial</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t120",
            "b)\tNothing is printed",
            "c)\tError, method factorial doesn’t exist in math module",
            "d)\tError, the statement should be: print(factorial(5))"
        ],
        "Answer": "Answer: a\nExplanation: In the “import modulename” form of import, the namespace of imported module becomes available to, but not part of, the importing module."
    },
    {
        "id": 708,
        "Question": " What is the order of namespaces in which Python looks for an identifier?",
        "Options": [
            "a)\tPython first searches the global namespace, then the local namespace and finally the built-in namespace",
            "b)\tPython first searches the local namespace, then the global namespace and finally the built-in namespace",
            "c)\tPython first searches the built-in namespace, then the global namespace and finally the local namespace",
            "d)\tPython first searches the built-in namespace, then the local namespace and finally the global namespace"
        ],
        "Answer": "Answer: b\nExplanation: In the “from-import” form of import, there may be name clashes because names of the imported identifiers aren’t specified along with the module name."
    },
    {
        "id": 709,
        "Question": "What is returned by math.ceil(3.4)?",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 4.0",
            "d) 3.0"
        ],
        "Answer": "Answer: b\nExplanation: The ceil function returns the smallest integer that is bigger than or equal to the number itself."
    },
    {
        "id": 710,
        "Question": "What is the value returned by math.floor(3.4)?",
        "Options": [
            "a) 3",
            "b) 4",
            "c) 4.0",
            "d) 3.0"
        ],
        "Answer": "Answer: a\nExplanation: The floor function returns the biggest number that is smaller than or equal to the number itself."
    },
    {
        "id": 711,
        "Question": "What will be the output of print(math.copysign(3, -1))?",
        "Options": [
            "a) 1",
            "b) 1.0",
            "c) -3",
            "d) -3.0"
        ],
        "Answer": "Answer: d\nExplanation: The copysign function returns a float whose absolute value is that of the first argument and the sign is that of the second argument."
    },
    {
        "id": 712,
        "Question": "What is displayed on executing print(math.fabs(-3.4))?",
        "Options": [
            "a) -3.4",
            "b) 3.4",
            "c) 3",
            "d) -3"
        ],
        "Answer": "Answer: b\nExplanation: A negative floating point number is returned as a positive floating point number."
    },
    {
        "id": 713,
        "Question": "Is the output of the function abs() the same as that of the function math.fabs()?",
        "Options": [
            "a) sometimes",
            "b) always",
            "c) never",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: math.fabs() always returns a float and does not work with complex numbers whereas the return type of abs() is determined by the type of value that is passed to it."
    },
    {
        "id": 714,
        "Question": "What is the value returned by math.fact(6)?",
        "Options": [
            "a) 720",
            "b) 6",
            "c) [1, 2, 3, 6] ",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: NameError, fact() is not defined."
    },
    {
        "id": 715,
        "Question": "What is the value of x if x = math.factorial(0)?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: Factorial of 0 is 1."
    },
    {
        "id": 716,
        "Question": "What is math.factorial(4.0)?",
        "Options": [
            "a) 24",
            "b) 1",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The factorial of 4 is returned."
    },
    {
        "id": 717,
        "Question": "What will be the output of print(math.factorial(4.5))?",
        "Options": [
            "a) 24",
            "b) 120",
            "c) error",
            "d) 24.0"
        ],
        "Answer": "Answer: c\nExplanation: Factorial is only defined for non-negative integers."
    },
    {
        "id": 718,
        "Question": "What is math.floor(0o10)?",
        "Options": [
            "a) 8",
            "b) 10",
            "c) 0",
            "d) 9"
        ],
        "Answer": "Answer: a\nExplanation: 0o10 is 8 and floor(8) is 8."
    },
    {
        "id": 719,
        "Question": "What does the function math.frexp(x) return?",
        "Options": [
            "a) a tuple containing the mantissa and the exponent of x",
            "b) a list containing the mantissa and the exponent of x",
            "c) a tuple containing the mantissa of x",
            "d) a list containing the exponent of x"
        ],
        "Answer": "Answer: a\nExplanation: It returns a tuple with two elements. The first element is the mantissa and the second element is the exponent."
    },
    {
        "id": 720,
        "Question": "What is the result of math.fsum([.1 for i in range(20)])?",
        "Options": [
            "a) 2.0",
            "b) 20",
            "c) 2",
            "d) 2.0000000000000004"
        ],
        "Answer": "Answer: a\nExplanation: The function fsum returns an accurate floating point sum of the elements of its argument."
    },
    {
        "id": 721,
        "Question": "What is the result of sum([.1 for i in range(20)])?",
        "Options": [
            "a) 2.0",
            "b) 20",
            "c) 2",
            "d) 2.0000000000000004"
        ],
        "Answer": "Answer: d\nExplanation: There is some loss of accuracy when we use sum with floating point numbers. Hence the function fsum is preferable."
    },
    {
        "id": 722,
        "Question": "What is returned by math.isfinite(float(‘inf’))?",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: float(‘inf’) is not a finite number."
    },
    {
        "id": 723,
        "Question": "What is returned by math.isfinite(float(‘nan’))?",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: float(‘nan’) is not a finite number."
    },
    {
        "id": 724,
        "Question": "What is x if x = math.isfinite(float(‘0.0’))?",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: float(‘0.0’) is a finite number."
    },
    {
        "id": 725,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> -<span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"st0\">'inf'</span><span class=\"br0\">)</span> + <span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"st0\">'inf'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) inf",
            "b) nan",
            "c) 0",
            "d) 0.0"
        ],
        "Answer": "Answer: b\nExplanation: The result of float(‘inf’)-float(‘inf’) is undefined."
    },
    {
        "id": 726,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">isinf</span><span class=\"br0\">(</span><span class=\"kw2\">float</span><span class=\"br0\">(</span><span class=\"st0\">'-inf'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) error, the minus sign shouldn’t have been inside the brackets",
            "b) error, there is no function called isinf",
            "c) True",
            "d) False"
        ],
        "Answer": "Answer: c\nExplanation: -float(‘inf’) is the same as float(‘-inf’)."
    },
    {
        "id": 727,
        "Question": "What is the value of x if x = math.ldexp(0.5, 1)?",
        "Options": [
            "a) 1",
            "b) 2.0",
            "c) 0.5",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: The value returned by ldexp(x, y) is x * (2 ** y). In the current case x is 1.0."
    },
    {
        "id": 728,
        "Question": "What is returned by math.modf(1.0)?",
        "Options": [
            "a) (0.0, 1.0)",
            "b) (1.0, 0.0)",
            "c) (0.5, 1)",
            "d) (0.5, 1.0)"
        ],
        "Answer": "Answer: a\nExplanation: The first element is the fractional part and the second element is the integral part of the argument."
    },
    {
        "id": 729,
        "Question": "What is the result of math.trunc(3.1)?",
        "Options": [
            "a) 3.0",
            "b) 3",
            "c) 0.1",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: The integral part of the floating point number is returned."
    },
    {
        "id": 730,
        "Question": "What is the output of print(math.trunc(‘3.1’))?",
        "Options": [
            "a) 3",
            "b) 3.0",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: TypeError, a string does not have __trunc__ method."
    },
    {
        "id": 731,
        "Question": "Which of the following is the same as math.exp(p)?",
        "Options": [
            "a) e ** p",
            "b) math.e ** p",
            "c) p ** e",
            "d) p ** math.e"
        ],
        "Answer": "Answer: b\nExplanation: math.e is the constant defined in the math module."
    },
    {
        "id": 732,
        "Question": "What is returned by math.expm1(p)?",
        "Options": [
            "a) (math.e ** p) – 1",
            "b) math.e ** (p – 1)",
            "c) error",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: One is subtracted from the result of math.exp(p) and returned."
    },
    {
        "id": 733,
        "Question": "What is the default base used when math.log(x) is found?",
        "Options": [
            "a) e",
            "b) 10",
            "c) 2",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The natural log of x is returned by default."
    },
    {
        "id": 734,
        "Question": "Which of the following aren’t defined in the math module?",
        "Options": [
            "a) log2()",
            "b) log10()",
            "c) logx()",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: log2() and log10() are defined in the math module."
    },
    {
        "id": 735,
        "Question": "What is returned by int(math.pow(3, 2))?",
        "Options": [
            "a) 6",
            "b) 9",
            "c) error, third argument required",
            "d) error, too many arguments"
        ],
        "Answer": "Answer: b\nExplanation: math.pow(a, b) returns a ** b."
    },
    {
        "id": 736,
        "Question": "What is output of print(math.pow(3, 2))?",
        "Options": [
            "a) 9",
            "b) 9.0",
            "c) None",
            "d) None of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: math.pow() returns a floating point number."
    },
    {
        "id": 737,
        "Question": "What is the value of x if x = math.sqrt(4)?",
        "Options": [
            "a) 2",
            "b) 2.0",
            "c) (2, -2)",
            "d) (2.0, -2.0)"
        ],
        "Answer": "Answer: b\nExplanation: The function returns one floating point number."
    },
    {
        "id": 738,
        "Question": "What does math.sqrt(X, Y) do?",
        "Options": [
            "a) calculate the Xth root of Y",
            "b) calculate the Yth root of X",
            "c) error",
            "d) return a tuple with the square root of X and Y"
        ],
        "Answer": "Answer: c\nExplanation: The function takes only one argument."
    },
    {
        "id": 739,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span>\nd<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span><span class=\"br0\">(</span><span class=\"nu0\">2016</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 2017-07-24",
            "c) 2017-7-24",
            "d) 24-7-2017"
        ],
        "Answer": "Answer: b\nExplanation: In the snippet of code shown above, we are simply printing the date entered by us. We enter the date in the format: yyyy,m,dd. The date is then printed in the format: yyyy-mm-dd. Hence the output is: 2017-07-24."
    },
    {
        "id": 740,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span>\nd<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span><span class=\"br0\">(</span><span class=\"nu0\">2017</span><span class=\"sy0\">,</span><span class=\"nu0\">06</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 2017-06-18",
            "c) 18-06-2017",
            "d) 06-18-2017"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will result in an error because of the format of the date entered. Had the date been entered as: d=datetime.date(2017,6,18), no error would have been thrown."
    },
    {
        "id": 741,
        "Question": "3. What will be the output of the following Python code if the system date is 18th August, 2016?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>tday.<span class=\"me1\">month</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) August",
            "b) Aug",
            "c) 08",
            "d) 8"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above prints the month number from the system date. Therefor the output will be 8 if the system date is 18th August, 2016."
    },
    {
        "id": 742,
        "Question": "4. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">datetime</span>\ntday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>tday<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 18-06-2017",
            "b) 06-18-2017",
            "c) 2017-06-18",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above prints the system date in the format yyyy-mm-dd. Hence the output of this code is: 2017-06-18."
    },
    {
        "id": 743,
        "Question": "5. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>tday.<span class=\"me1\">weekday</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 6",
            "b) 1",
            "c) 0",
            "d) 7"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above prints an integer depending on which day of the week it is. Monday-0, Tuesday-1, Wednesday-2, Thursday-3, Friday-4, Saturday-5, Sunday-6. Hence the output is 6 in the case shown above."
    },
    {
        "id": 744,
        "Question": "6. What will be the output of the following Python code if the system date is 21st June, 2017 (Wednesday)?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>tday.<span class=\"me1\">isoweekday</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Wed",
            "b) Wednesday",
            "c) 2",
            "d) 3"
        ],
        "Answer": "Answer: d\nExplanation: This code prints an integer depending on which day of the week it is. Monday-1, Tuesday-2, Wednesday-3, Thursday-4, Friday-5, Saturday-6, Sunday-7. Hence the output of the code shown above is 3."
    },
    {
        "id": 745,
        "Question": "7. Point out the error (if any) in the code shown below if the system date is 18th June, 2017?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nbday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span><span class=\"br0\">(</span><span class=\"nu0\">2017</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span>\ntill_bday<span class=\"sy0\">=</span>bday-tday\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>till_bday<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3 months, 0:00:00",
            "b) 90 days, 0:00:00",
            "c) 3 months 2 days, 0:00:00",
            "d) 92 days, 0:00:00"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above can be used to find the number of days between two given dates. The output of the code shown above will thus be 92."
    },
    {
        "id": 746,
        "Question": "The value returned when we use the function isoweekday() is ______ and that for the function weekday() is ________ if the system date is 19th June, 2017 (Monday).",
        "Options": [
            "a) 0,0",
            "b) 0,1",
            "c) 1,0",
            "d) 1,1"
        ],
        "Answer": "Answer: c\nExplanation: The value returned when we use the function isoweekday() is 1 and that for the function weekday() is 0 if the system date is 19th June, 2017 (Monday)."
    },
    {
        "id": 747,
        "Question": "9. Which of the following will throw an error if used after the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nbday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span><span class=\"br0\">(</span><span class=\"nu0\">2017</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"sy0\">,</span><span class=\"nu0\">18</span><span class=\"br0\">)</span>\nt_day<span class=\"sy0\">=</span>bday-tday</pre></div></div></div></div></div></div>",
        "Options": [
            "a) print(t_day.seconds)",
            "b) print(t_day.months)",
            "c) print(t_day.max)",
            "d) print(t_day.resolution)"
        ],
        "Answer": "Answer: b\nExplanation: The statement: print(t_day.months) will throw an error because there is no function such as t_day.months, whereas t_day.seconds, t_day.max and t_day.resolution are valid, provided that t_day is defined."
    },
    {
        "id": 748,
        "Question": "10. What will be the output of the following Python code if the system date is: 6/19/2017<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">tday<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">date</span>.<span class=\"me1\">today</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\ntdelta<span class=\"sy0\">=</span><span class=\"kw3\">datetime</span>.<span class=\"me1\">timedelta</span><span class=\"br0\">(</span>days<span class=\"sy0\">=</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>tday+tdelta<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 2017-16-19",
            "b) 2017-06-9",
            "c) 2017-06-29",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above will add the specified number of days to the current date and print the new date. On adding ten days to 6/19/2017, we get 6/29/2017. Hence the output is: 2017-06-29."
    },
    {
        "id": 749,
        "Question": "Which of the following functions can be used to find the coordinated universal time, assuming that the datetime module has already been imported?",
        "Options": [
            "a) datetime.utc()",
            "b) datetime.datetime.utc()",
            "c) datetime.utcnow()",
            "d) datetime.datetime.utcnow()"
        ],
        "Answer": "Answer: b\nExplanation: The output of the two print statements is not the same because of the difference in time between the execution of the two print statements. There is a difference in the order of milliseconds between the two statements and this is reflected in the output."
    },
    {
        "id": 750,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\n<span class=\"kw3\">time</span>.<span class=\"kw3\">time</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) The number of hours passed since 1st January, 1970",
            "b) The number of days passed since 1st January, 1970",
            "c) The number of seconds passed since 1st January, 1970",
            "d) The number of minutes passed since 1st January, 1970"
        ],
        "Answer": "Answer: d\nExplanation: The function datetime.datetime.utcnow() can be used to find the UTC (Coordinated Universal Time), assuming that the datetime module has already been imported. The other function s shown above are invalid."
    },
    {
        "id": 751,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\n<span class=\"kw3\">time</span>.<span class=\"me1\">asctime</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Current date only",
            "b) UTC time",
            "c) Current date and time",
            "d) Current time only"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above will return the number of seconds passed since 1st January, 1970."
    },
    {
        "id": 752,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\nt<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">2010</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">15</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span>\n<span class=\"kw3\">time</span>.<span class=\"me1\">asctime</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘20 Sep 2010 8:15:12 Sun’",
            "b) ‘2010 20 Sept 08:15:12 Sun’",
            "c) ‘Sun Sept 20 8:15:12 2010’",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will return the numbers 1, 2, 3, followed by the time taken in the execution of the code.\nOutput:\n1\n2\n3\nThe time taken for the execution of the code"
    },
    {
        "id": 753,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\nt<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">2010</span><span class=\"sy0\">,</span> <span class=\"nu0\">9</span><span class=\"sy0\">,</span> <span class=\"nu0\">20</span><span class=\"sy0\">,</span> <span class=\"nu0\">8</span><span class=\"sy0\">,</span> <span class=\"nu0\">45</span><span class=\"sy0\">,</span> <span class=\"nu0\">12</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"sy0\">,</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span>\n<span class=\"kw3\">time</span>.<span class=\"me1\">asctime</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘Sep 20 2010 08:45:12 Sun’",
            "b) ‘Sun Sep 20 08:45:12 2010’",
            "c) ’20 Sep 08:45:12 Sun 2010’",
            "d) ‘2010 20 Sep 08:45:12 Sun’"
        ],
        "Answer": "Answer: c\nExplanation: The function time.asctime(), present if the time module can be used to return the current date and time. It can also accept a parameter and return the date and time in a particular format. However in the above code, since we have not passed any parameters in the above code, the current date and time is returned."
    },
    {
        "id": 754,
        "Question": "The sleep function (under the time module) is used to ___________",
        "Options": [
            "a) Pause the code for the specified number of seconds",
            "b) Return the specified number of seconds, in terms of milliseconds",
            "c) Stop the execution of the code",
            "d) Return the output of the code had it been executed earlier by the specified number of seconds"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above results in an error because this function accepts exactly 9 arguments (including day of the year and DST), but only 7 are given. Hence an error is thrown."
    },
    {
        "id": 755,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">print</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span>\n\t<span class=\"kw3\">time</span>.<span class=\"me1\">sleep</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) After an interval of 2 seconds, the numbers 1, 2, 3, 4, 5 are printed all together",
            "b) After an interval of 2 seconds, the numbers 0, 1, 2, 3, 4 are printed all together",
            "c) Prints the numbers 1, 2, 3, 4, 5 at an interval of 2 seconds between each number",
            "d) Prints the numbers 0, 1, 2, 3, 4 at an interval of 2 seconds between each number"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above returns the given date and time in a particular format. Hence the output of the code shown above will be: ‘Sun Sep 20 08:45:12 2010’."
    },
    {
        "id": 756,
        "Question": "10. What will be the output if we try to extract only the year from the following Python code? (time.struct_time(tm_year=2017, tm_mon=6, tm_mday=25, tm_hour=18, tm_min=26, tm_sec=6, tm_wday=6, tm_yday=176, tm_isdst=0))<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">time</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">time</span>.<span class=\"me1\">localtime</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) t[1]",
            "b) tm_year",
            "c) t[0]",
            "d) t_year"
        ],
        "Answer": "Answer: a\nExplanation: The sleep function (under the time module) is used to pause the code for the specified number of seconds. The number of seconds is taken as an argument by this function."
    },
    {
        "id": 757,
        "Question": "To include the use of functions which are present in the random library, we must use the option:",
        "Options": [
            "a) import random",
            "b) random.h",
            "c) import.random",
            "d) random.random"
        ],
        "Answer": "Answer: a\nExplanation: The command import random is used to import the random module, which enables us to use the functions which are present in the random library."
    },
    {
        "id": 758,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">random</span>\n<span class=\"kw3\">random</span>.<span class=\"me1\">choice</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) An integer other than 2, 3 and 4",
            "b) Either 2, 3 or 4",
            "c) Error",
            "d) 3 only"
        ],
        "Answer": "Answer: a\nExplanation: The function random.randint(a,b) helps us to generate an integer between ‘a’ and ‘b’, including ‘a’ and ‘b’. In this case, since there are no integers between 1 and 2, the output will necessarily be either 1 or 2’."
    },
    {
        "id": 759,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">random</span>\n<span class=\"kw3\">random</span>.<span class=\"me1\">choice</span><span class=\"br0\">(</span><span class=\"br0\">[</span><span class=\"nu0\">10.4</span><span class=\"sy0\">,</span> <span class=\"nu0\">56.99</span><span class=\"sy0\">,</span> <span class=\"nu0\">76</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Either 10.4, 56.99 or 76",
            "c) Any number other than 10.4, 56.99 and 76",
            "d) 56.99 only"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above displays the incorrect syntax of the function random.choice(). This functions takes its numeric parameter in the form of a list. Hence the correct syntax world be: random.choice([2,3,4])."
    },
    {
        "id": 760,
        "Question": "5. What will be the output of the following Python function (random module has already been imported)?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">choice</span><span class=\"br0\">(</span><span class=\"st0\">'sun'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) sun",
            "b) u",
            "c) either s, u or n",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The function random.choice(a,b,c,d) returns a random number which is selected from a, b, c and d. The output can be either a, b, c or d. Hence the output of the snippet of code shown above can be either 10.4, 56.99 or 76."
    },
    {
        "id": 761,
        "Question": "6. What will be the output of the following Python function, assuming that the random module has already been imported?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">uniform</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Either 3 or 4",
            "c) Any integer other than 3 and 4",
            "d) Any decimal value between 3 and 4"
        ],
        "Answer": "Answer: c\nExplanation: The above function works with alphabets just as it does with numbers. The output of this expression will be either s, u or n."
    },
    {
        "id": 762,
        "Question": "7. What will be the output of the following Python function if the random module has already been imported?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">randint</span><span class=\"br0\">(</span><span class=\"nu0\">3.5</span><span class=\"sy0\">,</span><span class=\"nu0\">7</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Any integer between 3.5 and 7, including 7",
            "c) Any integer between 3.5 and 7, excluding 7",
            "d) The integer closest to the mean of 3.5 and 7"
        ],
        "Answer": "Answer: d\nExplanation: This question depicts the basic difference between the functions random.randint(a, b) and random.uniform(a, b). While random.randint(a,b) generates an integer between ‘a’ and ‘b’, including ‘a’ and ‘b’, the function random.uniform(a,b) generates a decimal value between ‘a’ and ‘b’."
    },
    {
        "id": 763,
        "Question": " Which of the following functions helps us to randomize the items of a list?",
        "Options": [
            "a) seed",
            "b) randomise",
            "c) shuffle",
            "d) uniform"
        ],
        "Answer": "Answer: a\nExplanation: The function random.randint() does not accept a decimal value as a parameter. Hence the function shown above will throw an error."
    },
    {
        "id": 764,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">seed</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"kw3\">random</span>.<span class=\"me1\">randint</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>\n<span class=\"nu0\">2</span>\n<span class=\"kw3\">random</span>.<span class=\"me1\">seed</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\n<span class=\"kw3\">random</span>.<span class=\"me1\">randint</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 3",
            "b) 2",
            "c) Any integer between 1 and 5, including 1 and 5",
            "d) Any integer between 1 and 5, excluding 1 and 5"
        ],
        "Answer": "Answer: c\nExplanation: The function shuffle, which is included in the random module, helps us to randomize the items of a list. This function takes the list as a parameter."
    },
    {
        "id": 765,
        "Question": "What is the interval of the value generated by the function random.random(), assuming that the random module has already been imported?",
        "Options": [
            "a) (0,1)",
            "b) (0,1]",
            "c) [0,1]",
            "d) [0,1)"
        ],
        "Answer": "Answer: b\nExplanation: We use the seed function when we want to use the same random number once again in our program. Hence the output of the code shown above will be 2, since 2 was generated previously following which we used the seed function."
    },
    {
        "id": 766,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">randrange</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">91</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 10",
            "b) 18",
            "c) 79",
            "d) 95"
        ],
        "Answer": "Answer: d\nExplanation: The function random.random() generates a random value in the interval [0,1), that is, including zero but excluding one."
    },
    {
        "id": 767,
        "Question": "Both the functions randint and uniform accept ____________ parameters.",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 3",
            "d) 2"
        ],
        "Answer": "Answer: a\nExplanation: The function shown above will generate an output which is a multiple of 5 and is between 0 and 91. The only option which satisfies these criteria is 10. Hence the only possible output of this function is 10."
    },
    {
        "id": 768,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">randrange</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 32",
            "b) 67",
            "c) 91",
            "d) 80"
        ],
        "Answer": "Answer: d\nExplanation: Both of these functions, that is, randint and uniform are included in the random module and both of these functions accept 2 parameters. For example: random.uniform(a,b) where ‘a’ and ‘b’ specify the range."
    },
    {
        "id": 769,
        "Question": "15. What will be the output of the following Python function, assuming that the random library has already been included?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">random</span>.<span class=\"me1\">shuffle</span><span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">24</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Randomized list containing the same numbers in any order",
            "b) The same list, that is [1,2,24] ",
            "c) A list containing any random numbers between 1 and 24",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The function randrange returns only an integer value. Hence this statement is true."
    },
    {
        "id": 770,
        "Question": "What the does random.seed(3) return?",
        "Options": [
            "a) True",
            "b) None",
            "c) 3",
            "d) 1"
        ],
        "Answer": "Answer: b\nExplanation: The function random.seed() always returns a None."
    },
    {
        "id": 771,
        "Question": "Which of the following cannot be returned by random.randrange(4)?",
        "Options": [
            "a) 0",
            "b) 3",
            "c) 2.3",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: Only integers can be returned."
    },
    {
        "id": 772,
        "Question": "Which of the following is equivalent to random.randrange(3)?",
        "Options": [
            "a) range(3)",
            "b) random.choice(range(0, 3))",
            "c) random.shuffle(range(3))",
            "d) random.select(range(3))"
        ],
        "Answer": "Answer: b\nExplanation: It returns one number from the given range."
    },
    {
        "id": 773,
        "Question": "The function random.randint(4) can return only one of the following values. Which?",
        "Options": [
            "a) 4",
            "b) 3.4",
            "c) error",
            "d) 5"
        ],
        "Answer": "Answer: c\nExplanation: Error, the function takes two arguments."
    },
    {
        "id": 774,
        "Question": "Which of the following is equivalent to random.randint(3, 6)?",
        "Options": [
            "a) random.choice([3, 6])",
            "b) random.randrange(3, 6)",
            "c) 3 + random.randrange(3)",
            "d) 3 + random.randrange(4)"
        ],
        "Answer": "Answer: d\nExplanation: random.randint(3, 6) can return any one of 3, 4, 5 and 6."
    },
    {
        "id": 775,
        "Question": "Which of the following will not be returned by random.choice(“1 ,”)?",
        "Options": [
            "a) 1",
            "b) (space)",
            "c) ,",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: Any of the characters present in the string may be returned."
    },
    {
        "id": 776,
        "Question": "Which of the following will never be displayed on executing print(random.choice({0: 1, 2: 3}))?",
        "Options": [
            "a) 0",
            "b) 1",
            "c) KeyError: 1",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It will not print 0 but dict[0] i.e. 1 may be printed."
    },
    {
        "id": 777,
        "Question": "What does random.shuffle(x) do when x = [1, 2, 3]?",
        "Options": [
            "a) error",
            "b) do nothing, it is a placeholder for a function that is yet to be implemented",
            "c) shuffle the elements of the list in-place",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: The elements of the list passed to it are shuffled in-place."
    },
    {
        "id": 778,
        "Question": "Which type of elements are accepted by random.shuffle()?",
        "Options": [
            "a) strings",
            "b) lists",
            "c) tuples",
            "d) integers"
        ],
        "Answer": "Answer: b\nExplanation: Strings and tuples are immutable and an integer has no len()."
    },
    {
        "id": 779,
        "Question": "What is the range of values that random.random() can return?",
        "Options": [
            "a) [0.0, 1.0] ",
            "b) (0.0, 1.0] ",
            "c) (0.0, 1.0)",
            "d) [0.0, 1.0)"
        ],
        "Answer": "Answer: d\nExplanation: Any number that is greater than or equal to 0.0 and lesser than 1.0 can be returned."
    },
    {
        "id": 780,
        "Question": "Which of the following functions can help us to find the version of python that we are currently working on?",
        "Options": [
            "a) sys.version",
            "b) sys.version()",
            "c) sys.version(0)",
            "d) sys.version(1)"
        ],
        "Answer": "Answer: a\nExplanation: The function sys.version can help us to find the version of python that we are currently working on. For example, 3.5.2, 2.7.3 etc. this function also returns the current date, time, bits etc along with the version."
    },
    {
        "id": 781,
        "Question": "Which of the following functions is not defined under the sys module?",
        "Options": [
            "a) sys.platform",
            "b) sys.path",
            "c) sys.readline",
            "d) sys.argv"
        ],
        "Answer": "Answer: c\nExplanation: The functions sys.platform, sys.path and sys.argv are defined under the sys module. The function sys.readline is not defined. However, sys.stdin.readline is defined."
    },
    {
        "id": 782,
        "Question": "4. What will be the output of the following Python code, if the code is run on Windows operating system?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw1\">if</span> <span class=\"kw3\">sys</span>.<span class=\"kw3\">platform</span><span class=\"br0\">[</span>:<span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"sy0\">==</span> <span class=\"st0\">'wi'</span>:\n\t<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Hello",
            "c) No output",
            "d) Junk value"
        ],
        "Answer": "Answer: b\nExplanation: The function len returns the length of the string passed, and hence it’s output will be 3. The function getsizeof, present under the sys module returns the size of the object passed. It’s output will be a value much larger than 3. Hence the above statement is false."
    },
    {
        "id": 783,
        "Question": "5. What will be the output of the following Python code, if the sys module has already been imported?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">sys</span>.<span class=\"me1\">stdout</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"hello world\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) helloworld",
            "b) hello world10",
            "c) hello world11",
            "d) error"
        ],
        "Answer": "Answer: b\nExplanation: The output of the function sys.platform[:2] is equal to ‘wi’, when this code is run on windows operating system. Hence the output printed is ‘hello’."
    },
    {
        "id": 784,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw3\">sys</span>.<span class=\"me1\">stdin</span>.<span class=\"kw3\">readline</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nSanfoundry</pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘Sanfoundry\\n’",
            "b) ‘Sanfoundry’",
            "c) ‘Sanfoundry10’",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The function shown above prints the given string along with the length of the string. Hence the output of the function shown above will be hello world11."
    },
    {
        "id": 785,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw2\">eval</span><span class=\"br0\">(</span><span class=\"kw3\">sys</span>.<span class=\"me1\">stdin</span>.<span class=\"kw3\">readline</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"st0\">\"India\"</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) India5",
            "b) India",
            "c) ‘India\\n’",
            "d) ‘India’"
        ],
        "Answer": "Answer: a\nExplanation: The function shown above works just like raw_input. Hence it automatically adds a ‘\\n’ character to the input string. Therefore, the output of the function shown above will be: Sanfoundry\\n."
    },
    {
        "id": 786,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw2\">eval</span><span class=\"br0\">(</span><span class=\"kw3\">sys</span>.<span class=\"me1\">stdin</span>.<span class=\"kw3\">readline</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\nComputer</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) ‘Computer\\n’",
            "c) Computer8",
            "d) Computer"
        ],
        "Answer": "Answer: d\nExplanation: The function shown above evaluates the input into a string. Hence if the input entered is enclosed in double quotes, the output will be enclosed in single quotes. Therefore, the output of this code is ‘India’."
    },
    {
        "id": 787,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span><span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Junk value",
            "b) ‘ ‘",
            "c) No output",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will result in an error. This is because this particular function accepts only strings enclosed in single or double inverted quotes, or numbers. Since the string entered above is not enclosed in single or double inverted quotes, an error will be thrown."
    },
    {
        "id": 788,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw3\">sys</span>.<span class=\"me1\">stderr</span>.<span class=\"me1\">write</span><span class=\"br0\">(</span>“hello”<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘hello’",
            "b) ‘hello\\n’",
            "c) hello",
            "d) hello5"
        ],
        "Answer": "Answer: b\nExplanation: The output of the function shown above will be a blank space enclosed in single quotes. Hence the output of the code shown above is ‘ ‘."
    },
    {
        "id": 789,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span>\n<span class=\"kw3\">sys</span>.<span class=\"me1\">argv</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘ ‘",
            "b) [ ] ",
            "c) [‘ ‘] ",
            "d) Error"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above returns the string, followed by the length of the string. Hence the output of the code shown above is hello5."
    },
    {
        "id": 790,
        "Question": "To obtain a list of all the functions defined under sys module, which of the following functions can be used?",
        "Options": [
            "a) print(sys)",
            "b) print(dir.sys)",
            "c) print(dir[sys])",
            "d) print(dir(sys))"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown above is a blank space inserted in single quotes, which is enclosed by square brackets. Hence the output will be [‘ ‘]."
    },
    {
        "id": 791,
        "Question": "The output of the function len(sys.argv) is ____________",
        "Options": [
            "a) Error",
            "b) 1",
            "c) 0",
            "d) Junk value"
        ],
        "Answer": "Answer: d\nExplanation: The function print(dir(sys)) helps us to obtain a list of all the functions defined under the sys module. The function can be used to obtain the list of functions under any given module in Python."
    },
    {
        "id": 792,
        "Question": "What does os.name contain?",
        "Options": [
            "a) the name of the operating system dependent module imported",
            "b) the address of the module os",
            "c) error, it should’ve been os.name()",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It contains the name of the operating system dependent module imported such as ‘posix’, ‘java’ etc."
    },
    {
        "id": 793,
        "Question": "What does print(os.geteuid()) print?",
        "Options": [
            "a) the group id of the current process",
            "b) the user id of the current process",
            "c) both the group id and the user of the current process",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: os.geteuid() gives the user id while the os.getegid() gives the group id."
    },
    {
        "id": 794,
        "Question": "What does os.getlogin() return?",
        "Options": [
            "a) name of the current user logged in",
            "b) name of the superuser",
            "c) gets a form to login as a different user",
            "d) all of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It returns the name of the user who is currently logged in and is running the script."
    },
    {
        "id": 795,
        "Question": "What does os.close(f) do?",
        "Options": [
            "a) terminate the process f",
            "b) terminate the process f if f is not responding",
            "c) close the file descriptor f",
            "d) return an integer telling how close the file pointer is to the end of file"
        ],
        "Answer": "Answer: c\nExplanation: When a file descriptor is passed as an argument to os.close() it will be closed."
    },
    {
        "id": 796,
        "Question": "What does os.fchmod(fd, mode) do?",
        "Options": [
            "a) change permission bits of the file",
            "b) change permission bits of the directory",
            "c) change permission bits of either the file or the directory",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The arguments to the function are a file descriptor and the new mode."
    },
    {
        "id": 797,
        "Question": "Which of the following functions can be used to read data from a file using a file descriptor?",
        "Options": [
            "a) os.reader()",
            "b) os.read()",
            "c) os.quick_read()",
            "d) os.scan()"
        ],
        "Answer": "Answer: b\nExplanation: None of the other functions exist."
    },
    {
        "id": 798,
        "Question": "Which of the following returns a string that represents the present working directory?",
        "Options": [
            "a) os.getcwd()",
            "b) os.cwd()",
            "c) os.getpwd()",
            "d) os.pwd()"
        ],
        "Answer": "Answer: a\nExplanation: The function getcwd() (get current working directory) returns a string that represents the present working directory."
    },
    {
        "id": 799,
        "Question": "What does os.link() do?",
        "Options": [
            "a) create a symbolic link",
            "b) create a hard link",
            "c) create a soft link",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: os.link(source, destination) will create a hard link from source to destination."
    },
    {
        "id": 800,
        "Question": "Which of the following can be used to create a directory?",
        "Options": [
            "a) os.mkdir()",
            "b) os.creat_dir()",
            "c) os.create_dir()",
            "d) os.make_dir()"
        ],
        "Answer": "Answer: a\nExplanation: The function mkdir() creates a directory in the path specified."
    },
    {
        "id": 801,
        "Question": "Which of the following can be used to create a symbolic link?",
        "Options": [
            "a) os.symlink()",
            "b) os.symb_link()",
            "c) os.symblin()",
            "d) os.ln()"
        ],
        "Answer": "Answer: a\nExplanation: It is the function that allows you to create a symbolic link."
    },
    {
        "id": 802,
        "Question": "1. What will be the output shape of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">120</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) square",
            "b) rectangle",
            "c) triangle",
            "d) kite"
        ],
        "Answer": "Answer: c\nExplanation: According to the code shown above, 4 lines will be drawn. Three lines will be in the shape of a triangle. The fourth line will trace the base, which is already drawn. Hence the base will be slightly thicker than the rest of the lines. However there will be no change in the shape due to this extra line. Hence the output shape will be a triangle."
    },
    {
        "id": 803,
        "Question": "2. The number of lines drawn in each case, assuming that the turtle module has been imported:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">Case <span class=\"nu0\">1</span>:\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>:\n\t<span class=\"kw3\">turtle</span>.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\t<span class=\"kw3\">turtle</span>.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nCase <span class=\"nu0\">2</span>:\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">10</span><span class=\"br0\">)</span>:\n\t<span class=\"kw3\">turtle</span>.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\t<span class=\"kw3\">turtle</span>.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 10, 9",
            "b) 9, 10",
            "c) 9, 9",
            "d) 10, 10"
        ],
        "Answer": "Answer: a\nExplanation: The number of lines drawn in the first case is 10, while that in the second case is 9."
    },
    {
        "id": 804,
        "Question": "The command which helps us to reset the pen (turtle):",
        "Options": [
            "a) turtle.reset",
            "b) turtle.penreset",
            "c) turtle.penreset()",
            "d) turtle.reset()"
        ],
        "Answer": "Answer: d\nExplanation: The command turtle.reset() helps us to reset the pen. After the execution of this command, we get a blank page with an arrow on it. We can then perform any desired operation on this page."
    },
    {
        "id": 805,
        "Question": "4. Fill in the blank such that the following Python code results in the formation of an inverted, equilateral triangle.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">150</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">right</span><span class=\"br0\">(</span>_____<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) -60",
            "b) 120",
            "c) -120",
            "d) 60"
        ],
        "Answer": "Answer: b\nExplanation: An angle of -120 will result in the formation of an upright, equilateral triangle. An angle of 120 will result in the formation of an inverted triangle. The angles of 60 and -60 do not result in the formation of a triangle."
    },
    {
        "id": 806,
        "Question": "5.  What will be the output shape of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">60</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Rectangle",
            "b) Trapezium",
            "c) Triangle",
            "d) Square"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above will result in the formation of a square, with each of side 60."
    },
    {
        "id": 807,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\n&nbsp;\nt.<span class=\"me1\">penup</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">200</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) 1 square",
            "c) 2 squares, at a separation of100 units, joined by a straight line",
            "d) 2 squares, at a separation of 100 units, without a line joining them"
        ],
        "Answer": "Answer: b\nExplanation: The output of the code shown above will be a single square. This is because the function t.penup() is used to lift the pen after the construction of the first square. However, the function t.pendown() has not been used to put the pen back down. Hence, the output shape of this code is one square, of side 100 units."
    },
    {
        "id": 808,
        "Question": "Which of the following functions does not accept any arguments?",
        "Options": [
            "a) position",
            "b) fillcolor",
            "c) goto",
            "d) setheading()"
        ],
        "Answer": "Answer: a\nExplanation: The functions fillcolor(), goto() and setheading() accept arguments, whereas the function position() does not accept any arguments. The function position() returns the current position of the turtle."
    },
    {
        "id": 809,
        "Question": "8.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">goto</span><span class=\"br0\">(</span><span class=\"nu0\">300</span><span class=\"sy0\">,</span><span class=\"nu0\">9</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">position</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 300.00, 9.00",
            "b) 9, 300",
            "c) 300, 9",
            "d) 9.00, 300.00"
        ],
        "Answer": "Answer: a\nExplanation: The goto functions takes the arrow to the position specified by the user as arguments. The position function returns the current position of the arrow. Hence the output of the code shown above will be: 300.00, 9.00."
    },
    {
        "id": 810,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>:\n        t.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">144</span><span class=\"br0\">)</span>\n        t.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Trapezium",
            "b) Parallelepiped",
            "c) Tetrahedron",
            "d) Star"
        ],
        "Answer": "Answer: d\nExplanation: It is clear from the above code that 5 lines will be drawn on the canvas, at an angle of 144 degrees. The only shape which fits this description is star. Hence the output of the code shown above is star."
    },
    {
        "id": 811,
        "Question": "10. What will be the output of the following Python functions?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">120</span><span class=\"br0\">)</span>\n&nbsp;\nt.<span class=\"me1\">back</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">120</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) Two triangles, joined by a straight line",
            "c) Two triangles, joined at one vertex",
            "d) Two separate triangles, not connected by a line"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown above is two equilateral triangles (of side 100 units), joined at the vertex."
    },
    {
        "id": 812,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">color</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">begin_fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">circle</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">end_fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) A circle filled in with the colour red",
            "c) A circle filled in with the colour blue",
            "d) A circle filled in with the colour green"
        ],
        "Answer": "Answer: c\nExplanation: The function t.colour(0, 0, 1) is used to fill in the colour blue into any given shape. Hence the output of the code shown above will be a circle filled in with the colour blue."
    },
    {
        "id": 813,
        "Question": "Which of the following functions can be used to make the arrow black?",
        "Options": [
            "a) turtle.color(0,1,0)",
            "b) turtle.color(1,0,0)",
            "c) turtle.color(0,0,1)",
            "d) turtle.color(0,0,0)"
        ],
        "Answer": "Answer: d\nExplanation: The function turtle.color(0,0,0) can change the colour of the arrow. The function turtle.color(0,1,0) will make the arrow green. The function turtle.color(1,0,0) will make the arrow red. The function turtle.color(0,0,1) will make the arrow blue. The function turtle.color(0,0,0) will make the arrow black."
    },
    {
        "id": 814,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">color</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">begin_fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">right</span><span class=\"br0\">(</span><span class=\"nu0\">120</span><span class=\"br0\">)</span>\n              t.<span class=\"me1\">end_fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Blank page",
            "b) A triangle filled in with the colour yellow",
            "c) A triangle which is not filled in with any colour",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above will result in a blank page. This is because the command turtle.color(1,1,1) eliminates the arrow from the page. Hence all the commands after this command are ineffective."
    },
    {
        "id": 815,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">color</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">begin_fill</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">4</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">right</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A square filled in with the colour green",
            "b) A square outlined with the colour green",
            "c) Blank canvas",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The output shape of the code shown above is a square, outlined with the colour green, but not filled in with any colour. This is because we have not used the command t.end_fill() at the end."
    },
    {
        "id": 816,
        "Question": "In which direction is the turtle pointed by default?",
        "Options": [
            "a) North",
            "b) South",
            "c) East",
            "d) West"
        ],
        "Answer": "Answer: c\nExplanation: By default, the turtle is pointed towards the east direction. We can change the direction of the turtle by using certain commands. However, whenever the turtle is reset, it points towards east."
    },
    {
        "id": 817,
        "Question": "The command used to set only the x coordinate of the turtle at 45 units is:",
        "Options": [
            "a) reset(45)",
            "b) setx(45)",
            "c) xset(45)",
            "d) xreset(45)"
        ],
        "Answer": "Answer: b\nExplanation: The command setx(45) is used to set the x coordinate of the turtle. Similarly, the command sety() is used to set the y coordinate of the turtle. The function reset() takes two values as arguments, one for the x-coordinate and the other for the y-coordinate."
    },
    {
        "id": 818,
        "Question": "Which of the following functions returns a value in degrees, counterclockwise from the horizontal right?",
        "Options": [
            "a) heading()",
            "b) degrees()",
            "c) position()",
            "d) window_height()"
        ],
        "Answer": "Answer: a\nExplanation: The function heading() returns the heading of the turtle, which is a value in degrees counterclockwise from the horizontal right. This measure will be in radians if radians() has been called."
    },
    {
        "id": 819,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">right</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">heading</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0",
            "b) 90.0",
            "c) 270.0",
            "d) 360.0"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown above will be 270.0. The function heading() returns the heading of the turtle, a value in degrees, counterclockwise from the horizontal right. The output shape of this code is a straight line pointing downwards."
    },
    {
        "id": 820,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">isvisible</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Yes",
            "b) True",
            "c) No",
            "d) False"
        ],
        "Answer": "Answer: b\nExplanation: The function t.clear() returns a blank canvas, without changing the position of the turtle. Since the turtle is visible on the blank canvas, the output of this code is: Yes."
    },
    {
        "id": 821,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">clear</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">position</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.00, 90.00",
            "b) 0.00, 0.00",
            "c) 100.00, 90.00",
            "d) 100.00, 100.00"
        ],
        "Answer": "Answer: d\nExplanation: The output of the code shown above is 100.00, 100.00. The function clear() is used to erase the entire canvas and redraw the turtle. However, the position of the turtle is not changed."
    },
    {
        "id": 822,
        "Question": "Which of the following functions results in an error?",
        "Options": [
            "a) turtle.shape(“turtle”)",
            "b) turtle.shape(“square”)",
            "c) turtle.shape(“triangle”)",
            "d) turtle.shape(“rectangle”)"
        ],
        "Answer": "Answer: d\nExplanation: The functions shown above will change the arrow to the shape mentioned. The functions turtle.shape(“turtle”), turtle.shape(“square”) and turtle.shape(“triangle”) are valid whereas the function turtle.shape(“rectangle”) is invalid."
    },
    {
        "id": 823,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span>\nt.<span class=\"me1\">tilt</span><span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A straight line of 100 units tiled at 75 degrees from the horizontal",
            "b) A straight line of 100 units tilted at 15 degrees from the horizontal",
            "c) A straight line of 100 units lying along the horizontal",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The function turtle.tilt(75) will tilt the turtle. But the straight line (of 100 units) is drawn along the horizontal. Hence the output of the code shown above is a straight line of 100 units lying along the horizontal."
    },
    {
        "id": 824,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">backward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">penup</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">right</span><span class=\"br0\">(</span><span class=\"nu0\">45</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">isdown</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) Yes",
            "d) No"
        ],
        "Answer": "Answer: b\nExplanation: In the code shown above, we have used the function t.penup() to life the pen from the canvas. However, we have not used the function t.pendown() to keep the pen back down. The function turtle.isdown() returns True if the pen is down and False if the pen is not down. Hence the output is False."
    },
    {
        "id": 825,
        "Question": "The function used to alter the thickness of the pen to ‘x’ units:",
        "Options": [
            "a) turtle.width(x)",
            "b) turtle.span(x)",
            "c) turtle.girth(x)",
            "d) turtle.thickness(x)"
        ],
        "Answer": "Answer: a\nExplanation: The function turtle.width(x) is used to alter the thickness of the pen to ‘x’ units. The function turtle.span(x), turtle.girth(x) and turtle.thickness(x) are invalid."
    },
    {
        "id": 826,
        "Question": "5. What will be the output of the following Python code if the system date is 18th June, 2017 (Sunday)?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">goto</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">towards</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0",
            "b) 180.0",
            "c) 270.0",
            "d) 360.0"
        ],
        "Answer": "Answer: b\nExplanation: The function t.towards(x,y) returns the angle between the line to the line specified by (x,y). Hence the output will be 180.0."
    },
    {
        "id": 827,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">position</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"br0\">(</span><span class=\"nu0\">100.00</span><span class=\"sy0\">,</span><span class=\"nu0\">0.00</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">goto</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">distance</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"sy0\">,</span><span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0",
            "b) Error",
            "c) 100.0, 100.0",
            "d) 100.0"
        ],
        "Answer": "Answer: d\nExplanation: The distance() function returns the distance between the turtle to the given vector. Hence the output of the code shown above is 100.0."
    },
    {
        "id": 828,
        "Question": "7. The output of the following Python code will result in a shape similar to the alphabet ___________<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Turtle</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt1<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Turtle</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">45</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">135</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) V",
            "b) Inverted V",
            "c) X",
            "d) T"
        ],
        "Answer": "Answer: a\nExplanation: In the code shown above, two pens have been used to create a shape similar to the alphabet ‘V’. The angle between the two straight lines is 90 degrees."
    },
    {
        "id": 829,
        "Question": "8. The output of the following Python code is similar to the alphabet _______________<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt1<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt2<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt2.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"br0\">)</span>\nt2.<span class=\"me1\">right</span><span class=\"br0\">(</span><span class=\"nu0\">90</span><span class=\"br0\">)</span>\nt2.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">75</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) X",
            "b) N",
            "c) T",
            "d) M"
        ],
        "Answer": "Answer: c\nExplanation: In the above code, three pens have been used to create a shape similar to the letter ‘T’. All the three straight lines are mutually perpendicular."
    },
    {
        "id": 830,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">goto</span><span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"sy0\">,</span><span class=\"nu0\">60</span><span class=\"br0\">)</span>\nt1<span class=\"sy0\">=</span>t.<span class=\"me1\">clone</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt1.<span class=\"me1\">ycor</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 0.0",
            "b) 50.0",
            "c) 60.0",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: Although a negative speed is not possible, the code shown above does not result in an error. Hence, the answer is False."
    },
    {
        "id": 831,
        "Question": "11. What will be the output shape of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"sy0\">,</span><span class=\"nu0\">6</span><span class=\"br0\">)</span>:\n\tt.<span class=\"me1\">forward</span><span class=\"br0\">(</span><span class=\"nu0\">100</span><span class=\"br0\">)</span>\n\tt.<span class=\"me1\">left</span><span class=\"br0\">(</span><span class=\"nu0\">60</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Hexagon",
            "b) Octagon",
            "c) Pentagon",
            "d) Heptagon"
        ],
        "Answer": "Answer: c\nExplanation: The function clone() is used to create a clone of the turtle, having the same properties such as position, coordinates etc. Hence, the properties of the t and t1 are the same in the code shown above. The function ycor() returns the y-coordinate of the turtle. Hence the output of the code is 60.0."
    },
    {
        "id": 832,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">turtle</span>\nt<span class=\"sy0\">=</span><span class=\"kw3\">turtle</span>.<span class=\"me1\">Pen</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nt.<span class=\"me1\">resizemode</span><span class=\"br0\">(</span>“sanfoundry”<span class=\"br0\">)</span>\nt.<span class=\"me1\">resizemode</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) user",
            "b) auto",
            "c) nonresize",
            "d) error"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above creates a six-sided polygon. The output shape of the code shown above is will be a hexagon."
    },
    {
        "id": 833,
        "Question": "The process of pickling in Python includes:",
        "Options": [
            "a) conversion of a list into a datatable",
            "b) conversion of a byte stream into Python object hierarchy",
            "c) conversion of a Python object hierarchy into byte stream",
            "d) conversion of a datatable into a list"
        ],
        "Answer": "Answer: c\nExplanation: Pickling is the process of sterilizing a Python object, that is, conversion of a byte stream into Python object hierarchy. The reverse of this process is known as unpickling."
    },
    {
        "id": 834,
        "Question": "To sterilize an object hierarchy, the _____________ function must be called. To desterilize a data stream, the ______________ function must be called.",
        "Options": [
            "a) dumps(), undumps()",
            "b) loads(), unloads()",
            "c) loads(), dumps()",
            "d) dumps(), loads()"
        ],
        "Answer": "Answer: d\nExplanation: To sterilize an object hierarchy, the dumps() function must be called. To desterilize a data stream, the loads function must be called."
    },
    {
        "id": 835,
        "Question": "Pick the correct statement regarding pickle and marshal modules.",
        "Options": [
            "a) The pickle module supports primarily .pyc files whereas marshal module is used to sterilize Python objects",
            "b) The pickle module keeps track of the objects that have already been sterilized whereas the marshal module does not do this",
            "c) The pickle module cannot be used to sterilize user defined classes and their instances whereas marshal module can be used to perform this task",
            "d) The format of sterilization of the pickle module is not guaranteed to be supported across all versions of Python. The marshal module sterilization is compatible across all the versions of Python"
        ],
        "Answer": "Answer: b\nExplanation: The correct statement from among the above options is that the python module keeps track of the objects that have already been sterilized whereas the marshal module does not do this. The rest of the statements are incorrect."
    },
    {
        "id": 836,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">pickle</span>.<span class=\"me1\">HIGHEST_PROTOCOL</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) 5",
            "c) 3",
            "d) 6"
        ],
        "Answer": "Answer: a\nExplanation: There are five protocol versions available of the pickle module, namely, 0, 1, 2, 3 and 4. In the code shown above, the highest protocol version is returned, that is, 4."
    },
    {
        "id": 837,
        "Question": "5. Which of the following Python codes will result in an error?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">object</span> <span class=\"sy0\">=</span> ‘a’</pre></div></div></div></div></div></div>",
        "Options": [
            "a) >>> pickle.dumps(object)",
            "b) >>> pickle.dumps(object, 3)",
            "c) >>> pickle.dumps(object, 3, True)",
            "d) >>> pickle.dumps(‘a’, 2)"
        ],
        "Answer": "Answer: c\nExplanation: The function pickle.dumps requires either 1 or 2 arguments. If any other number of arguments are passed to it, it results in an error. An error is thrown even when no arguments are passed to it."
    },
    {
        "id": 838,
        "Question": "Which of the following functions can be used to find the protocol version of the pickle module currently being used?",
        "Options": [
            "a) pickle.DEFAULT",
            "b) pickle.CURRENT",
            "c) pickle.CURRENT_PROTOCOL",
            "d) pickle.DEFAULT_PROTOCOL"
        ],
        "Answer": "Answer: d\nExplanation: The function pickle.DEFAULT_PROTOCOL can be used to find the protocol version of the pickle module currently being used by the system."
    },
    {
        "id": 839,
        "Question": "Which of the following functions can accept more than one positional argument?",
        "Options": [
            "a) pickle.dumps",
            "b) pickle.loads",
            "c) pickle.dump",
            "d) pickle.load"
        ],
        "Answer": "Answer: a\nExplanation: The two codes shown above result in the same output, that is, b’\\x80\\x03X\\x01\\x00\\x00\\x00aq\\x00.’ Hence this statement is true."
    },
    {
        "id": 840,
        "Question": "Which of the following functions raises an error when an unpicklable object is encountered by Pickler?",
        "Options": [
            "a) pickle.PickleError",
            "b) pickle.PicklingError",
            "c) pickle.UnpickleError",
            "d) pickle.UnpicklingError"
        ],
        "Answer": "Answer: a\nExplanation: The functions pickle.loads, pickle.dump and pickle.load accept only one argument. The function pickle.dumps can accept more than one argument."
    },
    {
        "id": 841,
        "Question": "The pickle module defines ______ exceptions and exports _______ classes.",
        "Options": [
            "a) 2, 3",
            "b) 3, 4",
            "c) 3, 2",
            "d) 4, 3"
        ],
        "Answer": "Answer: b\nExplanation: The function pickle.PicklingError raises an error when an unpickable object is encountered by Pickler."
    },
    {
        "id": 842,
        "Question": "Which of the following cannot be pickled?",
        "Options": [
            "a) Functions which are defined at the top level of a module with lambda",
            "b) Functions which are defined at the top level of a module with def",
            "c) Built-in functions which are defined at the top level of a module",
            "d) Classes which are defined at the top level of a module"
        ],
        "Answer": "Answer: c\nExplanation: The pickle module defines three exceptions, namely, pickle.PickleError, pickle.PicklingError, pickle.UnpickleError and exports two classes, namely, pickle.Pickler and pickle.Unpickler."
    },
    {
        "id": 843,
        "Question": "If __getstate__() returns _______________ the __setstate__() module will not be called on pickling.",
        "Options": [
            "a) True value",
            "b) False value",
            "c) ValueError",
            "d) OverflowError"
        ],
        "Answer": "Answer: a\nExplanation: Functions which are defined at the top level of a module with lambda cannot be pickled."
    },
    {
        "id": 844,
        "Question": "Lambda functions cannot be pickled because:",
        "Options": [
            "a) Lambda functions only deal with binary values, that is, 0 and 1",
            "b) Lambda functions cannot be called directly",
            "c) Lambda functions cannot be identified by the functions of the pickle module",
            "d) All lambda functions have the same name, that is, <lambda>"
        ],
        "Answer": "Answer: b\nExplanation: If getstate__() returns a false value, the __setstate__()  module will not be called on pickling."
    },
    {
        "id": 845,
        "Question": "The module _______________ is a comparatively faster implementation of the pickle module.",
        "Options": [
            "a) cPickle",
            "b) nPickle",
            "c) gPickle",
            "d) tPickle"
        ],
        "Answer": "Answer: d\nExplanation: Lambda functions cannot be pickled because all the lambda functions have the same name, that is, <lambda>"
    },
    {
        "id": 846,
        "Question": "The copy module uses the ___________________ protocol for shallow and deep copy.",
        "Options": [
            "a) pickle",
            "b) marshal",
            "c) shelve",
            "d) copyreg"
        ],
        "Answer": "Answer: a\nExplanation: The module cPickle is a comparatively faster implementation of the pickle module."
    },
    {
        "id": 847,
        "Question": "Which module in Python supports regular expressions?",
        "Options": [
            "a) re",
            "b) regex",
            "c) pyregex",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: re is a part of the standard library and can be imported using: import re."
    },
    {
        "id": 848,
        "Question": "Which of the following creates a pattern object?",
        "Options": [
            "a) re.create(str)",
            "b) re.regex(str)",
            "c) re.compile(str)",
            "d) re.assemble(str)"
        ],
        "Answer": "Answer: c\nExplanation: It converts a given string into a pattern object."
    },
    {
        "id": 849,
        "Question": "What does the function re.match do?",
        "Options": [
            "a) matches a pattern at the start of the string",
            "b) matches a pattern at any position in the string",
            "c) such a function does not exist",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: It will look for the pattern at the beginning and return None if it isn’t found."
    },
    {
        "id": 850,
        "Question": "What does the function re.search do?",
        "Options": [
            "a) matches a pattern at the start of the string",
            "b) matches a pattern at any position in the string",
            "c) such a function does not exist",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: b\nExplanation: It will look for the pattern at any position in the string."
    },
    {
        "id": 851,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'we are humans'</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'(.*) (.*?) (.*)'</span><span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">groups</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘we’, ‘are’, ‘humans’)",
            "b) (we, are, humans)",
            "c) (‘we’, ‘humans’)",
            "d) ‘we are humans’"
        ],
        "Answer": "Answer: a\nExplanation: This function returns all the subgroups that have been matched."
    },
    {
        "id": 852,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'we are humans'</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'(.*) (.*?) (.*)'</span><span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘we’, ‘are’, ‘humans’)",
            "b) (we, are, humans)",
            "c) (‘we’, ‘humans’)",
            "d) ‘we are humans’"
        ],
        "Answer": "Answer: d\nExplanation: This function returns the entire match."
    },
    {
        "id": 853,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'we are humans'</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'(.*) (.*?) (.*)'</span><span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘are’",
            "b) ‘we’",
            "c) ‘humans’",
            "d) ‘we are humans’"
        ],
        "Answer": "Answer: c\nExplanation: This function returns the particular subgroup."
    },
    {
        "id": 854,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'horses are fast'</span>\nregex <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'(?P&lt;animal&gt;<span class=\"es0\">\\w</span>+) (?P&lt;verb&gt;<span class=\"es0\">\\w</span>+) (?P&lt;adjective&gt;<span class=\"es0\">\\w</span>+)'</span><span class=\"br0\">)</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">search</span><span class=\"br0\">(</span>regex<span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">groupdict</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}",
            "b) (‘horses’, ‘are’, ‘fast’)",
            "c) ‘horses are fast’",
            "d) ‘are’"
        ],
        "Answer": "Answer: a\nExplanation: This function returns a dictionary that contains all the matches."
    },
    {
        "id": 855,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'horses are fast'</span>\nregex <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'(?P&lt;animal&gt;<span class=\"es0\">\\w</span>+) (?P&lt;verb&gt;<span class=\"es0\">\\w</span>+) (?P&lt;adjective&gt;<span class=\"es0\">\\w</span>+)'</span><span class=\"br0\">)</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">search</span><span class=\"br0\">(</span>regex<span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">groups</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}",
            "b) (‘horses’, ‘are’, ‘fast’)",
            "c) ‘horses are fast’",
            "d) ‘are’"
        ],
        "Answer": "Answer: b\nExplanation: This function returns all the subgroups that have been matched."
    },
    {
        "id": 856,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">sentence <span class=\"sy0\">=</span> <span class=\"st0\">'horses are fast'</span>\nregex <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'(?P&lt;animal&gt;<span class=\"es0\">\\w</span>+) (?P&lt;verb&gt;<span class=\"es0\">\\w</span>+) (?P&lt;adjective&gt;<span class=\"es0\">\\w</span>+)'</span><span class=\"br0\">)</span>\nmatched <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">search</span><span class=\"br0\">(</span>regex<span class=\"sy0\">,</span> sentence<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>matched.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {‘animal’: ‘horses’, ‘verb’: ‘are’, ‘adjective’: ‘fast’}",
            "b) (‘horses’, ‘are’, ‘fast’)",
            "c) ‘horses are fast’",
            "d) ‘are’"
        ],
        "Answer": "Answer: d\nExplanation: This function returns the particular subgroup."
    },
    {
        "id": 857,
        "Question": "The character Dot (that is, ‘.’) in the default mode, matches any character other than _____________",
        "Options": [
            "a) caret",
            "b) ampersand",
            "c) percentage symbol",
            "d) newline"
        ],
        "Answer": "Answer: d\nExplanation: The character Dot (that is, ‘,’) in the default mode, matches any character other than newline. If DOTALL flag is used, then it matches any character other than newline."
    },
    {
        "id": 858,
        "Question": "The expression a{5} will match _____________ characters with the previous regular expression.",
        "Options": [
            "a) 5 or less",
            "b) exactly 5",
            "c) 5 or more",
            "d) exactly 4"
        ],
        "Answer": "Answer: b\nExplanation: The character {m} is used to match exactly m characters to the previous regular expression. Hence the expression a{5} will match exactly 5 characters and not less than that."
    },
    {
        "id": 859,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\W</span>+'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Hello, hello, hello.'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘Hello’, ‘hello’, ‘hello.’]",
            "b) [‘Hello, ‘hello’, ‘hello’]",
            "c) [‘Hello’, ‘hello’, ‘hello’, ‘.’]",
            "d) [‘Hello’, ‘hello’, ‘hello’, ”]"
        ],
        "Answer": "Answer: a\nExplanation: ‘^’ (carat) matches the start of the string.\n             ‘$’ (dollar sign) matches the end of the string."
    },
    {
        "id": 860,
        "Question": "6. What will be the output of the following Python function?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">findall</span><span class=\"br0\">(</span><span class=\"st0\">\"hello world\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [“hello”]",
            "b) [\t]",
            "c) hello",
            "d) hello world"
        ],
        "Answer": "Answer: c\nExplanation: The function re.subn() will result in an error. This is because subn() requires 3 positional arguments while we have entered none."
    },
    {
        "id": 861,
        "Question": "Choose the function whose output can be: <_sre.SRE_Match object; span=(4, 8), match=’aaaa’>.",
        "Options": [
            "a) >>> re.search(‘aaaa’, “alohaaaa”, 0)",
            "b) >>> re.match(‘aaaa’, “alohaaaa”, 0)",
            "c) >>> re.match(‘aaa’, “alohaaa”, 0)",
            "d) >>> re.search(‘aaa’, “alohaaa”, 0)"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, the function split() splits the string based on the pattern given as an argument in the parenthesis. Note: split will never split a string on an empty pattern match. Hence the output of this code is: [‘Hello’, ‘hello’, ‘hello’, ”]."
    },
    {
        "id": 862,
        "Question": " Which of the following functions clears the regular expression cache?",
        "Options": [
            "a) re.sub()",
            "b) re.pos()",
            "c) re.purge()",
            "d) re.subn()"
        ],
        "Answer": "Answer: b\nExplanation: The function findall returns the word matched if and only if both the pattern and the string match completely, that is, they are exactly the same. Observe the example shown below:\n>>> re.findall(“hello”, “hello”, 1)                                                                                                                                                      The output is: [‘hello’]                                                                                                                                                                     Hence the output of the code shown in this question is []."
    },
    {
        "id": 863,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">re</span>\n<span class=\"kw3\">re</span>.<span class=\"me1\">ASCII</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 32",
            "c) 64",
            "d) 256"
        ],
        "Answer": "Answer: a\nExplanation: The output shown above is that of a search function, whose pattern is ‘aaaa’ and the string is that of 8 characters. The only option which matches all these criteria is:\n >>> re.search(‘aaaa’, “alohaaaa”, 0)"
    },
    {
        "id": 864,
        "Question": "Which of the following functions results in case insensitive matching?",
        "Options": [
            "a) re.A",
            "b) re.U",
            "c) re.I",
            "d) re.X"
        ],
        "Answer": "Answer: c\nExplanation: The function which clears the regular expression cache is re.purge(). Note that this function takes zero positional arguments."
    },
    {
        "id": 865,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"kw3\">re</span>.<span class=\"me1\">X</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘h’, ‘e’, ‘l’, ‘l’, ‘o’]",
            "b) re.compile(‘hello’, re.VERBOSE)",
            "c) Error",
            "d) Junk value"
        ],
        "Answer": "Answer: b\nExplanation: The compile function compiles a pattern of regular expression into an object of regular expression. Re.X is a flag which is also used as re.VERBOSE. Hence the output of this code is: re.compile(‘hello’, re.VERBOSE)."
    },
    {
        "id": 866,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'[a-c]'</span><span class=\"sy0\">,</span> <span class=\"st0\">'0a3B6'</span><span class=\"sy0\">,</span> <span class=\"kw3\">re</span>.<span class=\"me1\">I</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [‘a’, ‘B’]",
            "c) [‘0’, ‘3B6’]",
            "d) [‘a’]"
        ],
        "Answer": "Answer: c\nExplanation: The function re.split() splits the string on the basis of the pattern given in the parenthesis. Since we have used the flag e.I (that is, re.IGNORECASE), the output is: [‘0’, ‘3B6’]."
    },
    {
        "id": 867,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">sub</span><span class=\"br0\">(</span><span class=\"st0\">'morning'</span><span class=\"sy0\">,</span> <span class=\"st0\">'evening'</span><span class=\"sy0\">,</span> <span class=\"st0\">'good morning'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘good evening’",
            "b) ‘good’",
            "c) ‘morning’",
            "d) ‘evening’"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above first searches for the pattern ‘morning’ in the string ‘good morning’ and then replaces this pattern with ‘evening’. Hence the output of this code is: ‘good evening’."
    },
    {
        "id": 868,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">escape</span><span class=\"br0\">(</span><span class=\"st0\">'new**world'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘new world’",
            "b) ‘new\\\\*\\\\*world’",
            "c) ‘**’",
            "d) ‘new’, ‘*’, ‘*’, ‘world’"
        ],
        "Answer": "Answer: b\nExplanation: The function re.error raises an exception when a string passed to one of its functions here is not a valid regular expression. It does not raise an exception if a particular string does not contain a match for the given pattern."
    },
    {
        "id": 869,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">fullmatch</span><span class=\"br0\">(</span><span class=\"st0\">'hello'</span><span class=\"sy0\">,</span> <span class=\"st0\">'hello world'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) No output",
            "b) []",
            "c) <_sre.SRE_Match object; span=(0, 5), match='hello'>",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The function re.escape escapes all the characters in the pattern other than ASCII letters and numbers. Hence the output of the code shown above is: ‘new\\\\*\\\\*world’."
    },
    {
        "id": 870,
        "Question": "The difference between the functions re.sub and re.subn is that re.sub returns a _______________ whereas re.subn returns a __________________",
        "Options": [
            "a) string, list",
            "b) list, tuple",
            "c) string, tuple",
            "d) tuple, list"
        ],
        "Answer": "Answer: a\nExplanation: The function re.fullmatch applies the pattern to the entire string and returns an object if match is found and none if match in not found. In the code shown above, match is not found. Hence there is no output."
    },
    {
        "id": 871,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span><span class=\"st0\">'mum'</span><span class=\"sy0\">,</span> <span class=\"st0\">'mumbai*'</span><span class=\"sy0\">,</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [”, ‘bai*’]",
            "c) [”, ‘bai’]",
            "d) [‘bai*’]"
        ],
        "Answer": "Answer: d\nExplanation: The function re.L is also written as re.LOCALE. There is no function such as re.LOWERCASE in the re module of Python."
    },
    {
        "id": 872,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span>r<span class=\"st0\">'(n<span class=\"es0\">\\d</span>)='</span><span class=\"sy0\">,</span> <span class=\"st0\">'n1=3.1, n2=5, n3=4.565'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Error",
            "b) [”, ‘n1’, ‘3.1, ‘, ‘n2’, ‘5, ‘, ‘n3’, ‘4.565’]",
            "c) [‘n1’, ‘3.1, ‘, ‘n2’, ‘5, ‘, ‘n3’, ‘4.565’]",
            "d) [‘3.1, ‘, ‘5, ‘, ‘4.565’]"
        ],
        "Answer": "Answer: b\nExplanation: In the snippet of code shown above, we extract the numbers as a list of floating point values, including the initial empty string. The example shown above demonstrate how groups in the regular expression influence the result of re.split. Hence the output of the code shown above is:\n[”, ‘n1’, ‘3.1, ‘, ‘n2’, ‘5, ‘, ‘n3’, ‘4.565’]."
    },
    {
        "id": 873,
        "Question": "The function of re.search is __________",
        "Options": [
            "a) Matches a pattern at the start of the string",
            "b) Matches a pattern at the end of the string",
            "c) Matches a pattern from any part of a string",
            "d) Such a function does not exist"
        ],
        "Answer": "Answer: c\nExplanation: The re module of Python consists of a function re.search. It’s function is to match a pattern from anywhere in a string."
    },
    {
        "id": 874,
        "Question": "Which of the following functions creates a Python object?",
        "Options": [
            "a) re.compile(str)",
            "b) re.assemble(str)",
            "c) re.regex(str)",
            "d) re.create(str)"
        ],
        "Answer": "Answer: a\nExplanation: The function re.compile(srt) compiles a pattern of regular expression into an object of regular expression. Hence re.compile(str) is the only function from the above options which creates an object."
    },
    {
        "id": 875,
        "Question": "Which of the following pattern matching modifiers permits whitespace and comments inside the regular expression?",
        "Options": [
            "a) re.L",
            "b) re.S",
            "c) re.U",
            "d) re.X"
        ],
        "Answer": "Answer: d\nExplanation: The modifier re.X allows whitespace and comments inside the regular expressions."
    },
    {
        "id": 876,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">s <span class=\"sy0\">=</span> <span class=\"st0\">'welcome home'</span>\nm <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span>r<span class=\"st0\">'(.*)(.*?)'</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>m.<span class=\"me1\">group</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) (‘welcome’, ‘home’)",
            "b) [‘welcome’, ‘home’]",
            "c) welcome home",
            "d) [‘welcome’ // ‘home’\t]"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above shows the function re.match combined with the use of special characters. Hence the output of this code is: welcome home."
    },
    {
        "id": 877,
        "Question": "The function of re.match is ____________",
        "Options": [
            "a) Error",
            "b) Matches a pattern anywhere in the string",
            "c) Matches a pattern at the end of the string",
            "d) Matches a pattern at the start of the string"
        ],
        "Answer": "Answer: d\nExplanation: The function of re.match matches a pattern at the start of the string."
    },
    {
        "id": 878,
        "Question": "The special character \\B matches the empty string, but only when it is _____________",
        "Options": [
            "a) at the beginning or end of a word",
            "b) not at the beginning or end of a word",
            "c) at the beginning of the word",
            "d) at the end of the word"
        ],
        "Answer": "Answer: b\nExplanation: The special character \\B matches the empty string, but only when it is not at the beginning or end of a word."
    },
    {
        "id": 879,
        "Question": "Which of the following special characters matches a pattern only at the end of the string?",
        "Options": [
            "a) \\B",
            "b) \\X",
            "c) \\Z",
            "d) \\A"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above demonstrates the use of the function re.match, with different arguments given to the group method. Hence the first function does not return any output whereas the second function returns the output: A new day"
    },
    {
        "id": 880,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">match</span><span class=\"br0\">(</span><span class=\"st0\">'sp(.*)am'</span><span class=\"sy0\">,</span> <span class=\"st0\">'spam'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) <_sre.SRE_Match object; span=(1, 4), match=’spam’>",
            "b) <_sre.SRE_Match object; span=(0, 4), match=’spam’>",
            "c) No output",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: \\B matches a pattern which is not at the beginning or end of a string. \\X refers to re.VERBOSE. \\A matches a pattern only at the start of a string. \\Z matches a pattern only at the end of a string."
    },
    {
        "id": 881,
        "Question": "Which of the following special characters represents a comment (that is, the contents of the parenthesis are simply ignores)?",
        "Options": [
            "a) (?:…)",
            "b) (?=…)",
            "c) (?!…)",
            "d) (?#…)"
        ],
        "Answer": "Answer: a\nExplanation: The two codes shown above are equivalent. Both of these codes result in the same output, that is: hello. Hence this statement is true."
    },
    {
        "id": 882,
        "Question": "Which of the codes shown below results in a match?",
        "Options": [
            "a) re.match(‘George(?=Washington)’, ‘George Washington’)",
            "b) re.match(‘George(?=Washington)’, ‘George’)",
            "c) re.match(‘George(?=Washington)’, ‘GeorgeWashington’)",
            "d) re.match(‘George(?=Washington)’, ‘Georgewashington’)"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above demonstrates the function re.match, combined with a special character. The output of the code shown is: <_sre.SRE_Match object; span=(0, 4), match=’spam’>"
    },
    {
        "id": 883,
        "Question": "1. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span>r<span class=\"st0\">'(a)(t)'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Maths is a difficult subject'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘M a t h s i s a d i f f i c u l t s u b j e c t’]",
            "b) [‘Maths’, ‘is’, ‘a’, ‘difficult’, ‘subject’]",
            "c) ‘Maths is a difficult subject’",
            "d) [‘M’, ‘a’, ‘t’, ‘hs is a difficult subject’]"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above demonstrates the use of the function re.match. The first argument of this function specifies the pattern. Since the pattern contains groups, those groups are incorporated in the resultant list as well. Hence the output of the code shown above is [‘M’, ‘a’, ‘t’, ‘hs is a difficult subject’]."
    },
    {
        "id": 884,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">re</span>\ns <span class=\"sy0\">=</span> <span class=\"st0\">'abc123 xyz666 lmn-11 def77'</span>\n<span class=\"kw3\">re</span>.<span class=\"me1\">sub</span><span class=\"br0\">(</span>r<span class=\"st0\">'<span class=\"es0\">\\b</span>([a-z]+)(<span class=\"es0\">\\d</span>+)'</span><span class=\"sy0\">,</span> r<span class=\"st0\">'<span class=\"es0\">\\2</span><span class=\"es0\">\\1</span>:'</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘123abc: 666xyz: lmn-11 77def:’",
            "b) ‘77def: lmn-11: 666xyz: 123abc’",
            "c) ‘abc123:’, ‘xyz666:’, ‘lmn-11:’, ‘def77:’",
            "d) ‘abc123: xyz666: lmn-11: def77’"
        ],
        "Answer": "Answer: b\nExplanation: The output of the first code is: [‘The night sky’] whereas the output of the second code is:[‘The’, ‘night’, ‘sky’]. Clearly, the outputs of the two codes are different. Hence the statement given above is a false one."
    },
    {
        "id": 885,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">subn</span><span class=\"br0\">(</span><span class=\"st0\">'A'</span><span class=\"sy0\">,</span> <span class=\"st0\">'X'</span><span class=\"sy0\">,</span> <span class=\"st0\">'AAAAAA'</span><span class=\"sy0\">,</span> count<span class=\"sy0\">=</span><span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘XXXXAA, 4’",
            "b) (‘AAAAAA’, 4)",
            "c) (‘XXXXAA’, 4)",
            "d) ‘AAAAAA, 4’"
        ],
        "Answer": "Answer: a\nExplanation: The function re.sub returns a string produced by replacing every non overlapping occurrence of the first argument with the second argument in the third argument. Hence the output is: ‘123abc: 666xyz: lmn-11 77def:’ "
    },
    {
        "id": 886,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">w <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'[A-Za-z]+'</span><span class=\"br0\">)</span>\nw.<span class=\"me1\">findall</span><span class=\"br0\">(</span><span class=\"st0\">'It will rain today'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘It will rain today’",
            "b) (‘It will rain today’)",
            "c) [‘It will rain today’]",
            "d) [‘It’, ‘will’, ‘rain’, ‘today’]"
        ],
        "Answer": "Answer: c\nExplanation: The line of code shown above demonstrates the function re.subn. This function is very similar to the function re.sub except that in the former, a tuple is returned instead of a string. The output of the code shown above is: (‘XXXXAA’, 4)."
    },
    {
        "id": 887,
        "Question": "In the functions re.search.start(group) and re.search.end(group), if the argument groups not specified, it defaults to __________",
        "Options": [
            "a) Zero",
            "b) None",
            "c) One",
            "d) Error"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above demonstrates the function re.sub. Since the string given as an argument consists of three words. The output of the code is: ‘Hello Hello Hello’. Had the string consisted of 4 words, the output would be: ‘Hello Hello Hello Hello’"
    },
    {
        "id": 888,
        "Question": "8.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">split</span><span class=\"br0\">(</span>r<span class=\"st0\">'<span class=\"es0\">\\s</span>+'</span><span class=\"sy0\">,</span> <span class=\"st0\">'Chrome is better than explorer'</span><span class=\"sy0\">,</span> maxspilt<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘Chrome’, ‘is’, ‘better’, ‘than’,  ‘explorer’]",
            "b) [‘Chrome’, ‘is’, ‘better’, ‘than explorer’]",
            "c) (‘Chrome’, ‘is’, ‘better’, ‘than explorer’)",
            "d) ‘Chrome is better’ ‘than explorer’"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above demonstrates the function re.findall. Since all the words in the string match the criteria, the output of the code is: [‘It’, ‘will’, ‘rain’, ‘today’]."
    },
    {
        "id": 889,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'[0-9]+'</span><span class=\"br0\">)</span>\na.<span class=\"me1\">findall</span><span class=\"br0\">(</span><span class=\"st0\">'7 apples and 3 mangoes'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [‘apples’ ‘and’ ‘mangoes’]",
            "b) (7, 4)",
            "c) [‘7’, ‘4’]",
            "d) Error"
        ],
        "Answer": "Answer: a\nExplanation: In the functions re.search.start(group) and re.search.end(group), if the argument groups not specified, it defaults to Zero."
    },
    {
        "id": 890,
        "Question": "Which of the following functions returns a dictionary mapping group names to group numbers?",
        "Options": [
            "a) re.compile.group",
            "b) re.compile.groupindex",
            "c) re.compile.index",
            "d) re.compile.indexgroup"
        ],
        "Answer": "Answer: b\nExplanation: The function re.compile.groupindex returns a dictionary mapping group names to group numbers."
    },
    {
        "id": 891,
        "Question": "Which of the following statements regarding the output of the function re.match is incorrect?",
        "Options": [
            "a) ‘pq*’ will match ‘pq’",
            "b) ‘pq?’ matches ‘p’",
            "c) ‘p{4}, q’ does not match ‘pppq’",
            "d) ‘pq+’ matches ‘p’"
        ],
        "Answer": "Answer: d\nExplanation: All of the above statements are correct except that ‘pq+’ match ‘p’. ‘pq+’ will match ‘p’ followed by any non-zero number of q’s, but it will not match ‘p’."
    },
    {
        "id": 892,
        "Question": "Which of the following functions does not accept any argument?",
        "Options": [
            "a) re.purge",
            "b) re.compile",
            "c) re.findall",
            "d) re.match"
        ],
        "Answer": "Answer: b\nExplanation: In the code shown above, none of the group names match the group numbers. In such a case, no error is thrown. The output of the code is an empty dictionary, that is, {}."
    },
    {
        "id": 893,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"kw2\">compile</span><span class=\"br0\">(</span><span class=\"st0\">'0-9'</span><span class=\"br0\">)</span>\na.<span class=\"me1\">findall</span><span class=\"br0\">(</span><span class=\"st0\">'3 trees'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) []",
            "b) [‘3’]",
            "c) Error",
            "d) [‘trees’]"
        ],
        "Answer": "Answer: a\nExplanation: The function re.purge is used to clear the cache and it does not accept any arguments."
    },
    {
        "id": 894,
        "Question": "Which of the following lines of code will not show a match?",
        "Options": [
            "a) >>> re.match(‘ab*’, ‘a’)",
            "b) >>> re.match(‘ab*’, ‘ab’)",
            "c) >>> re.match(‘ab*’, ‘abb’)",
            "d) >>> re.match(‘ab*’, ‘ba’)"
        ],
        "Answer": "Answer: c\nExplanation: The output of the code shown above is an empty list. This is due to the way the arguments have been passed to the function re.compile. Carefully read the code shown below in order to understand the correct syntax:\n>>> a = re.compile(‘[0-9]’)\n>>> a.findall(‘3 trees’)\n[‘3’]."
    },
    {
        "id": 895,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">m <span class=\"sy0\">=</span> <span class=\"kw3\">re</span>.<span class=\"me1\">search</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span><span class=\"sy0\">,</span> <span class=\"st0\">'The blue umbrella'</span><span class=\"br0\">)</span>\nm.<span class=\"kw3\">re</span>.<span class=\"me1\">pattern</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) {}",
            "b)  ‘The blue umbrella’",
            "c) ‘a’",
            "d) No output"
        ],
        "Answer": "Answer: d\nExplanation: In the code shown above, ab* will match to ‘a’ or ‘ab’ or ‘a’ followed by any number of b’s. Hence the only line of code from the above options which does not result in a match is:\n>>> re.match(‘ab*’, ‘ba’)."
    },
    {
        "id": 896,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw3\">re</span>.<span class=\"me1\">sub</span><span class=\"br0\">(</span><span class=\"st0\">'Y'</span><span class=\"sy0\">,</span> <span class=\"st0\">'X'</span><span class=\"sy0\">,</span> <span class=\"st0\">'AAAAAA'</span><span class=\"sy0\">,</span> count<span class=\"sy0\">=</span><span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘YXAAAA’",
            "b) (‘YXAAAA’)",
            "c) (‘AAAAAA’)",
            "d) ‘AAAAAA’"
        ],
        "Answer": "Answer: c\nExplanation: The PatternObject is used to produce the match. The real regular expression pattern string must be retrieved from the PatternObject’s pattern method. Hence the output of this code is: ‘a’."
    },
    {
        "id": 897,
        "Question": "To open a file c:\\scores.txt for reading, we use _____________",
        "Options": [
            "a) infile = open(“c:\\scores.txt”, “r”)",
            "b) infile = open(“c:\\\\scores.txt”, “r”)",
            "c) infile = open(file = “c:\\scores.txt”, “r”)",
            "d) infile = open(file = “c:\\\\scores.txt”, “r”)"
        ],
        "Answer": " Answer: b\nExplanation: Execute help(open) to get more details."
    },
    {
        "id": 898,
        "Question": "To open a file c:\\scores.txt for writing, we use ____________",
        "Options": [
            "a) outfile = open(“c:\\scores.txt”, “w”)",
            "b) outfile = open(“c:\\\\scores.txt”, “w”)",
            "c) outfile = open(file = “c:\\scores.txt”, “w”)",
            "d) outfile = open(file = “c:\\\\scores.txt”, “w”)"
        ],
        "Answer": " Answer: b\nExplanation: w is used to indicate that file is to be written to. "
    },
    {
        "id": 899,
        "Question": "To open a file c:\\scores.txt for appending data, we use ____________",
        "Options": [
            "a) outfile = open(“c:\\\\scores.txt”, “a”)",
            "b) outfile = open(“c:\\\\scores.txt”, “rw”)",
            "c) outfile = open(file = “c:\\scores.txt”, “w”)",
            "d) outfile = open(file = “c:\\\\scores.txt”, “w”)"
        ],
        "Answer": " Answer: a\nExplanation: a is used to indicate that data is to be appended. "
    },
    {
        "id": 900,
        "Question": "Which of the following statements are true?",
        "Options": [
            "a) When you open a file for reading, if the file does not exist, an error occurs",
            "b) When you open a file for writing, if the file does not exist, a new file is created",
            "c) When you open a file for writing, if the file exists, the existing file is overwritten with the new file",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The program will throw an error."
    },
    {
        "id": 901,
        "Question": "To read two characters from a file object infile, we use ____________",
        "Options": [
            "a) infile.read(2)",
            "b) infile.read()",
            "c) infile.readline()",
            "d) infile.readlines()"
        ],
        "Answer": " Answer: a\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 902,
        "Question": "To read the entire remaining contents of the file as a string from a file object infile, we use ____________",
        "Options": [
            "a) infile.read(2)",
            "b) infile.read()",
            "c) infile.readline()",
            "d) infile.readlines()"
        ],
        "Answer": " Answer: b\nExplanation: read function is used to read all the lines in a file. "
    },
    {
        "id": 903,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"cpp\"><ol><li class=\"li1\"><pre class=\"de1\">f <span class=\"sy1\">=</span> None</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i in range <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    with open<span class=\"br0\">(</span><span class=\"st0\">\"data.txt\"</span>, <span class=\"st0\">\"w\"</span><span class=\"br0\">)</span> as f<span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> i <span class=\"sy1\">&gt;</span> <span class=\"nu0\">2</span><span class=\"sy4\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span></pre></li><li class=\"li1\"><pre class=\"de1\">print<span class=\"br0\">(</span>f.<span class=\"me1\">closed</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) None",
            "d) Error"
        ],
        "Answer": " Answer: a\nExplanation: The WITH statement when used with open file guarantees that the file object is closed when the with block exits."
    },
    {
        "id": 904,
        "Question": "To read the next line of the file from a file object infile, we use ____________",
        "Options": [
            "a) infile.read(2)",
            "b) infile.read()",
            "c) infile.readline()",
            "d) infile.readlines()"
        ],
        "Answer": " Answer: c\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 905,
        "Question": "To read the remaining lines of the file from a file object infile, we use ____________",
        "Options": [
            "a) infile.read(2)",
            "b) infile.read()",
            "c) infile.readline()",
            "d) infile.readlines()"
        ],
        "Answer": " Answer: d\nExplanation: Execute in the shell to verify."
    },
    {
        "id": 906,
        "Question": "The readlines() method returns ____________",
        "Options": [
            "a) str",
            "b) a list of lines",
            "c) a list of single characters",
            "d) a list of integers"
        ],
        "Answer": " Answer: b\nExplanation: Every line is stored in a list and returned."
    },
    {
        "id": 907,
        "Question": "Which are the two built-in functions to read a line of text from standard input, which by default comes from the keyboard?",
        "Options": [
            "a) Raw_input & Input",
            "b) Input & Scan",
            "c) Scan & Scanner",
            "d) Scanner"
        ],
        "Answer": " Answer: a\nExplanation: Python provides two built-in functions to read a line of text from standard input, which by default comes from the keyboard. These functions are:\nraw_input and input "
    },
    {
        "id": 908,
        "Question": "Which one of the following is not attributes of file?",
        "Options": [
            "a) closed",
            "b) softspace",
            "c) rename",
            "d) mode"
        ],
        "Answer": " Answer: a\nExplanation: The raw_input([prompt]) function reads one line from standard input and returns it as a string. This would prompt you to enter any string and it would display same string on the screen. When I typed “Hello Python!” "
    },
    {
        "id": 909,
        "Question": "What is the use of tell() method in python?",
        "Options": [
            "a) tells you the current position within the file",
            "b) tells you the end position within the file",
            "c) tells you the file is opened or not",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None. "
    },
    {
        "id": 910,
        "Question": "What is the current syntax of rename() a file?",
        "Options": [
            "a) rename(current_file_name, new_file_name)",
            "b) rename(new_file_name, current_file_name,)",
            "c) rename(()(current_file_name, new_file_name))",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: rename is not the attribute of file rest all are files attributes.\nAttribute\tDescription\nfile.closed\tReturns true if file is closed, false otherwise.\nfile.mode\tReturns access mode with which file was opened.\nfile.name\tReturns name of the file.\nfile.softspace\tReturns false if space explicitly required with print, true otherwise.\n"
    },
    {
        "id": 911,
        "Question": "What is the current syntax of remove() a file?",
        "Options": [
            "a) remove(file_name)",
            "b) remove(new_file_name, current_file_name,)",
            "c) remove(() , file_name))",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The tell() method tells you the current position within the file; in other words, the next read or write will occur at that many bytes from the beginning of the file. "
    },
    {
        "id": 912,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\">fo <span class=\"sy0\">=</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"foo.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"rw+\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"Name of the file: \"</span><span class=\"sy0\">,</span> fo.<span class=\"me1\">name</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># Assuming file has following 5 lines</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># This is 1st line</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># This is 2nd line</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># This is 3rd line</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># This is 4th line</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># This is 5th line</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> index <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">   line <span class=\"sy0\">=</span> fo.<span class=\"me1\">next</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">print</span> <span class=\"st0\">\"Line No %d - %s\"</span> % <span class=\"br0\">(</span>index<span class=\"sy0\">,</span> line<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"co1\"># Close opened file</span></pre></li><li class=\"li1\"><pre class=\"de1\">fo.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compilation Error",
            "b) Syntax Error",
            "c) Displays  Output",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This is the correct syntax which has shown below.\nrename(current_file_name, new_file_name) "
    },
    {
        "id": 913,
        "Question": "What is the use of seek() method in files?",
        "Options": [
            "a) sets the file’s current position at the offset",
            "b) sets the file’s previous position at the offset",
            "c) sets the file’s current position within the file",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: remove(file_name) "
    },
    {
        "id": 914,
        "Question": "What is the use of truncate() method in file?",
        "Options": [
            "a) truncates the file size",
            "b) deletes the content of the file",
            "c) deletes the file size",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It displays the output as shown below. The method next() is used when a file is used as an iterator, typically in a loop, the next() method is called repeatedly. This method returns the next input line, or raises StopIteration when EOF is hit.\nOutput:\nName of the file:  foo.txt\nLine No 0 - This is 1st line\n\nLine No 1 - This is 2nd line\n\nLine No 2 - This is 3rd line\n\nLine No 3 - This is 4th line\n\nLine No 4 - This is 5th line\n"
    },
    {
        "id": 915,
        "Question": "Which is/are the basic I/O connections in file?",
        "Options": [
            "a) Standard Input",
            "b) Standard Output",
            "c) Standard Errors",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Standard input, standard output and standard error. Standard input is the data that goes to the program. The standard input comes from a keyboard. Standard output is where we print our data with the print keyword. Unless redirected, it is the terminal console. The standard error is a stream where programs write their error messages. It is usually the text terminal. "
    },
    {
        "id": 916,
        "Question": "2. What will be the output of the following Python code? (If entered name is sanfoundry)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">sys</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">'Enter your name: '</span><span class=\"sy0\">,</span></pre></li><li class=\"li1\"><pre class=\"de1\">name <span class=\"sy0\">=</span> <span class=\"st0\">''</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">while</span> <span class=\"kw2\">True</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">   c <span class=\"sy0\">=</span> <span class=\"kw3\">sys</span>.<span class=\"me1\">stdin</span>.<span class=\"me1\">read</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">if</span> c <span class=\"sy0\">==</span> <span class=\"st0\">'<span class=\"es0\">\\n</span>'</span>:</pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">break</span></pre></li><li class=\"li1\"><pre class=\"de1\">   name <span class=\"sy0\">=</span> name + c</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">'Your name is:'</span><span class=\"sy0\">,</span> name</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry",
            "b) sanfoundry, sanfoundry",
            "c) San",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In order to work with standard I/O streams, we must import the sys module. The read() method reads one character from the standard input. In our example we get a prompt saying “Enter your name”. We enter our name and press enter. The enter key generates the new line character: \\n.\nOutput:\nEnter your name: sanfoundry\n Your name is: sanfoundry\n"
    },
    {
        "id": 917,
        "Question": "Which of the following mode will refer to binary data?",
        "Options": [
            "a) r",
            "b) w",
            "c) +",
            "d) b"
        ],
        "Answer": " Answer: d\nExplanation: None\nOutput:\n  Hello\nPython\n"
    },
    {
        "id": 918,
        "Question": "What is the pickling?",
        "Options": [
            "a) It is used for object serialization",
            "b) It is used for object deserialization",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:d\nExplanation: Mode Meaning is as explained below:\nr Reading\nw Writing\na Appending\nb Binary data\n+ Updating.\n"
    },
    {
        "id": 919,
        "Question": "What is unpickling?",
        "Options": [
            "a) It is used for object serialization",
            "b) It is used for object deserialization",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  Pickle is the standard mechanism for object serialization. Pickle uses a simple stack-based virtual machine that records the instructions used to reconstruct the object. This makes pickle vulnerable to security risks by malformed or maliciously constructed data, that may cause the deserializer to import arbitrary modules and instantiate any object.\n"
    },
    {
        "id": 920,
        "Question": "What is the correct syntax of open() function?",
        "Options": [
            "a) file = open(file_name [, access_mode][, buffering])",
            "b) file object = open(file_name [, access_mode][, buffering])",
            "c) file object = open(file_name)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: We have been working with simple textual data. What if we are working with objects rather than simple text? For such situations, we can use the pickle module. This module serializes Python objects. The Python objects are converted into byte streams and written to text files. This process is called pickling. The inverse operation, reading from a file and reconstructing objects is called deserializing or unpickling. "
    },
    {
        "id": 921,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><ol><li class=\"li1\"><pre class=\"de1\">fo <span class=\"sy0\">=</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span><span class=\"st0\">\"foo.txt\"</span><span class=\"sy0\">,</span> <span class=\"st0\">\"wb\"</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">print</span> <span class=\"st0\">\"Name of the file: \"</span><span class=\"sy0\">,</span> fo.<span class=\"me1\">name</span></pre></li><li class=\"li1\"><pre class=\"de1\">fo.<span class=\"me1\">flush</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">fo.<span class=\"me1\">close</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compilation Error",
            "b) Runtime Error",
            "c) No Output",
            "d) Flushes the file when closing them"
        ],
        "Answer": " Answer: b\nExplanation: Open() function correct syntax with the parameter details as shown below:\nfile object = open(file_name [, access_mode][, buffering])\nHere is parameters’ detail:\nfile_name: The file_name argument is a string value that contains the name of the file that you want to access.\naccess_mode: The access_mode determines the mode in which the file has to be opened, i.e., read, write, append, etc. A complete list of possible values is given below in the table. This is optional parameter and the default file access mode is read (r).\nbuffering: If the buffering value is set to 0, no buffering will take place. If the buffering value is 1, line buffering will be performed while accessing a file. If you specify the buffering value as an integer greater than 1, then buffering action will be performed with the indicated buffer size. If negative, the buffer size is the system default(default behavior). "
    },
    {
        "id": 922,
        "Question": "Correct syntax of file.writelines() is?",
        "Options": [
            "a) file.writelines(sequence)",
            "b) fileObject.writelines()",
            "c) fileObject.writelines(sequence)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The method flush() flushes the internal buffer. Python automatically flushes the files when closing them. But you may want to flush the data before closing any file. "
    },
    {
        "id": 923,
        "Question": "Correct syntax of file.readlines() is?",
        "Options": [
            "a) fileObject.readlines( sizehint );",
            "b) fileObject.readlines();",
            "c) fileObject.readlines(sequence)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The method writelines() writes a sequence of strings to the file. The sequence can be any iterable object producing strings, typically a list of strings. There is no return value.\nSyntax\nFollowing is the syntax for writelines() method:\nfileObject.writelines( sequence )."
    },
    {
        "id": 924,
        "Question": "In file handling, what does this terms means “r, a”?",
        "Options": [
            "a) read, append",
            "b) append, read",
            "c) write, append",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: r- reading,  a-appending."
    },
    {
        "id": 925,
        "Question": "What is the use of “w” in file handling?",
        "Options": [
            "a) Read",
            "b) Write",
            "c) Append",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: This opens the file for writing. It will create the file if it doesn’t exist, and if it does, it will overwrite it.\nfh = open(“filename_here”, “w”)."
    },
    {
        "id": 926,
        "Question": "What is the use of “a” in file handling?",
        "Options": [
            "a) Read",
            "b) Write",
            "c) Append",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: This opens the fhe file in appending mode. That means, it will be open for writing and everything will be written to the end of the file.\nfh =open(“filename_here”, “a”)."
    },
    {
        "id": 927,
        "Question": "Which function is used to read all the characters?",
        "Options": [
            "a) Read()",
            "b) Readcharacters()",
            "c) Readall()",
            "d) Readchar()"
        ],
        "Answer": " Answer: a\nExplanation: The read function reads all characters fh = open(“filename”, “r”)\ncontent = fh.read()."
    },
    {
        "id": 928,
        "Question": "Which function is used to read single line from file?",
        "Options": [
            "a) Readline()",
            "b) Readlines()",
            "c) Readstatement()",
            "d) Readfullline()"
        ],
        "Answer": " Answer: b\nExplanation: The readline function reads a single line from the file fh = open(“filename”, “r”)\ncontent = fh.readline()."
    },
    {
        "id": 929,
        "Question": "Which function is used to write all the characters?",
        "Options": [
            "a) write()",
            "b) writecharacters()",
            "c) writeall()",
            "d) writechar()"
        ],
        "Answer": " Answer: a\nExplanation: To write a fixed sequence of characters to a file\nfh = open(“hello.txt”,”w”)\nwrite(“Hello World”)."
    },
    {
        "id": 930,
        "Question": "Which function is used to write a list of string in a file?",
        "Options": [
            "a) writeline()",
            "b) writelines()",
            "c) writestatement()",
            "d) writefullline()"
        ],
        "Answer": " Answer: a\nExplanation: With the writeline function you can write a list of strings to a file\nfh = open(“hello.txt”, “w”)\nlines_of_text = [“a line of text”, “another line of text”, “a third line”]\nfh.writelines(lines_of_text). "
    },
    {
        "id": 931,
        "Question": "Which function is used to close a file in python?",
        "Options": [
            "a) Close()",
            "b) Stop()",
            "c) End()",
            "d) Closefile()"
        ],
        "Answer": " Answer: a\nExplanation: f.close()to close it and free up any system resources taken up by the open file. "
    },
    {
        "id": 932,
        "Question": "Is it possible to create a text file in python?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) Machine dependent",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Yes we can create a file in python. Creation of file is as shown below.\nfile = open(“newfile.txt”, “w”)\nfile.write(“hello world in the new file\\n”)\nfile.write(“and another line\\n”)\nfile.close()."
    },
    {
        "id": 933,
        "Question": "Which of the following are the modes of both writing and reading in binary format in file?",
        "Options": [
            "a) wb+",
            "b) w",
            "c) wb",
            "d) w+"
        ],
        "Answer": " Answer: a\nExplanation: Here is the description below\n“w”  Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.\n“wb” Opens a file for writing only in binary format. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.\n“w+” Opens a file for both writing and reading. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.\n“wb+” Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. If the file does not exist, creates a new file for reading and writing.\n"
    },
    {
        "id": 934,
        "Question": "Which of the following is not a valid mode to open a file?",
        "Options": [
            "a) ab",
            "b) rw",
            "c) r+",
            "d) w+"
        ],
        "Answer": "Answer: b\nExplanation: Use r+, w+ or a+ to perform both read and write operations using a single file object."
    },
    {
        "id": 935,
        "Question": "What is the difference between r+ and w+ modes?",
        "Options": [
            "a) no difference",
            "b) in r+ the pointer is initially placed at the beginning of the file and the pointer is at the end for w+",
            "c) in w+ the pointer is initially placed at the beginning of the file and the pointer is at the end for r+",
            "d) depends on the operating system"
        ],
        "Answer": "Answer: b\nExplanation: none."
    },
    {
        "id": 936,
        "Question": "How do you get the name of a file from a file object (fp)?",
        "Options": [
            "a) fp.name",
            "b) fp.file(name)",
            "c) self.__name__(fp)",
            "d) fp.__name__()"
        ],
        "Answer": "Answer: a\nExplanation: name is an attribute of the file object."
    },
    {
        "id": 937,
        "Question": "Which of the following is not a valid attribute of a file object (fp)?",
        "Options": [
            "a) fp.name",
            "b) fp.closed",
            "c) fp.mode",
            "d) fp.size"
        ],
        "Answer": "Answer: d\nExplanation: fp.size has not been implemented."
    },
    {
        "id": 938,
        "Question": "How do you close a file object (fp)?",
        "Options": [
            "a) close(fp)",
            "b) fclose(fp)",
            "c) fp.close()",
            "d) fp.__close__()"
        ],
        "Answer": "Answer: c\nExplanation: close() is a method of the file object."
    },
    {
        "id": 939,
        "Question": "How do you get the current position within the file?",
        "Options": [
            "a) fp.seek()",
            "b) fp.tell()",
            "c) fp.loc",
            "d) fp.pos"
        ],
        "Answer": "Answer: b\nExplanation: It gives the current position as an offset from the start of file."
    },
    {
        "id": 940,
        "Question": "How do you rename a file?",
        "Options": [
            "a) fp.name = ‘new_name.txt’",
            "b) os.rename(existing_name, new_name)",
            "c) os.rename(fp, new_name)",
            "d) os.set_name(existing_name, new_name)"
        ],
        "Answer": "Answer: b\nExplanation: os.rename() is used to rename files."
    },
    {
        "id": 941,
        "Question": "How do you delete a file?",
        "Options": [
            "a) del(fp)",
            "b) fp.delete()",
            "c) os.remove(‘file’)",
            "d) os.delete(‘file’)"
        ],
        "Answer": "Answer: c\nExplanation: os.remove() is used to delete files."
    },
    {
        "id": 942,
        "Question": "How do you change the file position to an offset value from the start?",
        "Options": [
            "a) fp.seek(offset, 0)",
            "b) fp.seek(offset, 1)",
            "c) fp.seek(offset, 2)",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: 0 indicates that the offset is with respect to the start."
    },
    {
        "id": 943,
        "Question": "What happens if no arguments are passed to the seek function?",
        "Options": [
            "a) file position is set to the start of file",
            "b) file position is set to the end of file",
            "c) file position remains unchanged",
            "d) error"
        ],
        "Answer": "Answer: d\nExplanation: seek() takes at least one argument."
    },
    {
        "id": 944,
        "Question": "1. Which function is called when the following Python code is executed?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">f <span class=\"sy0\">=</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>\nformat<span class=\"br0\">(</span>f<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) format()",
            "b) __format__()",
            "c) str()",
            "d) __str__()"
        ],
        "Answer": "Answer: d\nExplanation: Both str(f) and format(f) call f.__str__()."
    },
    {
        "id": 945,
        "Question": "Which function overloads the + operator?",
        "Options": [
            "a) __add__()",
            "b) __plus__()",
            "c) __sum__()",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Refer documentation."
    },
    {
        "id": 946,
        "Question": "Which operator is overloaded by __invert__()?",
        "Options": [
            "a) !",
            "b) ~",
            "c) ^",
            "d) –"
        ],
        "Answer": "Answer: b\nExplanation: __invert__() overloads ~."
    },
    {
        "id": 947,
        "Question": "Which function overloads the == operator?",
        "Options": [
            "a) __eq__()",
            "b) __equ__()",
            "c) __isequal__()",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: The other two do not exist."
    },
    {
        "id": 948,
        "Question": "Which operator is overloaded by __lg__()?",
        "Options": [
            "a) <",
            "b) >",
            "c) !=",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: __lg__() is invalid."
    },
    {
        "id": 949,
        "Question": "Which function overloads the >> operator?",
        "Options": [
            "a) __more__()",
            "b) __gt__()",
            "c) __ge__()",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: d\nExplanation: __rshift__() overloads the >> operator."
    },
    {
        "id": 950,
        "Question": "Let A and B be objects of class Foo. Which functions are called when print(A + B) is executed?",
        "Options": [
            "a) __add__(), __str__()",
            "b) __str__(), __add__()",
            "c) __sum__(), __str__()",
            "d) __str__(), __sum__()"
        ],
        "Answer": "Answer: a\nExplanation: The function __add__() is called first since it is within the bracket. The function __str__() is then called on the object that we received after adding A and B."
    },
    {
        "id": 951,
        "Question": "Which operator is overloaded by the __or__() function?",
        "Options": [
            "a) ||",
            "b) |",
            "c) //",
            "d) /"
        ],
        "Answer": "Answer: b\nExplanation: The function __or__() overloads the bitwise OR operator |."
    },
    {
        "id": 952,
        "Question": "Which function overloads the // operator?",
        "Options": [
            "a) __div__()",
            "b) __ceildiv__()",
            "c) __floordiv__()",
            "d) __truediv__()"
        ],
        "Answer": "Answer: c\nExplanation: __floordiv__() is for //."
    },
    {
        "id": 953,
        "Question": "1.\t_____ represents an entity in the real world with its identity and behaviour.",
        "Options": [
            "a)\tA method",
            "b)\tAn object",
            "c)\tA class",
            "d)\tAn operator"
        ],
        "Answer": "Answer: b\nExplanation: An object represents an entity in the real world that can be distinctly identified. A class may define an object."
    },
    {
        "id": 954,
        "Question": "2.\t_____  is used to create an object.",
        "Options": [
            "a)\tclass",
            "b)\tconstructor",
            "c)\tUser-defined functions",
            "d)\tIn-built functions"
        ],
        "Answer": "Answer: b\nExplanation: The values assigned by the constructor to the class members is used to create the object."
    },
    {
        "id": 955,
        "Question": "3.\tWhat will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> <span class=\"kw3\">test</span>:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>a<span class=\"sy0\">=</span><span class=\"st0\">\"Hello World\"</span><span class=\"br0\">)</span>:\n         <span class=\"kw2\">self</span>.<span class=\"me1\">a</span><span class=\"sy0\">=</span>a\n&nbsp;\n     <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">a</span><span class=\"br0\">)</span>\nobj<span class=\"sy0\">=</span><span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program has an error because constructor can’t have default arguments",
            "b)\tNothing is displayed",
            "c)\t“Hello World” is displayed",
            "d)\tThe program has an error display function doesn’t have parameters"
        ],
        "Answer": "Answer: c\nExplanation: The program has no error. “Hello World” is displayed. Execute in python shell to verify."
    },
    {
        "id": 956,
        "Question": "4.\tWhat is setattr() used for?",
        "Options": [
            "a)\tTo access the attribute of the object",
            "b)\tTo set an attribute",
            "c)\tTo check if an attribute exists or not",
            "d)\tTo delete an attribute"
        ],
        "Answer": "Answer: b\nExplanation: setattr(obj,name,value) is used to set an attribute. If attribute doesn’t exist, then it would be created."
    },
    {
        "id": 957,
        "Question": "5.\tWhat is getattr() used for?",
        "Options": [
            "a)\tTo access the attribute of the object",
            "b)\tTo delete an attribute",
            "c)\tTo check if an attribute exists or not",
            "d)\tTo set an attribute"
        ],
        "Answer": "Answer: a\nExplanation: getattr(obj,name) is used to get the attribute of an object."
    },
    {
        "id": 958,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> change:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"sy0\">,</span> z<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> x + y + z\n&nbsp;\nx <span class=\"sy0\">=</span> change<span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>\ny <span class=\"sy0\">=</span> <span class=\"kw2\">getattr</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> <span class=\"st0\">'a'</span><span class=\"br0\">)</span>\n<span class=\"kw2\">setattr</span><span class=\"br0\">(</span>x<span class=\"sy0\">,</span> <span class=\"st0\">'a'</span><span class=\"sy0\">,</span> y+<span class=\"nu0\">1</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>x.<span class=\"me1\">a</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t6",
            "b)\t7",
            "c)\tError",
            "d)\t0"
        ],
        "Answer": "Answer: b\nExplanation: First, a=1+2+3=6. Then, after setattr() is invoked, x.a=6+1=7."
    },
    {
        "id": 959,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> <span class=\"kw1\">class</span> <span class=\"kw3\">test</span>:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>a<span class=\"br0\">)</span>:\n         <span class=\"kw2\">self</span>.<span class=\"me1\">a</span><span class=\"sy0\">=</span>a\n&nbsp;\n     <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">a</span><span class=\"br0\">)</span>\nobj<span class=\"sy0\">=</span><span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tRuns normally, doesn’t display anything",
            "b)\tDisplays 0, which is the automatic default value",
            "c)\tError as one argument is required while creating the object",
            "d)\tError as display function requires additional argument"
        ],
        "Answer": "Answer: c\nExplanation: Since, the __init__ special method has another argument a other than self, during object creation, one argument is required. For example: obj=test(“Hello”)"
    },
    {
        "id": 960,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> <span class=\"kw3\">test</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">variable</span> <span class=\"sy0\">=</span> <span class=\"st0\">'Old'</span>\n        <span class=\"kw2\">self</span>.<span class=\"me1\">Change</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">variable</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">def</span> Change<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> var<span class=\"br0\">)</span>:\n        var <span class=\"sy0\">=</span> <span class=\"st0\">'New'</span>\nobj<span class=\"sy0\">=</span><span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">variable</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError because function change can’t be called in the __init__ function",
            "b)\t‘New’ is printed",
            "c)\t‘Old’ is printed",
            "d)\tNothing is printed"
        ],
        "Answer": "Answer: a\nExplanation: It is possible to delete an object of the class. On further typing obj in the python shell, it throws an error because the defined object has now been deleted."
    },
    {
        "id": 961,
        "Question": "What is Instantiation in terms of OOP terminology?",
        "Options": [
            "a)\tDeleting an instance of class",
            "b)\tModifying an instance of class",
            "c)\tCopying an instance of class",
            "d)\tCreating an instance of class"
        ],
        "Answer": "Answer: c\nExplanation: This is because strings are immutable. Hence any change made isn’t reflected in the original string."
    },
    {
        "id": 962,
        "Question": "11.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> fruits:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> price<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">price</span> <span class=\"sy0\">=</span> price\nobj<span class=\"sy0\">=</span>fruits<span class=\"br0\">(</span><span class=\"nu0\">50</span><span class=\"br0\">)</span>\n&nbsp;\nobj.<span class=\"me1\">quantity</span><span class=\"sy0\">=</span><span class=\"nu0\">10</span>\nobj.<span class=\"me1\">bags</span><span class=\"sy0\">=</span><span class=\"nu0\">2</span>\n&nbsp;\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">quantity</span>+<span class=\"kw2\">len</span><span class=\"br0\">(</span>obj.<span class=\"kw4\">__dict__</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t12",
            "b)\t52",
            "c)\t13",
            "d)\t60"
        ],
        "Answer": "Answer: d\nExplanation: Instantiation refers to creating an object/instance for a class."
    },
    {
        "id": 963,
        "Question": "12.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> <span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">pass</span>\n&nbsp;\n    <span class=\"kw1\">def</span> <span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span>__name__<span class=\"br0\">)</span>\n&nbsp;\nobj <span class=\"sy0\">=</span> Demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"kw3\">test</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tException is thrown",
            "b)\t__main__",
            "c)\tDemo",
            "d)\ttest"
        ],
        "Answer": "Answer: c\nExplanation: In the above code, obj.quantity has been initialised to 10. There are a total of three items in the dictionary, price, quantity and bags. Hence, len(obj.__dict__) is 3."
    },
    {
        "id": 964,
        "Question": "1.\tThe assignment of more than one function to a particular operator is _______",
        "Options": [
            "a)\tOperator over-assignment",
            "b)\tOperator overriding",
            "c)\tOperator overloading",
            "d)\tOperator instance"
        ],
        "Answer": "Answer: c\nExplanation: The assignment of more than one function to a particular operator is called as operator overloading."
    },
    {
        "id": 965,
        "Question": "2.\tWhich of the following is not a class method?",
        "Options": [
            "a)\tNon-static",
            "b)\tStatic",
            "c)\tBounded",
            "d)\tUnbounded"
        ],
        "Answer": "Answer: a\nExplanation: The three different class methods in Python are static, bounded and unbounded methods."
    },
    {
        "id": 966,
        "Question": "5.\tIs the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> B<span class=\"br0\">(</span><span class=\"kw2\">object</span><span class=\"br0\">)</span>:\n  <span class=\"kw1\">def</span> first<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"First method called\"</span><span class=\"br0\">)</span>\n  <span class=\"kw1\">def</span> second<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Second method called\"</span><span class=\"br0\">)</span>\nob <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\nB.<span class=\"me1\">first</span><span class=\"br0\">(</span>ob<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tIt isn’t as the object declaration isn’t right",
            "b)\tIt isn’t as there isn’t any __init__ method for initializing class members",
            "c)\tYes, this method of calling is called unbounded method call",
            "d)\tYes, this method of calling is called bounded method call"
        ],
        "Answer": "Answer: c\nExplanation: The program has no error. Here, test is a member of the class while k isn’t. Hence test keeps getting incremented 25 time while k remains 0."
    },
    {
        "id": 967,
        "Question": " What are the methods which begin and end with two underscore characters called?",
        "Options": [
            "a)\tSpecial methods",
            "b)\tIn-built methods",
            "c)\tUser-defined methods",
            "d)\tAdditional methods"
        ],
        "Answer": "Answer: b\nExplanation: Execute in python shell to verify."
    },
    {
        "id": 968,
        "Question": "8.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">class</span> demo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n\t\t<span class=\"kw1\">return</span> <span class=\"st0\">'__repr__ built-in function called'</span>\n\t<span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n\t\t<span class=\"kw1\">return</span> <span class=\"st0\">'__str__ built-in function called'</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> s<span class=\"sy0\">=</span>demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError",
            "b)\tNothing is printed",
            "c)\t__str__ called",
            "d)\t__repr__ called"
        ],
        "Answer": "Answer: c\nExplanation: The method may be created in the method demonstrated in the code as well and this is called as the unbounded method call. Calling the method using obj.one() is the bounded method call."
    },
    {
        "id": 969,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">class</span> demo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n\t<span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n\t\t<span class=\"kw1\">return</span> <span class=\"st0\">'__repr__ built-in function called'</span>\n\t<span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n\t\t<span class=\"kw1\">return</span> <span class=\"st0\">'__str__  built-in function called'</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> s<span class=\"sy0\">=</span>demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">print</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t__str__ called",
            "b)\t__repr__ called",
            "c)\tError",
            "d)\tNothing is printed"
        ],
        "Answer": "Answer: a\nExplanation: Special methods like __init__ begin and end with two underscore characters."
    },
    {
        "id": 970,
        "Question": "10.\tWhat is hasattr(obj,name) used for?",
        "Options": [
            "a)\tTo access the attribute of the object",
            "b)\tTo delete an attribute",
            "c)\tTo check if an attribute exists or not",
            "d)\tTo set an attribute"
        ],
        "Answer": "Answer: b\nExplanation: Special methods are automatically called during object creation."
    },
    {
        "id": 971,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> stud:\n   <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> roll_no<span class=\"sy0\">,</span> grade<span class=\"br0\">)</span>:\n      <span class=\"kw2\">self</span>.<span class=\"me1\">roll_no</span> <span class=\"sy0\">=</span> roll_no\n      <span class=\"kw2\">self</span>.<span class=\"me1\">grade</span> <span class=\"sy0\">=</span> grade\n   <span class=\"kw1\">def</span> display <span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n      <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Roll no : \"</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">roll_no</span><span class=\"sy0\">,</span>  <span class=\"st0\">\", Grade: \"</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">grade</span><span class=\"br0\">)</span>\nstud1 <span class=\"sy0\">=</span> stud<span class=\"br0\">(</span><span class=\"nu0\">34</span><span class=\"sy0\">,</span> <span class=\"st0\">'S'</span><span class=\"br0\">)</span>\nstud1.<span class=\"me1\">age</span><span class=\"sy0\">=</span><span class=\"nu0\">7</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">hasattr</span><span class=\"br0\">(</span>stud1<span class=\"sy0\">,</span> <span class=\"st0\">'age'</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError as age isn’t defined",
            "b)\tTrue",
            "c)\tFalse",
            "d)\t7"
        ],
        "Answer": "Answer: c\nExplanation: __str__ is used for producing a string representation of an object’s value that Python can evaluate. Execute in python shell to verify."
    },
    {
        "id": 972,
        "Question": "12.\tWhat is delattr(obj,name) used for?",
        "Options": [
            "a)\tTo print deleted attribute",
            "b)\tTo delete an attribute",
            "c)\tTo check if an attribute is deleted or not",
            "d)\tTo set an attribute"
        ],
        "Answer": "Answer: a\nExplanation: __str__ is used for producing a string representation of an object’s value that is most readable for humans. Execute in python shell to verify."
    },
    {
        "id": 973,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> stud:\n   ‘Base <span class=\"kw1\">class</span> <span class=\"kw1\">for</span> <span class=\"kw2\">all</span> students’\n   <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> roll_no<span class=\"sy0\">,</span> grade<span class=\"br0\">)</span>:\n      <span class=\"kw2\">self</span>.<span class=\"me1\">roll_no</span> <span class=\"sy0\">=</span> roll_no\n      <span class=\"kw2\">self</span>.<span class=\"me1\">grade</span> <span class=\"sy0\">=</span> grade\n   <span class=\"kw1\">def</span> display <span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n      <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Roll no : \"</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">roll_no</span><span class=\"sy0\">,</span>  <span class=\"st0\">\", Grade: \"</span><span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">grade</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>student.__doc__<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tException is thrown",
            "b)\t__main__",
            "c)\tNothing is displayed",
            "d)\tBase class for all students"
        ],
        "Answer": "Answer: c\nExplanation: hasattr(obj,name) checks if an attribute exists or not and returns True or False."
    },
    {
        "id": 974,
        "Question": "15.\tWhat does print(Test.__name__) display (assuming Test is the name of the class)?",
        "Options": [
            "a)\t()",
            "b)\tException is thrown",
            "c)\tTest",
            "d)\t__main__"
        ],
        "Answer": "Answer: b\nExplanation: Execute in python shell to verify."
    },
    {
        "id": 975,
        "Question": " Which of the following best describes inheritance?",
        "Options": [
            "a)\tAbility of a class to derive members of another class as a part of its own definition",
            "b)\tMeans of bundling instance variables and methods in order to restrict access to certain class members",
            "c)\tFocuses on variables and passing of variables to functions",
            "d)\tAllows for implementation of elegant software that is well designed and easily modified"
        ],
        "Answer": "Answer: a\nExplanation: If the class definition is class B(A): then class B inherits the methods of class A. This is called inheritance."
    },
    {
        "id": 976,
        "Question": "2.\tWhich of the following statements is wrong about inheritance?",
        "Options": [
            "a)\tProtected members of a class can be inherited",
            "b)\tThe inheriting class is called a subclass",
            "c)\tPrivate members of a class can be inherited and accessed",
            "d)\tInheritance is one of the features of OOP"
        ],
        "Answer": "Answer: c\nExplanation: Any changes made to the private members of the class in the subclass aren’t reflected in the original members."
    },
    {
        "id": 977,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Test:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">class</span> Derived_Test<span class=\"br0\">(</span>Test<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    b <span class=\"sy0\">=</span> Derived_Test<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>b.<span class=\"me1\">x</span><span class=\"sy0\">,</span>b.<span class=\"me1\">y</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t0 1",
            "b)\t0 0",
            "c)      Error because class B inherits A but variable x isn’t inherited",
            "d)\tError because when object is created, argument must be passed like Derived_Test(1)"
        ],
        "Answer": "Answer: b\nExplanation: Since the object for the derived class is declared first, __new__() method of the derived class is invoked first, followed by the constructor and the __new__() method of main class."
    },
    {
        "id": 978,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> disp<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"A disp()\"</span><span class=\"br0\">)</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\nobj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"me1\">disp</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tInvalid syntax for inheritance",
            "b)\tError because when object is created, argument must be passed",
            "c)\tNothing is printed",
            "d)\tA disp()"
        ],
        "Answer": "Answer: c\nExplanation: Since the invoking method, Test.__init__(self), isn’t present in the derived class, variable x can’t be inherited."
    },
    {
        "id": 979,
        "Question": " Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write?",
        "Options": [
            "a)\tA.__init__(self)",
            "b)\tB.__init__(self)",
            "c)\tA.__init__(B)",
            "d)\tB.__init__(A)"
        ],
        "Answer": "Answer: d\nExplanation: Class B inherits class A hence the function disp () becomes part of class B’s definition. Hence disp() method is properly executed and the line is printed."
    },
    {
        "id": 980,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Test:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>\n<span class=\"kw1\">class</span> Derived_Test<span class=\"br0\">(</span>Test<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        Test.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    b <span class=\"sy0\">=</span> Derived_Test<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>b.<span class=\"me1\">x</span><span class=\"sy0\">,</span>b.<span class=\"me1\">y</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError because class B inherits A but variable x isn’t inherited",
            "b)\t0 0",
            "c)\t0 1",
            "d)\tError, the syntax of the invoking method is wrong"
        ],
        "Answer": "Answer: b\nExplanation: A subtype is something that be substituted for and behave as its parent type. All subclass may not be a subtype in object-oriented programming."
    },
    {
        "id": 981,
        "Question": "10.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> x<span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x\n<span class=\"kw1\">class</span> der<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>y <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> y\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> der<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">x</span><span class=\"sy0\">,</span> obj.<span class=\"me1\">y</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, the syntax of the invoking method is wrong",
            "b)\tThe program runs fine but nothing is printed",
            "c)\t1 0",
            "d)\t1 2"
        ],
        "Answer": "Answer: b\nExplanation: B is a subtype of B if instances of type B can substitute for instances of type A without affecting semantics."
    },
    {
        "id": 982,
        "Question": " What does built-in function type do in context of classes?",
        "Options": [
            "a)\tDetermines the object name of any value",
            "b)\tDetermines the class name of any value",
            "c)\tDetermines class description of any value",
            "d)\tDetermines the file name of any value"
        ],
        "Answer": "Answer: a\nExplanation: To invoke the __init__ method in A from B, either of the following should be written: A.__init__(self) or super().__init__(self)."
    },
    {
        "id": 983,
        "Question": " Which of the following is not a type of inheritance?",
        "Options": [
            "a)\tDouble-level",
            "b)\tMulti-level",
            "c)\tSingle-level",
            "d)\tMultiple"
        ],
        "Answer": "Answer: c\nExplanation: Since the invoking method has been properly invoked, variable x from the main class has been properly inherited and it can also be accessed."
    },
    {
        "id": 984,
        "Question": " What does built-in function help do in context of classes?",
        "Options": [
            "a)\tDetermines the object name of any value",
            "b)\tDetermines the class identifiers of any value",
            "c)\tDetermines class description of any built-in type",
            "d)\tDetermines class description of any user-defined built-in type"
        ],
        "Answer": "Answer: d\nExplanation: In the above piece of code, the invoking method has been properly implemented and hence x=1 and y=2. "
    },
    {
        "id": 985,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> one<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">two</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n&nbsp;\n    <span class=\"kw1\">def</span> two<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'A'</span>\n&nbsp;\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> two<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'B'</span>\nobj1<span class=\"sy0\">=</span>A<span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj2<span class=\"sy0\">=</span>B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj1.<span class=\"me1\">two</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">,</span>obj2.<span class=\"me1\">two</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tA A",
            "b)\tA B",
            "c)\tB B",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: For example: >>> type((1,)) gives <class ‘tuple’>."
    },
    {
        "id": 986,
        "Question": "15.  What type of inheritance is illustrated in the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\n<span class=\"kw1\">class</span> C<span class=\"br0\">(</span>A<span class=\"sy0\">,</span>B<span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tMulti-level inheritance",
            "b)\tMultiple inheritance",
            "c)\tHierarchical inheritance",
            "d)\tSingle-level inheritance"
        ],
        "Answer": "Answer: a\nExplanation: Multiple, multi-level, single-level and hierarchical inheritance are all types of inheritance. "
    },
    {
        "id": 987,
        "Question": "1.  What type of inheritance is illustrated in the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span>\n<span class=\"kw1\">class</span> C<span class=\"br0\">(</span>B<span class=\"br0\">)</span>:\n    <span class=\"kw1\">pass</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tMulti-level inheritance",
            "b)\tMultiple inheritance",
            "c)\tHierarchical inheritance",
            "d)\tSingle-level inheritance"
        ],
        "Answer": "Answer: a\nExplanation: In multi-level inheritance, a subclass derives from another class which itself is derived from another class."
    },
    {
        "id": 988,
        "Question": "What does single-level inheritance mean?",
        "Options": [
            "a)\tA subclass derives from a class which in turn derives from another class",
            "b)\tA single superclass inherits from multiple subclasses",
            "c)\tA single subclass derives from a single superclass",
            "d)\tMultiple base classes inherit a single derived class"
        ],
        "Answer": "Answer: c\nExplanation: In single-level inheritance, there is a single subclass which inherits from a single superclass. So the class definition of the subclass will be: class B(A): where A is the superclass."
    },
    {
        "id": 989,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw2\">self</span>.__i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n         <span class=\"kw2\">self</span>.<span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>\n&nbsp;\n     <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.__i<span class=\"sy0\">,</span> <span class=\"kw2\">self</span>.<span class=\"me1\">j</span><span class=\"br0\">)</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n         <span class=\"kw2\">self</span>.__i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>\n         <span class=\"kw2\">self</span>.<span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">7</span>  \nc <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\nc.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t2 7",
            "b)\t1 5",
            "c)\t1 7",
            "d)\t2 5"
        ],
        "Answer": "Answer: c\nExplanation: Any change made in variable i isn’t reflected as it is the private member of the superclass."
    },
    {
        "id": 990,
        "Question": "4.\tWhich of the following statements isn’t true?",
        "Options": [
            "a)\tA non-private method in a superclass can be overridden",
            "b)\tA derived class is a subset of superclass",
            "c)\tThe value of a private variable in the superclass can be changed in the subclass",
            "d)\tWhen invoking the constructor from a subclass, the constructor of superclass is automatically invoked"
        ],
        "Answer": "Answer: c\nExplanation: If the value of a private variable in a superclass is changed in the subclass, the change isn’t reflected."
    },
    {
        "id": 991,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>x<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x\n    <span class=\"kw1\">def</span> count<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>x<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"kw2\">self</span>.<span class=\"me1\">x</span>+<span class=\"nu0\">1</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> y<span class=\"sy0\">=</span><span class=\"nu0\">0</span><span class=\"br0\">)</span>:\n        A.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> y\n    <span class=\"kw1\">def</span> count<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> +<span class=\"sy0\">=</span> <span class=\"nu0\">1</span>     \n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj.<span class=\"me1\">count</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">x</span><span class=\"sy0\">,</span> obj.<span class=\"me1\">y</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t3 0",
            "b)\t3 1",
            "c)\t0 1",
            "d)\tAn exception in thrown"
        ],
        "Answer": "Answer: b\nExplanation: Initially x=3 and y=0. When obj.count() is called, y=1."
    },
    {
        "id": 992,
        "Question": "6.  What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">class</span> A:\n\t<span class=\"kw1\">pass</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n\t<span class=\"kw1\">pass</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> obj<span class=\"sy0\">=</span>B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"sy0\">&gt;&gt;&gt;</span> <span class=\"kw2\">isinstance</span><span class=\"br0\">(</span>obj<span class=\"sy0\">,</span>A<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tTrue",
            "b)\tFalse",
            "c)\tWrong syntax for isinstance() method",
            "d)\tInvalid method for classes"
        ],
        "Answer": "Answer: a\nExplanation: isinstance(obj,class) returns True if obj is an object class."
    },
    {
        "id": 993,
        "Question": " Which of the following statements is true?",
        "Options": [
            "a)\tThe __new__() method automatically invokes the __init__ method",
            "b)\tThe __init__ method is defined in the object class",
            "c)\tThe __eq(other) method is defined in the object class",
            "d)\tThe __repr__() method is defined in the object class"
        ],
        "Answer": "Answer: c\nExplanation: The __eq(other) method is called if any comparison takes place and it is defined in the object class."
    },
    {
        "id": 994,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.__x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.__x<span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1",
            "b)\t0",
            "c)\tError, invalid syntax for object declaration",
            "d)\tError, private class member can’t be accessed in a subclass"
        ],
        "Answer": "Answer: a\nExplanation: Method issubclass() returns True if a class is a subclass of another class and False otherwise."
    },
    {
        "id": 995,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>._x <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>       \n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>._x<span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tError, invalid syntax for object declaration",
            "b)\tNothing is printed",
            "c)\t5",
            "d)\tError, private class member can’t be accessed in a subclass"
        ],
        "Answer": "Answer: d\nExplanation: Private class members in the superclass can’t be accessed in the subclass."
    },
    {
        "id": 996,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span>x<span class=\"sy0\">=</span><span class=\"nu0\">3</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>._x <span class=\"sy0\">=</span> x        \n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>._x<span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n&nbsp;\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t5",
            "b)\tError, class member x has two values",
            "c)\t3",
            "d)\tError, protected class member can’t be accessed in a subclass"
        ],
        "Answer": "Answer: c\nExplanation: The class member x is protected, not private and hence can be accessed by subclasses."
    },
    {
        "id": 997,
        "Question": " Which of the following best describes polymorphism?",
        "Options": [
            "a)\tAbility of a class to derive members of another class as a part of its own definition",
            "b)\tMeans of bundling instance variables and methods in order to restrict access to certain class members",
            "c)\tFocuses on variables and passing of variables to functions",
            "d)\tAllows for objects of different types and behaviour to be treated as the same general type"
        ],
        "Answer": "Answer: d\nExplanation: Polymorphism is a feature of object-oriented programming languages. It allows for the implementation of elegant software that is well designed and easily modified."
    },
    {
        "id": 998,
        "Question": "2.\tWhat is the biggest reason for the use of polymorphism?",
        "Options": [
            "a)\tIt allows the programmer to think at a more abstract level",
            "b)\tThere is less program code to write",
            "c)\tThe program will have a more elegant design and will be easier to maintain and update",
            "d)\tProgram code takes up less space"
        ],
        "Answer": "Answer: c\nExplanation: Polymorphism allows for the implementation of elegant software."
    },
    {
        "id": 999,
        "Question": "3.\tWhat is the use of duck typing?",
        "Options": [
            "a)\tMore restriction on the type values that can be passed to a given method",
            "b)\tNo restriction on the type values that can be passed to a given method",
            "c)\tLess restriction on the type values that can be passed to a given method",
            "d)\tMakes the program code smaller"
        ],
        "Answer": "Answer: c\nExplanation: In Python, any set of classes with a common set of methods can be treated similarly. This is called duck typing. Hence duck typing imposes less restrictions."
    },
    {
        "id": 1000,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'1'</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">class</span> C<span class=\"br0\">(</span>B<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj1 <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj2 <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    obj3 <span class=\"sy0\">=</span> C<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>obj1<span class=\"sy0\">,</span> obj2<span class=\"sy0\">,</span>obj3<span class=\"br0\">)</span>\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1 1 1",
            "b)\t1 2 3",
            "c)\t‘1’ ‘1’ ‘1’",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: a\nExplanation: The super().__init__() in the subclasses has been properly invoked and none of other subclasses return any other value. Hence 1 is returned each time the object is created and printed."
    },
    {
        "id": 1001,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">def</span> change<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>\n<span class=\"kw1\">class</span> Demo_derived<span class=\"br0\">(</span>Demo<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> change<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span><span class=\"sy0\">=</span><span class=\"kw2\">self</span>.<span class=\"me1\">x</span>+<span class=\"nu0\">1</span>\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">x</span>\n<span class=\"kw1\">def</span> main<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    obj <span class=\"sy0\">=</span> Demo_derived<span class=\"br0\">(</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">change</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n&nbsp;\nmain<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t11",
            "b)\t2",
            "c)\t1",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: The derived class method change() overrides the base class method."
    },
    {
        "id": 1002,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\"1\"</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\"2\"</span>\n<span class=\"kw1\">class</span> C<span class=\"br0\">(</span>B<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__repr__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\"3\"</span>\no1 <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span>\no2 <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span>\no3 <span class=\"sy0\">=</span> C<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj1<span class=\"sy0\">,</span> obj2<span class=\"sy0\">,</span> obj3<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t1 1 1",
            "b)\t1 2 3",
            "c)\t‘1’ ‘1’ ‘1’",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: a\nExplanation: A class in which one or more methods are unimplemented or implemented for the methods throw an exception is called an abstract class."
    },
    {
        "id": 1003,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">multiply</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span>\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">i</span><span class=\"br0\">)</span>\n&nbsp;\n    <span class=\"kw1\">def</span> multiply<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> * i<span class=\"sy0\">;</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n&nbsp;\n    <span class=\"kw1\">def</span> multiply<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> * i<span class=\"sy0\">;</span>\nobj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t15",
            "b)\t60",
            "c)\tAn exception is thrown",
            "d)\t30"
        ],
        "Answer": "Answer: b\nExplanation: Overriding means if there are two same methods present in the superclass and the subclass, the contents of the subclass method are executed."
    },
    {
        "id": 1004,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> check<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\" Demo's check \"</span>  \n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">check</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">class</span> Demo_Derived<span class=\"br0\">(</span>Demo<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> check<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\" Derived's check \"</span>\nDemo<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nDemo_Derived<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tDemo’s check Derived’s check",
            "b)\tDemo’s check Demo’s check",
            "c)\tDerived’s check Demo’s check",
            "d)\tSyntax error"
        ],
        "Answer": "Answer: b\nExplanation: When different objects are invoked, each of the individual classes return their individual values and hence it is printed."
    },
    {
        "id": 1005,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">multiply</span><span class=\"br0\">(</span><span class=\"nu0\">15</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">def</span> multiply<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> * i<span class=\"sy0\">;</span>\n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">super</span><span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">i</span><span class=\"br0\">)</span>\n&nbsp;\n    <span class=\"kw1\">def</span> multiply<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> i<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> * i<span class=\"sy0\">;</span>\nobj <span class=\"sy0\">=</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t15",
            "b)\t30",
            "c)\tAn exception is thrown",
            "d)\t60"
        ],
        "Answer": "Answer: d\nExplanation: The derived class B overrides base class A."
    },
    {
        "id": 1006,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> __check<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\" Demo's check \"</span>\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">check</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">class</span> Demo_Derived<span class=\"br0\">(</span>Demo<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> __check<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">\" Derived's check \"</span>\nDemo<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span>\nDemo_Derived<span class=\"br0\">(</span><span class=\"br0\">)</span>.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tDemo’s check Derived’s check",
            "b)\tDemo’s check Demo’s check",
            "c)\tDerived’s check Demo’s check",
            "d)\tSyntax error"
        ],
        "Answer": "Answer: a\nExplanation: Demo().display() invokes the display() method in class Demo and Demo_Derived().display() invokes the display() method in class Demo_Derived. "
    },
    {
        "id": 1007,
        "Question": "13. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> x<span class=\"sy0\">,</span> y<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> <span class=\"sy0\">=</span> x\n        <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">=</span> y\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__str__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__eq__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> other<span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">x</span> * <span class=\"kw2\">self</span>.<span class=\"me1\">y</span> <span class=\"sy0\">==</span> other.<span class=\"me1\">x</span> * other.<span class=\"me1\">y</span>\nobj1 <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span>\nobj2 <span class=\"sy0\">=</span> A<span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj1 <span class=\"sy0\">==</span> obj2<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tFalse",
            "b)\t1",
            "c)\tTrue",
            "d)\tAn exception is thrown"
        ],
        "Answer": "Answer: b\nExplanation: The derived class B overrides base class A."
    },
    {
        "id": 1008,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> A:\n    <span class=\"kw1\">def</span> one<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.<span class=\"me1\">two</span><span class=\"br0\">(</span><span class=\"br0\">)</span>    \t\n    <span class=\"kw1\">def</span> two<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'A'</span>   \n<span class=\"kw1\">class</span> B<span class=\"br0\">(</span>A<span class=\"br0\">)</span>:\n    <span class=\"kw1\">def</span> two<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"st0\">'B'</span>\nobj2<span class=\"sy0\">=</span>B<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj2.<span class=\"me1\">two</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tA",
            "b)\tAn exception is thrown",
            "c)\tA B",
            "d)\tB"
        ],
        "Answer": "Answer: b\nExplanation: The method check is private so it can’t be accessed by the derived class. Execute the code in the Python shell. "
    },
    {
        "id": 1009,
        "Question": " Which of the following statements is true?",
        "Options": [
            "a)\tA non-private method in a superclass can be overridden",
            "b)\tA subclass method can be overridden by the superclass",
            "c)\tA private method in a superclass can be overridden",
            "d)\tOverriding isn’t possible in Python"
        ],
        "Answer": "Answer: c\nExplanation: Since 5*2==2*5, True is printed. Execute it in the Python shell to verify."
    },
    {
        "id": 1010,
        "Question": "1.\tWhich of these is not a fundamental features of OOP?",
        "Options": [
            "a)\tEncapsulation",
            "b)\tInheritance",
            "c)\tInstantiation",
            "d)\tPolymorphism"
        ],
        "Answer": "Answer: c\nExplanation: Instantiation simply refers to creation of an instance of class. It is not a fundamental feature of OOP."
    },
    {
        "id": 1011,
        "Question": "2.\tWhich of the following is the most suitable definition for encapsulation?",
        "Options": [
            "a)\tAbility of a class to derive members of another class as a part of its own definition",
            "b)\tMeans of bundling instance variables and methods in order to restrict access to certain class members",
            "c)\tFocuses on variables and passing of variables to functions",
            "d)\tAllows for implementation of elegant software that is well designed and easily modified"
        ],
        "Answer": "Answer: b\nExplanation: The values assigned by the constructor to the class members is used to create the object."
    },
    {
        "id": 1012,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n        <span class=\"kw2\">self</span>.__b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n&nbsp;\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.__b\nobj <span class=\"sy0\">=</span> Demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">a</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)      The program has an error because there isn’t any function to return self.a",
            "b)      The program has an error because b is private and display(self) is returning a private member",
            "c)\tThe program runs fine and 1 is printed",
            "d)\tThe program has an error as you can’t name a class member using __b"
        ],
        "Answer": "Answer: c\nExplanation: The program has no error because the class member which is public is printed. 1  is displayed. Execute in python shell to verify."
    },
    {
        "id": 1013,
        "Question": "4. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n        <span class=\"kw2\">self</span>.__b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n&nbsp;\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.__b\n&nbsp;\nobj <span class=\"sy0\">=</span> Demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.__b<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program has an error because there isn’t any function to return self.a",
            "b)\tThe program has an error because b is private and display(self) is returning a private member",
            "c)\tThe program has an error because b is private and hence can’t be printed",
            "d)\tThe program runs fine and 1 is printed"
        ],
        "Answer": "Answer: c\nExplanation: Variables beginning with two underscores are said to be private members of the class and they can’t be accessed directly."
    },
    {
        "id": 1014,
        "Question": "5.\tMethods of a class that provide access to private members of the class are called as ______ and ______",
        "Options": [
            "a)\tgetters/setters",
            "b)\t__repr__/__str__",
            "c)\tuser-defined functions/in-built functions",
            "d)\t__init__/__del__"
        ],
        "Answer": "Answer: a\nExplanation: The purpose of getters and setters is to get(return) and set(assign) private instance variables of a class."
    },
    {
        "id": 1015,
        "Question": "6.  Which of these is a private data field?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> Demo:\n<span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n    __a <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw2\">self</span>.__b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    <span class=\"kw2\">self</span>.__c__ <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n    __d__<span class=\"sy0\">=</span> <span class=\"nu0\">1</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\t__a",
            "b)\t__b",
            "c)\t__c__",
            "d)\t__d__"
        ],
        "Answer": "Answer: b\nExplanation: Variables such as self.__b are private members of the class."
    },
    {
        "id": 1016,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw2\">self</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n         <span class=\"kw2\">self</span>.__b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n&nbsp;\n     <span class=\"kw1\">def</span> get<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.__b\n&nbsp;\nobj <span class=\"sy0\">=</span> Demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">get</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program has an error because there isn’t any function to return self.a",
            "b)\tThe program has an error because b is private and display(self) is returning a private member",
            "c)\tThe program has an error because b is private and hence can’t be printed",
            "d)\tThe program runs fine and 1 is printed"
        ],
        "Answer": "Answer: d\nExplanation: Here, get(self) is a member of the class. Hence, it can even return a private member of the class. Because of this reason, the program runs fine and 1 is printed."
    },
    {
        "id": 1017,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> Demo:\n     <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw2\">self</span>.<span class=\"me1\">a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n         <span class=\"kw2\">self</span>.__b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>\n     <span class=\"kw1\">def</span> get<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n         <span class=\"kw1\">return</span> <span class=\"kw2\">self</span>.__b\nobj <span class=\"sy0\">=</span> Demo<span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"me1\">a</span><span class=\"sy0\">=</span><span class=\"nu0\">45</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj.<span class=\"me1\">a</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program runs properly and prints 45",
            "b)\tThe program has an error because the value of members of a class can’t be changed from outside the class",
            "c)\tThe program runs properly and prints 1",
            "d)\tThe program has an error because the value of members outside a class can only be changed as self.a=45"
        ],
        "Answer": "Answer: a\nExplanation: It is possible to change the values of public class members using the object of the class."
    },
    {
        "id": 1018,
        "Question": "11. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> fruits:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">price</span> <span class=\"sy0\">=</span> <span class=\"nu0\">100</span>\n        <span class=\"kw2\">self</span>.__bags <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.__bags<span class=\"br0\">)</span>\nobj<span class=\"sy0\">=</span>fruits<span class=\"br0\">(</span><span class=\"br0\">)</span>\nobj.<span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program has an error because display() is trying to print a private class member",
            "b)\tThe program runs fine but nothing is printed",
            "c)\tThe program runs fine and 5 is printed",
            "d)\tThe program has an error because display() can’t be accessed"
        ],
        "Answer": "Answer: b\nExplanation: Private members of a class are accessible if written as follows: obj._Classname__privatemember. Such renaming of identifiers is called as name mangling."
    },
    {
        "id": 1019,
        "Question": "12. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"> <span class=\"kw1\">class</span> student:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">marks</span> <span class=\"sy0\">=</span> <span class=\"nu0\">97</span>\n        <span class=\"kw2\">self</span>.__cgpa <span class=\"sy0\">=</span> <span class=\"nu0\">8.7</span>\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>.<span class=\"me1\">marks</span><span class=\"br0\">)</span>\nobj<span class=\"sy0\">=</span>student<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj._student__cgpa<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program runs fine and 8.7 is printed",
            "b)\tError because private class members can’t be accessed",
            "c)\tError because the proper syntax for name mangling hasn’t been implemented",
            "d)\tThe program runs fine but nothing is printed"
        ],
        "Answer": "Answer: a\nExplanation: Name mangling prevents unintentional access of private members of a class, while still allowing access when needed. Unless the variable is accessed with its mangled name, it will not be found."
    },
    {
        "id": 1020,
        "Question": " Which of the following is false about protected class members?",
        "Options": [
            "a)\tThey begin with one underscore",
            "b)\tThey can be accessed by subclasses",
            "c)\tThey can be accessed by name mangling method",
            "d)\tThey can be accessed within a class"
        ],
        "Answer": "Answer: c\nExplanation: Private class members can be printed by methods which are members of the class."
    },
    {
        "id": 1021,
        "Question": "14. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">class</span> objects:\n    <span class=\"kw1\">def</span> <span class=\"kw4\">__init__</span><span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>.<span class=\"me1\">colour</span> <span class=\"sy0\">=</span> <span class=\"kw2\">None</span>\n        <span class=\"kw2\">self</span>._shape <span class=\"sy0\">=</span> <span class=\"st0\">\"Circle\"</span> \n&nbsp;\n    <span class=\"kw1\">def</span> display<span class=\"br0\">(</span><span class=\"kw2\">self</span><span class=\"sy0\">,</span> s<span class=\"br0\">)</span>:\n        <span class=\"kw2\">self</span>._shape <span class=\"sy0\">=</span> s\nobj<span class=\"sy0\">=</span>objects<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>obj._objects_shape<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)\tThe program runs fine because name mangling has been properly implemented",
            "b)\tError because the member shape is a protected member",
            "c)\tError because the proper syntax for name mangling hasn’t been implemented",
            "d)\tError because the member shape is a private member"
        ],
        "Answer": "Answer: a\nExplanation: Name mangling has been properly implemented in the code given above and hence the program runs properly."
    },
    {
        "id": 1022,
        "Question": "How many except statements can a try-except block have?",
        "Options": [
            "a) zero",
            "b) one",
            "c) more than one",
            "d) more than zero"
        ],
        "Answer": "Answer: d\nExplanation: There has to be at least one except statement."
    },
    {
        "id": 1023,
        "Question": "When will the else part of try-except-else be executed?",
        "Options": [
            "a) always",
            "b) when an exception occurs",
            "c) when no exception occurs",
            "d) when an exception occurs in to except block"
        ],
        "Answer": "Answer: c\nExplanation: The else part is executed when no exception occurs."
    },
    {
        "id": 1024,
        "Question": "3. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">try</span>:\n    <span class=\"co1\"># Do something</span>\n<span class=\"kw1\">except</span>:\n    <span class=\"co1\"># Do something</span>\n<span class=\"kw1\">finally</span>:\n    <span class=\"co1\"># Do something</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) no, there is no such thing as finally",
            "b) no, finally cannot be used with except",
            "c) no, finally must come before except",
            "d) yes"
        ],
        "Answer": "Answer: b\nExplanation: Refer documentation."
    },
    {
        "id": 1025,
        "Question": "4. Is the following Python code valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">try</span>:\n    <span class=\"co1\"># Do something</span>\n<span class=\"kw1\">except</span>:\n    <span class=\"co1\"># Do something</span>\n<span class=\"kw1\">else</span>:\n    <span class=\"co1\"># Do something</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) no, there is no such thing as else",
            "b) no, else cannot be used with except",
            "c) no, else must come before except",
            "d) yes"
        ],
        "Answer": "Answer: d\nExplanation: Refer documentation."
    },
    {
        "id": 1026,
        "Question": "Can one block of except statements handle multiple exception?",
        "Options": [
            "a) yes, like except TypeError, SyntaxError [,…] ",
            "b) yes, like except [TypeError, SyntaxError] ",
            "c) no",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: Each type of exception can be specified directly. There is no need to put it in a list."
    },
    {
        "id": 1027,
        "Question": "When is the finally block executed?",
        "Options": [
            "a) when there is no exception",
            "b) when there is an exception",
            "c) only if some condition that has been specified is satisfied",
            "d) always"
        ],
        "Answer": "Answer: d\nExplanation: The finally block is always executed."
    },
    {
        "id": 1028,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">try</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">1</span>\n    <span class=\"kw1\">finally</span>:\n        <span class=\"kw1\">return</span> <span class=\"nu0\">2</span>\nk <span class=\"sy0\">=</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) error, there is more than one return statement in a single try-finally block"
        ],
        "Answer": "Answer: b\nExplanation: The finally block is executed even there is a return statement in the try block."
    },
    {
        "id": 1029,
        "Question": "8. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> foo<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">try</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">finally</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span>\nfoo<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2",
            "b) 1",
            "c) 2",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: a\nExplanation: No error occurs in the try block so 1 is printed. Then the finally block is executed and 2 is printed."
    },
    {
        "id": 1030,
        "Question": "9. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">try</span>:\n    <span class=\"kw1\">if</span> <span class=\"st0\">'1'</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">1</span>:\n        <span class=\"kw1\">raise</span> <span class=\"st0\">\"someError\"</span>\n    <span class=\"kw1\">else</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"someError has not occurred\"</span><span class=\"br0\">)</span>\n<span class=\"kw1\">except</span> <span class=\"st0\">\"someError\"</span>:\n    <span class=\"kw1\">print</span> <span class=\"br0\">(</span><span class=\"st0\">\"someError has occurred\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) someError has occurred",
            "b) someError has not occurred",
            "c) invalid code",
            "d) none of the mentioned"
        ],
        "Answer": "Answer: c\nExplanation: A new exception class must inherit from a BaseException. There is no such inheritance here."
    },
    {
        "id": 1031,
        "Question": "What happens when ‘1’ == 1 is executed?",
        "Options": [
            "a) we get a True",
            "b) we get a False",
            "c) an TypeError occurs",
            "d) a ValueError occurs"
        ],
        "Answer": "Answer: b\nExplanation: It simply evaluates to False and does not raise any exception."
    },
    {
        "id": 1032,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">x<span class=\"sy0\">=</span><span class=\"nu0\">10</span>\ny<span class=\"sy0\">=</span><span class=\"nu0\">8</span>\n<span class=\"kw1\">assert</span> x<span class=\"sy0\">&gt;</span>y<span class=\"sy0\">,</span> <span class=\"st0\">'X too small'</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Assertion Error",
            "b) 10 8",
            "c) No output",
            "d) 108"
        ],
        "Answer": "Answer: a\nExplanation: The code shown above results in an assertion error. The output of the code is:\nTraceback (most recent call last):\n  File “<pyshell#0>”, line 1, in <module>\n    assert False, ‘Spanish’\nAssertionError: Spanish\nHence, this statement is true."
    },
    {
        "id": 1033,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"co1\">#generator</span>\n<span class=\"kw1\">def</span> f<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">yield</span> x+<span class=\"nu0\">1</span>\ng<span class=\"sy0\">=</span>f<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>next<span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) 8",
            "b) 9",
            "c) 7",
            "d) Error"
        ],
        "Answer": "Answer: c\nExplanation: The code shown above results in an error if and only if x<y. However, in the above case, since x>y, there is no error. Since there is no print statement, hence there is no output."
    },
    {
        "id": 1034,
        "Question": "6. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span>:\n    <span class=\"kw1\">try</span>:\n        f<span class=\"br0\">(</span>x<span class=\"sy0\">,</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">finally</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'after f'</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">'after f?'</span><span class=\"br0\">)</span>\na<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) No output",
            "b) after f?",
            "c) error",
            "d) after f"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above returns the value of the expression x+1, since we have used to keyword yield. The value of x is 8. Hence the output of the code is 9."
    },
    {
        "id": 1035,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> f<span class=\"br0\">(</span>x<span class=\"br0\">)</span>:\n    <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span>:\n        <span class=\"kw1\">yield</span> i\ng<span class=\"sy0\">=</span>f<span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw2\">list</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) [0, 1, 2, 3, 4]",
            "b) [1, 2, 3, 4, 5, 6, 7, 8]",
            "c) [1, 2, 3, 4, 5]",
            "d) [0, 1, 2, 3, 4, 5, 6, 7]"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above will not yield any output. This is because when we try to yield 9, and there is no next(g), the iteration stops. Hence there is no output."
    },
    {
        "id": 1036,
        "Question": "8. The error displayed in the following Python code is?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">import</span> <span class=\"kw3\">itertools</span>\nl1<span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span>\nl2<span class=\"sy0\">=</span><span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"sy0\">,</span> <span class=\"nu0\">5</span><span class=\"sy0\">,</span> <span class=\"nu0\">6</span><span class=\"br0\">]</span>\nl<span class=\"sy0\">=</span><span class=\"kw3\">itertools</span>.<span class=\"me1\">chain</span><span class=\"br0\">(</span>l1<span class=\"sy0\">,</span> l2<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>next<span class=\"br0\">(</span>l1<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘list’ object is not iterator",
            "b) ‘tuple’ object is not iterator",
            "c) ‘list’ object is iterator",
            "d) ‘tuple’ object is iterator"
        ],
        "Answer": "Answer: b\nExplanation: The code shown above results in the output:\n11\ntest\n12\nThis is because we have used next(g) twice. Had we not used next, there would be no output."
    },
    {
        "id": 1037,
        "Question": "Which of the following is not an exception handling keyword in Python?",
        "Options": [
            "a) try",
            "b) except",
            "c) accept",
            "d) finally"
        ],
        "Answer": "Answer: c\nExplanation: This code shown above will result in an error simply because ‘f’ is not defined. ‘try’ and ‘finally’ are keywords used in exception handling."
    },
    {
        "id": 1038,
        "Question": "10. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">g <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i <span class=\"kw1\">for</span> i <span class=\"kw1\">in</span> <span class=\"kw2\">range</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw2\">type</span><span class=\"br0\">(</span>g<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) class <’loop’>",
            "b) class <‘iteration’>",
            "c) class <’range’>",
            "d) class <’generator’>"
        ],
        "Answer": "Answer: a\nExplanation: The output of the code shown above is a list containing whole numbers in the range (5). Hence the output of this code is: [0, 1, 2, 3, 4]."
    },
    {
        "id": 1039,
        "Question": "1. What happens if the file is not found in the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">a<span class=\"sy0\">=</span><span class=\"kw2\">False</span>\n<span class=\"kw1\">while</span> <span class=\"kw1\">not</span> a:\n    <span class=\"kw1\">try</span>:\n        f_n <span class=\"sy0\">=</span> <span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter file name\"</span><span class=\"br0\">)</span>\n        i_f <span class=\"sy0\">=</span> <span class=\"kw2\">open</span><span class=\"br0\">(</span>f_n<span class=\"sy0\">,</span> <span class=\"st0\">'r'</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">except</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Input file not found\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) No error",
            "b) Assertion error",
            "c) Input output error",
            "d) Name error"
        ],
        "Answer": "Answer: a\nExplanation: In the code shown above, if the input file in not found, then the statement: “Input file not found” is printed on the screen. The user is then prompted to reenter the file name. Error is not thrown."
    },
    {
        "id": 1040,
        "Question": "2. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">lst <span class=\"sy0\">=</span> <span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"sy0\">,</span> <span class=\"nu0\">2</span><span class=\"sy0\">,</span> <span class=\"nu0\">3</span><span class=\"br0\">]</span>\nlst<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) NameError",
            "b) ValueError",
            "c) IndexError",
            "d) TypeError"
        ],
        "Answer": "Answer: c\nExplanation: The snippet of code shown above throws an index error. This is because the index of the list given in the code, that is, 3 is out of range. The maximum index of this list is 2."
    },
    {
        "id": 1041,
        "Question": "3. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">t<span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) IndexError",
            "b) NameError",
            "c) TypeError",
            "d) ValeError"
        ],
        "Answer": "Answer: b\nExplanation: The expression shown above results in a name error. This is because the name ‘t’ is not defined."
    },
    {
        "id": 1042,
        "Question": "4. What will be the output of the following Python code, if the time module has already been imported?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"nu0\">4</span> + <span class=\"st0\">'3'</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) NameError",
            "b) IndexError",
            "c) ValueError",
            "d) TypeError"
        ],
        "Answer": "Answer: d\nExplanation: The line of code shown above will result in a type error. This is because the operand ‘+’ is not supported when we combine the data types ‘int’ and ‘str’. Sine this is exactly what we have done in the code shown above, a type error is thrown."
    },
    {
        "id": 1043,
        "Question": "5. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"st0\">'65.43'</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ImportError",
            "b) ValueError",
            "c) TypeError",
            "d) NameError"
        ],
        "Answer": "Answer: b\nExplanation: The snippet of code shown above results in a value error. This is because there is an invalid literal for int() with base 10: ’65.43’."
    },
    {
        "id": 1044,
        "Question": "6. Compare the following two Python codes shown below and state the output if the input entered in each case is -6?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">CODE <span class=\"nu0\">1</span>\n<span class=\"kw1\">import</span> <span class=\"kw3\">math</span>\nnum<span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter a number of whose factorial you want to find\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">factorial</span><span class=\"br0\">(</span>num<span class=\"br0\">)</span><span class=\"br0\">)</span>\n&nbsp;\nCODE <span class=\"nu0\">2</span>\nnum<span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter a number of whose factorial you want to find\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"kw3\">math</span>.<span class=\"me1\">factorial</span><span class=\"br0\">(</span>num<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ValueError, NameError",
            "b) AttributeError, ValueError",
            "c) NameError, TypeError",
            "d) TypeError, ValueError"
        ],
        "Answer": "Answer: a\nExplanation: The first code results in a ValueError. This is because when we enter the input as -6, we are trying to find the factorial of a negative number, which is not possible. The second code results in a NameError. This is because we have not imported the math module. Hence the name ‘math’ is undefined."
    },
    {
        "id": 1045,
        "Question": "7. What will be the output of the following Python code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\"><span class=\"kw1\">def</span> getMonth<span class=\"br0\">(</span>m<span class=\"br0\">)</span>:\n    <span class=\"kw1\">if</span> m<span class=\"sy0\">&lt;</span><span class=\"nu0\">1</span> <span class=\"kw1\">or</span> m<span class=\"sy0\">&gt;</span><span class=\"nu0\">12</span>:\n        <span class=\"kw1\">raise</span> <span class=\"kw2\">ValueError</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid\"</span><span class=\"br0\">)</span>\n    <span class=\"kw1\">print</span><span class=\"br0\">(</span>m<span class=\"br0\">)</span>\ngetMonth<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ValueError",
            "b) Invalid",
            "c) 6",
            "d) ValueError(“Invalid”)"
        ],
        "Answer": "Answer: c\nExplanation: In the code shown above, since the value passed as an argument to the function is between 1 and 12 (both included), hence the output is the value itself, that is 6. If the value had been above 12 and less than 1, a ValueError would have been thrown."
    },
    {
        "id": 1046,
        "Question": "8. What will be the output of the following Python code if the input entered is 6?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">valid <span class=\"sy0\">=</span> <span class=\"kw2\">False</span>\n<span class=\"kw1\">while</span> <span class=\"kw1\">not</span> valid:\n    <span class=\"kw1\">try</span>:\n        n<span class=\"sy0\">=</span><span class=\"kw2\">int</span><span class=\"br0\">(</span><span class=\"kw2\">input</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter a number\"</span><span class=\"br0\">)</span><span class=\"br0\">)</span>\n        <span class=\"kw1\">while</span> n%<span class=\"nu0\">2</span><span class=\"sy0\">==</span><span class=\"nu0\">0</span>:\n            <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Bye\"</span><span class=\"br0\">)</span>\n        valid <span class=\"sy0\">=</span> <span class=\"kw2\">True</span>\n    <span class=\"kw1\">except</span> <span class=\"kw2\">ValueError</span>:\n        <span class=\"kw1\">print</span><span class=\"br0\">(</span><span class=\"st0\">\"Invalid\"</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Bye (printed once)",
            "b) No output",
            "c) Invalid (printed once)",
            "d) Bye (printed infinite number of times)"
        ],
        "Answer": "Answer: d\nExplanation: The code shown above results in the word “Bye” being printed infinite number of times. This is because an even number has been given as input. If an odd number had been given as input, then there would have been no output."
    },
    {
        "id": 1047,
        "Question": "9. Identify the type of error in the following Python codes?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"python\"><pre class=\"de1\">Print<span class=\"br0\">(</span>“Good Morning”<span class=\"br0\">)</span>\n<span class=\"kw1\">print</span><span class=\"br0\">(</span>“Good night<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Syntax, Syntax",
            "b) Semantic, Syntax",
            "c) Semantic, Semantic",
            "d) Syntax, Semantic"
        ],
        "Answer": "Answer: b\nExplanation: The first code shows an error detected during execution. This might occur occasionally. The second line of code represents a syntax error. When there is deviation from the rules of a language, a syntax error is thrown."
    },
    {
        "id": 1048,
        "Question": "Which of the following statements is true?",
        "Options": [
            "a) The standard exceptions are automatically imported into Python programs",
            "b) All raised standard exceptions must be handled in Python",
            "c) When there is a deviation from the rules of a programming language, a semantic error is thrown",
            "d) If any exception is thrown in try block, else block is executed"
        ],
        "Answer": "Answer: a\nExplanation: When any exception is thrown in try block, except block is executed. If exception in not thrown in try block, else block is executed. When there is a deviation from the rules of a programming language, a syntax error is thrown. The only true statement above is: The standard exceptions are automatically imported into Python programs."
    },
    {
        "id": 1049,
        "Question": "Which of the following is not a standard exception in Python?",
        "Options": [
            "a) NameError",
            "b) IOError",
            "c) AssignmentError",
            "d) ValueError"
        ],
        "Answer": "Answer: c\nExplanation: NameError, IOError and ValueError are standard exceptions in Python whereas Assignment error is not a standard exception in Python."
    },
    {
        "id": 1050,
        "Question": "An exception is ____________",
        "Options": [
            "a) an object",
            "b) a special function",
            "c) a standard module",
            "d) a module"
        ],
        "Answer": "Answer: a\nExplanation: Syntax errors are known as parsing errors. Syntax errors are raised when there is a deviation from the rules of a language. Hence the statement is true."
    },
    {
        "id": 1051,
        "Question": "_______________________ exceptions are raised as a result of an error in opening a particular file.",
        "Options": [
            "a) ValueError",
            "b) TypeError",
            "c) ImportError",
            "d) IOError"
        ],
        "Answer": "Answer: a\nExplanation: An exception is an object that is raised by a function signaling that an unexpected situation has occurred, that the function itself cannot handle."
    },
    {
        "id": 1052,
        "Question": "Which of the following blocks will be executed whether an exception is thrown or not?",
        "Options": [
            "a) except",
            "b) else",
            "c) finally",
            "d) assert"
        ],
        "Answer": "Answer: d\nExplanation: IOError exceptions are raised as a result of an error in opening or closing a particular file."
    }
]
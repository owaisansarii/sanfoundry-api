[
    {
        "id": 1,
        "Question": "How many Bytes are stored by ‘Long’ Data type in C# .net?",
        "Options": [
            "a) 8",
            "b) 4",
            "c) 2",
            "d) 1"
        ],
        "Answer": " Answer: a\nExplanation: ‘Long’ is the data type keyword used for storing data of unlimited length so by definition its size is always maximum i.e 8.\n"
    },
    {
        "id": 2,
        "Question": "Choose “.NET class” name from which data type “UInt” is derived?",
        "Options": [
            "a) System.Int16",
            "b) System.UInt32",
            "c) System.UInt64",
            "d) System.UInt16"
        ],
        "Answer": " Answer: b\nExplanation: By Definition class assigned to\n              i) System.Int16 = short.\n              ii) System.UInt32 = UInt.\n              iii) System.UInt64 = ULong.\n              iv) System.UInt16 = UShort.\n"
    },
    {
        "id": 3,
        "Question": "Correct Declaration of Values to variables ‘a’ and ‘b’?",
        "Options": [
            "a) int a = 32, b = 40.6;",
            "b) int a = 42; b = 40;",
            "c) int a = 32; int b = 40;",
            "d) int a = b = 42;"
        ],
        "Answer": " Answer: c\nExplanation: i) Although, declaration of ‘b’ and ‘a’ are correct but initialization of value to ‘b’ should be ‘int’ data type not float.\nii) Missing declaration type of ‘b’.\niii) correctly declared data types ‘a’ and ‘b’.\niv) ‘b’ can’t be assigned values before declaration.\n"
    },
    {
        "id": 4,
        "Question": "4. What will be the error in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">Static</span> <span class=\"kw4\">Void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">String</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> m <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> n <span class=\"sy0\">/</span> <span class=\"nu0\">5</span> <span class=\"sy0\">*</span> <span class=\"nu0\">100</span> <span class=\"sy0\">*</span> n <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>m <span class=\"sy0\">*</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ‘k’ should not be declared constant",
            "b) Expression assigned to ‘k’ should be constant in nature",
            "c) Expression (m * k) is invalid",
            "d) ‘m ‘ is declared  in invalid format"
        ],
        "Answer": " Answer: b\nExplanation:’k’ should be declared as const int k = 10/5 * 100*10 i.e only constant values should be assigned to a constant.\nOutput:\n\n\n        \n\nError 1 - The expression being assigned to 'k' must be constant.\n\n\n"
    },
    {
        "id": 5,
        "Question": "Arrange the following data type in order of increasing magnitude sbyte, short, long, int.",
        "Options": [
            "a) long < short < int < sbyte",
            "b) sbyte < short < int < long",
            "c) short < sbyte < int < long",
            "d) short < int < sbyte < long"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 6,
        "Question": "Which data type should be more preferred for storing a simple number like 35 to improve execution speed of a program?",
        "Options": [
            "a) sbyte",
            "b) short",
            "c) int",
            "d) long"
        ],
        "Answer": " Answer: a\nExplanation: Wider data type like int, long takes more time for manipulation of a program.\n"
    },
    {
        "id": 7,
        "Question": "",
        "Options": [
            "a) ii",
            "b) Both i, ii",
            "c) i",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Convenient for every data type so mostly preferred.\n"
    },
    {
        "id": 8,
        "Question": "Correct way to assign values to variable ‘c’ when int a=12, float b=3.5, int c;",
        "Options": [
            "a) c = a + b;",
            "b) c = a + int(float(b));",
            "c) c = a + convert.ToInt32(b);",
            "d) c = int(a + b);"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 9,
        "Question": "Default Type of number without decimal is?",
        "Options": [
            "a) Long Int",
            "b) Unsigned Long",
            "c) Int",
            "d) Unsigned Int"
        ],
        "Answer": " Answer: b\nExplanation:\nOutput –\n\n\n         1) 5.\n         2) 6.\n\n\n"
    },
    {
        "id": 10,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> a <span class=\"sy0\">=</span> 10<span class=\"sy0\">.</span>553f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span> b <span class=\"sy0\">=</span> 12L<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span>  c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     c <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 23.453",
            "b) 22",
            "c) 23",
            "d) 22.453"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 11,
        "Question": "Select a convenient declaration and initialization of a floating point number:",
        "Options": [
            "a) float somevariable = 12.502D",
            "b) float somevariable = (Double) 12.502D",
            "c) float somevariable = (float) 12.502D",
            "d) float somevariable = (Decimal)12.502D"
        ],
        "Answer": " Answer: c\nExplanation: We cannot implicitly convert a “double” number directly to any other data type. Here, its float we have to add the required data type to number as :\n\n\n\t\n\nfloat somevariable = (float)12.502D;\n or\nDouble somevariable = (Double)12.502D;\n\n\n"
    },
    {
        "id": 12,
        "Question": "Number of digits upto which precision value of float data type is valid?",
        "Options": [
            "a) Upto 6 digit",
            "b) Upto 8 digit",
            "c) Upto 9 digit",
            "d) Upto 7 digit"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 13,
        "Question": "Valid Size of float data type is?",
        "Options": [
            "a) 10 Bytes",
            "b) 6  Bytes",
            "c) 4  Bytes",
            "d) 8  Bytes"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 14,
        "Options": [
            "4. Correct way to define a value 6.28 in a variable ‘pi’ where value cannot be modified?",
            "a) #define pi 6.28F",
            "b) pi = 6.28F",
            "c) const float pi = 6.28F",
            "d)"
        ],
        "Answer": " Answer: c\nExplanation: Const is a reserve keyword whenever they are declared with any variables. The value stored in that variable always remain fixed. Any modification done to change value of that variable results in error. Hence, options #define pi 6.28F, pi = 6.28F and const float pi, pi = 6.28F are rejected because the value is not declared fixed. Now,  for value only option ‘const float pi = 6.28F’ is correct because for value while declaring a constant variable we need to provide a constant value too as provided in const float pi = 6.28F. So, option const float pi = 6.28F is correct way of declaration of constant variable.\n"
    },
    {
        "id": 15,
        "Question": "Minimum and Maximum range of values supported by ‘float’ data type are?",
        "Options": [
            "a) 1.5 * 10-40 to 3.4 * 1038",
            "b) 1.5 * 10-45 to 3.4 * 1030",
            "c) 1.5 * 10-45 to 3.4 * 1038",
            "d) 1.5 * 10-45 to 3.4 * 1037"
        ],
        "Answer": " Answer: c\nExplanation: By Definition.\n"
    },
    {
        "id": 16,
        "Question": "d)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> 12<span class=\"sy0\">.</span>502f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">float</span>  b <span class=\"sy0\">=</span> 12<span class=\"sy0\">.</span>80f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">float</span>  c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   c <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) i",
            "b) i, iii",
            "c) i, ii, iii",
            "d) ii, iii"
        ],
        "Answer": " Answer: c\nExplanation: Expression\n\n\nc = (float) a + b.\n\n\n"
    },
    {
        "id": 17,
        "Question": "8. Why does a float variable stop incrementing  at number ‘16777216’ in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">float</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"kw1\">true</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">&gt;</span> <span class=\"nu0\">16777216</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Sign and Exponent for ‘16777217’ is same as for ‘16777216’",
            "b) Mantissa is different for ‘16777216’ and ‘16777217’",
            "c) Sign and Exponent for ‘16777217’ is different from ‘16777216’",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: By Definition.\n"
    },
    {
        "id": 18,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">float</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">.</span> 4f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">short</span> z <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span> x <span class=\"sy0\">+</span> y <span class=\"sy0\">*</span> z <span class=\"sy0\">-</span> <span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">short</span><span class=\"br0\">)</span> y<span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.4000004",
            "b) 0.4000023",
            "c) 0.0400021",
            "d) 0.4000001"
        ],
        "Answer": " Answer: b\nExplanation: 16777216 is exactly 224,  and would be represented as 32-bit float like so:\nsign = 0 (positive number)\nexponent = 24 (stored as 24 + 127 = 151 =  10010111)\nmantissa = . 0\nAs 32 bits floating-point representation: 0 10010111 00000000000000000000000\nTherefore: Value = (+ 1) * 2 ^ 24 * (1. 0  + . 0) = 2 ^ 24 = 16777216\nNow let’s look at the number 16777217,  or exactly 224 + 1:\nsign and exponent are the same.\nMantissa should have to be exactly 2-24 so that (+ 1) * 2 ^ 24 * (1. 0 + 2 ^-24) = 2 ^ 24 + 1 = 16777217 and here lies the  actual problem. The mantissa cannot have the value 2-24 because it only has 23 bits,  so the number 16777217 just cannot be represented with the accuracy of 32-bit floating points numbers.\n"
    },
    {
        "id": 19,
        "Question": "A float occupies 4 bytes. If the hexadecimal equivalent of these 4 bytes are A,  B,  C and D, then when this float is stored in  memory in which of the following order do these bytes gets stored?",
        "Options": [
            "a) ABCD",
            "b) DCBA",
            "c) 0 * ABCD",
            "d) Depends on big endian or little endian architecture"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n\n0.4000001\n\n\n "
    },
    {
        "id": 20,
        "Question": "The Default value of Boolean Data Type is?",
        "Options": [
            "a)  0",
            "b)  True",
            "c)  False",
            "d)  1"
        ],
        "Answer": " Answer: d\nExplanation: “Little Endian” means that the lower-order byte of the number is stored in memory at the lowest address,  and the high order byte at the highest address. For example, a 4 byte Integer\nABCD will be arranged in memory as follows:\nBase Address + 0 Byte 0.\nBase Address + 1 Byte 1.\nBase Address + 2 Byte 2.\nBase Address + 3 Byte 3.\nIntel processors (those used in PC’s) use “Little Endian” byte order.\n“Big Endian” means that the high-order byte of the number is stored in memory at the lowest address,  and the low-order byte at the highest address. The same 4 byte integer would be stored as:\nBase Address + 0 Byte 3.\nBase Address + 1 Byte 2.\nBase Address + 2 Byte 1.\nBase Address + 3 Byte 0.\n"
    },
    {
        "id": 21,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">double</span> ZERO <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"RESULT OF DIVISION BY ZERO IS :{0}\"</span>,  <span class=\"br0\">(</span><span class=\"nu0\">0</span> <span class=\"sy0\">/</span> ZERO<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) exception argument is thrown",
            "c) NaN",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: By Definition.\n"
    },
    {
        "id": 22,
        "Question": "Which of the following format specifiers is used to print hexadecimal values and return value of output as Octal equivalent in C#?",
        "Options": [
            "a) %hx for small case letters and %HX for capital letters",
            "b) %x for small case letters and %X for capital letters",
            "c) No ease of doing it. C# don’t provides specifier like %x or %O to be used with ReadLine() OR WriteLine(). We have to write our own function",
            "d) %Ox for small case letters and %OX for capital letters"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 23,
        "Question": "What is the Size of ‘Char’ datatype?",
        "Options": [
            "a) 8 bit",
            "b) 12 bit",
            "c) 16 bit",
            "d) 20 bit"
        ],
        "Answer": " Answer: c\nExplanation: Size of ‘Char’ datatype is 16 bit.\n"
    },
    {
        "id": 24,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> c <span class=\"sy0\">=</span> <span class=\"st0\">'g'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"I am a human being\"</span> <span class=\"sy0\">+</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I am a human bein c",
            "b) I am a human being",
            "c) I am a human being c",
            "d) I am a human bein"
        ],
        "Answer": " Answer: b\nExplanation: ‘g’is stored in character variable ‘c’ which later on is converted to string using method Convert.Tostring() and hence appended at last of the string in s1.\nOutput:\n\n\n\t\n\n        \n\nI am a human being.\n\n\n"
    },
    {
        "id": 25,
        "Question": "3. Given is the code of days(example:”MTWTFSS”) which I need to split and hence create a list of days of week in strings( example:”Monday”, “Tuesday”, “Wednesday”, “Thursday”, “Friday”, “Saturday”, “Sunday”). A set of code is given for this purpose but there is the error occurring in that set of code related to the conversion of char to strings. Hence, Select a C# code to solve the given error.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">var</span> days <span class=\"sy0\">=</span> <span class=\"st0\">\"MTWTFSS\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">var</span> daysArray <span class=\"sy0\">=</span> days<span class=\"sy0\">.</span><span class=\"me1\">ToCharArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">Cast</span><span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw1\">var</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> daysArray<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"M\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Monday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"T\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Tuesday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"W\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Wednesday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"R\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Thursday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"F\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Friday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"S\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Saturday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">case</span> <span class=\"st0\">\"U\"</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">            daysArray<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Sunday\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    daysArray<span class=\"br0\">[</span>daysArray<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"and \"</span> <span class=\"sy0\">+</span> daysArray<span class=\"br0\">[</span>daysArray<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"kw1\">Join</span><span class=\"br0\">(</span><span class=\"st0\">\", \"</span>, daysArray<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) var daysArray = new List<String>();",
            "b) var daysArray = days.Select(c =>dayMapping[c]).ToArray();",
            "c) var daysArray = days.ToCharArray().Select(c =>c.Tostring()).ToArray();",
            "d) var daysArray = days.Select<String>();"
        ],
        "Answer": " Answer: c\nExplanation: The problem arises due to cast conversion from “char” to “string” as one is not inherited from others. So, quick way of conversion is just using Char.ToString().\n"
    },
    {
        "id": 26,
        "Question": "Which is the String method used to compare two strings with each other?",
        "Options": [
            "a) Compare To()",
            "b) Compare()",
            "c) Copy()",
            "d) ConCat()"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n        Monday\n        Tuesday\n        Wednesday\n        Friday\n        Saturday\n\n\n"
    },
    {
        "id": 27,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Delhi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Insert</span> <span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"st0\">\"Jaipur\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) DelhJaipuri",
            "b) Delhi Jaipur",
            "c) Delhi",
            "d) DelhiJaipur"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 28,
        "Question": "9. What will be the output of the following C# string? (Enter a String : BOMBAY).<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> Str,  Revstr <span class=\"sy0\">=</span> <span class=\"st0\">\" \"</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> Length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter A String : \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Str <span class=\"sy0\">=</span> Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Length <span class=\"sy0\">=</span> Str<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>Length <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Revstr <span class=\"sy0\">=</span> Revstr <span class=\"sy0\">+</span> Str<span class=\"br0\">[</span>Length<span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Length <span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Reverse  String  Is  {0}\"</span>,  Revstr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) BOMBA",
            "b) YABMOB",
            "c) BOMAYB",
            "d) YABMO"
        ],
        "Answer": " Answer: b\nExplanation: Compare() used to compare two strings by taking the length of strings in considerations.\n"
    },
    {
        "id": 29,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\" I AM BEST \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">string</span> s2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">substring</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) AM BEST",
            "b) I AM BES",
            "c) BEST",
            "d) I AM"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 30,
        "Question": "Correct statement about strings are?",
        "Options": [
            "a) a string is created on the stack",
            "b) a string is primitive in nature",
            "c) a string created on heap",
            "d) created of string on a stack or on a heap depends on the length of the string"
        ],
        "Answer": " Answer: b\nExplanation: Explain the concept of reversal of string without using any string inbuilt method but using while loop conditions.\nOutput:\n\n\nYABMOB\n\n\n"
    },
    {
        "id": 31,
        "Question": "Verbatim string literal is better used for?",
        "Options": [
            "a) Convenience and better readability of strings when string text consist of backlash characters",
            "b) Used to initialize multi-line strings",
            "c) To embed a quotation mark by using double quotation marks inside a verbatim string",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\npublic static string ConvertStringToHex(String input, \n                                        System.Text.Encoding encoding)\n{\n {\n   Byte[] stringBytes = encoding.GetBytes(input);\n   StringBuilder sbBytes = new StringBuilder(stringBytes.Length * 2);\n   foreach (byte b in stringBytes)\n  {\n   sbBytes.AppendFormat(\"{0:X2}\",  b);\n }\nConsole.WriteLine(sbBytes.ToString());//sbBytes.ToString());\nreturn sbBytes.ToString();\n}\n\n\n"
    },
    {
        "id": 32,
        "Question": "Why strings are of reference type in C#.NET?",
        "Options": [
            "a) To create string on stack",
            "b) To reduce the size of string",
            "c) To overcome problem of stackoverflow",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\npublic static string ConvertHexToString(String hexInput,  \n                                        System.Text.Encoding encoding)\n{\n    int numberChars = hexInput.Length;\n    byte[] bytes = new byte[numberChars / 2];\n    for (int i = 0; i &lt; numberChars; i += 2)\n    {\n        bytes[i / 2] = Convert.ToByte(hexInput.Substring(i,  2),  16);\n    }\n    return encoding.GetString(bytes);\n}\n\n\n"
    },
    {
        "id": 33,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c <span class=\"sy0\">=</span> <span class=\"sy0\">++</span> a <span class=\"sy0\">+</span> b <span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11, 10",
            "b) 16, 10",
            "c) 16, 11",
            "d) 15, 11"
        ],
        "Answer": " Answer: c\nExplanation: c = 6 + 10 = 16 and b = 11 as we know ++operator increments and then executes similarly operator++ executes and then increments.\nOutput:\n\n\n\t\n\n        \n\n16, 11\n\n\n"
    },
    {
        "id": 34,
        "Question": "Storage location used by computer memory to store data for usage by an application is?",
        "Options": [
            "a) Pointers",
            "b) Constants",
            "c) Variable",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: ‘Variables’ are essential locations in memory of computer that are reserved for storing data used by an application. Each variable is given a name by programmer and hence assigned a value. The name assigned to variable then used in C# code to access value assigned to variable.\n"
    },
    {
        "id": 35,
        "Question": "DIFFERENCE BETWEEN KEYWORDS ‘VAR’ AND ‘DYNAMIC’?",
        "Options": [
            "a) ‘Var’ is introduced in C# (3.0) and ‘Dynamic’ is introduced in C# (4.0)",
            "b) ‘Var’ is a type of variable where declaration is done at compile time by compiler while ‘Dynamic’ declaration is achieved at runtime by compiler",
            "c) For ‘Var’ Error is caught at compile time and for ‘Dynamic’ Error is caught at runtime",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 36,
        "Question": "4. The following C# codes are?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"me1\">Myclass</span> <span class=\"kw4\">class</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Myclass class2 <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True for (1);False for (2)",
            "b) True for (2);False for (1)",
            "c) Both (1) and (2) are equivalents",
            "d) Both (1) and (2) are not equivalents"
        ],
        "Answer": " Answer: c\nExplanation: When we create a type in ‘C#’, It automatically gets filled with padded zeros. For the case of class (reference types) this equates to a null pointer. Hence, for code 1) Both variable values are equivalent to each other.Similarly, for  code 2) i.e for value type (including int/float/double etc.), the type is passed with zeros. Hence, they are equivalent.\n"
    },
    {
        "id": 37,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"nu0\">2</span><span class=\"sy0\">.</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) b = 10, a = 5",
            "b) b = 15, a = 5",
            "c) a = 15, b = 10",
            "d) a = 10, b = 10"
        ],
        "Answer": " Answer: c\nExplanation: b is assigned 10 and after that its value is added with 5 and then saved in a, so a will be 15.\n"
    },
    {
        "id": 38,
        "Question": "6. What will be the output of the following C# code conversion?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">int</span> a,b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  a <span class=\"sy0\">=</span> <span class=\"br0\">(</span>b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1, 97",
            "b) 65, 97",
            "c) 65, 97",
            "d) 97, 1"
        ],
        "Answer": " Answer: c\nExplanation: ASCII value of character ‘a’  is 65 and ASCII value of string “a” is 97.\nOutput:\n\n\n65, 97\n\n\n"
    },
    {
        "id": 39,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> a <span class=\"sy0\">=</span> <span class=\"st0\">'A'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> b <span class=\"sy0\">=</span> <span class=\"st0\">\"a\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">Tochar</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Dr.Gupta",
            "b) Good Morning",
            "c) Good Morning Dr.Gupta",
            "d) Good Morning name"
        ],
        "Answer": " Answer: c\nExplanation: How to initialize a string variable and concatenate string using ‘+’ operator.\nOutput:\n\n\n Good Morning Dr.Gupta.\n\n\n"
    },
    {
        "id": 40,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">String</span> name <span class=\"sy0\">=</span> <span class=\"st0\">\"Dr.Gupta\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Good Morning\"</span> <span class=\"sy0\">+</span> name<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -7, 10",
            "b) -5, 11",
            "c) -6, 11",
            "d) 15, 11"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n-6, 11\n\n\n"
    },
    {
        "id": 41,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c <span class=\"sy0\">=</span> a<span class=\"sy0\">--</span> <span class=\"sy0\">-</span> <span class=\"sy0\">++</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 600, 720",
            "b) Compile time error",
            "c) 25, 30",
            "d) 5, 6"
        ],
        "Answer": " Answer: b\nExplanation: The left hand side of an assignment must be a variable, property or indexer i.e for both ‘a’ and ‘b’\n"
    },
    {
        "id": 42,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> b <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) He is playing in a grou",
            "b) .ground  a in playing is He",
            "c) .dnuorg a ni gniyalp si eH",
            "d) He  playing a"
        ],
        "Answer": " Answer: c\nExplanation: Reversal of array of strings character by character.\nOutput:\n\n\n.dnuorg a ni gniyalp si eH\n\n\n"
    },
    {
        "id": 43,
        "Question": "1. Choose the correct type of variable scope for the following C# defined variables.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> ABC</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> m<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">void</span> fun <span class=\"br0\">(</span><span class=\"kw4\">int</span> x , <span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> y, <span class=\"kw1\">out</span> <span class=\"kw4\">int</span> z, <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) m = static variable, n = local variable, x = output parameter, y = reference parameter, j = instance variable, z = output parameter, a[0] = array element",
            "b) m = static variable, n = instance variable, x = value parameter, y = reference parameter, j = local variable, z = output parameter , a[0] = array element",
            "c) m = static variable, n = instance variable, x = reference parameter, y = value parameter, j = local variable, z = output parameter, a[0] = array element",
            "d) m = local variable, n = instance variable, x = reference parameter, y = value parameter, j = static variable, z = output parameter, a[0] = array element"
        ],
        "Answer": " Answer: b\nExplanation: By definition of scope of variables.\n"
    },
    {
        "id": 44,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span>  i <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 1, 2, 3, 4, 5",
            "b) 0, 1, 2, 3",
            "c) 0, 1, 2, 3, 4",
            "d) 0, 0, 0, 0, 0"
        ],
        "Answer": " Answer: c\nExplanation: Scope  of ‘i’ is alive within block in which it is declared. So, change in value of i within for loop is reserved until condition of for loop is executing.\nOutput:\n\n\n        \n\n0, 1, 2, 3, 4\n\n\n"
    },
    {
        "id": 45,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 1, 2, 3, 4, 5",
            "b) 0, 1, 2, 3, 4",
            "c) 5",
            "d) 4"
        ],
        "Answer": " Answer: c\nExplanation: Since final console statement is outside forloop. So, result will be printed in final values only.\nOutput:\n\n\n\t\n\n 5\n\n\n"
    },
    {
        "id": 46,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             j <span class=\"sy0\">+=</span> i<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 1, 2, 3, 4, 5, 6",
            "b) 0, 1, 2, 3, 4, 5",
            "c) 0, 1, 2, 3, 4",
            "d) 0, 1, 2, 3"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n0, 1, 2, 3, 4, 5\n\n\n"
    },
    {
        "id": 47,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          j <span class=\"sy0\">+=</span> i<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> i <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 1, 6, 18, 40",
            "b) 0, 1, 5, 20, 30",
            "c) Compile time error",
            "d) 0, 1, 2, 3, 4, 5"
        ],
        "Answer": " Answer: c\nExplanation: The scope of j is local in nature it cannot be extended outside the block in which it is defined.\n"
    },
    {
        "id": 48,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span>a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> a <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> a<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">200</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a <span class=\"sy0\">*</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5, 10, 15, 20",
            "b) 0, 5, 10, 20",
            "c) Compile time error",
            "d) 0, 1, 2, 3, 4"
        ],
        "Answer": " Answer: a\nExplanation: Scope of variable is the area or region within which variable is declared and hence initialized values of different kind. Based, on which operations of different kinds are carried out on that variable declared within that scope. Its value is preserved until and unless scope of that block ({ }) is not expired because as soon as scope gets over. Hence, variable value gets expired. Hence, it’s inaccessible after it.\n "
    },
    {
        "id": 49,
        "Question": "Syntax for declaration and initialization of data variable is?",
        "Options": [
            "a) <data type><var_name> = <Value>;",
            "b) <data type><var_name>;",
            "c) <var_name><data type>;",
            "d) <var_name> = <value>;"
        ],
        "Answer": " Answer: c\nExplanation: The compiler cannot interpret between variable ‘i’ declared as an instance variable  outside for loop block and variable ‘i’ declared as a local variable inside the for loop context. The instance variable ‘id’ defined before the for loop  is still in scope inside for loop and hence goes out of scope only when main() is finished executing. The local variable ‘i’ declared inside for loop had scope limited within blocks({ }) in which it is declared and hence creates name conflict with instance variable ‘i’ so, compiler is unable to distinguish between both. When instance variable ‘i’ is removed away. The program runs accurately producing the output as “0, 200, 400, 600, 800”, this explains the concept of scope deceleration.\n "
    },
    {
        "id": 50,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i, j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">=</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 15, 15",
            "b) 10, 5",
            "c) 15, 5",
            "d) 10, 15"
        ],
        "Answer": " Answer: a\nExplanation: By definition.\n "
    },
    {
        "id": 51,
        "Question": "Choose effective differences between ‘Boxing’ and ‘Unboxing’.",
        "Options": [
            "a) ‘Boxing’ is the process of converting a value type to the reference type and ‘Unboxing’ is the process of converting reference to value type",
            "b) ‘Boxing’ is the process of converting a reference type to value type  and ‘Unboxing’ is the process of converting value type to reference type",
            "c) In ‘Boxing’ we need explicit conversion and in ‘Unboxing’ we need implicit conversion",
            "d) Both ‘Boxing’ and ‘Unboxing’ we need implicit conversion"
        ],
        "Answer": " Answer: c\nExplanation: j=’5′ will return value of 5 stored it in variable ‘j’ but value assigned to variable ‘i’ will be first value of ‘j’ and hence increment a value of  ’10’ in that value of ‘j’ i. e 15.\nOutput:\n\n\n15, 5\n\n\n"
    },
    {
        "id": 52,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">123</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">object</span> o <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        i <span class=\"sy0\">=</span> <span class=\"nu0\">456</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw5\">System</span><span class=\"sy0\">.</span> <span class=\"me1\">Console</span><span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The value-type value = {0}\"</span>, i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw5\">System</span><span class=\"sy0\">.</span> <span class=\"me1\">Console</span><span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The object-type value = {0}\"</span>, o<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 123, 123",
            "b) 456, 123",
            "c) 456, 456",
            "d) 123, 456"
        ],
        "Answer": " Answer: a\nExplanation: By definition.\n "
    },
    {
        "id": 53,
        "Question": "13. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">546</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">object</span> o <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> o<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      o <span class=\"sy0\">=</span> <span class=\"nu0\">70</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw5\">System</span><span class=\"sy0\">.</span> <span class=\"me1\">Console</span><span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The value-type value = {0}\"</span>, n<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw5\">System</span><span class=\"sy0\">.</span> <span class=\"me1\">Console</span><span class=\"sy0\">.</span> <span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The object-type value = {0}\"</span>, o<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span> <span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 546, 0",
            "b) 546, 546",
            "c) 546, 70",
            "d) 70, 546"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n "
    },
    {
        "id": 54,
        "Question": "What is the need for ‘Conversion of data type’ in C#?",
        "Options": [
            "a) To store a value of one data type into a variable of another data type",
            "b) To get desired data",
            "c) To prevent situations of runtime error during change or conversion of data type",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: By Definition.\n"
    },
    {
        "id": 55,
        "Question": "Types of ‘Data Conversion’ in C#?",
        "Options": [
            "a) Implicit Conversion",
            "b) Explicit Conversion",
            "c) Implicit Conversion and Explicit Conversion",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By Definition.\n"
    },
    {
        "id": 56,
        "Question": "‘Implicit Conversion’ follows the order of conversion as per compatibility of data type as:",
        "Options": [
            "a) float < char < int",
            "b) char < int < float",
            "c) int < char < float",
            "d) float < int < char"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 57,
        "Question": "4. For the following C# code select the relevant solution for conversion of data type.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> num1 <span class=\"sy0\">=</span> <span class=\"nu0\">20000</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> num2 <span class=\"sy0\">=</span> <span class=\"nu0\">50000</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span> total<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     total <span class=\"sy0\">=</span> num1 <span class=\"sy0\">+</span> num2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Total is : \"</span> <span class=\"sy0\">+</span>total<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compiler will generate runtime error",
            "b) Conversion is implicit type, no error generation",
            "c) Specifying data type for conversion externally will solve the problem",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Since,conversion of data type is implicit type as ‘int’ is a subset of ‘longtype’ hence no need to explicitly convert data from one type to another.Compiler will automatically do conversion.\nOutput: Total is:\n\n\n        \n\n70000.\n\n\n"
    },
    {
        "id": 58,
        "Question": "The subset of ‘int’ data type is __________",
        "Options": [
            "a) long, ulong, ushort",
            "b) long, ulong, uint",
            "c) long, float, double",
            "d) long, float, ushort"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 59,
        "Question": "Type of Conversion in which compiler is unable to convert the data type implicitly is?",
        "Options": [
            "a) ushort to long",
            "b) int to uint",
            "c) ushort to long",
            "d) byte to decimal"
        ],
        "Answer": " Answer: b\nExplanation: ‘int’ is 32 bit signed integer whereas ‘uint’ is 32 bit unsigned integer. Range of int is larger than uint. So, the compiler cannot implicitly convert from larger data type to smaller data type.\n"
    },
    {
        "id": 60,
        "Question": "Disadvantages of Explicit Conversion are?",
        "Options": [
            "a) Makes program memory heavier",
            "b) Results in loss of data",
            "c) Potentially Unsafe",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 61,
        "Question": "8. For the given set of C# code, is conversion possible?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">76</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     b <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span>a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compiler will generate runtime error",
            "b) Conversion is explicit type",
            "c) Compiler will urge for conversion from ‘integer’ to ‘character’ data type",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Since, given conversion is of explicit type as one data type is in integer and other is in ‘char’. Compiler is needed to make a clear distinction between both type of data types and hence, explicitly one need to specify data type as compiler is unable to make automatic conversion.\n Output :\n\n\n L.\n\n\n "
    },
    {
        "id": 62,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">float</span> sum<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    sum <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>0F<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sum <span class=\"sy0\">=</span> sum <span class=\"sy0\">+</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span><span class=\"br0\">(</span><span class=\"kw4\">float</span><span class=\"br0\">)</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"sum =\"</span> <span class=\"sy0\">+</span>sum<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2.000",
            "b) 2.910",
            "c) 2.928",
            "d) 3.000"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n sum = 2.928698.\n\n\n "
    },
    {
        "id": 63,
        "Question": "10. Which of the conversions are valid for the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">22</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">44</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">double</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">1.406</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     b <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     c <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     b <span class=\"sy0\">=</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) c = a, b = c",
            "b) a = c, b = a",
            "c) b = a, c = a",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Conversion of data type from ‘int’ to ‘double’ is implicit in nature for ‘c = a’ as int is subset of double but same is not applicable for ‘b = c’ as ‘c’ had wider scope of data range then ‘b’ so explicit conversion is needed.\n Output :\n\n\n Error 1: Can not implicitly convert type 'long' to 'int'. An explicit conversion exists (are you missing a cast?).\t\n Error 2: Cannot implicitly convert type 'double' to 'long'. An explicit conversion exists (are you missing a cast?).\t\n \n Correct solution :\n\n\n static void Main(string[] args)\n {\n     int a = 22;\n     long b = 44;\n     double c = 1.406;\n     b = a;\n     c = a;\n     a = (int)b;\n     b = (long)c;\n }\n\n\n"
    },
    {
        "id": 64,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> a <span class=\"sy0\">=</span> 16<span class=\"sy0\">.</span>4f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     c <span class=\"sy0\">=</span>  a <span class=\"sy0\">*</span> <span class=\"br0\">(</span> b <span class=\"sy0\">+</span> a<span class=\"br0\">)</span> <span class=\"sy0\">/</span> <span class=\"br0\">(</span>a <span class=\"sy0\">-</span> b<span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"result is :\"</span> <span class=\"sy0\">+</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 106",
            "b) 104.789",
            "c) 105.8546",
            "d) 103.45"
        ],
        "Answer": " Answer: c\nExplanation: The first expression evaluated is ‘b+a’ as both are combined. Next the expression is multiplied by operand ‘a’ i.e a (b+a) the whole result of numerator is combined and divided by denominator expression (a – b).\nOutput:\n\n\t\n\n\n result is : 105.8546.\n\n\n"
    },
    {
        "id": 65,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a, b, c, x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      a <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      b <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      c <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      x <span class=\"sy0\">=</span> a <span class=\"sy0\">-</span> b <span class=\"sy0\">/</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> c <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 92",
            "b) 89",
            "c) 90",
            "d) 88"
        ],
        "Answer": " Answer: c\nExplanation: The basic evaluation process includes two left to right passes through the expression. During first pass, the high priority operators are applied and during second pass, the low priority operators are applied as they are encountered.\n\n        \n\n\nFirst pass :\n       step 1 : x = 90 - 15 / 3 + 3 * 2 - 1 (15 / 3 evaluated)\n       step 2 : x = 90 - 5 + 3 * 2 - 1\n       step 3 : x = 90 - 5 + 3 * 2 -1 (3 * 2 is evaluated)\n       step 4 : x = 90 - 5 + 6 - 1\n Second pass :\n       step 5 : x = 85 + 6 - 1 (90 - 5 is evaluated)\n       step 6 : x = 91 - 1(85 + 6 is evaluated)\n       step 7 : x = 90(91 - 1 is evaluated)\nOutput : 90.\n\n\n"
    },
    {
        "id": 66,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a, b, c, x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      a <span class=\"sy0\">=</span> <span class=\"nu0\">80</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      b <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      c <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      x <span class=\"sy0\">=</span> a <span class=\"sy0\">-</span> b <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">*</span> c<span class=\"br0\">)</span> <span class=\"sy0\">*</span> <span class=\"br0\">(</span> a <span class=\"sy0\">+</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 78",
            "b) -84",
            "c) 80",
            "d) 98"
        ],
        "Answer": " Answer: b\nExplanation: Whenever the parentheses are used, the expressions within parentheses assumes higher priority. If Two or more sets of parentheses appear one after another as shown above, the expression contained on the left side is evaluated first and right hand side last.\n\n\t\n\n\n  First pass:\n      Step 1: 80 - 15/(3*2)*(80 + 2)\n      Step 2: 80 - 15/6*82 ((3 * 2) evaluated first and (80 + 2) evaluated later)\n  Second pass:\n      Step 3: 80 - 2*82\n      Step 4: 80 - 164.\n  Third pass:\n     Step 5 : -84. (80 - 164 is evaluated)\nOutput : -84 .\n\n\n"
    },
    {
        "id": 67,
        "Question": "Correct order of priorities are:",
        "Options": [
            "a) ‘/’ > ‘%’  > ‘*’  > ‘+’",
            "b) ‘/’  > ‘*’  > ‘%’  > ‘+’",
            "c) ‘*’  > ‘/’  > ‘%’  > ‘+’",
            "d) ‘%’  > ‘*’  > ‘/’  > ‘+’"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 68,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i, j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        k <span class=\"sy0\">=</span> j<span class=\"sy0\">++</span> <span class=\"sy0\">-</span> <span class=\"sy0\">++</span>j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>k <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -4 -3 -2",
            "b) -6 -4 -1",
            "c) -2 -2 -2",
            "d) -4 -4 -4"
        ],
        "Answer": " Answer: c\nExplanation:\n\n\n Here i = 0, j = 1.\n                     k = 1 - 3 ( j++ = 2 and ++j = 3)\n                     k = -2.\n                     i = 1 , j = 3.\n                     k = 3 - 5 ( j++ = 4 and ++j = 5)\n                     k = -2.\n                     i = 2 , j = 5.\n                     k = 5 - 7 (j++ = 6  and ++j = 7)\n                     k = -2.\nOutput : -2 , -2 , -2.\n\n\n"
    },
    {
        "id": 69,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> b<span class=\"sy0\">=</span> <span class=\"nu0\">11</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> e <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> l<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> v <span class=\"sy0\">=</span> <span class=\"nu0\">109</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> z,t,p<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      z <span class=\"sy0\">=</span> b <span class=\"sy0\">*</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      t <span class=\"sy0\">=</span> b <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      p <span class=\"sy0\">=</span> b <span class=\"sy0\">*</span> r <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      l <span class=\"sy0\">=</span> <span class=\"br0\">(</span>b <span class=\"sy0\">*</span> c<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>r <span class=\"sy0\">*</span> e<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      k <span class=\"sy0\">=</span> v <span class=\"sy0\">-</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>p<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span>   Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>v<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>                </pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) My Name",
            "b) My nAme",
            "c) My name",
            "d) Myname"
        ],
        "Answer": " Answer: c\nExplanation: Solving the expression l = (b * c) + (r * e) + 10. While from left to right the parentheses are given preference first.\n\n\n Step 1 : b * c is evaluated first inside first parentheses.\n Step 2 : r * e is evaluated second on right side of first addition symbol.\n Step 3 : After evaluating both parentheses 10 is added to value of both.\nOutput : My name.\n\n\n"
    },
    {
        "id": 70,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">Output<span class=\"sy0\">:</span>  A\n         BC\n         DEF\n         GHIJ\n         KLMNO</pre></div></div></div></div></div></div>",
        "Options": [
            "a) They have same value",
            "b) Parentheses changes values",
            "c) Since both have equal values, no conclusion",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Solving the expression for value of ‘z’as 65. With, each passage of loop value number of ‘z’ increases for each row as\n\n\n                           Row 1: A\n                           Row 2: AA \n                                  -\n                                  -\n                           Row 5: AAAAA\n Output : A\n          AA\n          AAA\n          AAAA\n          AAAAA\n\n\n "
    },
    {
        "id": 71,
        "Question": "The correct way of incrementing the operators are:",
        "Options": [
            "a) ++ a ++",
            "b) b ++ 1",
            "c) c += 1",
            "d) d =+ 1"
        ],
        "Answer": " Answer: c\nExplanation: Solving expression ‘z’ value is 65. Before going inside first loop\n Step 1: c = 1, n = 5\n         k = 1, k <= 1. (as c = 1)\n         z = 65 converted to ‘A’ as ascii value of ‘A’ is 65.\n         z++ increment for next loop condition by ‘1’as 66.\n         Row 1: A\n Step 2: c = 2, n = 5\n         k = 2, k <= 2. (as c = 2)\n         z = 66 from step 1 converted value of 66 is ‘B’. Since, k < =2\n         loop will again loop to second value after 66 which is 67 as z is\n         incremented from 66 to +1 as ’67’. So, converting ascii value of 67 to character as ‘C’.\n         Row 2: B C\nSimilarly,\n Step 3:\n         Row 3: D E F\n Step 4:\n        Row 4: G H I J\n Step 5:\n        Row 5: K L M N O.\n\n\nOutput:  A\n         BC\n         DEF\n         GHIJ\n         KLMNO\n\n\n"
    },
    {
        "id": 72,
        "Question": "Which of the following is/are not Relational operators in C#.NET?",
        "Options": [
            "a) >=",
            "b) <>=",
            "c) Not",
            "d) <="
        ],
        "Answer": " Answer: a\nExplanation: Now, here in ‘if’ condition both conditions of parenthesis and hence evaluating operators based on parenthesis are tested.\nfor expression :\n\n\n ((a * b / c) + d)\nStep 1: (a*b/c) (Evaluating as 4*5/6 = 3)\nStep 2: ( (a*b/c) + d ) (Evaluating (3 + 8 = 11))\nResult: 11\nfor expression : (b * c + d )/ a\nStep 1: (b*c + d) (Evaluating as 5*6 +8 = 38)\nStep 2:   (b*c + d) / a (Evaluating as 38 / 4 = 9)\nResult: 9\n\n\nThe relational operator “>=” between both expressions check for largest figure and hence consecutively executes the if condition.\nOutput:\n\n        \n\n\n         Line 1 - a is greater to b.\n         11\n\n\n"
    },
    {
        "id": 73,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">    m <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span>\n    <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span>\n    <span class=\"nu0\">1</span><span class=\"sy0\">.</span> <span class=\"me1\">y</span> <span class=\"sy0\">=</span> m<span class=\"sy0\">++;</span>\n    <span class=\"nu0\">2</span><span class=\"sy0\">.</span> <span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>m<span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) y = 5, m = 6 ; y = 5, m = 5",
            "b) y = 6, m = 6; y = 7, m = 6",
            "c) y = 5, m = 6; y = 7, m = 7",
            "d) y = 5, m = 6; y = 7, m = 8"
        ],
        "Answer": " Answer: d\nExplanation: The expression (a * (c – b) / e + (b + c)) on evaluation parenthesis by parenthesis gives result mathematically  as 25. Similarly, (e * (c + a) / (b + c) + a) on evaluation parenthesis by parenthesis gives mathematically result as 20. Relational operator now checks for condition as in if condition as (25 < 20) which is false. So, a false bit in form of ‘0’ is assigned to d. Now, in if condition (d != 1) as d = 0. So, condition after else is evaluated.\nOutput :\n\n\n        0.\n        C# is not great!.\n        20.\n\n\n"
    },
    {
        "id": 74,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">3</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      b <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"sy0\">||</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>a <span class=\"sy0\">==</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      a <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">||</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>a<span class=\"sy0\">--</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2, 2, 1",
            "b) 2, 3, 2",
            "c) 2, 2, 2",
            "d) 2, 0, 9"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 75,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">4</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">7</span>, u <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> h<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     h <span class=\"sy0\">=</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>u <span class=\"sy0\">&lt;</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>a <span class=\"sy0\">+</span> b<span class=\"sy0\">--</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>u <span class=\"sy0\">&lt;</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 12, 5, 0",
            "b) 11, 4, False",
            "c) 11, 5, 0",
            "d) 12, 4, False"
        ],
        "Answer": " Answer: b\nExplanation:  After evaluation of the test expression (!((p*q)/n <= (q*w)+n/p)). The use of logical operator(!) turns false(0) result to bit ‘1’ and hence the condition evaluated by ‘if’ loop is after else as :\n  –p = 3\n    q–= 5\n  –p + q– = 8 where now value of ‘q’is 4.\n  –n = 2 – 1 =1.\n So, values after evaluations are 8 1.\n                                  a.\nOutput :\n\n\n         8 1\n         a\n\n\n"
    },
    {
        "id": 76,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> m <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>, n <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>, p <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">bool</span> b1 <span class=\"sy0\">=</span>  m <span class=\"sy0\">*</span> p <span class=\"sy0\">/</span> n <span class=\"sy0\">&lt;=</span> p <span class=\"sy0\">*</span> n <span class=\"sy0\">/</span> m <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> l <span class=\"sy0\">=</span> p <span class=\"sy0\">-</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> m<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">bool</span> b2 <span class=\"sy0\">=</span> l <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>b2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>b1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0",
            "b) 1 0",
            "c) 0 1",
            "d) 1 1"
        ],
        "Answer": " Answer: c\nExplanation:\n\n\n              step 1 :  m = 5, y = m++ i.e y =5, m =6.\n              step 2 :  y = ++m, Since m = 6. So, m = 7 on ++m and hence y = 7.\nOutput : y = 5, m = 6; y =7, m = 7.\n\n\n"
    },
    {
        "id": 77,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> method1</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fun<span class=\"br0\">(</span><span class=\"kw4\">int</span> m<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span><span class=\"br0\">(</span> m<span class=\"sy0\">++</span> <span class=\"sy0\">%</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">23</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         method1 z <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> method1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         c <span class=\"sy0\">=</span> z<span class=\"sy0\">.</span><span class=\"me1\">fun</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span>b <span class=\"sy0\">*</span> <span class=\"sy0\">--</span>a <span class=\"sy0\">%</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> <span class=\"br0\">(</span>z<span class=\"sy0\">.</span><span class=\"me1\">fun</span> <span class=\"br0\">(</span>c<span class=\"sy0\">--</span> <span class=\"sy0\">+</span> <span class=\"sy0\">--</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1, 22, 0",
            "b) -1, 21, 1",
            "c)  0, 22, 1",
            "d)  0, 22, 0"
        ],
        "Answer": " Answer: c\nExplanation: z = 6 as ++b.\n              y = 2 as ++c.\n              6 &&  2 = 1\n              (++a == b) which is false as 4!=6. Now, !(false) = true  i.e 1.\n              So, 1 || 1 = 1. So, b = 1.\n              Similarly, c = 2  and a = 4. Now, 2 || 4 = 1.\n              So, a = 1.\n              Hence ++a = 2, ++b = 2, c = 2.\nOutput :\n\n\n2, 2, 2\n\n\n"
    },
    {
        "id": 78,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">8</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">6</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> c <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">/</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>c <span class=\"sy0\">-</span> b<span class=\"br0\">)</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>d <span class=\"sy0\">==</span> <span class=\"br0\">(</span>c <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Sqrt</span> <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> a <span class=\"sy0\">+</span> b <span class=\"sy0\">*</span> b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> c <span class=\"sy0\">==</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"figure is hypotenuse\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"figure is square\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Figure is square",
            "b) Figure is hypotenuse",
            "c) False",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Step 1: Convert.ToInt32(u < b)(Evaluate result as 9 < 5 which is false in nature. So, solution is converted from ‘false’ to ‘0’).\n\n\n             Step 2: (a + b--) evaluated as 4 + 5 = 9 + 2 = 11.\n             Step 3: u &lt; b evaluated as 'False' without being converted to '0'.\nOutput: 11\n         4\n         False.\n\n\n"
    },
    {
        "id": 79,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> varA <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> varB <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span> result <span class=\"sy0\">=</span> varA <span class=\"sy0\">&amp;</span> varB<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0}  AND  {1} Result :{2}\"</span>, varA, varB, result<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     varA <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     varB <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     result <span class=\"sy0\">=</span> varA <span class=\"sy0\">&amp;</span> varB<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0}  AND  {1} Result : {2}\"</span>, varA, varB, result<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 20",
            "b) 10, 10",
            "c) 0, 10",
            "d) 0, 0"
        ],
        "Answer": " Answer: c\nExplanation: When ‘OR’ operations is done on the binary values following are the results of OR.\n              ‘OR’ means addition(+) operation.\n\n\n\t\n\n        \n\n                 0 (false) +   0(false)  =   0 (false)\n\t         1 (True)  +   0(false)  =   1 (True)\n\t         0(false)  +   1(True)   =   1 (True)\n\t         1(True)   +   1(True)   =   1 (True)\n\n\n When using OR operation it gives FALSE only when both the values are FALSE. In all other cases ‘OR’ operation gives ‘true’.\n Output :\n\n\n        \n\n          10  AND  20 Result :0.\n          10  AND  10 Result :10.\n\n\n "
    },
    {
        "id": 80,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> varA <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> varB <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span> result <span class=\"sy0\">=</span> varA <span class=\"sy0\">|</span> varB<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0}  OR  {1} Result :{2}\"</span>, varA, varB, result<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     varA <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     varB <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     result <span class=\"sy0\">=</span> varA <span class=\"sy0\">|</span> varB<span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0}  OR  {1} Result : {2}\"</span>, varA, varB, result<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20, 10",
            "b) 30, 10",
            "c) 10, 20",
            "d) 10, 10"
        ],
        "Answer": " Answer: b\nExplanation: There are two kinds of Shift operations “Right Shift” and “Left Shift”. Right Shift operation is used for shifting the bit positions towards right side. Left Shift operation is used for shifting the bit positions towards left side. When Right Shift operations are done on a binary value the bits are shifted one position towards the right.\nOutput :\n\n\n\t\n\n        10  OR  20 Result :30.\n        10  OR  10 Result :10.\n\n\n "
    },
    {
        "id": 81,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> b1 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">*</span> AB<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> b2 <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">*</span> <span class=\"nu0\">99</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">byte</span> temp<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     temp <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span> ~b2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span> temp <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     temp <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span> <span class=\"br0\">(</span>b1 <span class=\"sy0\">&lt;&lt;</span> b2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>temp <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     temp <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span><span class=\"br0\">(</span>b2  <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>temp<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 101 0 34",
            "b) 103 2 38",
            "c) 102 0 38",
            "d) 101 1 35"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n102 0 38.\n\n\n"
    },
    {
        "id": 82,
        "Question": "Which of the following options is not a Bitwise Operator in C#?",
        "Options": [
            "a) &,  |",
            "b) ^,  ~",
            "c) <<,  >>",
            "d) +=,   -="
        ],
        "Answer": " Answer: d\nExplanation: +=, -= are Assignment Operators in C#.\n"
    },
    {
        "id": 83,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">bool</span> a <span class=\"sy0\">=</span> <span class=\"kw1\">true</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">bool</span> b <span class=\"sy0\">=</span> <span class=\"kw1\">false</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  a <span class=\"sy0\">|=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) True",
            "d) False"
        ],
        "Answer": " Answer: c\nExplanation: ‘bools’ are single bits, and so a bit-wise OR is the same as a logical OR.\nOutput :\n\n\nTrue.\n\n\n"
    },
    {
        "id": 84,
        "Question": "6. Select the relevant C# code set to fill up the blank for the following C# program?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>, y <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> res<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"coMULTI\">/*_______________*/</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a)  x % y == 0 ? (x == y ? (x += 2):(y = x + y)):y = y*10;",
            "b)  x % y == 0 ? y += 10:(x += 10);",
            "c)  x % y == 0 ? return(x) : return (y);",
            "d)  All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n         {\n              int x = 10, y = 20;\n              int res;\n              x % y == 0 ? y += 10:(x += 10);\n              Console.WriteLine(res);\n          }\n\n\n"
    },
    {
        "id": 85,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"sy0\">!</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span> <span class=\"sy0\">&gt;</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">?</span>  x <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> <span class=\"nu0\">3</span> <span class=\"sy0\">:</span> x <span class=\"sy0\">=</span> y <span class=\"sy0\">+</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5, 8",
            "b) 10, 4",
            "c) 8, 5",
            "d) 11, 8"
        ],
        "Answer": " Answer: c\nExplanation: Since condition y > 10 is false and !(false) = true. So, first statement x = y + 3 is executed which is x = 8 with y = 5.\nOutput:\n\n\n8, 5.\n\n\n"
    },
    {
        "id": 86,
        "Question": "Which among the following is a conditional operator?",
        "Options": [
            "a) ‘:?’",
            "b) ?;",
            "c) ?:",
            "d) ??"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 87,
        "Question": "10. Arrange the operators in the increasing order as defined in C#.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">    <span class=\"sy0\">!=</span>,   <span class=\"sy0\">?:</span>,   <span class=\"sy0\">&amp;</span>,   <span class=\"sy0\">++</span>,  <span class=\"sy0\">&amp;&amp;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ?: < && < != < & < ++",
            "b) ?: < && < != < ++ < &",
            "c) ?: < && < & <!= < ++",
            "d) ?: < && < != < & < ++"
        ],
        "Answer": " Answer: c\nExplanation: a % c == 0 condition is true as (4 % 2  == 0). So, b is evaluated as true. Now (a/c == 2) which means if condition is also true hence it is evaluated as true.\nOutput:\n\n\n        True\n        True\n\n\n"
    },
    {
        "id": 88,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">8</span>, a <span class=\"sy0\">=</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>a <span class=\"sy0\">/</span> b <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">!=</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4 5 6 7 8 9",
            "b) 0 1 2 3 4 5 6 7 8",
            "c) 0 1 2 3",
            "d) 0 1 2 3 4"
        ],
        "Answer": " Answer: d\nExplanation: Usage of ‘=’ operator instead of  ‘==’ operator. Hence, the condition is not true.\nOutput:\n\n\n         In else\n         In main\n\n\n"
    },
    {
        "id": 89,
        "Question": "3. Which of the following conditions are true in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Enter a letter:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> c <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span>Console<span class=\"sy0\">.</span><span class=\"me1\">Read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">Char</span><span class=\"sy0\">.</span><span class=\"me1\">IsDigit</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw1\">true</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A number\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">.</span><span class=\"me1\">IsLower</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw1\">true</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A lowercase letter\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">.</span><span class=\"me1\">IsUpper</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"kw1\">true</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"An uppercase letter\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> a<span class=\"sy0\">.</span> <span class=\"me1\">Enter</span> a letter <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a</pre></li><li class=\"li1\"><pre class=\"de1\">    An uppercase letter</pre></li><li class=\"li1\"><pre class=\"de1\"> b<span class=\"sy0\">.</span> <span class=\"me1\">Enter</span> a letter <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    A</pre></li><li class=\"li1\"><pre class=\"de1\">    An uppercase letter</pre></li><li class=\"li1\"><pre class=\"de1\"> c<span class=\"sy0\">.</span> <span class=\"me1\">Enter</span> a letter <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"nu0\">2</span></pre></li><li class=\"li1\"><pre class=\"de1\">    A number</pre></li><li class=\"li1\"><pre class=\"de1\"> d<span class=\"sy0\">.</span> <span class=\"me1\">Enter</span> a letter <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"nu0\">2</span></pre></li><li class=\"li1\"><pre class=\"de1\">    A lowercase letter<span class=\"sy0\">.</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a, b, c",
            "b) b, c, d",
            "c) a, d, b",
            "d) b, c"
        ],
        "Answer": " Answer: c\nExplanation: The if condition will never be fulfilled as ((a / b) * 2 == 2) is never true. Hence, only else part of condition will be executed until i! = 4 i.e i = 0, 1, 2, 3.\nOutput:\n\n\n\t\n\n0 1 2 3\n\n\n"
    },
    {
        "id": 90,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">15</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>b <span class=\"sy0\">&gt;</span> c<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"cquestionbank\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) cquestionbank",
            "b) It will print nothing",
            "c) Compile time error",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation: In first row  for i = 2 : j = 0 == 0  as if condition fails for (i == j)\n                                i = 2 : j = 1 == 0  as again if condition fails for ( i == j)\n                                i = 2 : j = 2 == 1  as (i == j).\n              In Second row for i = 1 : j = 0 == 0  as if condition fails for (i == j)\n                                i = 1 : j = 1 == 1  (as i==j)\n                                i = 1 : j = 2 == 0  as (i==j) not true\n              In Third row  for i = 0 : j = 0 == 1 as (i==j) true\n                                i = 0 : j = 1 == 0 as (i==j) not true.\n                                i = 0 : j = 2 == 0 .\n              So, 0 0 1\n                  0 1 0\n                  1 0 0\n Output:  0 0 1\n          0 1 0\n          1 0 0\n "
    },
    {
        "id": 91,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"sy0\">.</span>002f<span class=\"br0\">)</span> <span class=\"sy0\">-</span><span class=\"br0\">(</span>0<span class=\"sy0\">.</span>1f<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Sachin Tendulkar\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Rahul Dravid\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Ms Dhoni\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Rahul Dravid",
            "b) Sachin Tendulkar",
            "c) Ms Dhoni",
            "d) Warning : Unreachable Code"
        ],
        "Answer": " Answer: c\nExplanation:\n\n\n                int []num = {50, 65, 56, 88, 43, 52};\n                int even = 0,odd = 0;\n                for (int i = 0 ;i &lt; num.Length ;i++)\n                {\n                    if (num[i] % 2 == 0)\n                    {\n                    even += 1;\n                    }\n                    else\n                    {\n                    odd += 1;\n                    }\n                }   \n                Console.WriteLine(\"Even Numbers: \" +even);\n                Console.WriteLine(\"Odd Numbers: \" +odd);\n                Console.ReadLine();\n\n\n"
    },
    {
        "id": 92,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span>a <span class=\"sy0\">=</span> <span class=\"sy0\">++</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"a\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"b\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) b",
            "c) Compile time error",
            "d) Code execute successfully with no output"
        ],
        "Answer": " Answer: c\nExplanation: Keyword “break” is not part of if-else statement. This keyword is used in case of loop or switch case statement.\n"
    },
    {
        "id": 93,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>0xB<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>022<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"st0\">'<span class=\"es0\">\\x</span>eb'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"java\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error: Misplaced else",
            "b) Compile time error: Undefined symbol",
            "c) java",
            "d) Warning: Condition is always true"
        ],
        "Answer": "  Answer: b\nExplanation: (0.002 – 0.1f) not equivalent to zero hence it is true. So, only first if clause will execute and  print:Sachin Tendulkar on console. As, first condition is always true so no else if statement will be executed.\nOutput:\n\n\n Sachin Tendulkar\n\n\n"
    },
    {
        "id": 94,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>a<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">||</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>b<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" C# \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6 11",
            "b) 6 16",
            "c) 6 12",
            "d) 6 10"
        ],
        "Answer": "  Answer: c\nExplanation: Both a and b are constants. Illegal to assign a value to constant on left hand of ‘=’operator. Hence, it must be some variable.\n  "
    },
    {
        "id": 95,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> movie <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>movie <span class=\"sy0\">&lt;&lt;</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> movie<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">default</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"3 Idiots\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Ghazini\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Krishh\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">8</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Race\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 Idiots",
            "b) Ghazini",
            "c) Race",
            "d) Krishh"
        ],
        "Answer": " Answer: c\nExplanation: We can put ‘default’ case in any order and hence write cases in any order.\nOutput:\n\n\n\t\n\n        \n\nRace.\n\n\n"
    },
    {
        "id": 96,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">1</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">2</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"1 and 2\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">3</span> to <span class=\"nu0\">10</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"3 to 10\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 to 10 will be printed",
            "b) 1 and 2 will be printed",
            "c) The code reports an error as missing ; before :",
            "d) The code gives output as 3 to 10"
        ],
        "Answer": " Answer: c\nExplanation: Syntax error- switch case does not work with syntax  as 3 to 10:\nOutput :\nHere i = 2, j = 4. So, (i + j * 2) gives output as 10 and case 10 is missing. So, prints nothing for given code.\n"
    },
    {
        "id": 97,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, k <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> k<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">++</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">++</span>k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">++</span>k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">+=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k <span class=\"sy0\">+=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2 3 3",
            "b) 3 2 3",
            "c) 3 4 4",
            "d) 5 10 10"
        ],
        "Answer": " Answer: c\nOutput:\n\n\n\t\n\n        3\n        4\n        4\n\n\nExplanation: i – k = -1. So, case -1 will be executed only.\n"
    },
    {
        "id": 98,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> <span class=\"kw1\">const</span> p <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"nu0\">3</span> <span class=\"sy0\">*</span> <span class=\"nu0\">5</span> <span class=\"sy0\">/</span> <span class=\"nu0\">6</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">case</span> p<span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">case</span> p <span class=\"sy0\">*</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">case</span> p <span class=\"sy0\">-</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">default</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"D\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) C",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: In case expression we don’t have constant variable.\n"
    },
    {
        "id": 99,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">3</span>, k <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">+</span> j <span class=\"sy0\">-</span> k<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">4</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">++</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k <span class=\"sy0\">+=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> <span class=\"kw1\">case</span> <span class=\"nu0\">5</span> <span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k <span class=\"sy0\">-=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">+=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> j <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 3 1",
            "b) 2 3 4",
            "c) 5 3 4",
            "d) Compile time error"
        ],
        "Answer": " Answer: a\nExplanation: Solving expression (i + j – k) gives 1 and hence,solving for case 1:case 3:case 5:.\nOutput :\n\n\n         1\n         3\n         1\n\n\n "
    },
    {
        "id": 100,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span>  i <span class=\"sy0\">=</span> <span class=\"nu0\">9</span> , j <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i <span class=\"sy0\">-</span> j <span class=\"sy0\">+</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">9</span><span class=\"sy0\">:</span> <span class=\"nu0\">7</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          j <span class=\"sy0\">+=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          i <span class=\"sy0\">-=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\n</span>\"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5 7",
            "b) 9 13",
            "c) Compile time error",
            "d) 9 7"
        ],
        "Answer": " Answer: c\nExplanation: Invalid expression’7:’ in case 9:7:.\n"
    },
    {
        "id": 101,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> 5<span class=\"sy0\">.</span>0f<span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"harsh\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">5</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"amish\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> 5<span class=\"sy0\">.</span>0L<span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"ANKIT\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"ashish\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) amish",
            "b) ANKIT",
            "c) harsh",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: Only integral values are allowed for case expression.\n               5.0f = (int)5.0f.\n               5.0L = (int)5.0L.\n"
    },
    {
        "id": 102,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>ar <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">21</span>, <span class=\"nu0\">22</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ar<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">1</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          i<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">2</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          i <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          j <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"nu0\">3</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">%=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         j <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">default</span><span class=\"sy0\">:</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">--</span>i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 23",
            "b) 15",
            "c) Compile time error",
            "d) 12"
        ],
        "Answer": " Answer: c\nExplanation: Continue cannot be used as a part of switch statement.\n"
    },
    {
        "id": 103,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> ch <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span><span class=\"st0\">'a'</span> <span class=\"sy0\">|</span> <span class=\"st0\">'b'</span> <span class=\"sy0\">|</span> <span class=\"st0\">'c'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ch<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'A'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'a'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case A|case a\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'B'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'b'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case B|case b\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'C'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'c'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'D'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">case</span> <span class=\"st0\">'d'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"case D|case d\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) case A|case a",
            "c) case B|case b",
            "d) case D|case d"
        ],
        "Answer": " Answer: d\nExplanation: Case statement declared last will only be executed as no particular case number is declared is to be called.\nOutput:\n\n\n case D|case d\n\n\n"
    },
    {
        "id": 104,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">char</span> ch <span class=\"sy0\">=</span> <span class=\"st0\">'p'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>ch<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">case</span> <span class=\"st0\">'p'</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"coco\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\t</span>\"</span> <span class=\"sy0\">+</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">default</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"default\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">break</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"main\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) coco main",
            "b) coco 112",
            "c) coco 112 main",
            "d) compile time error"
        ],
        "Answer": " Answer: c\nExplanation: ASCII value of ‘p’ is 112. Hence, coco 112 main.\nOutput:\n\n\ncoco 112 main.\n\n\n"
    },
    {
        "id": 105,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>  <span class=\"sy0\">;</span> <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) No output",
            "b) hello",
            "c) hello printed infinite times",
            "d) Code will give error as expression syntax"
        ],
        "Answer": " Answer: c\nExplanation: Testing condition for the loop is absent. So, loop will continue executing.\nOutput :\n\n\n\t\n\n        \n\n         hello\n         hello\n         hello\n         .\n         .\n         .\n\n\n"
    },
    {
        "id": 106,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">float</span> f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>f <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>1f<span class=\"sy0\">;</span> f <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">0.5</span><span class=\"sy0\">;</span> f <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> <span class=\"sy0\">++</span>f <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1.1",
            "b) 0.1",
            "c) 0.1 0.2 0.3 0.4 0.5",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: f = 0.1 and ++f = 0.1+1 = 1.1. So, 1.1>0.5, Condition fails and hence loop terminates.\nOutput :\n\n\n\t\n\n 1.1\n\n\n"
    },
    {
        "id": 107,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> I, X<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>I <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> I <span class=\"sy0\">&lt;=</span> <span class=\"br0\">(</span><span class=\"nu0\">9</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> I<span class=\"br0\">)</span><span class=\"sy0\">;</span> I<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         X <span class=\"sy0\">=</span> <span class=\"br0\">(</span>I <span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"sy0\">+</span> I <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">/</span> I<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>X<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Output of code is 5 10",
            "b) Output is 5 5 5 5",
            "c) Print 5 infinite times",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Testing condition is always incremented i.e i never ‘>’ (9%2+I). So, loop will never terminate.\nOutput :\n\n\n 5 5 5.....\n\n\n"
    },
    {
        "id": 108,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> I, J <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>I <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> I <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> <span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         J <span class=\"sy0\">=</span> J <span class=\"sy0\">+</span> I<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         I <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Sum of first 10 even numbers is:\"</span><span class=\"sy0\">+</span>J<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4 5 6 7 8 9",
            "b) 25",
            "c) 1",
            "d) Run time error"
        ],
        "Answer": " Answer: d\nExplanation: Due to presence of ‘;’ after for()loop condition do not work as according to the statement. Remove the ‘;’.\nOutput :\n\n\n 25\n\n\n"
    },
    {
        "id": 109,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"sy0\">;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">--</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4 3 2 1",
            "b) 3 2 1",
            "c) 5 4 3 2 1",
            "d) 2 1"
        ],
        "Answer": " Answer: c\nExplanation: Since, i = 5 and test condition is executed until i!=0. So, i– decrements value of i till condition is satisfied.\nOutput:\n\n\n 5 4 3 2 1\n\n\n"
    },
    {
        "id": 110,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i, s <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> s <span class=\"sy0\">=</span> s <span class=\"sy0\">+</span> i, i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code report error",
            "b) Code runs in infinite loop condition",
            "c) Code gives output as 0 1 3 6 10 15 21 28 36 45",
            "d) Code give output as 55"
        ],
        "Answer": " Answer: d\nExplanation: Since occurrence of termination symbol(;) at end of for loop.\nOutput:\n\n\n 55\n\n\n"
    },
    {
        "id": 111,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Program<span class=\"sy0\">.</span><span class=\"me1\">Main</span><span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Prints ‘Hi’ for one time",
            "b) Prints ‘Hi’ for infinite times",
            "c) Stack overflow exception Condition generated",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 112,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=-</span><span class=\"nu0\">3</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">switch</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">case</span> <span class=\"nu0\">0</span><span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"zero\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">else</span> <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) B B zero A A A",
            "b) B zero A A A",
            "c) B B B zero A A A",
            "d) A A A zero B B B"
        ],
        "Answer": " Answer: c\nExplanation: Input in Console and run the code.\n"
    },
    {
        "id": 113,
        "Question": "Which of the following is not infinite loop?",
        "Options": [
            "a) for( ;’0′; )",
            "b) for( ;’0′; )",
            "c) for( ;’1′; )",
            "d) for( ;’1′; )"
        ],
        "Answer": " Answer: c\nExplanation: for i = -3, -2, -1 statement executed as B. for i = 0, it is zero and for i = 1, 2, 3 again statement printed as A separately  for each value of i.\nOutput:\n\n\nB B B zero A A A\n\n\n"
    },
    {
        "id": 114,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i, j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, j <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span> <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span>, j<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) i = 0, j = 1;",
            "b) i = 1, j = 0;",
            "c) j = 0;",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 115,
        "Question": "13. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span> <span class=\"sy0\">;</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span>Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -9 -8 -7 -6 -5 -4 -3 -2 -1",
            "b) -10 -9 -8 -7 -6 -5 -4 -3 -2",
            "c) -10 -9 -8 -7 -6 -5 -4 -3 -2 -1",
            "d) -8 -7 -6 -5 -4 -3 -2 -1"
        ],
        "Answer": " Answer: c\nExplanation: Since for i = 1, j = 1 and 1 <= 3 also 1 >= 0 we had i == j. But after i++ and j–. The initial value of ‘j’ which is ‘0’ as j– preferred other than value of ‘j’ in i = j.\nOutput:\n\n\nj = 0\n\n\n"
    },
    {
        "id": 116,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i, j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> j <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             j<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11 21 31",
            "b) 1 12 13 1",
            "c) 11 21 31",
            "d) 1 1 2 1 3 1"
        ],
        "Answer": " Answer: c\nExplanation: Since, condition never satisfied for any value of i and j for which (i % j == 2). Hence, j is always constant ‘1’ and ‘i’  increments for  i = 1, 2, 3.\nOutput:\n\n\t\n\n\n 11 21 31.\n\n\n"
    },
    {
        "id": 117,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> s <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>1f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">while</span> <span class=\"br0\">(</span>s <span class=\"sy0\">&lt;=</span> 0<span class=\"sy0\">.</span>5f<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">++</span>s<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.1",
            "b) 1.1",
            "c) 0.1 0.2 0.3 0.4 0.5",
            "d) No output"
        ],
        "Answer": " Answer: b\nExplanation: For the first while condition check when s = 0. If it is true as control goes inside loop ++s increments value of s by 1 as  1+0.1 = 1.1. So, for next condition while loop fails and hence, prints final value of s as 1.1.\nOutput:\n\n        \n\n\n 1.1\n\n\n"
    },
    {
        "id": 118,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> n, r<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      n <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          r <span class=\"sy0\">=</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          n <span class=\"sy0\">=</span> n <span class=\"sy0\">/</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">+</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">for</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">5432</span><span class=\"sy0\">.</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3245",
            "b) 2354",
            "c) 2345",
            "d) 5423"
        ],
        "Answer": " Answer: c\nExplanation: For while(i++ < 5) current value of ‘i’ is checked first and hence prints incremented value afterwards. So, i =1, 2, 3, 4, 5. But, for while(++i < 5) current value is incremented first and then checks that value with given condition and hence then prints that value. So, i = 1, 2, 3, 4.\nOutput:\n\n\n        1 2 3 4 5\n        1 2 3 4\n\n\n"
    },
    {
        "id": 119,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">float</span> i <span class=\"sy0\">=</span> 1<span class=\"sy0\">.</span>0f,  j <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>05f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i  <span class=\"sy0\">&lt;</span> 2<span class=\"sy0\">.</span>0f  <span class=\"sy0\">&amp;&amp;</span>  j  <span class=\"sy0\">&lt;=</span> 2<span class=\"sy0\">.</span>0f<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">++</span> <span class=\"sy0\">-</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0.05f",
            "b) 1.50f",
            "c) -0.04999995f",
            "d) 1.50f"
        ],
        "Answer": " Answer: c\nExplanation: Inner while loop condition checks for even number between 0 an 10 and hence prints number between the given range.\nOutput:\n\n\n0 2 4 6 8\n\n\n"
    },
    {
        "id": 120,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">50</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">10</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">+=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) code prints output as 0 0 0 0 0",
            "b) code prints output as 10 20 30 40 50",
            "c) infinite loop but doesn’t print anything",
            "d) Code generate error"
        ],
        "Answer": " Answer: b\nExplanation: Checks condition if number is divisible by 2 then it will print it even number times as given for x = 8 so, prints between 2 to 8 times Similarly, for x = 5, Execute 2 and 4 time.\nOUTPUT:\n\n\n        Execute while 2 time.\n        Execute while 4 time.\n        Execute while 6 time.\n        Execute while 8 time.\n\n\n"
    },
    {
        "id": 121,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"sy0\">++</span>i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          j<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 12 11",
            "b) 10 11",
            "c) 11 10",
            "d) 11 12"
        ],
        "Answer": " Answer: c\nExplanation: Reverse of number using while loop.\nOutput:\n\n\n2345.\n\n\n"
    },
    {
        "id": 122,
        "Question": "11. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"st0\">'A'</span> <span class=\"sy0\">&lt;</span> <span class=\"st0\">'a'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello...\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hi...\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">              i<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi…",
            "b) Hello….",
            "c) Hi…infinite times",
            "d) Hello infinite times"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 123,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i<span class=\"sy0\">++</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -127 to +127",
            "b) 0 to 127",
            "c) 1",
            "d) Infinite loop condition"
        ],
        "Answer": " Answer: c\nExplanation: for while(i = 1.0f and j = 0.05f). We, had ‘&&’ condition which gives ‘1’. So, control enters while loop. Since, i = 1 and i++ = first execute then increment. So, first with ‘i’ value as 1.0f and ++j = first increment and then executes we had j = 1.05f and Since operation (i++ – ++j) gives us a negative sign number. So, we can stick our choice to option ‘-0.04999995f’ clearly. Now, as  i = 2.0f so loop breaks.\nOutput:\n\n\n-0.04999995f\n\n\n"
    },
    {
        "id": 124,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">2</span>, k <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>j<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0 0",
            "b) True True True",
            "c) 1 1 1",
            "d) False False False"
        ],
        "Answer": " Answer: b\nExplanation: 1 AND 1 = True. Similarly, non zero number || non zero number = True.\nOutput:\n\n\t\n\n\nTrue True True\n\n\n"
    },
    {
        "id": 125,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">float</span> i <span class=\"sy0\">=</span> 1<span class=\"sy0\">.</span>0f, j <span class=\"sy0\">=</span> 0<span class=\"sy0\">.</span>05f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">++</span> <span class=\"sy0\">-</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> 2<span class=\"sy0\">.</span>0f <span class=\"sy0\">&amp;&amp;</span> j <span class=\"sy0\">&lt;=</span> 2<span class=\"sy0\">.</span>0f<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a)  0.05",
            "b) -0.05",
            "c)  0.95",
            "d) -0.04999995"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n        \n\n\n -0.04999995\n\n\n"
    },
    {
        "id": 126,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> i<span class=\"sy0\">++</span> <span class=\"sy0\">*</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5 10 15 20 25 30 35 40 45 50",
            "b) 5 25",
            "c) 5 11 16 21 26 31 36 41 46 51",
            "d) 5 30"
        ],
        "Answer": " Answer: b\nExplanation: For first step of loop i = 1 .So, i++ * j = 1 * 5 = 5. For second step of loop i = 5, j = 5. So, i++ * j = 25. As, i = 25 hence, 25 >=10 loop condition breaks.\nOutput:\n\n\t\n\n\n5 25.\n\n\n"
    },
    {
        "id": 127,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">long</span>  x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     x <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">%</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>x <span class=\"sy0\">=</span> x <span class=\"sy0\">/</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> enter x <span class=\"sy0\">=</span> <span class=\"nu0\">1234</span><span class=\"sy0\">.</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) number of digits present in x",
            "b) prints ‘1’",
            "c) prints reverse of x",
            "d) prints sum of digits of ‘x’"
        ],
        "Answer": " Answer: c\nExplanation: Reverse of digits using while loop statements.\nOutput:\n\n\n 4321.\n\n\n"
    },
    {
        "id": 128,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i, s <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, a <span class=\"sy0\">=</span> <span class=\"nu0\">1</span>, d<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     i <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         d <span class=\"sy0\">=</span> i <span class=\"sy0\">%</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         s <span class=\"sy0\">=</span> s <span class=\"sy0\">+</span> d <span class=\"sy0\">*</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>i <span class=\"sy0\">=</span> i <span class=\"sy0\">/</span> <span class=\"br0\">(</span><span class=\"nu0\">2</span> <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"sy0\">&amp;&amp;</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span> <span class=\"sy0\">=</span> <span class=\"br0\">(</span>a <span class=\"sy0\">*</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">enter i <span class=\"sy0\">=</span> <span class=\"nu0\">342</span><span class=\"sy0\">.</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) It finds binary equivalent of i",
            "b) It finds octal equivalent of i",
            "c) It finds sum of digits of i",
            "d) It finds reverse of i"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n         i = 342.\n         s = 526.\n\n\n"
    },
    {
        "id": 129,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"sy0\">&amp;&amp;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">&amp;&amp;</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 13",
            "b) 15",
            "c) 11",
            "d) 10"
        ],
        "Answer": " Answer: d\nExplanation: By definition\nOutput:\n\n\ndo\n       {\n          statement;\n        }while (condition);\n\n\n"
    },
    {
        "id": 130,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">while</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>x <span class=\"sy0\">&gt;&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0 0….infinite times",
            "b) 1 1 1….infinite times",
            "c) 1 1 1 1 1 1",
            "d) System outofflow exception error"
        ],
        "Answer": " Answer: d\nExplanation: Here in do while condition ‘&&’ i.e ‘AND’operator return ‘0’ i.e false. So, as condition is false so program comes out of the loop.\nOutput :\n\n\n10.\n\n\n"
    },
    {
        "id": 131,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x <span class=\"sy0\">==</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            x<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>x <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4 5",
            "b) 10",
            "c) 5 6 7 8 9 10",
            "d) 1 2 3 4 5 6 7 8 9 10"
        ],
        "Answer": " Answer: c\nExplanation: The execution of for loop is done for six consecutive times.\nOutput :\n\n\n1 1 1 1 1 1\n\n\n"
    },
    {
        "id": 132,
        "Question": "11. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>x <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> x <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> x<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">do</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            j<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span><span class=\"kw1\">while</span> <span class=\"br0\">(</span>x <span class=\"sy0\">%</span> j <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 12 1 3 1",
            "b) 1 12 13 1",
            "c) 12 22 32",
            "d) 11 21 31"
        ],
        "Answer": " Answer: d\nExplanation: The condition will print the numbers from 1 to 10 when x == 5 and when x does not satisfy if condition until x < 10.\nOutput:\n\n\n1 2 3 4 5 6 7 8 9 10\n\n\n"
    },
    {
        "id": 133,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"enter value of i:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      i <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          i<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"final value of i:\"</span> <span class=\"sy0\">+</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 12",
            "b) 11",
            "c) Compile time error",
            "d) 13"
        ],
        "Answer": " Answer: c\nExplanation: ‘Continue’ loop cannot be used within ‘if’ loop. replace while with if(i <7).\n Output: Compile time error.\n "
    },
    {
        "id": 134,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"enter value of i:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     i <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">goto</span> even<span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"number is odd:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     even<span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"number is even:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">for</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">.</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) number is odd",
            "b) number is even",
            "c) Compile time error",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: “Undefined label ‘even’ in main(). The syntax ‘goto even:’ is incorrect instead use ‘goto even;’.\n "
    },
    {
        "id": 135,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> , j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       label<span class=\"sy0\">:</span></pre></li><li class=\"li1\"><pre class=\"de1\">       i<span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">if</span> <span class=\"br0\">(</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">goto</span> label<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 3 4 5 6 7 8 9 10",
            "b) 10 9 8 7 6 5 4 3 2 1 0",
            "c) 9 8 7 6 5 4 3 2 1",
            "d) 10 9 8 7 6 5 4 3 2 1"
        ],
        "Answer": " Answer: a\nExplanation: for i = 1. When control enters in loop first if condition is checked for where j = 1 and as (j > 2) which is false. Control is now passed to console statement  with i = 1 and j = 2. Now, in while condition value of ‘i’ reflected is 2 i.e i = 2 as i++. Since, (i < 3) control again enters in for loop with i = 2 but j = 1 not j = 2 for j++ and hence, again same condition executes for console statement.\nOutput : 1 2\n           2 1\n "
    },
    {
        "id": 136,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          l1<span class=\"sy0\">:</span> i<span class=\"sy0\">--;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">while</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hi<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">goto</span> l1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi hi hi",
            "b) hi hi",
            "c) hi",
            "d) hi hi hi…..infinite times"
        ],
        "Answer": " Answer: c\nExplanation: for i = 10, loop executes for first time in ‘if’ loop as (i>0) i.e (9 > 0) and hence printing ‘9’. Similarly, label condition executes again go for (i–) i.e (9-1=8) and hence again prints i = 8. In this way looping condition executes as 9, 8 to 3, 2, 1.\nOUTPUT :\n\n\n9 8 7 6 5 4 3 2 1\n\n\n"
    },
    {
        "id": 137,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">goto</span> label<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      label<span class=\"sy0\">:</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"HI...\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi…infinite times",
            "b) Code runs prints nothing",
            "c) Hi Hi",
            "d) Hi…"
        ],
        "Answer": " Answer: d\nExplanation: Since, i– so, test condition for ‘i’ never satisfies it fails and hence infinite loop in occurs.\noutput:\n\n\nhi hi hi.....\n\n\n"
    },
    {
        "id": 138,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      l1<span class=\"sy0\">:</span> <span class=\"kw1\">while</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">          i<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">while</span> <span class=\"br0\">(</span>j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"loop<span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">goto</span> l1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) loop is printed infinite times",
            "b) loop",
            "c) loop loop",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: for i = 0, if condition is satisfied as (i == 0). So, label statement is printed.\n Output :\n\n\nHi\n\n\n "
    },
    {
        "id": 139,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">=</span> <span class=\"nu0\">0</span>,k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      label<span class=\"sy0\">:</span> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">goto</span> label<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0 0 0",
            "b) 0 0 0",
            "c) 0 infinite times",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: Since outer while loop i.e while(i<2) executes only for two times. Hence, loop while executing third time for (j<3) could not be able to satisfy condition i<2 as i = 2. Hence, loop breaks and control goes out of loop.\n   Output :\n\n\nloop loop.\n\n\n   "
    },
    {
        "id": 140,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> j<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hi <span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Prints hi 4 times",
            "b) Prints hi 3 times",
            "c) Prints hi 6 times",
            "d) Prints hi infinite times"
        ],
        "Answer": " Answer: c\nExplanation: Since, if condition is always true. Loop will continue executing always without any end condition.\n Output:\n\n\n0 0 0....\n\n\n "
    },
    {
        "id": 141,
        "Question": "10. Select the output for the following set of code :<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             a<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello <span class=\"es0\">\\n</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) print hello 4 times",
            "b) print hello 3 times",
            "c) print hello 5 times",
            "d) print hello infinite times"
        ],
        "Answer": " Answer: c\nExplanation: None.\n Output :\n\n\n            hi\n            hi\n            hi \n            hi\n            hi\n            hi\n\n\n "
    },
    {
        "id": 142,
        "Question": "11. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"HI\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">continue</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi Hello",
            "b) Hi",
            "c) Hello",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: Condition executes until and unless i < 5. So, it prints “hello” until  ‘i’  condition is satisfied.\n  Output :\n\n\n             Hello\n             Hello\n             Hello\n             Hello \n             Hello\n\n\n "
    },
    {
        "id": 143,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> arr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> val<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> val<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sample s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         s<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sample<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         s<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span><span class=\"nu0\">1</span>, <span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sample.fun(1, 5) will not work correctly",
            "b) s.i = 10 cannot work as i is ‘public’",
            "c) sample.fun(1, 5) will set value as 5 in arr[1] ",
            "d) s.fun(1, 5) will work correctly"
        ],
        "Answer": " Answer: a\nExplanation: An Object reference is required for non static field, method or property. i.e\n\n\n\t\n\n        \n\n                      sample s = new sample();\n                      s.i = 10;\n                      sample.fun(1, 5);\n                      sample.fun(1, 5);\n                      Console.ReadLine();\n\n\n"
    },
    {
        "id": 144,
        "Question": "Which of the following is used to define the member of a class externally?",
        "Options": [
            "a) :",
            "b) ::",
            "c) #",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 145,
        "Question": "The operator used to access member function of a class?",
        "Options": [
            "a) :",
            "b) ::",
            "c) .",
            "d) #"
        ],
        "Answer": " Answer: c\nExplanation: objectname.function name(actual arguments);\n"
    },
    {
        "id": 146,
        "Question": "What is the most specified using class declaration?",
        "Options": [
            "a) type",
            "b) scope",
            "c) type & scope",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: General form of class declaration in C# is :\nclass  class_name \n{\n       member variables\n         variable1;\n         variable2;\n         variableN;\n         method1(parameter_list) \n       {\n             method body \n       }\n         method2(parameter_list) \n       {\n            method body \n       }\n         methodN(parameter_list) \n       {\n            method body \n       }\n}\n\n\n\t "
    },
    {
        "id": 147,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          sample s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          s<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          s<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          s<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">i</span>, s<span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Error while calling s.fun() due to inaccessible level",
            "b) Error as ‘this’ reference would not be able to call ‘i’ and ‘j’",
            "c) 1 2",
            "d) Runs successfully  but prints nothing"
        ],
        "Answer": " Answer: c\nExplanation: Variable ‘i’ and ‘j’ declared with scope public in sample class are accessed using object of class ‘sample’ which is ‘s’.\nOutput:\n\n\n1 2\n\n\n"
    },
    {
        "id": 148,
        "Question": "Which of the following statements about objects in “C#” is correct?",
        "Options": [
            "a) Everything you use in C# is an object, including Windows Forms and controls",
            "b) Objects  have methods and events that allow them to perform actions",
            "c) All objects created from a class will occupy equal number of bytes in memory",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 149,
        "Question": "“A  mechanism that binds together code and data in manipulates, and keeps both safe from outside interference and misuse. In short it isolates a particular code and data from all other codes and data. A well-defined interface controls access to that particular code and data.”",
        "Options": [
            "a) Abstraction",
            "b) Polymorphism",
            "c) Inheritance",
            "d) Encapsulation"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 150,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> z</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> X<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span>  <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> c1 <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span>  <span class=\"kw1\">const</span> <span class=\"kw4\">int</span> c2 <span class=\"sy0\">=</span> c1 <span class=\"sy0\">*</span> <span class=\"nu0\">25</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> <span class=\"kw1\">set</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          X <span class=\"sy0\">=</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Y <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          z s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> z<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          s<span class=\"sy0\">.</span><span class=\"kw1\">set</span><span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">X</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">Y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"sy0\">.</span><span class=\"me1\">c1</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> z<span class=\"sy0\">.</span><span class=\"me1\">c2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) name n = new name();",
            "b) n = name();",
            "c) name n = name();",
            "d) n = new name();"
        ],
        "Answer": " Answer: c\nExplanation: Member function() ‘set’ is accessed using object of class ‘z’ values are passed as parameter to ‘a’ and ‘b’. Since, variable ‘c1’ and ‘c2’ are public data member of class ‘z’. They are accessed using classname.\nOutput :\n\n\n           10 20\n           5  125\n\n\n"
    },
    {
        "id": 151,
        "Question": "The data members of a class by default are?",
        "Options": [
            "a) protected, public",
            "b) private, public",
            "c) private",
            "d) public"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 152,
        "Question": "11. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> z</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">string</span> name1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">string</span> address<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> show<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"{0} is in city{1}\"</span>, name1, <span class=\"st0\">\" \"</span>, address<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          z n <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> z<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          n<span class=\"sy0\">.</span><span class=\"me1\">name1</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"harsh\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          n<span class=\"sy0\">.</span><span class=\"me1\">address</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"new delhi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          n<span class=\"sy0\">.</span><span class=\"me1\">show</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Syntax error",
            "b) {0} is in city{1} harsh new delhi",
            "c) harsh is in new delhi",
            "d) Run successfully prints nothing"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 153,
        "Question": "12. What does the following C# code imply?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">      csharp abc<span class=\"sy0\">;</span>\n      abc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> charp<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Object creation on class csharp",
            "b) Create an object of type csharp on heap or on stack depending on the size of object",
            "c) create a reference c on csharp and an object of type csharp on heap",
            "d) create an object of type csharp on stack"
        ],
        "Answer": " Answer: c\nExplanation: Member function show() accessed using object of class ‘z’ which is ‘n’ as object.member().\nOutput :\n\n\nharsh is in new delhi\n\n\n"
    },
    {
        "id": 154,
        "Question": "13. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">class</span> test</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> print<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           test t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           t<span class=\"sy0\">.</span><span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code runs successfully prints nothing",
            "b) Code runs and prints “Csharp”",
            "c) Syntax error as t is unassigned variable which is never used",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 155,
        "Question": "Which reference modifier is used to define reference variable?",
        "Options": [
            "a) &",
            "b) ref",
            "c) #",
            "d) $"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 156,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       fun1 <span class=\"br0\">(</span><span class=\"kw1\">ref</span> a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5",
            "b) 0",
            "c) 20",
            "d) 25"
        ],
        "Answer": " Answer: d\nExplanation: Here ‘a’ = 5. Copy of  variable is passed as reference to parameter ‘a’.\nOutput:\n\n\n\t\n\n        \n\n25\n\n\n"
    },
    {
        "id": 157,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> arr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> arr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> array<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> array<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         array<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> array<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>array<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6 7 8 9 10",
            "b) 15 17 8 8 20",
            "c) 15 17 8 29 20",
            "d) Syntax error while passing reference of array variable"
        ],
        "Answer": " Answer: a\nExplanation: array ‘arr’ after declaration is passed as reference parameter.\n              a[0] = 1 + 5 = 6.\n              a[1] = 2 + 5 = 7.\n              .\n              .\n              a[4] = 5 + 5 = 10.\n Output :\n\n\n\t\n\n 15 17 8 29 20\n\n\n "
    },
    {
        "id": 158,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>a <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     func<span class=\"br0\">(</span><span class=\"kw1\">ref</span> a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> func<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" numbers are:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> x<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> x<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) numbers are : 2 4 6 8 10",
            "b) numbers are : 3 5 7 9 11",
            "c) numbers are : 2 3 4 5 6",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Makes use of call by reference parameter.\nOutput:\n\n\n       Result before swap is: 10 20.\n       Result after swap is:20 10.\n\n\n"
    },
    {
        "id": 159,
        "Question": "Select the wrong statement about ‘ref’ keyword in C#?",
        "Options": [
            "a) References can be called recursively",
            "b) The ‘ref’ keyword causes arguments to be passed by reference",
            "c) When ‘ref’ are used, any changes made to parameters in method will be reflected in variable when control is passed back to calling method",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Those numbers divisible by 2 are 2, 4, 6, 8, 10 and when condition of loop is executed it increments by 1.\n              i.e for x[1] = 2%2 == 0.So, x[1] = 2 + 1 = 3.\n                      x[3] = 4%2 == 0.So, x[3] = 4 + 1 = 5 and so on.\nOutput :\n\n\n 3 5 7 9 11\n\n\n"
    },
    {
        "id": 160,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> X <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">if</span> <span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span>X <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"It is zero\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">else</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"It is not zero\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) It is zero",
            "b) It is not zero",
            "c) Infinite loop",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 161,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> X <span class=\"sy0\">=</span> <span class=\"nu0\">6</span>,Y <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       X  <span class=\"sy0\">*=</span> X <span class=\"sy0\">/</span> Y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>X<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 12",
            "b) 6",
            "c) 18",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 162,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">4</span> ,b <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x <span class=\"sy0\">-=</span> b<span class=\"sy0\">/=</span> x <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4 2",
            "b) 0 4",
            "c) 4 0",
            "d) 2 2"
        ],
        "Answer": " Answer: b\nExplanation: The operator ‘=’ used is not comparison operator it is assignment operator. Since value assigned to ‘X’ = 0. So,’0′ value is stored in  ‘X’ and with the help of if condition implementation it is converted to ‘false’ which directly means It is not zero but ‘1’ which means ‘true’.\n"
    },
    {
        "id": 163,
        "Question": "",
        "Options": [
            "a) float",
            "b) int",
            "c) long",
            "d) none of the mentioned"
        ],
        "Answer": " Answer:  c\nExplanation: X*=X/Y.\n                  X=x*(X/Y).\nOutput:\n\n\n18\n\n\n"
    },
    {
        "id": 164,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> C <span class=\"sy0\">=</span> <span class=\"nu0\">64</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       x <span class=\"sy0\">/=</span> b <span class=\"sy0\">/=</span> C<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span>C<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8 2 32",
            "b) 32 4 8",
            "c) 32 2 8",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: x = x – b  and b = b/(x*b).\nOutput:\n\n\n 4 0\n\n\n"
    },
    {
        "id": 165,
        "Question": "13. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">16</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> C <span class=\"sy0\">=</span> <span class=\"nu0\">64</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       x <span class=\"sy0\">/=</span> b <span class=\"sy0\">/=</span> C<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> b<span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span>C<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8 2 32",
            "b) 32 4 8",
            "c) 32 2 8",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 166,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Mul <span class=\"br0\">(</span>a, <span class=\"kw1\">ref</span> s, <span class=\"kw1\">ref</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s <span class=\"sy0\">+</span> <span class=\"st0\">\"t \"</span> <span class=\"sy0\">+</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Mul <span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> ss, <span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> cc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     ss <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     cc <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 125 25",
            "b) 25 125",
            "c) Compile time error",
            "d) 0 0"
        ],
        "Answer": " Answer: b\nExplanation:  The value of variable a is passed by value while value of variable s and c is passed by reference.\nOutput:\n\n\n\t\n\n        \n\n 25 125\n\n\n"
    },
    {
        "id": 167,
        "Question": "Which of the following statements are correct about functions?",
        "Options": [
            "a) C# allows a function to have arguments with default values",
            "b) Redefining a method parameter in the method’s body causes an exception",
            "c) C# allows function to have arguments with default values",
            "d) Omitting the return type in method definition results into exception"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 168,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Mul<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    m<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Mul<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"4\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> m<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"3\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Mul<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4 3 3",
            "b) 4 4 3",
            "c) 4 3 4",
            "d) 3 4 4"
        ],
        "Answer": " Answer: c\nExplanation: First Mul() will be executed to print the number ‘4’ after that function m() will be executed to print the number  ‘3’ and at last mentioned function Mul() will be executed to print the statement 4 to return the output as 4 3 4.\nOutput:\n\n\n\t\n\n 4 3 4\n\n\n"
    },
    {
        "id": 169,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     m<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> m<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"HI\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     m<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) HI HI HI",
            "b) HI",
            "c) Stack overflow exception",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: Control of statement when enters for once in  m() does not go out, then it executes again and again inside the block until stack overflow exception occurs.\n"
    },
    {
        "id": 170,
        "Question": "How many values does a function return?",
        "Options": [
            "a) 0",
            "b) 2",
            "c) 1",
            "d) any number of values"
        ],
        "Answer": " Answer: c\nExplanation: A method can return only either single value or no value if no then it’s declared as void method();\n"
    },
    {
        "id": 171,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     y<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>y <span class=\"sy0\">&lt;=</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Main<span class=\"br0\">(</span>args<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hi hi",
            "b) hi",
            "c) Stack overflow exception",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: ‘int’ datatype is sub datatype of ‘double’. Hence, when first part of func() is executed it is integer part and hence when the second part is executed it is double.\nOutput:\n\n\n       10\n       35.78\n\n\n"
    },
    {
        "id": 172,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     p<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> p<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) hi",
            "c) hi infinite times",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If loop never gets over, it will execute continuously. The control never goes out of ‘if’ statement.\nOutput: hi\n        hi\n         .\n         .\n         .\n        stack overflow exception\n"
    },
    {
        "id": 173,
        "Question": "Number of constructors a class can define is?",
        "Options": [
            "a) 1",
            "b) 2",
            "c) Any number",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  A constructor is a  simple method which has the same name as the class and hence used to create object of a class. C#  class can define any number of constructors. Every class contains a default constructor.\n"
    },
    {
        "id": 174,
        "Question": "3. Correct way to define object of sample class in which C# code will work correctly is:<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> abc</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> abc<span class=\"br0\">(</span><span class=\"kw4\">int</span> ii, <span class=\"kw4\">float</span> kk<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">=</span> ii<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k <span class=\"sy0\">=</span> kk<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) abc s1 = new abc(1);",
            "b) abc s1 = new abc();",
            "c) abc s2 = new abc(1.4f);",
            "d) abc s2 = new abc(1, 1.4f);"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 175,
        "Question": "Correct statement about constructors in C#.NET is?",
        "Options": [
            "a) Constructors can be overloaded",
            "b) Constructors are never called explicitly",
            "c) Constructors have same name as name of the class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Return types of parameters of object of class matches with defined constructor arguments types.\n"
    },
    {
        "id": 176,
        "Question": "Which among the following is the correct statement: Constructors are used to?",
        "Options": [
            "a) initialize the objects",
            "b) construct the data members",
            "c) initialize the objects & construct the data members",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 177,
        "Question": "Which of the following statements is correct about constructors in C#.NET?",
        "Options": [
            "a) A constructor cannot be declared as private",
            "b) A constructor cannot be overloaded",
            "c) A constructor can be a static constructor",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Once the object is declared means, the constructor is also declared by default.\n"
    },
    {
        "id": 178,
        "Question": "What is the return type of constructors?",
        "Options": [
            "a) int",
            "b) float",
            "c) void",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: C# provides the feature of method overloading which means methods with same name but different types and arguments.\n"
    },
    {
        "id": 179,
        "Question": "Which method has the same name as that of its class?",
        "Options": [
            "a) delete",
            "b) class",
            "c) constructor",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Static constructor is a constructor which can be called before any object of class is created or any static method is invoked. A static constructor is implicitly called by .net CLR.\n"
    },
    {
        "id": 180,
        "Question": "Which operator among the following signifies the destructor operator?",
        "Options": [
            "a) ::",
            "b) :",
            "c) ~",
            "d) &"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 181,
        "Question": "The method called by clients of a class to explicitly release any resources like network, connection, open files etc. When the object is no longer required?",
        "Options": [
            "a) Finalize()",
            "b) End()",
            "c) Dispose()",
            "d) Close()"
        ],
        "Answer": " Answer: c\nExplanation: Dispose() is only method called by clients of a class to explicitly release any resource like network connection, open files etc. When object is no longer required. Hence, Dispose() provides programmer with such programming control.\n"
    },
    {
        "id": 182,
        "Question": "Name a method which has the same name as that of class and which is used to destroy objects also called automatically when application is finally on process of being getting terminated.",
        "Options": [
            "a) Constructor",
            "b) Finalize()",
            "c) Destructor",
            "d) End"
        ],
        "Answer": " Answer: c\nExplanation: Definition of the destructor.\n"
    },
    {
        "id": 183,
        "Question": "Which of the following statements are correct?",
        "Options": [
            "a) There is one garbage collector per program running in memory",
            "b) There is one common garbage collector for all programs",
            "c) To garbage collect an object set all references to it as null",
            "d) Both There is one common garbage collector for all programs & To garbage collect an object set all references to it as null"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 184,
        "Question": "Operator used to free the memory when memory is allocated?",
        "Options": [
            "a) new",
            "b) free",
            "c) delete",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: ‘New’ is used to allocate memory in the constructors. Hence, we should use ‘delete’ to free that memory.\n"
    },
    {
        "id": 185,
        "Question": "Select wrong statement about destructor in C#?",
        "Options": [
            "a) A class can have one destructor only",
            "b) Destructors cannot be inherited or overloaded",
            "c) Destructors can have modifiers or parameters",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 186,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">double</span> k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> sample <span class=\"br0\">(</span><span class=\"kw4\">int</span> ii, <span class=\"kw4\">double</span> kk<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          i <span class=\"sy0\">=</span> ii<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          k <span class=\"sy0\">=</span> kk<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">double</span> j <span class=\"sy0\">=</span> <span class=\"br0\">(</span>i<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      ~sample<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">double</span> j <span class=\"sy0\">=</span> i <span class=\"sy0\">-</span> k<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          sample s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample<span class=\"br0\">(</span><span class=\"nu0\">8</span>, <span class=\"nu0\">2.5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0  0",
            "b) 10.5 0",
            "c) Compile time error",
            "d) 10.5 5.5"
        ],
        "Answer": " Answer: d\nExplanation: First constructor ‘sample’ is called  and hence then destructor ‘~sample’ is evaluated.\nOutput :\n\n\n\t\n\n10.5, 5.5\n\n\n"
    },
    {
        "id": 187,
        "Question": "What is the return type of destructor?",
        "Options": [
            "a) int",
            "b) void",
            "c) float",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Destructors do not have any return type not even void.\n"
    },
    {
        "id": 188,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">class</span> box</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> volume<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> width<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> height<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">public</span> box <span class=\"br0\">(</span> <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h, <span class=\"kw4\">int</span> l<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           width <span class=\"sy0\">=</span> w<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           height <span class=\"sy0\">=</span> h<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           length <span class=\"sy0\">=</span> l<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> ~box<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          volume <span class=\"sy0\">=</span> width <span class=\"sy0\">*</span> length <span class=\"sy0\">*</span> height<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          box b <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> box<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"sy0\">.</span><span class=\"me1\">volume</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 180",
            "c) Compile time error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: We cannot use any kind of modifier with destructor.\n"
    },
    {
        "id": 189,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> box</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> volume<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> width<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> height<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> box <span class=\"br0\">(</span> <span class=\"kw4\">int</span> w, <span class=\"kw4\">int</span> h, <span class=\"kw4\">int</span> l<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">width</span> <span class=\"sy0\">=</span> w<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">height</span> <span class=\"sy0\">=</span> h<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">length</span> <span class=\"sy0\">=</span> l<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      ~ box<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          volume <span class=\"sy0\">=</span> <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">width</span> <span class=\"sy0\">*</span> <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">length</span> <span class=\"sy0\">*</span> <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">height</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>volume<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span>  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          box b <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> box<span class=\"br0\">(</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) Code executes successfully but prints nothing",
            "c) Compile time error",
            "d) 180"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n\n\n180.\n\n\n"
    },
    {
        "id": 190,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i, j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span><span class=\"br0\">[</span>, <span class=\"br0\">]</span> arr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span> <span class=\"nu0\">3</span>, <span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span>j <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            arr<span class=\"br0\">[</span>i, j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> <span class=\"nu0\">2</span> <span class=\"sy0\">+</span> i <span class=\"sy0\">*</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>arr<span class=\"br0\">[</span>i, j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 0, 0  4, 4, 4  8, 8, 8",
            "b) 4, 4, 4  8, 8, 8   12, 12, 12",
            "c) 8, 8, 8  12, 12, 12  16, 16, 16",
            "d) 0, 0, 0  1, 1, 1  2, 2, 2"
        ],
        "Answer": " Answer: a\nExplanation: Since, with each value of of ‘i’ the value of ‘j’ is executed three times i.e\n             for i = 0, j = 0, 0, 0, i = 1, j = 2, 2, 2.\nOutput:\n\n\n\t\n\n        \n\n0, 0, 0 4, 4, 4 8, 8, 8\n\n\n"
    },
    {
        "id": 191,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> A <span class=\"sy0\">=</span> <span class=\"st0\">'K'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> B <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span><span class=\"nu0\">76</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     A<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     B<span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>A<span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span>B<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) M L",
            "b) U L",
            "c) L M",
            "d) A B"
        ],
        "Answer": " Answer: c\nExplanation: “++” increments the value of character by 1. A and B are given values K and 76, when we use increment operator their  values increments by 1, A and B becomes L and M.\nOutput:\n\n\n\t\n\nL, M.\n\n\n"
    },
    {
        "id": 192,
        "Question": "3. Complete the following C# code with “foreach condition”.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span>a <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">a<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">2</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span><span class=\"br0\">{</span><span class=\"nu0\">8</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">foreach</span><span class=\"br0\">(</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span>i <span class=\"kw1\">in</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"coMULTI\">/* add for loop */</span></pre></li><li class=\"li1\"><pre class=\"de1\">console<span class=\"sy0\">.</span><span class=\"me1\">write</span><span class=\"br0\">(</span> j<span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) foreach (int j = 1;(j(<)(a(0).GetUpperBound)); (j++));",
            "b) foreach (int j = 1;(j(<)(a.GetUpperBound(0))); (j++));",
            "c) foreach (int j in a.Length);",
            "d) foreach (int j in i);"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 193,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">double</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">345.09</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">byte</span> c <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">byte</span><span class=\"br0\">)</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 98",
            "b) 89",
            "c) 88",
            "d) 84"
        ],
        "Answer": " Answer: b\nExplanation: Type casting a larger variable into a smaller variable results in modules of larger variable by range of smaller variable. a is ‘345.09’ which is larger than byte range ie -128 to 127.\nOutput :\n\n\n89\n\n\n"
    },
    {
        "id": 194,
        "Question": "",
        "Options": [
            "a) ‘a’ is a reference to the array created on stack",
            "b) ‘a’ is a reference to an object created on stack",
            "c) ‘a’ is a reference to an object of a class that compiler drives from ‘System.Array’ class",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A perfect way of defining single array in C# which is derived automatically from class ‘System.Array’.\n"
    },
    {
        "id": 195,
        "Question": "What is the advantage of using 2D jagged array over 2D rectangular array?",
        "Options": [
            "a) Easy initialization of elements",
            "b) Allows unlimited elements as well as rows which had ‘0’ or are empty in nature",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: In many applications where 2 dimensional arrays are used, not all rows need to have all the elements i.e they are sparse. Many rows have 0 elements. In such cases it is better to use 2D jagged arrays as they allow unequal number of elements in each row and also allow for empty rows.\n"
    },
    {
        "id": 196,
        "Question": "7. Which statement is correct about following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\"><span class=\"kw4\">int</span><span class=\"br0\">[</span>, <span class=\"br0\">]</span>a<span class=\"sy0\">=</span><span class=\"br0\">{</span><span class=\"br0\">{</span><span class=\"nu0\">5</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">3</span><span class=\"br0\">}</span>,<span class=\"br0\">{</span><span class=\"nu0\">9</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">6</span><span class=\"br0\">}</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a)’a’ represents 1-D array of 5 integers",
            "b) a.GetUpperBound(0) gives 9",
            "c)’a’ represents rectangular array of 2 columns and 3 arrays",
            "d) a.GetUpperBound(0) gives 2"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 197,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Program p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Program<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    p<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>a <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">2</span>, <span class=\"nu0\">56</span>, <span class=\"nu0\">78</span>, <span class=\"nu0\">66</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"example of array\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"elements added are\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    p<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"ARRAY IS HAVING:{0}\"</span>, i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) Code runs successfully but prints nothing",
            "d) Code runs successfully and prints given on console"
        ],
        "Answer": " Answer: d\nExplanation: Object ‘p’ makes a call to invoke function display() and hence consecutively prints the output. Array ‘a’ is declared with elements again object ‘p’ makes  a call to display() and hence, consecutively prints the output with given elements.\nOutput:\n\n\n        ARRAY IS HAVING:2\n        ARRAY IS HAVING:3\n        ARRAY IS HAVING:8\n        elements added are:\n        ARRAY IS HAVING:2\n        ARRAY IS HAVING:56\n        ARRAY IS HAVING:78\n        ARRAY IS HAVING:66\n\n\n"
    },
    {
        "id": 198,
        "Question": "Choose selective differences between an array in c# and array in other programming languages.",
        "Options": [
            "a) Declaring array in C# the square bracket([]) comes after the type but not after identifier",
            "b) It is necessary to declare size of an array with its type",
            "c) No difference between declaration of array in c# as well as in other programming languages",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: i. When declaring an array in C#, the square brackets ([]) come after the type, not the identifier. Brackets after the identifier are not legal syntax in C#.\n example :\n\n\nint[] IntegerArray;\n\n\nii. The size of the array is not part of its type as it is in the C language. This allows to declare an array and assign any array of int objects to it, regardless of the array’s length.\n\n\n    int[] IntegerArray; \n    IntegerArray = new int[10]; \n    IntegerArray = new int[50];\n\n\n"
    },
    {
        "id": 199,
        "Question": "Which of the following  string() method are used to compare two strings with each other?",
        "Options": [
            "a) CopyTo()",
            "b) Copy()",
            "c) Compare()",
            "d) CompareTo()"
        ],
        "Answer": " Answer: b\nExplanation: Creates a new string by copying one string to another.\n"
    },
    {
        "id": 200,
        "Question": "Choose the base class for string() method:",
        "Options": [
            "a) System.Array",
            "b) System.char",
            "c) System.String",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: String is an alias for the predefined “System.string” class from which most of the string() methods are derived.\n"
    },
    {
        "id": 201,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\" Cshr \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span><span class=\"nu0\">3</span> , <span class=\"st0\">\" a \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s3 <span class=\"sy0\">=</span> s2<span class=\"sy0\">.</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span><span class=\"nu0\">5</span> , <span class=\"st0\">\" p \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span> s3<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s3<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Cshar",
            "b) CsharP",
            "c) Csharp",
            "d) Cshrap"
        ],
        "Answer": " Answer: c\nExplanation: Insertion of character ‘a’ at position ‘3’ using insert() which returns a new string with  a substring inserted at a specified location.\nOutput:\n\n\n        \n\n Csharp\n\n\n"
    },
    {
        "id": 202,
        "Question": "Which of the following statement is correct about a string in C#.NET?",
        "Options": [
            "a) The System.Array class is used to represent a string",
            "b) A string has a zero-based index",
            "c) A number cannot be represented in the form of a string",
            "d) A string is mutable because it can be modified once it has been created"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 203,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" I \"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"Love\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" ComputerScience \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) HelloILoveComputerScience",
            "b) Hello I Love ComputerScience",
            "c) Compile time error",
            "d) Hello"
        ],
        "Answer": " Answer: d\nExplanation: In first comparison it is being checked either two strings are equal or not but in second comparison it is checked whether two references are equal or not.\nOutput:\n\n\n        Unequal\n        Unequal\n\n\n"
    },
    {
        "id": 204,
        "Question": "Correct way to find if contents of two strings are equal?",
        "Options": [
            "a) if (s1 = s2)",
            "b) if (s1 != s2)",
            "c) if (strcmp (s1 ,s2))",
            "d) if ( s1 is s2)"
        ],
        "Answer": " Answer: b\nExplanation: Here ‘+’ defined operator works as concatenation for strings.\nOutput :\n\n\n Hello I Love ComputerScience\n\n\n"
    },
    {
        "id": 205,
        "Question": "Which of the following statements are correct?",
        "Options": [
            "a) String is value type",
            "b) String literals can contain any character literal including escape sequences",
            "c) The equality operators are defined to compare values of string objects as well as references",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: “==” operator used to compare length of two strings and strcmp() is the inbuilt method derived from string class.\n"
    },
    {
        "id": 206,
        "Question": "Which of these operators can be used to concatenate two or more String objects?",
        "Options": [
            "a) +",
            "b) +=",
            "c) &",
            "d) ||"
        ],
        "Answer": " Answer: b\nExplanation: None\n"
    },
    {
        "id": 207,
        "Question": "The Method use to remove white space from a string?",
        "Options": [
            "a) Split()",
            "b) Substring()",
            "c) Trim()",
            "d) TrimStart()"
        ],
        "Answer": " Answer: a\nExplanation:\n\n\n             string s1 = \"Hello\"+ \" I \" + \"Love\" + \" ComputerScience \";\n             Console.WriteLine(s1);\n             Hello I Love ComputerScience.\n\n\n"
    },
    {
        "id": 208,
        "Question": "What is the String in C# meant for?",
        "Options": [
            "a) Variable",
            "b) Character Array",
            "c) Object",
            "d) Class"
        ],
        "Answer": " Answer: c\nExplanation: C# Supports a predefined reference type known as string. When we declare a string using string type we are declaring the object to be of type “System.String”.\n"
    },
    {
        "id": 209,
        "Question": "What does the term ‘immutable’ means in term of string objects?",
        "Options": [
            "a) We can modify characters included in the string",
            "b) We cannot modify characters contained in the string",
            "c) We cannot perform various operation of comparison, inserting, appending etc",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: String objects are ‘immutable’ means we cannot modify the characters contained in string. Also operation on string produce a modified version of string rather then modifying characters of string.\n"
    },
    {
        "id": 210,
        "Question": "To perform comparison operation on strings supported operations are ____________",
        "Options": [
            "a) Compare()",
            "b) Equals()",
            "c) Assignment ‘==’ operator",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 211,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello I Love Csharp \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span> <span class=\"br0\">(</span>s1<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'I'</span><span class=\"br0\">)</span> <span class=\"sy0\">-</span> s1<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'l'</span><span class=\"br0\">)</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> s1<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'p'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) I",
            "b) Hello I",
            "c) Love",
            "d) H"
        ],
        "Answer": " Answer: d\nExplanation: ‘I’ = index position[6], ‘l’ = index position[2]. So, I – l = 6-2 = 4*(index position of p = 18) = 72. Character with ASCII Value 72 = ‘H’.\nOutput : H\n"
    },
    {
        "id": 212,
        "Question": "Correct way to convert a string to uppercase using string class method()?",
        "Options": [
            "a) Upper()",
            "b) ToUpper()",
            "c) Object.ToUpper()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: string s1 = “Hello I Love Csharp “;\n             Console.WriteLine(s1.ToUpper());\n             Output: HELLO I LOVE CSHARP.\n"
    },
    {
        "id": 213,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj1 <span class=\"sy0\">=</span> <span class=\"st0\">\"world\"</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj2 <span class=\"sy0\">=</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span> <span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">Equals</span><span class=\"br0\">(</span>obj2<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> obj2<span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True True",
            "b) False False",
            "c) True 0",
            "d) False 1"
        ],
        "Answer": " Answer: c\nExplanation: Equal() checks if two string objects ‘obj’ and ‘obj2’ are equal or not and hence returns true or false. Similarly, “CompareTo” operator check two objects and since string obj2 = obj, it returns bool value ‘0’. Hence, they are equal.\nOutput :\n\n\n\t\n\nTrue 0\n\n\n"
    },
    {
        "id": 214,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj1 <span class=\"sy0\">=</span> <span class=\"st0\">\"world\"</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj2 <span class=\"sy0\">=</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s <span class=\"sy0\">=</span> obj<span class=\"sy0\">+</span><span class=\"st0\">\" \"</span><span class=\"sy0\">+</span>obj1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'r'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 7",
            "b) 8",
            "c) 9",
            "d) 10"
        ],
        "Answer": " Answer: c\nExplanation: Length() method calculates number of characters in a string. ‘Obj2’ assumes the value of object ‘obj’ in itself.\nOutput:\n\n\n        hello world\n        11\n\n\n"
    },
    {
        "id": 215,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj1 <span class=\"sy0\">=</span> <span class=\"st0\">\"world\"</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj2 <span class=\"sy0\">=</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s <span class=\"sy0\">=</span> obj <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> obj1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">6</span> ,<span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello",
            "b) orld",
            "c) world",
            "d) o world"
        ],
        "Answer": " Answer: b\nExplanation: IndexOf() used to find absolute position of a character of substring.\nOutput:\n\n\n8\n\n\n"
    },
    {
        "id": 216,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj1 <span class=\"sy0\">=</span> <span class=\"st0\">\"worn\"</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> obj2 <span class=\"sy0\">=</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> <span class=\"br0\">(</span>obj1<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">'w'</span> ,<span class=\"st0\">'c'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello hello",
            "b) hello worn",
            "c) hello corn",
            "d) hello"
        ],
        "Answer": " Answer: c\nExplanation: ‘Substring()’ extract substrings from a given string using overloaded substring() method provided by string class.\nOutput:\n\n\nworld\n\n\n"
    },
    {
        "id": 217,
        "Question": "Which of these methods of class String is used to compare two String objects for their equality?",
        "Options": [
            "a) equals()",
            "b) Equals()",
            "c) isequal()",
            "d) Isequal()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 218,
        "Question": "Which of these methods is used to compare two strings such that after comparison output returns different integer values as (0 for false, 1 for true)?",
        "Options": [
            "a) Equals ()",
            "b) == operator",
            "c) Compare()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The comparison is case sensitive in nature and hence different integer values are returned for different conditions as under:\n             1. zero integer (0), if string s1 equal to string s2.\n             2. positive integer(+1), if string s1 greater than s2.\n             3. Negative integer(-1), if string s1 is less than s2.\n"
    },
    {
        "id": 219,
        "Question": "Which of these methods of class String is used to check whether a substring exists at the beginning of the particular string?",
        "Options": [
            "a) StartsWith()",
            "b) EndsWith()",
            "c) Starts()",
            "d) ends()"
        ],
        "Answer": " Answer: a\nExplanation: Method startswith() of string class is used to check whether a substring exists in the beginning of string or not.\n"
    },
    {
        "id": 220,
        "Question": "Which of these methods returns the string such that some characters which are specified to be removed from the end of strings are removed from string by mentioning the number of characters to be removed?",
        "Options": [
            "a) Trim()",
            "b) Remove()",
            "c) TrimEnd()",
            "d) Split()"
        ],
        "Answer": " Answer: a\nExplanation: Removes a string of characters from the end of string by mentioning the number of characters to be removed from the string.\n"
    },
    {
        "id": 221,
        "Question": "What is the value returned by function compareTo() if the invoking string is less than the string compared?",
        "Options": [
            "a) zero",
            "b) value less than zero",
            "c) value greater than zero",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: compareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared to.\n"
    },
    {
        "id": 222,
        "Question": "Which of these data type values is returned by equals() method of String class?",
        "Options": [
            "a) char",
            "b) int",
            "c) boolean",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: equals() method of string class returns boolean value true if both the strings are equal and false if they are unequal.\n"
    },
    {
        "id": 223,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"i love Csharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">bool</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">StartsWith</span><span class=\"br0\">(</span><span class=\"st0\">\"I\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: StartsWith() method is case sensitive “i” and “I” are treated differently, hence false is stored in a.\nOutput:\n\n\n\t\n\nfalse\n\n\n"
    },
    {
        "id": 224,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"I love You\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span>s1 <span class=\"sy0\">==</span> s2<span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Equals</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true true",
            "b) false false",
            "c) true false",
            "d) false true"
        ],
        "Answer": " Answer: a\nExplanation: The ‘==’ operator tests the equality of strings and since s1 = “I love You” and also s2 = s1. So, true is returned. Similarly, Equals() returns true.\nsince the content of both s1 and s2 are equal in nature.\nOutput :\n\n\ntrue true\n\n\n"
    },
    {
        "id": 225,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>chars <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"z\"</span>, <span class=\"st0\">\"x\"</span>, <span class=\"st0\">\"y\"</span>, <span class=\"st0\">\"z\"</span>, <span class=\"st0\">\"y\"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> chars<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> chars<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) zx",
            "b) xy",
            "c) zy",
            "d) yz"
        ],
        "Answer": " Answer: c\nExplanation: compareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared To 4.\nOutput :\n\n\nzy\n\n\n"
    },
    {
        "id": 226,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">String</span> a <span class=\"sy0\">=</span> <span class=\"st0\">\"Csharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">String</span> b <span class=\"sy0\">=</span> <span class=\"st0\">\"CSHARP\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">int</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">c <span class=\"sy0\">=</span> a<span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) -2",
            "d) -1"
        ],
        "Answer": " Answer: d\nExplanation: Negative integer -1 is returned as ‘a’ is less than ‘b’ by CompareTo() method.\nOutput :\n\n\n-1\n\n\n"
    },
    {
        "id": 227,
        "Question": "Which of these methods of class String is used to separate a substring from a String object?",
        "Options": [
            "a) substring()",
            "b) Substring()",
            "c) SubString()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 228,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> a <span class=\"sy0\">=</span> <span class=\"st0\">\"Ilove\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> b <span class=\"sy0\">=</span> <span class=\"st0\">\"CSHARP\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     b <span class=\"sy0\">=</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Concat</span><span class=\"br0\">(</span>a, <span class=\"st0\">'  '</span>, b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) IloveCSHARP",
            "b) I loveCSHARP",
            "c) Ilove",
            "d) Ilove CSHARP"
        ],
        "Answer": " Answer: d\nExplanation: Concat() method is used to join two strings without the use of ‘+’ operator.\nOutput :\n\n\n\t\n\n        \n\nIlove CSHARP\n\n\n"
    },
    {
        "id": 229,
        "Question": "Which of these methods of class are used to remove the leading and backward whitespaces?",
        "Options": [
            "a) startsWith()",
            "b) trim()",
            "c) Trim()",
            "d) doTrim()"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 230,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">String</span> a <span class=\"sy0\">=</span> <span class=\"st0\">\"Ilove\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">String</span> b <span class=\"sy0\">=</span> <span class=\"st0\">\"CSHARP\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      b <span class=\"sy0\">=</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Concat</span><span class=\"br0\">(</span>a,<span class=\"st0\">' '</span>,b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">string</span> d <span class=\"sy0\">=</span> b<span class=\"sy0\">.</span><span class=\"me1\">TrimStart</span><span class=\"br0\">(</span><span class=\"st0\">'I'</span>, <span class=\"st0\">'l'</span>, <span class=\"st0\">'o'</span>, <span class=\"st0\">'H'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Ilove CSHARP",
            "b) love CSHARP",
            "c) ve CSHARP",
            "d) ve CSARP"
        ],
        "Answer": " Answer: c\nExplanation:  trimstart() removes character mentioned consecutively in front positions not characters in mentioned in between positions.\nOutput :\n\n\n\t\n\n ve CSHARP\n\n\n"
    },
    {
        "id": 231,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"  Hello Computer \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> a <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">Trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\\"</span>\"</span> <span class=\"sy0\">+</span> s <span class=\"sy0\">+</span> <span class=\"st0\">\"<span class=\"es0\">\\\"</span>\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ” Hello Computer ”",
            "b) “HelloComputer”",
            "c) “Hello Computer”",
            "d) Hello Computer"
        ],
        "Answer": " Answer: c\nExplanation: Trim() method is used to remove forward and backward spaces in strings.\nOutput :\n\n\n \"Hello Computer\"\n\n\n"
    },
    {
        "id": 232,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> a <span class=\"sy0\">=</span> c <span class=\"sy0\">+</span> <span class=\"st0\">\"Bye\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) “Hello Bye”",
            "b) “HelloBye”",
            "c) Hello Bye",
            "d) HelloBye"
        ],
        "Answer": " Answer: d\nExplanation: ‘+’ operator method works in the form of concatenate method() and hence is used to join two strings together.\nOutput :\n\n\n HelloBye\n\n\n"
    },
    {
        "id": 233,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">String</span> a <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">'l'</span>, <span class=\"st0\">'w'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Helloll",
            "b) Hewlo",
            "c) Helwo",
            "d) Hewwo"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n\nHewwo\n\n\n"
    },
    {
        "id": 234,
        "Question": "Which of the following statements is correct?",
        "Options": [
            "a) replace() replace() method replaces last occurrence of a character in invoking strings with another character",
            "b) replace() method replaces only first occurrence of a character in invoking strings with another character",
            "c) replace() method replaces all occurrences of one character in invoking strings with another character",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 235,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello i love you\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">String</span> a <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      a <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">12</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ove",
            "b) you",
            "c) yo",
            "d) love you"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\nyo\n\n\n"
    },
    {
        "id": 236,
        "Question": "Which of these methods of the class String is used to obtain length of String object?",
        "Options": [
            "a) get()",
            "b) Sizeof()",
            "c) lengthof()",
            "d) length()"
        ],
        "Answer": " Answer: d\nExplanation: Method length() of string class is used to get the length of the object as string. Length and hence invokes the length() method.\n"
    },
    {
        "id": 237,
        "Question": "Which of these methods is an alternative to getChars() that stores the characters in an array of bytes?",
        "Options": [
            "a) getBytes()",
            "b) GetByte()",
            "c) giveByte()",
            "d) Give Bytes()"
        ],
        "Answer": " Answer: a\nExplanation: getBytes() stores the character in an array of bytes. It uses default character to byte conversions.\n"
    },
    {
        "id": 238,
        "Question": "Which of these methods can be used to convert all characters in a String into a character array?",
        "Options": [
            "a) CharAt()",
            "b) getChars()",
            "c) TocharArray()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 239,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> chars<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'x'</span>, <span class=\"st0\">'y'</span>, <span class=\"st0\">'z'</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">String</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) x",
            "b) xy",
            "c) z",
            "d) xyz"
        ],
        "Answer": " Answer: d\nExplanation: String(chars) is a constructor of class string, it initializes string s with the values stored in character array chars, therefore s contains “xyz”.\nOutput :\n\n\n        \n\nxyz\n\n\n"
    },
    {
        "id": 240,
        "Question": "5. Choose the effective stringBuilder method which helps in producing output for the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     StringBuilder s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> StringBuilder<span class=\"br0\">(</span><span class=\"st0\">\"object\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     s<span class=\"sy0\">.</span><span class=\"coMULTI\">/*______*/</span><span class=\"br0\">(</span><span class=\"st0\">\"Oriented Language\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">Output <span class=\"sy0\">:</span> objectOriented Language</pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Insert()",
            "b) Add()",
            "c) Append()",
            "d) Join()"
        ],
        "Answer": " Answer: c\nExplanation:\n\n\n\t\n\n              static void Main(string[] args)\n              {\n               StringBuilder s = new StringBuilder(\"object\");\n               s.Append(\"Oriented Language\");\n               Console.WriteLine(s);\n               Console.ReadLine();\n               }\nOutput : objectOriented Language\n\n\n"
    },
    {
        "id": 241,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">string</span> s <span class=\"sy0\">=</span> <span class=\"st0\">\" i love you\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'l'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">lastIndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'o'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'e'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 5 7",
            "b) 4 5 6",
            "c) 3 9 6",
            "d) 2 4 6"
        ],
        "Answer": " Answer: c\nExplanation:  indexof(‘l’) and lastIndexof(‘o’) are pre defined functions which are used to get the index of first and last occurrence of the character pointed by l and c respectively in the given array.\nOutput :\n\n\n 3, 9, 6\n\n\n"
    },
    {
        "id": 242,
        "Question": "Which of these methods of class String is used to extract all the characters from a String object?",
        "Options": [
            "a) CHARAT()",
            "b) Remove()",
            "c) charAt()",
            "d) Replace()"
        ],
        "Answer": " Answer: b\nExplanation: Replace() replaces all instances of a character with a new character while Remove extracts characters from the string.\n"
    },
    {
        "id": 243,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"hello\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span>  c1 <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"kw1\">Remove</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ello",
            "b) h",
            "c) hell",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The remove() deletes characters from the string except the character which is specified with its given position.\nOutput :\n\n\nh\n\n\n"
    },
    {
        "id": 244,
        "Question": "How is a string typically processed?",
        "Options": [
            "a) On a character by character basis",
            "b) On a string by string basis",
            "c) Both On a character by character basis & On a string by string basis",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 245,
        "Question": "How to print \\\\ on the screen?",
        "Options": [
            "a) Console.WriteLine(“\\\\”);",
            "b) Console.WriteLine(“\\\\\\”);",
            "c) Console.WriteLine(“\\\\\\\\”);",
            "d) Console.WriteLine(“\\\\\\\\\\\\”);"
        ],
        "Answer": " Answer: c\nExplanation:  Console.WriteLine(“\\\\\\\\”);\nOutput :\n\n\n \\\\\n\n\n"
    },
    {
        "id": 246,
        "Question": "Which of these is used as a default specifier for a member of the class if no access specifier is used for it?",
        "Options": [
            "a) private",
            "b) public",
            "c) public, within its own class",
            "d) protected"
        ],
        "Answer": " Answer: a\nExplanation: By definition if a class has no access specifiers, it defaults to private accessibility.\n"
    },
    {
        "id": 247,
        "Question": "Which of these is used to access members of class before the object of that class is created?",
        "Options": [
            "a) public",
            "b) private",
            "c) static",
            "d) protected"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 248,
        "Question": "Which of these base classes are accessible to the derived class members?",
        "Options": [
            "a) static",
            "b) protected",
            "c) private",
            "d) Shared"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 249,
        "Question": "What is the process by which we can control parts of a program that can access the members of a class?",
        "Options": [
            "a) Polymorphism",
            "b) Abstraction",
            "c) Encapsulation",
            "d) Recursion"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 250,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sum   </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> math<span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> a <span class=\"sy0\">*</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         y <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sum p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">         p<span class=\"sy0\">.</span><span class=\"me1\">math</span><span class=\"br0\">(</span><span class=\"nu0\">12</span>, <span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>p<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 48, 30",
            "b) 48, 0",
            "c) 0, 0",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: variable ‘y’ is not accessible due to its access level.\nOutput :\n\n\n\t\n\nChange private y to public y\n\n\n"
    },
    {
        "id": 251,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sum   </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> <span class=\"kw1\">add</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> a,  <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         y <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sum obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sum obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span>a,  a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj2<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>,  a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> obj2<span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6, 9",
            "b) 5, 9",
            "c) 9, 10",
            "d) 3, 2"
        ],
        "Answer": " Answer: b\nExplanation: Here, a = 2,  a + 1 = 2 + 1 = 3.\nSo, a = 2,  b = 3.\nx = 2 + 3  = 5.\ny = 5 + 3 = 8.\nSimilarly, a = 5,  b = a + 1 = 4.\ny =  5 + 4 = 9.\nOutput :\n\n\n5, 9\n\n\n"
    },
    {
        "id": 252,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> math</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> a,b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> math<span class=\"br0\">(</span><span class=\"kw4\">int</span> i,  <span class=\"kw4\">int</span> j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">void</span> sum<span class=\"br0\">(</span>math m<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         m<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         m<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">+=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         math t <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> math<span class=\"br0\">(</span><span class=\"nu0\">20</span>,  <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         t<span class=\"sy0\">.</span><span class=\"me1\">sum</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>t<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> t<span class=\"sy0\">.</span><span class=\"me1\">b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10, 20",
            "b) 20, 10",
            "c) 40, 12",
            "d) 5, 40"
        ],
        "Answer": " Answer: c\nExplanation: t.sum(t) sends object ‘t’ as parameter whose variables a & b are multiplied and added by 2 respectively by sum() function of class math. Hence, a & b become 40 and 12 respectively.\nOutput :\n\n\n 40, 12\n\n\n"
    },
    {
        "id": 253,
        "Question": "Accessibility modifier defined in a class are?",
        "Options": [
            "a) public, private, protected",
            "b) public, internal, protected internal",
            "c) public, private, internal, protected internal",
            "d) public, private, protected, internal, protected internal"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 254,
        "Question": "Choose the statements which are false in nature?",
        "Options": [
            "a) The base class member functions can access public member functions of derived class",
            "b) An object of a derived class cannot access private member of the base class",
            "c) Private members of the base class cannot be accessed by derived class member functions or objects of derived class",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 255,
        "Question": "Which of these access specifiers must be used for main() method?",
        "Options": [
            "a) private",
            "b) public",
            "c) protected",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: By default main() is declared private if no other access specifier is used for it.\n"
    },
    {
        "id": 256,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         method1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         method2<span class=\"br0\">(</span><span class=\"kw1\">out</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> method1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> method2<span class=\"br0\">(</span><span class=\"kw1\">out</span> <span class=\"kw4\">int</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 36, 10",
            "b) 10, 36",
            "c) 0, 0",
            "d) 36, 0"
        ],
        "Answer": " Answer: b\nExplanation: Variable ‘i’ is passed as reference parameter declared with ‘ref’ modifier and variable ‘j’ is passed as a  output parameter declared with ‘out’ keyword. Reference parameter used to pass value by reference is the same with out parameter.\nOutput :\n\n\n\t\n\n        \n\n10, 36\n\n\n"
    },
    {
        "id": 257,
        "Question": "Statements about ‘ref’  keyword used in C#.NET are?",
        "Options": [
            "a) The ref keyword causes arguments to be passed by reference",
            "b) While using ‘ref’ keyword any changes made to the parameter in the method will be reflected in the variable when control is passed back to the calling method",
            "c) Ref usage eliminates overhead of copying large data items",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 258,
        "Question": "4. Which method does following C# code explains?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>, b <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     method<span class=\"br0\">(</span><span class=\"kw1\">ref</span> a,  <span class=\"kw1\">ref</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> swap<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> i,  <span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     t <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     i <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     j <span class=\"sy0\">=</span> t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Call by reference",
            "b) Call by value",
            "c) Output parameter",
            "d) parameter arrays"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n\n21 1 21 21\n\n\n"
    },
    {
        "id": 259,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>arr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun <span class=\"br0\">(</span><span class=\"kw1\">ref</span> arr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> arr<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> arr<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span>a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a<span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">24</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 0, 32, 0, 0, 0",
            "b) 0, 24, 0, 32, 0, 0",
            "c) 24, 0, 32, 0, 0, 0",
            "d) 0, 0, 32, 0, 0, 0"
        ],
        "Answer": " Answer: a\nExplanation: The following set of code explains swapping of numbers by reference parameters which makes usage of call by reference process.\n"
    },
    {
        "id": 260,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> res <span class=\"sy0\">=</span> fun <span class=\"br0\">(</span><span class=\"kw1\">out</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>res<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     console<span class=\"sy0\">.</span><span class=\"me1\">readline</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> fun<span class=\"br0\">(</span><span class=\"kw1\">out</span> <span class=\"kw4\">int</span> i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     i <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;=</span> i<span class=\"sy0\">;</span> j<span class=\"sy0\">++</span> <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     s <span class=\"sy0\">=</span> s <span class=\"sy0\">*</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">return</span> s<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4490",
            "b) 5040",
            "c) 5400",
            "d) 3500"
        ],
        "Answer": " Answer: b\nExplanation: index positions which are assigned the new values are passed as a reference parameter and hence rest positions are filled with zero values.\nOutput :\n\n\n 0 24 0 32 0 0\n\n\n"
    },
    {
        "id": 261,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span>, c <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     method <span class=\"br0\">(</span>a,  <span class=\"kw1\">ref</span> b, <span class=\"kw1\">ref</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> method<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> p, <span class=\"kw1\">ref</span> <span class=\"kw4\">int</span> k<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     p <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> x <span class=\"sy0\">*</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     k <span class=\"sy0\">=</span> x <span class=\"sy0\">*</span> x <span class=\"sy0\">+</span> p<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 30, 55",
            "b) 55, 30",
            "c) Compile time error",
            "d) 0, 0"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n5040\n\n\n"
    },
    {
        "id": 262,
        "Question": "Keyword used to define call by reference parameter in C# .NET?",
        "Options": [
            "a) &",
            "b) out",
            "c) ref",
            "d) &&"
        ],
        "Answer": " Answer: c\nExplanation: Error occurrence as mismatch in parameter of method() definition. Keyword ‘ref’ should be used with parameter ‘p’ as ref int p.\n"
    },
    {
        "id": 263,
        "Question": "9. Select the correct match of parameter declaration.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">Void</span> main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">float</span> c <span class=\"sy0\">=</span> 7<span class=\"sy0\">.</span>2f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     math <span class=\"br0\">(</span><span class=\"kw1\">ref</span> a, <span class=\"kw1\">ref</span> b, <span class=\"kw1\">ref</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> b <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> math<span class=\"br0\">(</span><span class=\"coMULTI\">/*add parameter declaration */</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a <span class=\"sy0\">+=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     b <span class=\"sy0\">*=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     c <span class=\"sy0\">+=</span> a <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ref int a,  int b,  ref float c",
            "b) ref int a,  ref float c,  ref int b",
            "c) ref int a,  ref int b,  float c",
            "d) ref int a,  ref int b,  ref float c"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 264,
        "Question": "Which statement is/are correct?",
        "Options": [
            "a) An argument passed to a ref parameter need not be initialized first",
            "b) Variables passed as out arguments need to be initialized prior to being passed",
            "c) To use a ref parameter, only the calling method must explicitly use the ref keyword",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: static Void main(string[] args)\n              {\n                int a = 5;\n                int b = 6;\n                float c = 7.2f;\n                math(ref a,  ref b,  ref c);\n                console.writeLine(a + ” ” + b + ” ” + c);\n              }\n"
    },
    {
        "id": 265,
        "Question": "The method in which large or variable number of arguments are handled is known as ________________",
        "Options": [
            "a) Value parameters",
            "b) Output parameters",
            "c) Parameter arrays",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 266,
        "Question": "The modifiers used to define an array of parameters or list of arguments is __________",
        "Options": [
            "a) ref",
            "b) out",
            "c) param",
            "d) var"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 267,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">object</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\" 1 \"</span>, 4<span class=\"sy0\">.</span>0f, <span class=\"st0\">\" harsh \"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">object</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 4.0 harsh",
            "b) 1 4",
            "c) 1 4 hars",
            "d) 1 4 harsh"
        ],
        "Answer": " Answer: d\nExplanation: ‘a’ is declared as array of objects which is passed as a parameter to a single method fun() using variable number of parameters.\nOutput :\n\n\n        \n\n 1 4 harsh\n\n\n"
    },
    {
        "id": 268,
        "Question": "Which of the following statements are correct?",
        "Options": [
            "a) C SHARP allows a function to have arguments with default values",
            "b) C SHARP allows a function to have variable number of arguments",
            "c) Params are used to specify the syntax for a function having arguments",
            "d) Omitting the return value type in method definition results into an exception"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 269,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    fun<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> k <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>,<span class=\"st0\">'<span class=\"es0\">\\0</span>'</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> k<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b)  3, 4, 7, 8, 5",
            "c)  3, 4, 7, 8, 5, 1, 2, 3, 4, 5",
            "d)  4, 6, 10, 12, 5"
        ],
        "Answer": " Answer: d\nExplanation:  Passing of array parameters declared in main() and hence adding elements of array passed using param to another array k[] declared in fun() method.\nOutput :\n\n\n\t\n\n4, 6, 10, 12, 5\n\n\n"
    },
    {
        "id": 270,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">*</span> <span class=\"nu0\">5</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1, 2, 3, 4, 5",
            "b) 5, 10, 15, 20, 25",
            "c) 5, 25, 125, 625, 3125",
            "d) 6, 12, 18, 24, 30"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n 5, 10, 15, 20, 25\n\n\n"
    },
    {
        "id": 271,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">2</span>, <span class=\"nu0\">21</span>, <span class=\"nu0\">34</span>, <span class=\"nu0\">46</span>, <span class=\"nu0\">85</span>, <span class=\"nu0\">88</span>, <span class=\"nu0\">90</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun<span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> c <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span> b<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">if</span> <span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         c<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"even numbers are:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;=</span> b<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) 2, 21, 34, 4, 6, 46, 88, 90",
            "c) 2, 4, 34, 46, 6, 88, 90",
            "d) 2, 34, 46, 88, 90"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 272,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">80</span>, <span class=\"nu0\">82</span>, <span class=\"nu0\">65</span>, <span class=\"nu0\">72</span>, <span class=\"nu0\">83</span>, <span class=\"nu0\">67</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span> <span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 67 83 72 65 82 80",
            "b) P R A H S C",
            "c) C S H A R P",
            "d) 80 82 65 72 83 67"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 273,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> x <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">65</span>, <span class=\"nu0\">66</span>, <span class=\"nu0\">67</span>, <span class=\"nu0\">68</span>, <span class=\"nu0\">69</span>, <span class=\"nu0\">70</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     fun<span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"kw1\">params</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> b <span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> b<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">32</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>b<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A, B, C, D, E, F",
            "b) F, E, D, C, B, A",
            "c) f, e, d, c, b",
            "d) b, c, d, e, f"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 274,
        "Question": "The capability of an object in Csharp to take number of different forms and hence display behaviour as according is known as ___________",
        "Options": [
            "a) Encapsulation",
            "b) Polymorphism",
            "c) Abstraction",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 275,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">150</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> newspaper <span class=\"sy0\">:</span>sample</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw3\">new</span> <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>sample<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> sample<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a)  100 150 1000",
            "b)  1000 150 1000",
            "c)  100 150 1000",
            "d)  100 150 100"
        ],
        "Answer": " Answer: c\nExplanation: sample.x = 100\n              sample.y = 150\n              variable within scope of main() is x = 1000\nOutput :\n\n\n\t\n\n        \n\n 100  150  1000\n\n\n"
    },
    {
        "id": 276,
        "Question": "Which of the following keyword is used to change data and behavior of a base class by replacing a member of the base class with a new derived member?",
        "Options": [
            "a) Overloads",
            "b) Overrides",
            "c) new",
            "d) base"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 277,
        "Question": "Correct way to overload +operator?",
        "Options": [
            "a) public sample operator + (sample a, sample b)",
            "b) public abstract operator + (sample a,sample b)",
            "c) public static sample operator + (sample a, sample b)",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 278,
        "Question": "5. What will be the Correct statement of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">virtual</span> <span class=\"kw4\">void</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> subject <span class=\"sy0\">:</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw3\">new</span> <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) The subject class version of a() method gets called using sample class reference which holds subject class object",
            "b) subject class hides a() method of base class",
            "c) The code replaces the subject class version of a() with its math class version",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 279,
        "Question": "Which of the following statements is correct?",
        "Options": [
            "a) Each derived class does not have its own version of a virtual method",
            "b) If a derived class does not have its own version of virtual method then one in base class is used",
            "c) By default methods are virtual",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 280,
        "Question": "Selecting appropriate method out of number of overloaded methods by matching arguments in terms of number, type and order and binding that selected method to object at compile time is called?",
        "Options": [
            "a) Static binding",
            "b) Static Linking",
            "c) Compile time polymorphism",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 281,
        "Question": "Wrong statement about run time polymorphism is?",
        "Options": [
            "a) The overridden base method should be virtual, abstract or override",
            "b) An abstract method is implicitly a virtual method",
            "c) An abstract inherited property cannot be overridden in a derived class",
            "d) Both override method and virtual method must have same access level modifier"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 282,
        "Question": "1. What will be the correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">struct</span> book</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">String</span> name<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> pages<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> Single price<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">book b <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> book<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) New structure can be inherited from struct book",
            "b) When the program terminates, variable b will get garbage collected",
            "c) The structure variable ‘b’ will be created on the stack",
            "d) When the program terminates,  variable b will get garbage collected"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 283,
        "Question": "2. What will be the correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> trial</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">float</span> d<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">struct</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> Single y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> trial z<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">sample s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) trial object referred by z is created on the stack",
            "b) z is created on the heap",
            "c) Both s and z will be created on the heap",
            "d) s will be created on the stack"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 284,
        "Question": "Choose the correct statement among the following which supports the fact that C# does not allow the creation of empty structures?",
        "Options": [
            "a) C#.NET supports creation of abstract user-defined data types using structures",
            "b) By having empty structures, it would mean that the new data types have no data associated with, which does not make any sense in C#.NET",
            "c) Basic reason to create structures is the inability to represent real life objects using standard data types offered by the language",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Basic definition of structures in C#.NET.\n"
    },
    {
        "id": 285,
        "Question": "Choose the correct statement about structures as to why they are defined as value types but not reference types?",
        "Options": [
            "a) Since space required for structure variables is allocated on stack which is a form of memory that is automatically available when a variable to be used is in scope",
            "b) Structures generally are used to represent user defined data types that consists of small amount of data in them. Hence using stack for declaration of such variables is not a problem",
            "c) All of the mentioned",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 286,
        "Question": "Choose the wrong statement about structures in C#.NET?",
        "Options": [
            "a) Structures can be declared within a procedure",
            "b) Structures can implement an interface but they cannot inherit from another structure",
            "c) Structure members cannot be declared as protected",
            "d) A structure cannot be empty"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 287,
        "Question": "When does a structure variable get destroyed?",
        "Options": [
            "a) When no reference refers to it, it will get garbage collected",
            "b) Depends on whether it is created using new or without new operator",
            "c) As variable goes out of the scope",
            "d) Depends on either we free its memory using free() or delete()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 288,
        "Question": "9. Calculate the number of bytes a structure variable s occupies in the memory if it is defined as follows.<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> abc</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">Decimal</span> d<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">struct</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> Single y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> trial z<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  sample s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24 bytes",
            "b) 8 bytes",
            "c) 16 bytes",
            "d) 12 bytes"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 289,
        "Question": "Select the wrong statements among the following?",
        "Options": [
            "a) A structure can contain properties",
            "b) A structure can contain constructors",
            "c) A structure can contain protected data members",
            "d) A structure can contain constants"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput –\n\n\n12 bytes\n\n\n"
    },
    {
        "id": 290,
        "Question": "12. Which of the following is the correct result for the given statement in the C#.NET statement given below?\n    p = q<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">struct</span> employee</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> employee id<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">string</span> city<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">employee q <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> employee<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">employee p<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">p <span class=\"sy0\">=</span> q<span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Elements of ‘q’ will be copied into corresponding elements of p",
            "b) Address stored in q will get copied into p",
            "c) Address of first element of q will get copied into p",
            "d) Once assignment is over. q will go out of scope and hence get exited forever"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput –\n\n\n         20\n         20\n\n\n"
    },
    {
        "id": 291,
        "Question": "13. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">struct</span> abc</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             abc x <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> abc<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             abc z<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             x<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             z <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             z<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             console<span class=\"sy0\">.</span><span class=\"me1\">Writeline</span><span class=\"br0\">(</span>x<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> y<span class=\"sy0\">.</span><span class=\"me1\">i</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10 10",
            "b) 10 15",
            "c) 15 10",
            "d) 15 15"
        ],
        "Answer": " Answer: c\nExplanation:  None.\n"
    },
    {
        "id": 292,
        "Question": "Choose the correct statements about enum used in C#.NET?",
        "Options": [
            "a) An enum variable cannot have a private access modifier",
            "b) An enum variable can be defined inside a class or a namespace",
            "c) An enum variable cannot have a protected access modifier",
            "d) An enum variable cannot have a public access modifier"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 293,
        "Question": "Which among the following cannot be used as a datatype for an enum in C#.NET?",
        "Options": [
            "a) short",
            "b) double",
            "c) int",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 294,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">enum</span> days<span class=\"sy0\">:</span><span class=\"kw4\">int</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    sunday <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">3</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">    monday,</pre></li><li class=\"li1\"><pre class=\"de1\">    tuesday</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>days<span class=\"sy0\">.</span><span class=\"me1\">sunday</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>days<span class=\"sy0\">.</span><span class=\"me1\">monday</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>days<span class=\"sy0\">.</span><span class=\"me1\">tuesday</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -3 0 1",
            "b) 0 1 2",
            "c) -3 -2 -1",
            "d) sunday monday tuesday"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 295,
        "Question": "4. What will be the correct statement of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">enum</span> color<span class=\"sy0\">:</span><span class=\"kw4\">byte</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    yellow <span class=\"sy0\">=</span> <span class=\"nu0\">500</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">    green <span class=\"sy0\">=</span> <span class=\"nu0\">1000</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">    pink <span class=\"sy0\">=</span> <span class=\"nu0\">1300</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) byte value cannot be assigned to enum elements",
            "b) enum elements should always take successive values",
            "c) enum must always be of int type",
            "d) When the valid range of byte exceeds, the compiler will report an error"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 296,
        "Question": "Wrong statement about enum used in C#.NET is?",
        "Options": [
            "a) An enum can be declared inside a class",
            "b) An object cannot be assigned to an enum variable",
            "c) An enum can be declared outside a class",
            "d) An enum can have Single and Double values"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 297,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">enum</span> per</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     a, </pre></li><li class=\"li1\"><pre class=\"de1\">     b, </pre></li><li class=\"li1\"><pre class=\"de1\">     c, </pre></li><li class=\"li1\"><pre class=\"de1\">     d, </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> per<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> Console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>per<span class=\"sy0\">.</span><span class=\"me1\">b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 11",
            "b) 1",
            "c) 2",
            "d) compile time error"
        ],
        "Answer": " Answer: d\nExplanation:  It will report an error since enum element cannot be assigned a value outside the enum declaration.\n"
    },
    {
        "id": 298,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">enum</span> color<span class=\"sy0\">:</span><span class=\"kw4\">int</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    red,</pre></li><li class=\"li1\"><pre class=\"de1\">    green,</pre></li><li class=\"li1\"><pre class=\"de1\">    blue <span class=\"sy0\">=</span> <span class=\"nu0\">5</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">    cyan,</pre></li><li class=\"li1\"><pre class=\"de1\">    pink <span class=\"sy0\">=</span> <span class=\"nu0\">10</span>,</pre></li><li class=\"li1\"><pre class=\"de1\">    brown</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>color<span class=\"sy0\">.</span><span class=\"me1\">green</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>color<span class=\"sy0\">.</span><span class=\"me1\">brown</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2 10",
            "b) 2 11",
            "c) 1 11",
            "d) 1 5"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n 1 11\n\n\n"
    },
    {
        "id": 299,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">enum</span> letters</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    a,</pre></li><li class=\"li1\"><pre class=\"de1\">    b,</pre></li><li class=\"li1\"><pre class=\"de1\">    c</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">letters l<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">l <span class=\"sy0\">=</span> letters<span class=\"sy0\">.</span><span class=\"me1\">a</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">Console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 0",
            "c) a",
            "d) letters.a"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\na\n\n\n"
    },
    {
        "id": 300,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">enum</span> colors</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     red,</pre></li><li class=\"li1\"><pre class=\"de1\">     black,</pre></li><li class=\"li1\"><pre class=\"de1\">     pink</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> colors s <span class=\"sy0\">=</span> colors<span class=\"sy0\">.</span><span class=\"me1\">black</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> type t<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> t <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">GetType</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> str<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> str <span class=\"sy0\">=</span> <span class=\"kw4\">Enum</span><span class=\"sy0\">.</span><span class=\"me1\">GetNames</span><span class=\"br0\">(</span>t<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>str<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) black",
            "c) red",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n red\n\n\n"
    },
    {
        "id": 301,
        "Question": "Choose the correct statement about enum used in C#.NET?",
        "Options": [
            "a) By default the first enumerator has a value equal to the number of elements present in the list",
            "b) Values of the enum elements cannot be populated from database",
            "c) The value of each successive enumerator is decreased by 1",
            "d) An enumerator has a white space in its name"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 302,
        "Question": "Which among the following differentiates enum in C#.NET from enum in C language?",
        "Options": [
            "a) C is strictly a typed language, C#.NET also is a strictly typed language",
            "b) In C, language variables of enum types can be used interchangeably with integers using type casts while enum variables cannot be used as a normal integers in C#.NET",
            "c) None of the mentioned",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 303,
        "Question": "Which procedure among the following should be used to implement a ‘Has a’  or a ‘Kind of’ relationship between two entities?",
        "Options": [
            "a) Polymorphism",
            "b) Inheritance",
            "c) Templates",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 304,
        "Question": "The number of levels of inheritance are?",
        "Options": [
            "a) 5",
            "b) 4",
            "c) 3",
            "d) 2"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 305,
        "Question": "3.  What does the following C# code signify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> a</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> b <span class=\"sy0\">:</span> a</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     variable declaration<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     method declaration<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Declaration of a base class",
            "b) Declaration of a subclass",
            "c) Declaration of base class & subclass and how subclass inherits the base class",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 306,
        "Question": "In an inheritance chain through which of the following, the base class and its components are accessible to the derived class?",
        "Options": [
            "a) Scope resolution operator(:)",
            "b) Class visibility modifiers (public,private etc.)",
            "c) Dot operator (.)",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 307,
        "Question": "Select the class visibility modifiers among the following:",
        "Options": [
            "a) Private, protected, public, internal",
            "b) Private, protected, public, internal, protected internal",
            "c) Private, protected, public",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 308,
        "Question": "In Inheritance concept, which of the following members of base class are accessible to derived class members?",
        "Options": [
            "a) static",
            "b) protected",
            "c) private",
            "d) shared"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 309,
        "Question": "Wrong statement about inheritance in C# .NET?",
        "Options": [
            "a) In inheritance chain, object construction begins from base class towards derived class",
            "b) Inheritance cannot extend base class functionality",
            "c) A derived class object contains all base class data",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation:None.\n"
    },
    {
        "id": 310,
        "Question": "A class member declared protected becomes member of subclass of which type?",
        "Options": [
            "a) public member",
            "b) private member",
            "c) protected member",
            "d) static member"
        ],
        "Answer": " Answer: d\nExplanation: A class member declared protected becomes private member of subclass.\n"
    },
    {
        "id": 311,
        "Question": "Which of the following functionality is facilitated by inheritance mechanism?",
        "Options": [
            "a) Use the existing functionality of base class",
            "b) Override the existing functionality of base class",
            "c) Implements new functionality in derived class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:None.\n"
    },
    {
        "id": 312,
        "Question": "Which statements among following are correct?",
        "Options": [
            "a) We can derive a class from a base class even if source code of base class not available",
            "b) Multiple inheritance is different from multiple levels of inheritance",
            "c) It is legal to make objects of one class as members of another class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 313,
        "Question": "If base class consist of two private integers, one static integer and derived class consist of two static integers and one private integer. What would be the size of derived class object?",
        "Options": [
            "a) size of object depends on sizes of its non static data members",
            "b) size of a derived class object is sum of sizes of non static data members of base class and derived class",
            "c) size of object is calculated using sizeof() method",
            "d) none of the mentioned"
        ],
        "Answer": " Answer:  a\nExplanation: None.\n"
    },
    {
        "id": 314,
        "Question": "Which is the correct way to create an object of the given class abc?",
        "Options": [
            "a) Declaring  existing  class as sealed",
            "b) Declaring  existing class as override",
            "c) Declaring existing class as overloads",
            "d) Declaring existing class as shadows"
        ],
        "Answer": " Answer:  a\nExplanation: None.\n"
    },
    {
        "id": 315,
        "Question": "Given class sample is inherited by class sample 1. Which are the correct statements about construction of object of class sample?",
        "Options": [
            "a) While creating the object firstly the constructor of class sample will be called followed by constructor of class sample 1",
            "b) The constructor of only sample class will be called",
            "c) While creating the object firstly constructor of class sample 1 will be called followed by constructor of class sample",
            "d) The order of calling constructors depend on whether constructors in class sample and sample 1 are private or public"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 316,
        "Question": "Which form of inheritance is not supported directly by C# .NET?",
        "Options": [
            "a) Multiple inheritance",
            "b) Multilevel inheritance",
            "c) Single inheritance",
            "d) Hierarchical inheritance"
        ],
        "Answer": " Answer: a\nExplanation: Supported in form of interfaces in secondary form.\n"
    },
    {
        "id": 317,
        "Question": "If no access modifier for a class is specified, then class accessibility is defined as?",
        "Options": [
            "a) public",
            "b) protected",
            "c) private",
            "d) internal"
        ],
        "Answer": " Answer: c\nExplanation: By default it is specified private in nature.\n"
    },
    {
        "id": 318,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> sample1 <span class=\"sy0\">:</span> sample </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sample1 obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 3",
            "c) 2",
            "d) Compile Time error"
        ],
        "Answer": " Answer: c\nExplanation: class sample & class sample1 both contain display() method, class sample1 inherits class sample, when display() method is called by object of class sample 1, display() method of class sample 1 is executed rather than that of Class sample.\n"
    },
    {
        "id": 319,
        "Question": "2. What will be the Correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">protected</span> <span class=\"kw4\">int</span> index<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        index <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> sample <span class=\"nu0\">1</span><span class=\"sy0\">:</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> <span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        index <span class=\"sy0\">+=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sample <span class=\"nu0\">1</span> z <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample <span class=\"nu0\">1</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        z <span class=\"sy0\">.</span> <span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Index should be declared as protected if it is to become available in inheritance chain",
            "b) Constructor of sample class does not get inherited in sample 1 class",
            "c) During constructing an object referred to by z, Firstly constructor of sample class will be called followed by constructor of sample 1 class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 320,
        "Question": "4. What will be size of the object created depicted by C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> baseclass</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">protected</span> <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> derived <span class=\"sy0\">:</span> baseclass</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">protected</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> z<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">Void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         derived a <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> derived<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20 bytes",
            "b) 12 bytes",
            "c) 16 bytes",
            "d) 24 bytes"
        ],
        "Answer": " Answer: c\nExplanation: ‘i’ and ‘ j’ are inaccessible due to protection level. Declare them as public variable and hence will be accessed in code.\n"
    },
    {
        "id": 321,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> sample<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"THIS IS BASE CLASS constructor\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> sample1 <span class=\"sy0\">:</span> sample </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sample1 obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sample1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code executes successfully prints nothing",
            "b) This is base class constructor",
            "c) Compile time error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Explained in fundamentals of inheritance.\n"
    },
    {
        "id": 322,
        "Question": "6. Select the statement which should be added to the current C# code to get the output as 10 20?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> baseclass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">protected</span> <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> derived <span class=\"sy0\">:</span> baseclass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> math<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"coMULTI\">/* add code here */</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span>   </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Console.writeline( a + ”  ” + this.a);",
            "b) Console.Writeline( mybase.a + ”  ” + a);",
            "c) console.writeline(a + ”  ” + base.a);",
            "d) console.writeline(base.a + ”  ” + a);"
        ],
        "Answer": " Answer: c\nExplanation: Base class accessibility level is much less compared to derived class. Declare it public to get desired output.\n"
    },
    {
        "id": 323,
        "Question": "8. Which C# statement should be added in function a() of class y to get output “i love csharp”?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> x</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         console<span class=\"sy0\">.</span><span class=\"me1\">write</span><span class=\"br0\">(</span><span class=\"st0\">\"bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> y <span class=\"sy0\">:</span> x</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> a<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"coMULTI\">/* add statement here */</span></pre></li><li class=\"li1\"><pre class=\"de1\">         console<span class=\"sy0\">.</span><span class=\"me1\">writeline</span><span class=\"br0\">(</span><span class=\"st0\">\"  i love csharp \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         y obj <span class=\"sy0\">=</span>  <span class=\"kw3\">new</span> obj<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">a</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) x.a();",
            "b) a();",
            "c) base.a();",
            "d) x::a();"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 324,
        "Question": "Which statements are correct?",
        "Options": [
            "a) If a base class consists of a member function fun() and a derived class do not have any function with this name. An object of derived class can access fun()",
            "b) A class D can be derived from class C, which is derived from class B which in turn is derived from class A",
            "c) If a base class and a derived class each include a member function with same name, the member function of the derived class will be called by object of derived class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n         a\n         b\n\n\n"
    },
    {
        "id": 325,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> A </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">protected</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> B <span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2 1",
            "b) 1 0",
            "c) 0 2",
            "d) 1 2"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 326,
        "Question": "11. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>     </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> B <span class=\"sy0\">:</span>A </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> <span class=\"kw1\">base</span><span class=\"sy0\">.</span><span class=\"me1\">j</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1, 3",
            "b) 2, 3",
            "c) 1, 2",
            "d) compile time error"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 327,
        "Question": "Which of these keywords is used to refer to member of base class from a sub class?",
        "Options": [
            "a) upper",
            "b) base",
            "c) this",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Both class A & B have members with same name that is j, member of class B will be called by default if no specifier is used. i contains 1 & j contains 2, printing 1 2.\nOutput:\n\n\n1, 2\n\n\n"
    },
    {
        "id": 328,
        "Question": "Which of these operators must be used to inherit a class?",
        "Options": [
            "a) :",
            "b) &",
            "c) ::",
            "d) extends"
        ],
        "Answer": " Answer: d\nExplanation: Class contains a private member variable j, this cannot be inherited by subclass B and does not have access to it.\n"
    },
    {
        "id": 329,
        "Question": "The process of defining two or more methods within the same class that have same name but different parameters list?",
        "Options": [
            "a) Method overloading",
            "b) Method overriding",
            "c) Encapsulation",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Two or more methods can have same name as long as their parameters declaration and definitions are different, the methods are said to be overloaded and the process is called method overloading. Method overloading is used when methods are required to perform similar tasks using different input parameters.\n"
    },
    {
        "id": 330,
        "Question": "Which of these can be overloaded?",
        "Options": [
            "a) Constructors",
            "b) Methods",
            "c) Both Constructors & Methods",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 331,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> <span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> <span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"kw4\">double</span> c, <span class=\"kw4\">double</span> d<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         y <span class=\"sy0\">=</span> c <span class=\"sy0\">+</span> d<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">double</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">3.5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span>a, a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span>b, b<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> obj<span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4,  3.5",
            "b) 8,  0",
            "c) 7.5,  8",
            "d) 8,  7"
        ],
        "Answer": " Answer: d\nExplanation: The concept of method overloading is implemented in method “vol” with same name but different definitions and parameter list which is overloaded three times and each time the return type is different for each method and hence matches the method using types of parameters.\nOutput:\n\n        \n\n\n        1000\n        98.125\n        100\n\n\n"
    },
    {
        "id": 332,
        "Question": "What is the process of defining a method in terms of itself, that is a method that calls itself?",
        "Options": [
            "a) Polymorphism",
            "b) Abstraction",
            "c) Encapsulation",
            "d) Recursion"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n\n\n 7, 8\n\n\n"
    },
    {
        "id": 333,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fun<span class=\"br0\">(</span><span class=\"kw4\">int</span> k, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> k <span class=\"sy0\">+</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fun1<span class=\"br0\">(</span><span class=\"kw4\">int</span> t, <span class=\"kw4\">float</span> z<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"br0\">(</span>t<span class=\"sy0\">+</span><span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">90</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> d <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">float</span> l <span class=\"sy0\">=</span> 14<span class=\"sy0\">.</span>78f<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">=</span> obj<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span>b, c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fun1</span><span class=\"br0\">(</span>d,  l<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 190,  26.78f",
            "b) 0,  26.78f",
            "c) 190,  26",
            "d) 190,  0"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n\n\n         216\n         25\n\n\n"
    },
    {
        "id": 334,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fun<span class=\"br0\">(</span><span class=\"kw4\">int</span> ii<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span><span class=\"br0\">(</span>ii <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> ii <span class=\"sy0\">:</span>ii <span class=\"sy0\">*</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">long</span> fun<span class=\"br0\">(</span><span class=\"kw4\">long</span> ll<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span><span class=\"br0\">(</span>ll <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> ll <span class=\"sy0\">:</span>ll <span class=\"sy0\">*</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> fun<span class=\"br0\">(</span> <span class=\"kw4\">double</span> dd<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span><span class=\"br0\">(</span>dd <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">?</span> dd <span class=\"sy0\">:</span>dd <span class=\"sy0\">*</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">25</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">long</span> l <span class=\"sy0\">=</span> <span class=\"sy0\">-</span>100000l <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">long</span> m<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> d <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">12.34</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> e<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         j <span class=\"sy0\">=</span> obj<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         m <span class=\"sy0\">=</span> obj<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span>l<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         e <span class=\"sy0\">=</span> obj<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span>d<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> m <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> e<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 1 1",
            "b) 0 0 0",
            "c) 25 100000 12.34",
            "d) -25 -100000 -12.34"
        ],
        "Answer": " Answer: d\nExplanation: None\nOutput:\n\n\n8, 7\n\n\n"
    },
    {
        "id": 335,
        "Question": "Which keyword is used to declare a base class method while performing overriding of base class methods?",
        "Options": [
            "a) this",
            "b) virtual",
            "c) override",
            "d) extend"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 336,
        "Question": "The process of defining a method in a subclass having same name & type signature as a method in its superclass is known as?",
        "Options": [
            "a) Method overloading",
            "b) Method overriding",
            "c) Method hiding",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 337,
        "Question": "Which of the given modifiers can be used to prevent Method overriding?",
        "Options": [
            "a) Static",
            "b) Constant",
            "c) Sealed",
            "d) final"
        ],
        "Answer": " Answer: c\nExplanation: When an instance method declaration includes the sealed modifier, the method is said to be sealed method. It means a derived class cannot override this method.\n"
    },
    {
        "id": 338,
        "Question": "Select the correct statement from the following?",
        "Options": [
            "a) Static methods can be a virtual method",
            "b) Abstract methods can be a virtual method",
            "c) When overriding a method, the names and type signatures of the override method must be the same as the virtual method that is being overridden",
            "d) We can override virtual as well as nonvirtual methods"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 339,
        "Question": "Which of the following cannot be used to declare a class as a virtual?",
        "Options": [
            "a) Methods",
            "b) Properties",
            "c) Events",
            "d) Fields"
        ],
        "Answer": " Answer:  d\nExplanation: None.\n"
    },
    {
        "id": 340,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 2",
            "c) 1",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: When method display() is called using objects of class ‘B’. The method ‘display()’ for class ‘B’ is called instead of class ‘A’ as class ‘B’ is inherited by class ‘A’.\nOutput :\n\n\n\t\n\n2\n\n\n"
    },
    {
        "id": 341,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> A </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">virtual</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" B \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        A obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        B obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        A r<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        r <span class=\"sy0\">=</span> obj1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        r<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        r <span class=\"sy0\">=</span> obj2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        r<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a)  A, A",
            "b)  B, B",
            "c)  Compile time error",
            "d)  A, B"
        ],
        "Answer": " Answer: d\nExplanation: The method overriding procedure has been used to produce the values from two display().\nOutput:\n\n\nA  B\n\n\n"
    },
    {
        "id": 342,
        "Question": "The modifier used to hide the base class methods is?",
        "Options": [
            "a) Virtual",
            "b) New",
            "c) Override",
            "d) Sealed"
        ],
        "Answer": " Answer: b\nExplanation: Used in condition when we cannot use virtually to override a base class method. Hence, we use ‘New’ to hide the base class methods and redefine the method defined in the subclass.\n"
    },
    {
        "id": 343,
        "Question": "To override a method in the subclass, the base class method should be defined as?",
        "Options": [
            "a) Virtual",
            "b) Abstract",
            "c) Override",
            "d) All of the mentioned"
        ],
        "Answer": " Answer:  d\nExplanation: None.\n"
    },
    {
        "id": 344,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> a</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"base method\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> b<span class=\"sy0\">:</span> a</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw3\">new</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" derived method \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b k <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> b<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Base method",
            "b) Derived method",
            "c) Code runs successfully prints nothing",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: Use of ‘new’ modifier hides the inherited member i.e it makes only inherited member inaccessible in derived class and hence calls suitable method().\nOutput :\n\n\nderived method\n\n\n"
    },
    {
        "id": 345,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> breadth<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         length <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         breadth <span class=\"sy0\">=</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"kw4\">double</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         length <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         breadth <span class=\"sy0\">=</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">*</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        maths m <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"nu0\">20</span>, <span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        maths k <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"nu0\">12.0</span>, <span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 60, 24",
            "b) 60, 0",
            "c) 60, 144",
            "d) 60, 144.0"
        ],
        "Answer": " Answer: c\nExplanation: Matching the values passed as parameters. The respective constructors are overloaded according to the matching parameter type.\nOutput :\n\n\n\t\n\n        \n\n        60\n        144\n\n\n"
    },
    {
        "id": 346,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> breadth<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         length <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> x, <span class=\"kw4\">int</span> y<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         length <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths m <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"nu0\">6</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths k <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>m<span class=\"sy0\">.</span><span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>k<span class=\"sy0\">.</span><span class=\"me1\">length</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8, 8",
            "b) 0, 2",
            "c) 8, 10",
            "d) 7, 8"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 347,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        i <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" hello: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> maths1 <span class=\"sy0\">:</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  maths1<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"kw1\">base</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"bye\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        maths1 k <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths1<span class=\"br0\">(</span><span class=\"nu0\">12</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello bye",
            "b) 12 hello",
            "c) bye 12",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n        constructor 2: 6\n        constructor 1:\n\n\n"
    },
    {
        "id": 348,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> ii<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         ii <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">12</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> ii <span class=\"sy0\">*</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths1 <span class=\"sy0\">:</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths1<span class=\"br0\">(</span><span class=\"kw4\">int</span> u<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"kw1\">base</span><span class=\"br0\">(</span>u<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         u <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>u <span class=\"sy0\">+</span> h<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths2 <span class=\"sy0\">:</span> maths1</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> maths2<span class=\"br0\">(</span><span class=\"kw4\">int</span> k<span class=\"br0\">)</span> <span class=\"sy0\">:</span><span class=\"kw1\">base</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         k <span class=\"sy0\">=</span> <span class=\"nu0\">24</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> o <span class=\"sy0\">=</span> <span class=\"nu0\">6</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>k <span class=\"sy0\">/</span>o<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths2 t <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths2<span class=\"br0\">(</span><span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4, 26, 144",
            "b) 26, 4, 144",
            "c) 144, 26, 4",
            "d) 0, 0, 0"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 349,
        "Question": "Which keyword is used to refer baseclass constructor to subclass constructor?",
        "Options": [
            "a) This",
            "b) Static",
            "c) Base",
            "d) Extend"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 350,
        "Question": "When we call a constructor method among different given constructors. We match the suitable constructor by matching the name of constructor first, then the number and then the type of parameters to decide which constructor is to be overloaded. The process is also known as?",
        "Options": [
            "a) Method overriding",
            "b) Inheritance",
            "c) Polymorphism",
            "d) Encapsulation"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 351,
        "Question": "Correct statement about constructor overloading in C# is?",
        "Options": [
            "a) Overloaded constructors have the same name as the class",
            "b) Overloaded constructors cannot use optional arguments",
            "c) Overloaded constructors can have different  type of number of arguments as well as differ in number of arguments",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 352,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> s <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span>  maths<span class=\"br0\">(</span><span class=\"kw4\">int</span> f<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> h <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>h<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          maths p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10, 10",
            "b) 0, 10",
            "c) 8, 10",
            "d) 8, 8"
        ],
        "Answer": " Answer: c\nExplanation: By definition of overloaded constructors.\n"
    },
    {
        "id": 353,
        "Question": "A type of class which does not have its own objects but acts as a base class for its subclass is known as?",
        "Options": [
            "a) Static class",
            "b) Sealed class",
            "c) Abstract class",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 354,
        "Question": "The modifier used to define a  class which does not have objects of its own but acts as a base class for its subclass is?",
        "Options": [
            "a) Sealed",
            "b) Static",
            "c) New",
            "d) Abstract"
        ],
        "Answer": " Answer: d\nExplanation: Here,\nabstract class Base\n{\n\n}\nclass derived : Base\n{\n}\nBase b1; /*object of Base class which can never be possible */\nDerived d1; /*object of derived class which is possible */\n"
    },
    {
        "id": 355,
        "Question": "Choose the correct statements among the following:",
        "Options": [
            "a) An abstract method does not have implementation",
            "b) An abstract method can take either static or virtual modifiers",
            "c) An abstract method can be declared only in abstract class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 356,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">namespace</span> ConsoleApplication4</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">abstract</span> <span class=\"kw4\">class</span> A </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span>  <span class=\"kw1\">abstract</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 2",
            "c) Compile time error",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: Here in abstract class ‘A’ abstract method display() is declared and its full implementation i.e definition is given in subclass of class ‘A’.\nOutput :2\n"
    },
    {
        "id": 357,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">namespace</span> ConsoleApplication4</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">abstract</span> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw1\">abstract</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">this</span><span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1, 5",
            "b) 0, 5",
            "c) 1, 0",
            "d) 1, 3"
        ],
        "Answer": " Answer: d\nExplanation: obj.i = 1 initializes value of i as 1 as it is the abstract member of abstract class ‘A’. Now,’j’ is also a same member as class ‘A’. Since it is initialized the value of 5 when declared in subclass. But  since abstract method  is redefined in subclass using ‘this’ keyword as this. j = 3, method will execute only abstract class member ‘j’ not subclass ‘B’ own defined data member ‘j’.\nOutput :\n\n\n\t\n\n1, 3\n\n\n"
    },
    {
        "id": 358,
        "Question": "If a class inheriting an abstract class does not define all of its functions then it is known as?",
        "Options": [
            "a) Abstract",
            "b) A simple class",
            "c) Static class",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Abstract method implementation is processed in subclass ‘B’. Also the object ‘obj’ of abstract class ‘A’ initializes value of i as 2. The object of class ‘B’ also initializes value of j as 10. Since, the method display() is called using object of class A which is ‘obj’ and hence i = 2 whereas j = 0. So, sum = 2.\nOutput :\n\n\n         2  0\n         sum is : 2\n\n\n"
    },
    {
        "id": 359,
        "Question": "Which of the following modifiers is used when an abstract method is redefined by a derived class?",
        "Options": [
            "a) Overloads",
            "b) Override",
            "c) Base",
            "d) Virtual"
        ],
        "Answer": " Answer: a\nExplanation: Any subclass of an abstract class must either implement all of the abstract method in the super class or itself be declared abstract.\n"
    },
    {
        "id": 360,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">namespace</span> ConsoleApplication4</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">abstract</span> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw1\">abstract</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw1\">override</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             A obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj1<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 8",
            "b) 1, 8",
            "c) 1, 7",
            "d) 7, 1"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 361,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">namespace</span> ConsoleApplication4</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> B<span class=\"sy0\">:</span> A </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             B obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">j</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">i</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             obj<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 8, 1",
            "b) 8",
            "c) 1",
            "d) 1, 8"
        ],
        "Answer": " Answer: d\nExplanation: Data member ‘i’ of abstract class A will be preferred over variable initialized and executed by obj1 as obj1.i = 8 as ‘obj’ of class B executes display() method.\nOutput :\n\n\n 7, 1.\n\n\n"
    },
    {
        "id": 362,
        "Question": "Which statement correctly defines Interfaces in C#.NET?",
        "Options": [
            "a) Interfaces cannot be inherited",
            "b) Interfaces consists of data static in nature and static methods",
            "c) Interfaces consists of only method declaration",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Leaving all options only option ‘a’ is correct as interfaces can be inherited i.e inheritance can be performed in csharp .net.\n"
    },
    {
        "id": 363,
        "Question": "Which of the following cannot be used to declare an interface correctly?",
        "Options": [
            "a) Properties",
            "b) Methods",
            "c) Structures",
            "d) Events"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 364,
        "Question": "A class consists of two interfaces with each interface consisting of three methods. The class had no instance data. Which of the following indicates the correct size of object created from this class?",
        "Options": [
            "a) 12 bytes",
            "b) 16 bytes",
            "c) 0 bytes",
            "d) 24 bytes"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 365,
        "Question": "Which of the following statements correctly define about the implementation of interface?",
        "Options": [
            "a) The calls to implementation of interface methods are routed through a method table",
            "b) A class which implements an interface can explicitly implement members of that interface",
            "c) One interface can be implemented in another interface",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 366,
        "Question": "Select the correct statement among the given statements?",
        "Options": [
            "a) One class could implement only one interface",
            "b) Properties could be declared inside an interface",
            "c) Interfaces cannot be inherited",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 367,
        "Question": "Which keyword is used for correct implementation of an interface in C#.NET?",
        "Options": [
            "a) interface",
            "b) Interface",
            "c) intf",
            "d) Intf"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 368,
        "Question": "Choose the statements which makes interface different from classes?",
        "Options": [
            "a) Unlike classes, interfaces consists of only declaration but not implementation",
            "b) Interfaces cannot be used directly like classes to create new objects",
            "c) Interfaces consists of declaration of methods, properties events and type definitions",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 369,
        "Question": "Which of the following is the correct way of implementing an interface addition by class maths?",
        "Options": [
            "a) class maths : addition {}",
            "b) class maths implements addition {}",
            "c) class maths imports addition {}",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 370,
        "Question": "Does C#.NET support partial implementation of interfaces?",
        "Options": [
            "a) True",
            "b) False",
            "c) Can’t Say",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Interface is a behaviour. It represents a protocol or a contract of sorts. Hence, it is impossible to implement an interface partially.\n"
    },
    {
        "id": 371,
        "Question": "Which of these can be used to fully abstract a class from its implementation?",
        "Options": [
            "a) Objects",
            "b) Packages",
            "c) Interfaces",
            "d) None of the Mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 372,
        "Question": "Access specifiers which can be used for an interface are?",
        "Options": [
            "a) Public",
            "b) Protected",
            "c) Private",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Access specifier of an interface is either public or none. When no access specifier is specified then only default access specifier is used due to which interface is available only to other members of the package in which it is declared, when declared public it can be used by any code declared anywhere in the class area.\n"
    },
    {
        "id": 373,
        "Question": "1. What will be the Correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">interface</span> a1</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> f2<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> a <span class=\"sy0\">:</span>a1</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> a1<span class=\"sy0\">.</span><span class=\"me1\">f2</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) class a is an abstract class",
            "b) A method table would not be created for class a",
            "c) The definition of f1() in class a should be void a1.f1()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 374,
        "Question": "Choose the wrong statement about ‘INTERFACE’ in C#.NET?",
        "Options": [
            "a) An explicitly implemented member could be accessed from an instance  of the interface",
            "b) Interfaces are declared public automatically",
            "c) An interface could not contain signature of the indexer",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 375,
        "Question": "3. What will be the Correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">interface</span> a1</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> f1<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> f2<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> a <span class=\"sy0\">:</span>a1</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> a1<span class=\"sy0\">.</span><span class=\"me1\">f1</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Class a could not have an instance data",
            "b) Class a is an abstract class",
            "c) Class a fully implements the interface a1",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 376,
        "Question": "4. What will be the Correct statement in the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">interface</span> abc</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> FirstName</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">get</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">set</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">String</span> LastName</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">get</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">set</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> print<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> stock<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> fun<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Functions should be declared inside an interface",
            "b) It is workable code",
            "c) Properties cannot be declared inside an interface",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 377,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">interface</span> calc</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span>  <span class=\"kw4\">class</span> maths <span class=\"sy0\">:</span>calc </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">         display arr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span>      </pre></li><li class=\"li1\"><pre class=\"de1\">         arr<span class=\"sy0\">.</span><span class=\"me1\">cal</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>arr<span class=\"sy0\">.</span><span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 2",
            "c) 4",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n 4\n\n\n"
    },
    {
        "id": 378,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">interface</span> calc</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> displayA <span class=\"sy0\">:</span>calc </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> i <span class=\"sy0\">*</span> i<span class=\"sy0\">;</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> displayB <span class=\"sy0\">:</span>calc</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> i <span class=\"sy0\">/</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">         displayA arr1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> displayA<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         displayB arr2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> displayB<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr2<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr1<span class=\"sy0\">.</span><span class=\"me1\">cal</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         arr2<span class=\"sy0\">.</span><span class=\"me1\">cal</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>arr1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> arr2<span class=\"sy0\">.</span><span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 0",
            "b) 2 2",
            "c) 4 1",
            "d) 1 4"
        ],
        "Answer": " Answer:  c\nExplanation: class displayA executes the interface calculate by doubling the value of item. Similarly class displayB implements the interface by dividing item by item. So, variable x of class displayA stores 4 and variable x of class displayB stores 1.\nOutput :\n\n\n 4, 1\n\n\n"
    },
    {
        "id": 379,
        "Question": "Which of the following keyword is used to overload user defined types by defining static member functions?",
        "Options": [
            "a) op",
            "b) opoverload",
            "c) operator",
            "d) operatoroverload"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 380,
        "Question": "Which of the following statements are correct in nature?",
        "Options": [
            "a) The conditional logical operators cannot be overloaded",
            "b) The array indexing operator can be overloaded",
            "c) A public or nested public preference type does not overload the equality operator",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 381,
        "Question": "3. Arrange the following overloaded operators in increasing order of precedence?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\"> <span class=\"sy0\">%</span>, <span class=\"sy0\">&lt;&lt;</span>, <span class=\"sy0\">&amp;</span>, <span class=\"sy0\">/</span>, <span class=\"sy0\">+</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) ‘%’ < ‘<<‘ < ‘+’ < ‘-‘ < ‘&’ < ‘/’",
            "b) ‘<<‘ < ‘&’ < ‘%’ < ‘-‘ < ‘/’ < ‘+’",
            "c) ‘&’ < ‘-‘ <‘%’ < ‘<<‘ < ‘/’ < ‘+’",
            "d) ‘/’ < ‘-‘ < ‘%’ < ‘+’ < ‘<<‘ < ‘&’"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 382,
        "Question": "Operators that can be overloaded are?",
        "Options": [
            "a) ||",
            "b) ‘+=’",
            "c) +",
            "d) []"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 383,
        "Question": "Which statements are correct about operator overloading?",
        "Options": [
            "a) Mathematical or physical modeling where we use classes to represent objects such as vectors, matrices, complex-numbers etc",
            "b) Graphical programs where coordinate related objects are used to represent positions on the screen",
            "c) Financial programs where a class represents an amount of money",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 384,
        "Question": "Correct method to define + operator is?",
        "Options": [
            "a) public sample operator +(int a, int b)",
            "b) public abstract operator +(int a, int b)",
            "c) public static sample operator  +(int a, int b)",
            "d) public abstract sample operator +(int a, int b)"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 385,
        "Question": "Choose the correct statement among the below mentioned statements.",
        "Options": [
            "a) Forgetting to declare an operator method as public",
            "b) Forgetting to declare an operator method as static",
            "c) Forgetting to return a bool type value while overloading a relational operator",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None\n"
    },
    {
        "id": 386,
        "Question": "What is the vector in operator overloading?",
        "Options": [
            "a) class",
            "b) method()",
            "c) data type",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: It is a data type of class. It is defined as public static Vector operator + (Vector a, Vector b).\n"
    },
    {
        "id": 387,
        "Question": "Choose the wrong statement from the given set of statements?",
        "Options": [
            "a) All operators in C#.NET cannot be overloaded",
            "b) We can use the new modifier to modify a nested type if the nested type is hiding another type",
            "c) Operator overloading permits the use of symbols to represent computations for a type",
            "d) In case of operator overloading all parameters must be of different type than the class or struct that declares the operators"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 388,
        "Question": "What is Recursion in CSharp defined as?",
        "Options": [
            "a) Recursion is another form of class",
            "b) Recursion is another process of defining a method that calls other methods repeatedly",
            "c) Recursion is a process of defining a method that calls itself repeatedly",
            "d) Recursion is a process of defining a method that calls other methods which in turn calls this method"
        ],
        "Answer": " Answer: c\nExplanation: Recursion is the process of defining something in terms of itself. It allows us to define method that calls itself repeatedly until it meets some base case condition.\n"
    },
    {
        "id": 389,
        "Question": "Which of these will happen if the recursive method does not have a base case?",
        "Options": [
            "a) Infinite loop condition occurrence",
            "b) System gets hanged",
            "c) After 10000 executions program will be automatically stopped",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: If a recursive method does not have a base case which is necessary to meet the end of condition then an infinite loop occurs which results in stackoverflow exception error.\n"
    },
    {
        "id": 390,
        "Question": "Which of these is not a correct statement?",
        "Options": [
            "a) A recursive method must have a base case",
            "b) Recursion always uses stack",
            "c) Recursion is always managed by C# Runtime environment",
            "d) Recursive methods are faster that programmer written loop to call the function repeatedly using a stack"
        ],
        "Answer": " Answer: c\nExplanation: No matter whatever is the programming language recursion is always managed by the operating system.\n"
    },
    {
        "id": 391,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> recursion </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         recursion obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> recursion<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 30",
            "c) 120",
            "d) 144"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 392,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2",
            "b) 10",
            "c) 1",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: fact() calculates  recursively the factorial of a number when n turns to be 1, base case is executed consecutively and hence 1 is returned.\nOutput: 1\n"
    },
    {
        "id": 393,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> maths </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 64",
            "b) 60",
            "c) 120",
            "d) 48"
        ],
        "Answer": " Answer: d\nExplanation: 4! = 4*3*2*1 & 2! = 2*1. So, 24*2 = 48.\nOutput : 48\n"
    },
    {
        "id": 394,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">*</span><span class=\"br0\">(</span><span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 64",
            "b) 60",
            "c) 72",
            "d) 84"
        ],
        "Answer": " Answer: c\nExplanation: 4! = 4 * 3 *2 * 1 = 24 * 3 = 72. Not factorial of 3 but just multiply the number with 3.\nOutput : 72\n"
    },
    {
        "id": 395,
        "Question": "Which of these data types is used by the operating system to manage the Recursion in Csharp?",
        "Options": [
            "a) Array",
            "b) Queue",
            "c) Tree",
            "d) Stack"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 396,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 30",
            "c) Compile time error",
            "d) Runtime Error"
        ],
        "Answer": " Answer: d\nExplanation: Absence of base case condition. So absence of limit or end of for execution of a loop and hence results in stackoverflow exception error.\n"
    },
    {
        "id": 397,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> maths</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> fact<span class=\"br0\">(</span><span class=\"kw4\">int</span> n<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>n <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         result <span class=\"sy0\">=</span> fact<span class=\"br0\">(</span>n <span class=\"sy0\">-</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span> <span class=\"sy0\">*</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> result<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">         maths obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> maths<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">fact</span><span class=\"br0\">(</span><span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 24",
            "b) 0",
            "c) 12",
            "d) 1"
        ],
        "Answer": " Answer: c\nExplanation: fact() calculates factorial of number ‘4’ but this time base case condition is executed upto 2 only. As soon as n reaches 2 it returns 2.\n"
    },
    {
        "id": 398,
        "Question": "Choose the correct statement among the followings?",
        "Options": [
            "a) Indexers are location indicators",
            "b) Indexers are used to access class objects",
            "c) Indexer is a form of property and works in the same way as a property",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 399,
        "Question": "Choose the keyword which declares the indexer?",
        "Options": [
            "a) base",
            "b) this",
            "c) super",
            "d) extract"
        ],
        "Answer": " Answer: b\nExplanation: The indexer is declared using the name this.\n"
    },
    {
        "id": 400,
        "Question": "Choose the operator/operators which is/are not used to access the [] operator in indexers?",
        "Options": [
            "a) get",
            "b) set",
            "c) access",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The indexer is implemented through the get and set accessors for the [] operator as:\n\n\n\t\n\n        \n\n              public double this[int idx]\n              {\n                 get\n                 {\n                   if()\n                  {\n                  }\n                 else\n                 {\n                    return([idx]);\n                 }\n \n              }\n                 set\n                 {\n                      array[idx];\n \n                 }\n           }\n\n\n"
    },
    {
        "id": 401,
        "Question": "Choose the correct statement among the following?",
        "Options": [
            "a) A property can be a static member whereas an indexer is always an instance member",
            "b) A get accessor of a property corresponds to a method with no parameters whereas get accessor of an indexer corresponds to a method with the same formal parameters lists as the indexer",
            "c) It is an error for indexer to declare a local variable with the same name as indexer parameters",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 402,
        "Question": "Which among the following are the advantages of using indexers?",
        "Options": [
            "a) To use collection of items at a large scale we make use of indexers as they utilize objects of class that represent the collection as an array",
            "b) Indexers are also convenient as they can also make use of different types of indexers like int, string etc",
            "c) An indexer allows an object to be indexed such as an array",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Indexers provides a view at large scale to visualize a collection of items as an array. It is really easy to use the object of the class that represents a collection as if it is an array. Hence, indexed properties allow us to represent such a view. Indexers can also use different types of indexes like int, string etc. Use int as an index where sequential access to a collection is desired. When symbolic access is needed, use string as an index.\n"
    },
    {
        "id": 403,
        "Question": "Choose the correct statement about properties describing the indexers?",
        "Options": [
            "a) No need to use the name of the property while using an indexed property",
            "b) An indexer property should accept at least one argument",
            "c) Indexers can be overloaded",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 404,
        "Question": "c)<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">   <span class=\"kw4\">class</span> student\n   <span class=\"br0\">{</span>\n       <span class=\"kw4\">int</span><span class=\"br0\">[</span>,<span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">6</span>, <span class=\"nu0\">6</span><span class=\"br0\">]</span><span class=\"sy0\">;</span>\n       <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> property WriteOnly\n       <span class=\"br0\">{</span>\n           <span class=\"kw1\">set</span>\n           <span class=\"br0\">{</span>\n               a<span class=\"br0\">[</span>i, j<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span>\n           <span class=\"br0\">}</span>\n       <span class=\"br0\">}</span>  \n   <span class=\"br0\">}</span></pre></div></div></div></div></div></div>",
        "Options": [
            "8. Choose the correct alternative that utilizes the indexed property such that a group named class has indexed property which stores or retrieves value to/from an array of 5 numbers?",
            "a) group[3] = 34;",
            "b) group g = group();",
            "c) Console.WriteLine(group[3]);",
            "d)"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 405,
        "Question": "Choose the correct option among the following indexers which correctly allows to index in same way as an array?",
        "Options": [
            "a) A class",
            "b) An interface",
            "c) A function",
            "d) A property"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 406,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> list</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     ArrayList array <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> ArrayList<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">object</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"kw4\">int</span> index<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">if</span> <span class=\"br0\">(</span>index <span class=\"sy0\">&lt;</span> <span class=\"nu0\">0</span> <span class=\"sy0\">||</span> index <span class=\"sy0\">&gt;=</span> array<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">return</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">return</span> <span class=\"br0\">(</span>array<span class=\"br0\">[</span>index<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">set</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             array<span class=\"br0\">[</span>index<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Count </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">get</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">set</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        list list1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> list<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        list1<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"123\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        list1<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\" abc \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        list1<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"xyz\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">&lt;=</span>list1<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>list1<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) 123, abc, xyz",
            "d) 0"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 407,
        "Question": "Choose the wrong statement about the properties used in C#.NET?",
        "Options": [
            "a) Each property consists of accessor as get and set",
            "b) A property cannot be either read or write only",
            "c) Properties can be used to store and retrieve values to and from the data members of a class",
            "d) Properties are like actual methods which work like data members"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 408,
        "Question": "Choose the statements which makes use of essential properties rather than making data member public in C#.NET?",
        "Options": [
            "a) Properties have their own access levels like private, public, protected etc. which allows it to have better control about managing read and write properties",
            "b) Properties give us control about what values may be assigned to a member variable of a class they represent",
            "c) Properties consist of set accessor inside which we can validate the value before assigning it to the data variable",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 409,
        "Question": "Where the properties can be declared?",
        "Options": [
            "a) Class",
            "b) Struct",
            "c) Interface",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 410,
        "Question": "Select the modifiers which can be used with the properties?",
        "Options": [
            "a) Private",
            "b) Public",
            "c) Protected Internal",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 411,
        "Question": "Choose the correct statements about write-only properties in C#.NET?",
        "Options": [
            "a) Properties which can only be set",
            "b) Properties once set and hence values cannot be read back in nature",
            "c) Useful for usage in classes which store sensitive information like password of a user",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 412,
        "Question": "Consider a class maths and we had a property called a sum.b is a reference to a maths object and we want the statement b.sum = 10 to fail. Which of the following is the correct solution to ensure this functionality?",
        "Options": [
            "a) Declare sum property with both get and set accessors",
            "b) Declare sum property with only get accessor",
            "c) Declare sum property with get, set and normal accessors",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 413,
        "Question": "Consider a class maths and we had a property called as sum.b which is the reference to a maths object and we want the statement Console.WriteLine(b.sum)to fail. Which among the following is the correct solution to ensure this functionality?",
        "Options": [
            "a) Declares sum property with only get accessor",
            "b) Declares sum property with only set accessor",
            "c) Declares sum property with both set and get accessor",
            "d) Declares sum property with both set, get and normal accessor"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 414,
        "Question": "8. Consider a class maths and we had a property called as sum.b is a reference to a maths object and we want the code below to work. Which is the correct solution to ensure this functionality?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">b<span class=\"sy0\">.</span><span class=\"me1\">maths</span> <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span>\nConsole<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>b<span class=\"sy0\">.</span><span class=\"me1\">maths</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Declare maths property with get and set accessors",
            "b) Declare maths property with only get accessors",
            "c) Declare maths property with only set accessors",
            "d) Declare maths property with only get, set and normal accessors"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 415,
        "Question": "Select the correct statement about properties of read and write in C#.NET?",
        "Options": [
            "a) A property can simultaneously be read or write only",
            "b) A property cannot be either read only or write only",
            "c) A write only property will only have get accessor",
            "d) A read only property will only have get accessor"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 416,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> number</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> num1 <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> num2 <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> anumber</pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">return</span> num1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">set</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              num1 <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> anumber1</pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">return</span> num2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">set</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              num2 <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          number p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> number<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          number k <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> number<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> m <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">anumber</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> t <span class=\"sy0\">=</span> k<span class=\"sy0\">.</span><span class=\"me1\">anumber1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> r <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">anumber</span> <span class=\"sy0\">*</span> k<span class=\"sy0\">.</span><span class=\"me1\">anumber1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"sum = \"</span> <span class=\"sy0\">+</span> r<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 120",
            "c) 1200",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 417,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> number</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> length <span class=\"sy0\">=</span> <span class=\"nu0\">50</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> number1</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">return</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">set</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             length <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         number p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> number<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         p<span class=\"sy0\">.</span><span class=\"me1\">number1</span> <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">number1</span> <span class=\"sy0\">+</span> <span class=\"nu0\">40</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">number1</span> <span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"sy0\">/</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 180",
            "c) 30",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\nnumber1 = 20\nnumber2 = 40\nsum = 60\n\n\n"
    },
    {
        "id": 418,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> number</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> length <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> number1</pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">return</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          number p <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> number<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> l<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          l <span class=\"sy0\">=</span> p<span class=\"sy0\">.</span><span class=\"me1\">number1</span> <span class=\"sy0\">+</span> <span class=\"nu0\">40</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> l <span class=\"sy0\">*</span> <span class=\"nu0\">3</span> <span class=\"sy0\">/</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>k<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 30",
            "b) 75",
            "c) 80",
            "d) 0"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n 1200\n\n\n"
    },
    {
        "id": 419,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> student</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>scores <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">5</span><span class=\"br0\">]</span> <span class=\"br0\">{</span><span class=\"nu0\">23</span>, <span class=\"nu0\">42</span>, <span class=\"nu0\">54</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">65</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> <span class=\"kw1\">this</span><span class=\"br0\">[</span><span class=\"kw4\">int</span> index<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">get</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">if</span> <span class=\"br0\">(</span>index <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">return</span> scores<span class=\"br0\">[</span>index<span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                  Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"invalid index\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                  <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">set</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">if</span> <span class=\"br0\">(</span>index <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">              scores<span class=\"br0\">[</span>index<span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"kw1\">value</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"invalid index\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          student s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> student<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">[</span><span class=\"nu0\">4</span><span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 73",
            "b) 37",
            "c) 0",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n30\n\n\n"
    },
    {
        "id": 420,
        "Question": "Which among the following is NOT an exception?",
        "Options": [
            "a) Stack Overflow",
            "b) Arithmetic Overflow or underflow",
            "c) Incorrect Arithmetic Expression",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 421,
        "Question": "Which among the following is considered as .NET Exception class?",
        "Options": [
            "a) Exception",
            "b) StackUnderflow Exception",
            "c) File bound Exception",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 422,
        "Question": "Which of the following is the object oriented way to handle run time errors?",
        "Options": [
            "a) Error codes",
            "b) HERRESULT",
            "c) OnError",
            "d) Exceptions"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 423,
        "Question": "Select the statements which describe the correct usage of exception handling over conventional error handling approaches?",
        "Options": [
            "a) As errors can be ignored but exceptions cannot be ignored",
            "b) Exception handling allows separation of program’s logic  from error handling logic making software more reliable and maintainable",
            "c) try – catch – finally structure allows guaranteed cleanup in event of errors under all circumstances",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 424,
        "Question": "Select the correct statement about an Exception?",
        "Options": [
            "a) It occurs during loading of program",
            "b) It occurs during Just-In-Time compilation",
            "c) It occurs at run time",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:None.\n"
    },
    {
        "id": 425,
        "Question": "Which of these keywords is not a part of exception handling?",
        "Options": [
            "a) try",
            "b) finally",
            "c) thrown",
            "d) catch"
        ],
        "Answer": " Answer: c\nExplanation: Exception handling is managed via 5 keywords – try, catch, throws, throw and finally.\n"
    },
    {
        "id": 426,
        "Question": "Which of these keywords must be used to monitor exceptions?",
        "Options": [
            "a) try",
            "b) finally",
            "c) throw",
            "d) catch"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 427,
        "Question": "Which of these keywords is used to manually throw an exception?",
        "Options": [
            "a) try",
            "b) finally",
            "c) throw",
            "d) catch"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 428,
        "Question": "10. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"csharp\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">catch</span><span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Java\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        \t</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) csharp",
            "b) java",
            "c) run time error",
            "d) csharp 0"
        ],
        "Answer": " Answer: b\nExplanation:None.\n"
    },
    {
        "id": 429,
        "Question": "Which of the following is the wrong statement about exception handling in C#.NET?",
        "Options": [
            "a) finally clause is used to perform cleanup operations of closing network and database connections",
            "b) a program can contain multiple finally clauses",
            "c) the statement in final clause will get executed no matter whether an exception occurs or not",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: 1 / 0,  hence system out of flow exception error.\n"
    },
    {
        "id": 430,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span>            </pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"csharp\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">/</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">finally</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Java\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        \t</pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) csharp 0",
            "b) Run time Exception generation",
            "c) Compile time error",
            "d) Java"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 431,
        "Question": "1. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw4\">int</span> sum <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          sum <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sum <span class=\"sy0\">/</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>sum<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 0 5",
            "c) 0 -10",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: Value of variable sum is printed as sum and is defined outside try & catch block. If defined inside the try block then sum would be undefined for execution.\nOutput : 0 -10\n"
    },
    {
        "id": 432,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"nu0\">1</span> <span class=\"sy0\">/</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">catch</span><span class=\"br0\">(</span>IndexOutOfRangeException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        \t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">catch</span><span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span>     \t</pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1234",
            "b) 12345",
            "c) Run time error",
            "d) 12345B"
        ],
        "Answer": " Answer: d\nExplanation: Due to occurrence of arithmetic exception here ‘B’ is printed after 12345.\nOutput : 12345B\n"
    },
    {
        "id": 433,
        "Question": "3. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">7</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">catch</span><span class=\"br0\">(</span>IndexOutOfRangeException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        \t</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 12345",
            "b) 123450",
            "c) 1234500",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: When array index goes out of bound then IndexOutOfBoundsException exception is thrown by the system.\nOutput : 123450\n"
    },
    {
        "id": 434,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> a, b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">/</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">catch</span><span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        \t</pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) Compile time error",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation: Since  b = 0 since a = 10 / 0 so, arithmetic exception is caught and hence statement in catch block is executed.\nOutput : B\n"
    },
    {
        "id": 435,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i, sum<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         sum <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span> <span class=\"sy0\">;++</span>i<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             sum <span class=\"sy0\">=</span> <span class=\"br0\">(</span>sum <span class=\"sy0\">/</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">catch</span><span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"0\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) -1",
            "b) 0",
            "c) -1 0",
            "d) -1 0 -1"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput : -1 0\n"
    },
    {
        "id": 436,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> a, b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span> <span class=\"sy0\">/</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">catch</span><span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">finally</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) B C",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation: finally keyword is used to execute before catch and try block is executed.\nOutput : B C\n"
    },
    {
        "id": 437,
        "Question": "When is no exception thrown at runtime then who will catch it?",
        "Options": [
            "a) CLR",
            "b) Operating System",
            "c) Loader",
            "d) Compiler"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput: Exception occurred\n          Program executed\n"
    },
    {
        "id": 438,
        "Question": "9. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span>  <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> a, b, c <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> c <span class=\"sy0\">/</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> <span class=\"nu0\">2</span> <span class=\"sy0\">*</span> c <span class=\"sy0\">-</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) B 0",
            "d) B"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 439,
        "Question": "Choose the correct statement which makes exception handling work in C#.NET?",
        "Options": [
            "a) .Net runtime makes search for the exception handler where exception occurs",
            "b) If no exception is matched, exception handler goes up the stack and hence finds the match there",
            "c) If no match is found at the highest level of stack call, then unhandledException is generated and hence termination of program occurs",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The catch block is called, as the exception is caught by the same block and hence statements are executed consecutively.\nOutput : B 0\n"
    },
    {
        "id": 440,
        "Question": "Which of these clauses will be executed even if no exceptions are found?",
        "Options": [
            "a) throws",
            "b) finally",
            "c) throw",
            "d) catch"
        ],
        "Answer": " Answer: b\nExplanation: finally keyword is used to define a set of instructions that will be executed irrespective of whether the exception is found or not.\n"
    },
    {
        "id": 441,
        "Question": "A single try block must be followed by which of these?",
        "Options": [
            "a) finally",
            "b) catch",
            "c) Both finally & catch",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Try block can be followed by any of finally or catch block, try block checks for exceptions and work is performed by finally and catch block as per the exception.\n"
    },
    {
        "id": 442,
        "Question": "Which of these exceptions handles the divide by zero error?",
        "Options": [
            "a) ArithmeticException",
            "b) MathException",
            "c) IllegalAccessException",
            "d) IllegarException"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 443,
        "Question": "Which of these exceptions will occur if we try to access the index of an array beyond its length?",
        "Options": [
            "a) ArithmeticException",
            "b) ArrayException",
            "c) ArrayArguementException",
            "d) IndexOutOfRangeException"
        ],
        "Answer": " Answer: d\nExplanation: IndexOutOfRangeException is a built in exception that is caused when we try to access an index location which is beyond the length of an array.\n"
    },
    {
        "id": 444,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw4\">class</span> program</pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> args<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">/</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">               Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"1\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">           Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) Compile time error",
            "d) Runtime error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 445,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">throw</span> <span class=\"kw3\">new</span> NullReferenceException<span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) Compile time error",
            "d) Runtime error"
        ],
        "Answer": " Answer: d\nExplanation: Try block is throwing NullPointerException but the catch block is used to counter Arithmetic Exception. Hence NullPointerException occurs since no catch is there which can handle it, runtime error occurs.\n"
    },
    {
        "id": 446,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">/</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     a <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> a <span class=\"sy0\">-</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> c <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     c<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">finally</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>IndexOutOfRangeException e<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"B\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A",
            "b) B",
            "c) AB",
            "d) BA"
        ],
        "Answer": " Answer: a\nExplanation: The inner try block does not have a catch which can tackle IndexOutOfRangeException hence finally is executed which prints ‘A’. The outer try block does have catch for IndexOutOfBoundException exception but no such exception occurs in it hence its catch is never executed and only ‘A’ is printed.\n"
    },
    {
        "id": 447,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> args<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">/</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">try</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 a <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> a <span class=\"sy0\">-</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a <span class=\"sy0\">==</span> <span class=\"nu0\">2</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> c <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     c<span class=\"br0\">[</span><span class=\"nu0\">8</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>IndexOutOfRangeException e<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                 Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"TypeA\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">catch</span> <span class=\"br0\">(</span>ArithmeticException e<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"TypeB\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) TypeA",
            "b) TypeB",
            "c) 0TypeA",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 448,
        "Question": "Which of the following keywords is used by the calling function to guard against the exception that is thrown by called function?",
        "Options": [
            "a) try",
            "b) throw",
            "c) throws",
            "d) catch"
        ],
        "Answer": " Answer: c\nExplanation: If a method is capable of causing an exception that it does not handle. It must specify this behaviour so that callers of the method can guard themselves against that exception. This is done by using throws clause in methods declaration.\n"
    },
    {
        "id": 449,
        "Question": "Which of these classes is related to all the exceptions that are explicitly thrown?",
        "Options": [
            "a) Error",
            "b) Exception",
            "c) Throwable",
            "d) Throw"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 450,
        "Question": "What is the use of try & catch?",
        "Options": [
            "a) It is used to manually handle the exception",
            "b) It helps to fix the errors",
            "c) It prevents automatic terminating of the program in cases when an exception occurs",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 451,
        "Question": "2. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> b <span class=\"sy0\">-</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">catch</span><span class=\"br0\">(</span>Exception e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">finally</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"sharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello",
            "b) C",
            "c) Hellosharp",
            "d) Csharp"
        ],
        "Answer": " Answer: d\nExplanation: finally block  execution takes place after the tryblock, no matter exception is found or not. catch block is executed only when exception is found. Here divide by zero exception is found hence both catch and finally are executed.\n"
    },
    {
        "id": 452,
        "Question": "Choose the statement which is incorrect?",
        "Options": [
            "a) try block does not need to be followed by catch block",
            "b) try block can be followed by finally block instead of catch block",
            "c) try can be followed by both catch and finally block",
            "d) try need not to be followed by anything"
        ],
        "Answer": " Answer: d\nExplanation: try followed by either catch or finally block.\n"
    },
    {
        "id": 453,
        "Question": "4. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> b <span class=\"sy0\">-</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">catch</span><span class=\"br0\">(</span>Exception e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi",
            "b) hello",
            "c) Hihello",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 454,
        "Question": "Which of the keywords are used for the block to be examined for exceptions?",
        "Options": [
            "a) try",
            "b) catch",
            "c) throw",
            "d) check"
        ],
        "Answer": " Answer: a\nExplanation: try is used for the block that needs to be checked for the exception.\n"
    },
    {
        "id": 455,
        "Question": "Which of these keywords are used for the block to handle the exceptions generated by try block?",
        "Options": [
            "a) try",
            "b) catch",
            "c) throw",
            "d) check"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 456,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> b <span class=\"sy0\">/</span> a <span class=\"sy0\">-</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Csharp",
            "b) sharp",
            "c) C",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: try should be followed by either catch or finally.\n"
    },
    {
        "id": 457,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> a <span class=\"sy0\">/</span> b <span class=\"sy0\">-</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"C\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">finally</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"sharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) C",
            "b) sharp",
            "c) Csharp",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: finally block is always executed after try block, no matter if the exception is found or not.\n"
    },
    {
        "id": 458,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">try</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span>  b <span class=\"sy0\">-</span> <span class=\"nu0\">5</span> <span class=\"sy0\">/</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">catch</span><span class=\"br0\">(</span>Exception e<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hi",
            "b) hello",
            "c) Hihello",
            "d) Compile time error"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 459,
        "Question": "Which of these keywords are used for generating an exception manually?",
        "Options": [
            "a) try",
            "b) catch",
            "c) throw",
            "d) check"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 460,
        "Question": "Which of the following cannot further inspect the attribute that is once applied?",
        "Options": [
            "a) Linker",
            "b) ASP.NET Runtime",
            "c) Language compilers",
            "d) CLR"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 461,
        "Question": "To apply an attribute to an Assembly, the correct way of implementation is?",
        "Options": [
            "a) [AssemblyInfo: AssemblyDescription (“Csharp”)] ",
            "b) [assembly: AssemblyDescription(“Csharp”)] ",
            "c) [AssemblyDescription(“Csharp”)] ",
            "d) (Assembly:AssemblyDescription(“Csharp”)]"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 462,
        "Question": "The correct method to pass a parameter to an attribute is?",
        "Options": [
            "a) By name",
            "b) By address",
            "c) By value",
            "d) By reference"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 463,
        "Question": "Which among the following cannot be a target for a custom attribute?",
        "Options": [
            "a) Enum",
            "b) Event",
            "c) Interface",
            "d) Namespace"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 464,
        "Question": "Select the correct statement about Attributes used in C#.NET?",
        "Options": [
            "a) The CLR can change the behaviour of the code depending on attributes applied to it",
            "b) If a bugFixAttribute is to receive three parameters, then the BugFixAttribute class should implement a zero argument constructor",
            "c) To create a custom attribute we need to create a custom attribute structure and derive it from System.Attribute",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 465,
        "Question": "Which of the following is the correct statement about inspecting an attribute in C#.NET?",
        "Options": [
            "a) An attribute can be inspected at link time",
            "b) An attribute can be inspected at design time",
            "c) An attribute can be inspected at run time",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 466,
        "Question": "Attributes could be applied to ___________",
        "Options": [
            "a) Method",
            "b) Class",
            "c) Assembly",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 467,
        "Question": "The [Serializable()] attributes gets inspected at _________",
        "Options": [
            "a) compile time",
            "b) run time",
            "c) design time",
            "d) linking time"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 468,
        "Question": "Which of the classes provide the operation of reading from and writing to the console in C#.NET?",
        "Options": [
            "a) System.Array",
            "b) System.Output",
            "c) System.ReadLine",
            "d) System.Console"
        ],
        "Answer": " Answer: d\nExplanation: The method for reading and writing to the console in C#.NET is provided by System.Console class. This class gives us access to the standard input, output and standard error streams.\n"
    },
    {
        "id": 469,
        "Question": "Which of the given stream methods provide access to the output console by default in C#.NET?",
        "Options": [
            "a) Console.In",
            "b) Console.Out",
            "c) Console.Error",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The standard output stream Console.Out sends output to the screen by default.\n"
    },
    {
        "id": 470,
        "Question": "Which of the given stream methods provide access to the input console in C#.NET?",
        "Options": [
            "a) Console.Out",
            "b) Console.Error",
            "c) Console.In",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Console.In is an instance of TextReader, and we can use the methods and properties defined by TextReader to access it to read the input from the keyboard.\n"
    },
    {
        "id": 471,
        "Question": "The number of input methods defined by the stream method Console.In in C#.NET is?",
        "Options": [
            "a) 4",
            "b) 3",
            "c) 2",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: Two basic methods : read() and readline() and third method readkey() introduced in .NET FrameWork 2.0.\n"
    },
    {
        "id": 472,
        "Question": "Select the correct methodS provided by Console.In?",
        "Options": [
            "a) Read(), ReadLine()",
            "b) ReadKey(), ReadLine()",
            "c) Read(), ReadLine(), ReadKey()",
            "d) ReadKey(), ReadLine()"
        ],
        "Answer": " Answer: c\nExplanation: The two method Read() and ReadLine() available in .NET Framework 1.0 and Third method ReadKey() was added by .NET Framework 2.0.\n"
    },
    {
        "id": 473,
        "Question": "Choose the output returned when read() reads the character from the console?",
        "Options": [
            "a) String",
            "b) Char",
            "c) Integer",
            "d) Boolean"
        ],
        "Answer": " Answer: c\nExplanation: Read() returns the character read from the console. It returns the result. The character is returned as an int, which should be cast to char.\n"
    },
    {
        "id": 474,
        "Question": "Choose the output returned when an error condition is generated while read() reads from the console.",
        "Options": [
            "a) False",
            "b) 0",
            "c) -1",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Read() returns –1 on error. This method also throws an IOException on failure.\n"
    },
    {
        "id": 475,
        "Question": "Choose the object of TextReader class.",
        "Options": [
            "a) Console.In",
            "b) Console.Out",
            "c) Console.Error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Console.In is an instance(object) of TextReader class and we can use the methods and properties defined by TextReader to invoke the object console.in.\n"
    },
    {
        "id": 476,
        "Question": "Choose the object/objects defined by the Textwriter class.",
        "Options": [
            "a) Console.In",
            "b) Console",
            "c) Console.Error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Console.Out and Console.Error are objects of type TextWriter class.\n"
    },
    {
        "id": 477,
        "Question": "Choose the methods provided by Console.Out and Console.Error?",
        "Options": [
            "a) Write",
            "b) WriteLine",
            "c) WriteKey",
            "d) Write & WriteLine"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 478,
        "Question": "12. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"This is a Console Application:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"Please enter your lucky number:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> val1 <span class=\"sy0\">=</span> Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> val2 <span class=\"sy0\">=</span> <span class=\"kw5\">System</span><span class=\"sy0\">.</span><span class=\"me1\">Convert</span><span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span>val1, <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     val2 <span class=\"sy0\">=</span> val2 <span class=\"sy0\">*</span> val2<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"square of number is:\"</span> <span class=\"sy0\">+</span>val2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Runs successfully does not print anything",
            "c) Runs successfully, ask for input and hence displays the result",
            "d) Syntax Error"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 479,
        "Question": "Name the exception thrown by read() on failure.",
        "Options": [
            "a) InterruptedException",
            "b) SystemException",
            "c) SystemInputException",
            "d) I/O Exception"
        ],
        "Answer": " Answer: d\nExplanation: read() throws I/O exception on failure.\n"
    },
    {
        "id": 480,
        "Question": "Which of these methods are used to read single character from the console?",
        "Options": [
            "a) get()",
            "b) getline()",
            "c) read()",
            "d) readLine()"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 481,
        "Question": "Which of these method used to read strings from the console?",
        "Options": [
            "a) get()",
            "b) getline()",
            "c) read()",
            "d) readLine()"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 482,
        "Question": "Which among the following methods are used to write characters to a string?",
        "Options": [
            "a) StreamWriter",
            "b) StreamReader",
            "c) StringWriter",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The stream class method writes characters to the string.\n"
    },
    {
        "id": 483,
        "Question": "Which method in Console enables to read individual inputs directly from the keyboard in a non line buffered manner?",
        "Options": [
            "a) Read()",
            "b) ReadKey()",
            "c) ReadLine()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: The .NET Framework includes a method in Console that enables you to read individual keystrokes directly from the keyboard, in a non-line-buffered manner. This method is called ReadKey(). When it is called, it waits until a key is pressed. When the key is pressed, ReadKey( ) returns the keystroke immediately.\n"
    },
    {
        "id": 484,
        "Question": "What is the output returned by Console if ReadLine() stores I/O error?",
        "Options": [
            "a) 1",
            "b) 0",
            "c) False",
            "d) I/O EXCEPTION ERROR"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 485,
        "Question": "7. What will be the output for following input from the console as a character?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"what is your name?\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> s<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     s <span class=\"sy0\">=</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span>Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"how are you: \"</span><span class=\"sy0\">+</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Read</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Code run successfully prints nothing on console",
            "c) Code runs successfully prints input on console",
            "d) Run time error"
        ],
        "Answer": " Answer: d\nExplanation: Since only a single character is required to be entered on console when a string is entered, a run time exception is being generated as we had not used Read() which reads single character but used readLine() which reads string and is converted into the char using convert.tochar().\n"
    },
    {
        "id": 486,
        "Question": "Name the method/methods used to read byte streams from the file?",
        "Options": [
            "a) ReadByte()",
            "b) Read",
            "c) Readkey()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 487,
        "Question": "Which of these classes are used by Byte streams for input and output operation?",
        "Options": [
            "a) InputStream",
            "b) InputOutputStream",
            "c) Reader",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Byte stream uses InputStream and OutputStream classes for input and output operation.\n"
    },
    {
        "id": 488,
        "Question": "Which of these method/methods are used to read block or array of bytes from the file?",
        "Options": [
            "a) Read()",
            "b) ReadByte()",
            "c) ReadLine()",
            "d) Readkey()"
        ],
        "Answer": " Answer: a\nExplanation: To read a block of bytes, use Read( ), which has this general form:\n              int Read(byte[ ] array, int offset, int count).\n"
    },
    {
        "id": 489,
        "Question": "Select the objects of the class TextWriter which is/are not used to perform the write operations to the console?",
        "Options": [
            "a) Write()",
            "b) WriteLine()",
            "c) WriteError()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: TextWriter is a class with objects as write() and writeline().\n"
    },
    {
        "id": 490,
        "Question": "Choose the correct statement about the WriteLine()?",
        "Options": [
            "a) Can display one or more value to the screen",
            "b) Adds a newline character at the end of the each new output",
            "c) Allows to output data in as many different formats",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Write() is used here which outputs one or more values to the screen without a newline character.\nOutput :\n\n\n        \n\n        c\n        sharp\n\n\n"
    },
    {
        "id": 491,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> a <span class=\"sy0\">=</span><span class=\"st0\">\"i love iostream\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'i'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'e'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">.</span><span class=\"me1\">LastIndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'i'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> a<span class=\"sy0\">.</span><span class=\"me1\">LastIndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'e'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0 6 7 8",
            "b) 0 5 7 9",
            "c) 5 9 0 7",
            "d) 0 5 7 12"
        ],
        "Answer": " Answer: d\nExplanation: By the definition of writeline().\n"
    },
    {
        "id": 492,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     StringBuilder sb <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> StringBuilder<span class=\"br0\">(</span><span class=\"st0\">\"hello world\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     sb<span class=\"sy0\">.</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span><span class=\"nu0\">6</span>, <span class=\"st0\">\"good\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>sb<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) hello 6world",
            "b) hello good world",
            "c) hello goodworld",
            "d) hello good world"
        ],
        "Answer": " Answer: d\nExplanation: indexof(‘i’) and lastIndexof(‘i’) are pre defined functions which are used to get the index of first and last occurrence of the character pointed by i in the given array.\nOutput :\n\n\n\t\n\n0 5 7 12\n\n\n"
    },
    {
        "id": 493,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> h <span class=\"sy0\">=</span> <span class=\"st0\">\"i lovelife\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> h1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">string</span><span class=\"br0\">(</span>h<span class=\"sy0\">.</span><span class=\"me1\">Reverse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"me1\">ToArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>h1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) efil evoli",
            "b) lifelove i",
            "c) efilevol i",
            "d) efil evol i"
        ],
        "Answer": " Answer: c\nExplanation: The insert() method inserts one string into another. It is overloaded to accept values of all simple types, plus String and Objects. String is inserted into invoking object at specified position. “Good ” is inserted in “Hello World”  index 6 giving “Hello Good World”.\n"
    },
    {
        "id": 494,
        "Question": "Which of the following statement is correct?",
        "Options": [
            "a) reverse() method reverses some characters",
            "b) reverseall() method reverses all characters",
            "c) replace() method replaces all instances of  a character with new character",
            "d) replace() method replaces first occurrence of a character in invoking string with another character"
        ],
        "Answer": " Answer: c\nExplanation: Reverse() an inbuilt method reverses all the characters singly and hence embed them into the string completely.\nOutput :\n\n\nefilevol i\n\n\n"
    },
    {
        "id": 495,
        "Question": "Which of these classes is used to create an object whose character sequence is mutable?",
        "Options": [
            "a) String()",
            "b) StringBuilder()",
            "c) String() & StringBuilder()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: reverse() and replace() are by definition.\n"
    },
    {
        "id": 496,
        "Question": "Select the namespace/namespaces which consists of methods like Length(), Indexer(), Append() for manipulating the strings.",
        "Options": [
            "a) System.Class",
            "b) System.Array",
            "c) System.Text",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Mutable strings are dynamic strings. They can grow dynamically as characters are added to them. stringbuilder class supports those methods that are useful for manipulating dynamic strings.\n"
    },
    {
        "id": 497,
        "Question": "Select the method used to write single byte to a file?",
        "Options": [
            "a) Write()",
            "b) Wrteline()",
            "c) WriteByte()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The system.text namespace contains the Stringbuilder class and hence must include using system.text for manipulating the mutable strings.\n"
    },
    {
        "id": 498,
        "Question": "Select the namespace on which the stream classes are defined?",
        "Options": [
            "a) System.IO",
            "b) System.Input",
            "c) System.Output",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The core stream classes are defined within the System.IO namespace. To use these classes, you will usually include the following statement near the top of your program: using System.IO;\n"
    },
    {
        "id": 499,
        "Question": "Choose the class on which all stream classes are defined?",
        "Options": [
            "a) System.IO.stream",
            "b) Sytem.Input.stream",
            "c) System.Output.stream",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: The core stream class is System.IO.Stream. Stream represents a byte stream and is a base class for all other stream classes. It is also abstract, which means that you cannot instantiate a Stream object. Stream defines a set of standard stream operations.\n"
    },
    {
        "id": 500,
        "Question": "Choose the stream class method which is used to close the connection?",
        "Options": [
            "a) close()",
            "b) static close()",
            "c) void close()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: void close() closes the stream.\n"
    },
    {
        "id": 501,
        "Question": "The method used to write a single byte to an output stream?",
        "Options": [
            "a) void WriteByte(byte value)",
            "b) int Write(byte[] buffer ,int offset ,int count)",
            "c) write()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Writes a single byte to an output stream.\n"
    },
    {
        "id": 502,
        "Question": "Select the method which writes the contents of the stream to the physical device.",
        "Options": [
            "a) fflush()",
            "b) void fflush()",
            "c) void Flush()",
            "d) flush()"
        ],
        "Answer": " Answer: c\nExplanation: The method used to write the contents of the stream to the physical device.\n"
    },
    {
        "id": 503,
        "Question": "Select the method which returns the number of bytes from the array buffer:",
        "Options": [
            "a) void WriteByte(byte value)",
            "b) int Write(byte[] buffer, int offset, int count)",
            "c) write()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Writes a subrange of count bytes from the array buffer, beginning at buffer[offset], returning the number of bytes written.\n"
    },
    {
        "id": 504,
        "Question": "Name the method which returns integer as -1 when the end of file is encountered.",
        "Options": [
            "a) int read()",
            "b) int ReadByte()",
            "c) void readbyte()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Returns an integer representation of the next available byte of input. Returns –1 when the end of the file is encountered.\n"
    },
    {
        "id": 505,
        "Question": "Select the statements which define the stream.",
        "Options": [
            "a) A stream is an abstraction that produces or consumes information",
            "b) A stream is linked to a physical device by the I/0 system",
            "c) C# programs perform I/O through streams",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 506,
        "Question": "Select the action of the method long seek()?",
        "Options": [
            "a) Attempts to readup to count bytes into buffer starting at buffer[offset] ",
            "b) Writes a single byte to an output stream",
            "c) Sets the current position in the stream to the specified offset from specified origin and hence returns the new position",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:\n\n\n\t\n\nlong Seek(long offset, SeekOrigin origin)\n\n\nSets the current position in the stream to the specified offset from the specified origin. It returns the new position.\n"
    },
    {
        "id": 507,
        "Question": "Which among the following attempts to read up to count bytes into buffer starting at buffer[offset], returning the number of bytes successfully read?",
        "Options": [
            "a) int ReadByte()",
            "b) int Read(byte[] buffer, int offset, int count)",
            "c) Void WriteByte(byte value)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 508,
        "Question": "Which of these classes is used to read and write bytes in a file?",
        "Options": [
            "a) FileReader",
            "b) FileWriter",
            "c) FileInputStream",
            "d) InputStreamReader"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 509,
        "Question": "Which of these data types is returned by every method of OutputStream?",
        "Options": [
            "a) int",
            "b) float",
            "c) byte",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Every method of OutputStream returns void and throws an IOExeption in case of errors.\n"
    },
    {
        "id": 510,
        "Question": "Which of these classes is used for input and output operation when working with bytes?",
        "Options": [
            "a) InputStream",
            "b) Reader",
            "c) Writer",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: InputStream & OutputStream are designed for byte stream. Reader and writer are designed for character stream.\n"
    },
    {
        "id": 511,
        "Question": "Which among the following is used for storage of memory aspects?",
        "Options": [
            "a) BufferedStream",
            "b) FileStream",
            "c) MemoryStream",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A byte stream that uses memory for storage.\n"
    },
    {
        "id": 512,
        "Question": "Which among the following is used for storage of unmanaged memory aspects?",
        "Options": [
            "a) BufferedStream",
            "b) FileStream",
            "c) MemoryStream",
            "d) UnmanagedMemoryStream"
        ],
        "Answer": " Answer: d\nExplanation: A byte stream that uses unmanaged memory for storage.\n"
    },
    {
        "id": 513,
        "Question": "Which property among the following represents the current position of the stream?",
        "Options": [
            "a) long Length",
            "b) long Position",
            "c) int Length",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: This property contains the length of the stream. This property is read-only.\n"
    },
    {
        "id": 514,
        "Question": "Choose the filemode method which is used to create a new output file with the condition that the file with same name must not exist.",
        "Options": [
            "a) FileMode.CreateNew",
            "b) FileMode.Create",
            "c) FileMode.OpenOrCreate",
            "d) FileMode.Truncate"
        ],
        "Answer": " Answer: a\nExplanation: Creates a new output file. The file must not already be existing.\n"
    },
    {
        "id": 515,
        "Question": "Choose the filemode method which is used to create a new output file with the condition that the file with same name if exists will destroy the old file:",
        "Options": [
            "a) FileMode.CreateNew",
            "b) FileMode.Create",
            "c) FileMode.OpenOrCreate",
            "d) FileMode.Truncate"
        ],
        "Answer": " Answer: b\nExplanation: Creates a new output file. Any pre-existing file with the same name will be destroyed.\n"
    },
    {
        "id": 516,
        "Question": "Which of these is a method used to clear all the data present in output buffers?",
        "Options": [
            "a) clear()",
            "b) flush()",
            "c) fflush()",
            "d) close()"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 517,
        "Question": "Which of these is a method used for reading bytes from the file?",
        "Options": [
            "a) clear()",
            "b) ReadByte()",
            "c) put()",
            "d) write()"
        ],
        "Answer": " Answer: b\nExplanation: FileStream defines two methods that reads bytes from a file: ReadByte() and Read().\n"
    },
    {
        "id": 518,
        "Question": "From which of these classes, the character based output stream class Stream Writer is derived?",
        "Options": [
            "a) TextWriter",
            "b) TextReader",
            "c) Character Stream",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: StreamWriter is derived from TextWriter. To create a character-based output stream, wrap a Stream object (such as a FileStream) inside a StreamWriter.\n"
    },
    {
        "id": 519,
        "Question": "The advantages of using character stream based file handling are?",
        "Options": [
            "a) they operate directly on unicode characters",
            "b) they operate directly on bits",
            "c) they store unicode text",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Although byte-oriented file handling is quite common, it is possible to use character-based streams for this purpose. The advantage of the character streams is that they operate directly on Unicode characters. Thus, if you want to store Unicode text, the character streams are certainly the best option.\n"
    },
    {
        "id": 520,
        "Question": "Which among the following classes are used to perform the character based file operations?",
        "Options": [
            "a) StreamReader",
            "b) InputReaderWriter",
            "c) OutputStream",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: In general, to perform character-based file operations, wrap a FileStream inside a StreamReader or a StreamWriter. These classes automatically convert a byte stream into a character stream, and vice versa.\n"
    },
    {
        "id": 521,
        "Question": "Which of these is a method used to clear all the data present in output buffers?",
        "Options": [
            "a) clear()",
            "b) flush()",
            "c) fflush()",
            "d) close()"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 522,
        "Question": "Which method of the character stream class returns the numbers of characters successfully read starting at index?",
        "Options": [
            "a) int Read()",
            "b) int Read(char[] buffer, int index, int count)",
            "c) int ReadBlock(char[ ] buffer, int index, int count)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Attempts to read the count characters into buffer starting at buffer[index], returning the number of characters successfully read.\n"
    },
    {
        "id": 523,
        "Question": "Which method of character stream class returns the numbers of characters successfully read starting at count?",
        "Options": [
            "a) int Read()",
            "b) int Read(char[] buffer, int index, int count)",
            "c) int ReadBlock(char[ ] buffer, int index, int count)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Attempts to read the count characters into buffer starting at buffer[count], returning the number of characters successfully read.\n"
    },
    {
        "id": 524,
        "Question": "Which method among the following returns the integer if no character is available?",
        "Options": [
            "a) int peek()",
            "b) int read()",
            "c) string ReadLine()",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Obtains the next character from the input stream, but does not remove that character. Returns –1 if no character is available.\n"
    },
    {
        "id": 525,
        "Question": "Which of the following is used to perform all input & output operations in C#?",
        "Options": [
            "a) streams",
            "b) Variables",
            "c) classes",
            "d) Methods"
        ],
        "Answer": " Answer: a\nExplanation: Streams are used for input and output operations in any programming language.\n"
    },
    {
        "id": 526,
        "Question": "Which of the following is a type of stream in C#?",
        "Options": [
            "a) Integer stream",
            "b) Character stream",
            "c) Float stream",
            "d) Long stream"
        ],
        "Answer": " Answer: b\nExplanation: Two types of streams – Byte stream and character stream are defined in C#.\n"
    },
    {
        "id": 527,
        "Question": "10. In the given constructor declaration for character based file operation what does ‘path’ and ‘bool specifies?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\"> StreamWriter<span class=\"br0\">(</span><span class=\"kw4\">string</span> path, <span class=\"kw4\">bool</span> append<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) the name of the file to open",
            "b) specifies the full path of file",
            "c) if append is true, the file is appended to the end of the existing file",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: StreamWriter(string path, bool append). Here, path specifies the name of the file to be opened, which can include a full path specifier. In the second form, if append is true, then the output is appended to the end of an existing file. Otherwise, output overwrites the specified file.\n"
    },
    {
        "id": 528,
        "Question": "The ‘ref’ keyword can be used with which among the following?",
        "Options": [
            "a) Static function/subroutine",
            "b) Static data",
            "c) Instance function/subroutine",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 529,
        "Question": "To implement delegates, the necessary condition is?",
        "Options": [
            "a) class declaration",
            "b) inheritance",
            "c) runtime polymorphism",
            "d) exceptions"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 530,
        "Question": "Suppose a Generic class called as SortObjects is to be made capable of sorting objects of any type(integer, single, byte etc). Then, which of the following programming constructs is able to implement the comparison function?",
        "Options": [
            "a) interface",
            "b) encapsulation",
            "c) delegate",
            "d) attribute"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 531,
        "Question": "To generate a simple notification for an object in runtime, the programming construct to be used for implementing this idea?",
        "Options": [
            "a) namespace",
            "b) interface",
            "c) delegate",
            "d) attribute"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 532,
        "Question": "Choose the incorrect statement among the following about the delegate?",
        "Options": [
            "a) delegates are of reference types",
            "b) delegates are object oriented",
            "c) delegates are type safe",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 533,
        "Options": [
            "a) on declaring the delegate, a class called del is created",
            "b) the del class is derived from the MulticastDelegate class",
            "c) the del class will contain a one argument constructor and an invoke() method",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 534,
        "Question": "Which of the following is an incorrect statement about delegate?",
        "Options": [
            "a) a single delegate can invoke more than one method",
            "b) delegates could be shared",
            "c) delegates are type safe wrappers for function pointers",
            "d) delegate is a value type"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 535,
        "Question": "Which among the following differentiates a delegate in C#.NET from a conventional function pointer in other languages?",
        "Options": [
            "a) delegates in C#.NET represent a new type in the Common Type System",
            "b) delegates allows static as well as instance methods to be invoked",
            "c) delegates are type safe and secure",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 536,
        "Question": "Choose the incorrect statement about delegates?",
        "Options": [
            "a) delegates are not type safe",
            "b) delegates can be used to implement callback notification",
            "c) delegate is a user defined type",
            "d) delegates permits execution of a method in an asynchronous manner"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 537,
        "Question": "Which of the following statements is correct about a delegate?",
        "Options": [
            "a) inheritance is a prerequisite for using delegates",
            "b) delegates are not type safe",
            "c) delegates provides wrappers for function pointers",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 538,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">delegate</span> <span class=\"kw4\">void</span> A<span class=\"br0\">(</span><span class=\"kw1\">ref</span> <span class=\"kw4\">string</span> str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> fun<span class=\"br0\">(</span> <span class=\"kw1\">ref</span> <span class=\"kw4\">string</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            a <span class=\"sy0\">=</span> a<span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span> <span class=\"nu0\">7</span>, a<span class=\"sy0\">.</span><span class=\"me1\">Length</span> <span class=\"sy0\">-</span> <span class=\"nu0\">7</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            A str1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">string</span> str <span class=\"sy0\">=</span> <span class=\"st0\">\"Test Your C#.net skills\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            str1 <span class=\"sy0\">=</span> sample<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            str1<span class=\"br0\">(</span><span class=\"kw1\">ref</span> str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Test Your",
            "b) ur C#.NET",
            "c) ur C#.NET Skills",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 539,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">delegate</span> <span class=\"kw4\">string</span> F<span class=\"br0\">(</span><span class=\"kw4\">string</span> str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">string</span> fun<span class=\"br0\">(</span><span class=\"kw4\">string</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">return</span> a<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">','</span><span class=\"st0\">'-'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            F str1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> F<span class=\"br0\">(</span>sample<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">string</span> str <span class=\"sy0\">=</span> str1<span class=\"br0\">(</span><span class=\"st0\">\"Test Your c#.NET skills\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Test Your",
            "b) Test-Your-C#.NET-Skills",
            "c) ur C#.NET Skills",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  None.\n"
    },
    {
        "id": 540,
        "Question": "Choose the statements which makes delegate in C#.NET different from a normal class?",
        "Options": [
            "a) Delegates in C#.NET is a base class for all delegates type",
            "b) Delegates created in C#.NET are further not allowed to derive from the delegate types that are created",
            "c) Only system and compilers can derive explicitly from the Delegate or MulticasteDelegate class",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\nTest-Your-C#.NET-Skills\n\n\n"
    },
    {
        "id": 541,
        "Question": "Which of the following are the correct statements about delegates?",
        "Options": [
            "a) Delegates can be used to implement callback notification",
            "b) Delegates permit execution of a method on a secondary thread in an asynchronous manner",
            "c) Delegate is a user defined type",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 542,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">delegate</span> <span class=\"kw4\">string</span> f<span class=\"br0\">(</span><span class=\"kw4\">string</span> str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sample</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">string</span> fun<span class=\"br0\">(</span><span class=\"kw4\">string</span> a<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> a<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">'k'</span>, <span class=\"st0\">'o'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         f str1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> f<span class=\"br0\">(</span>sample<span class=\"sy0\">.</span><span class=\"me1\">fun</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">string</span> str <span class=\"sy0\">=</span> str1<span class=\"br0\">(</span><span class=\"st0\">\"Test Ykur C#.NET Skills\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>str<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Test Ykur C#.NET Skills",
            "b) Test Ykour C#.NET Skills",
            "c) Test Your C#.NET Skills",
            "d) Test ur C#.NET Skills"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 543,
        "Question": "Incorrect statements about delegates are?",
        "Options": [
            "a) Delegates are reference types",
            "b) Delegates are object oriented",
            "c) Delegates are type safe",
            "d) Only one method can be called using a delegate"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\nTest Your C#.NET Skills\n\n\n"
    },
    {
        "id": 544,
        "Question": "Select the modifiers which control the accessibility of the delegate?",
        "Options": [
            "a) new",
            "b) protected",
            "c) public",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 545,
        "Question": "What is meant by the term generics?",
        "Options": [
            "a) parameterized types",
            "b) class",
            "c) structure",
            "d) interface"
        ],
        "Answer": " Answer: a\nExplanation: The term generics means parameterized types. Parameterized types are important because they enable us to create classes, structures, interfaces, methods, and delegates in which, the type of data upon which they operate is specified as a parameter.\n"
    },
    {
        "id": 546,
        "Question": "Are generics in C# are same as the generics in java and templates in C++?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) May be",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Although C# generics are similar to templates in C++ and generics in Java, they are not the same as either. In fact, there are some fundamental differences among these three approaches to generics.\n"
    },
    {
        "id": 547,
        "Question": "Choose the advantages of using generics?",
        "Options": [
            "a) Generics facilitate type safety",
            "b) Generics facilitate improved performance and reduced code",
            "c) Generics promote the usage of parameterized types",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: By definition of generics.\n"
    },
    {
        "id": 548,
        "Question": "4. What does the following C# code block defines?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Gen<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">      T ob<span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Generics class declaration",
            "b) Generic constructor declaration",
            "c) A simple class declaration",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: class Gen<T> This defines the generics declaration where ‘T’ is the name of the type parameter. This parameter is used as a placeholder for the actual type that will be specified when a Gen object is created. Gen is a generic class. T is used to declare a variable called ‘ob’.\n"
    },
    {
        "id": 549,
        "Question": "5. What does the following C# code set defines?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> Gen<span class=\"br0\">(</span>T o<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      ob <span class=\"sy0\">=</span> o<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Generics class Declaration",
            "b) Declaration of variable",
            "c) Generic constructor declaration",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 550,
        "Question": "Select the type argument of an open constructed type?",
        "Options": [
            "a) Gen<int>",
            "b) Gen<T>",
            "c) Gen<>",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A generic type, such as Gen<T>, is an abstraction. In C# terminology, a construct such as Gen<T> is called an open constructed type, because the type parameter T (rather than an actual type, such as int) is specified.\n"
    },
    {
        "id": 551,
        "Question": "Which among the given classes is present in System.Collection.Generic.namespace?",
        "Options": [
            "a) Stack",
            "b) Tree",
            "c) Sorted Array",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 552,
        "Question": "Which of these is a correct way of defining generic method?",
        "Options": [
            "a) name(T1, T2, …, Tn) { /* … */ }",
            "b) public name { /* … */ }",
            "c) class name[T1, T2, …, Tn] { /* … */ }",
            "d) name{T1, T2, …, Tn} { /* … */ }"
        ],
        "Answer": " Answer: b\nExplanation: The syntax for a generic method includes a type parameter, inside angle brackets, and appears before the method’s return type. For static generic methods, the type parameter section must appear before the method’s return type.\n"
    },
    {
        "id": 553,
        "Question": "Which of these type parameters is used for generic methods to return and accept any type of object?",
        "Options": [
            "a) K",
            "b) N",
            "c) T",
            "d) V"
        ],
        "Answer": " Answer: c\nExplanation: T is used for type, A type variable can be any non-primitive type you specify: any class type, any interface type, any array type, or even another type variable.\n"
    },
    {
        "id": 554,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"nu0\">40</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) Runtime Error",
            "c) 40",
            "d) Compile time Error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 555,
        "Question": "12. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Csharp",
            "c) 0",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n40\n\n\n"
    },
    {
        "id": 556,
        "Question": "1. In the following C# code, which of the following statements are perfectly valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> MyContainer<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> <span class=\"kw1\">where</span> T<span class=\"sy0\">:</span> <span class=\"kw4\">class</span>, IComparable</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"coMULTI\">/* insert code here */</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Class MyConatiner requires that its type argument must implement Icomparable interface",
            "b) There are multiple constraints on type argument to MyConatiner class",
            "c) Compiler will report an error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 557,
        "Question": "2. In the following C# code, which statements are perfectly valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Csharp</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> subject<span class=\"sy0\">&lt;</span>S<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span>S arg<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>arg<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">Void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Csharp c <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Csharp<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        c<span class=\"sy0\">.</span><span class=\"me1\">subject</span><span class=\"br0\">(</span><span class=\"st0\">\"hi\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        c<span class=\"sy0\">.</span><span class=\"me1\">subject</span><span class=\"br0\">(</span><span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time exception error",
            "b) Compile time error",
            "c) Code runs successfully and prints required output",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n        \n\n         hi\n         20\n\n\n"
    },
    {
        "id": 558,
        "Question": "Which of the given statements are valid about generics in .NET Framework?",
        "Options": [
            "a) generics are useful in collection classes in .NET framework",
            "b) generics delegates are not allowed in C#.NET",
            "c) generics is a not language feature",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 559,
        "Question": "4. Which statement is valid for the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T Field<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">String</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">String</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">Field</span> <span class=\"sy0\">=</span> <span class=\"st0\">\"Hi\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">Field</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Generic being a keyword cannot be used as a class name",
            "c) Runtime error",
            "d) Code runs successfully"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n\nHello\n\n\n"
    },
    {
        "id": 560,
        "Question": "5. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> T Field<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> g2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> g3 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         g2<span class=\"sy0\">.</span><span class=\"me1\">Field</span> <span class=\"sy0\">=</span> <span class=\"nu0\">8</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         g3<span class=\"sy0\">.</span><span class=\"me1\">Field</span> <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span>g2<span class=\"sy0\">.</span><span class=\"me1\">Field</span> <span class=\"sy0\">%</span> g3<span class=\"sy0\">.</span><span class=\"me1\">Field</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"A\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Prints nothing:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) A",
            "c) Run time error",
            "d) Code runs successfully but prints nothing"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n A\n\n\n"
    },
    {
        "id": 561,
        "Question": "Which of the following is a valid statement about generic procedures in C#.NET are?",
        "Options": [
            "a) All procedures in a Generic class are generic",
            "b) Generic procedures should take at least one type parameter",
            "c) Only those procedures labeled as Generic are Generic",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 562,
        "Question": "7. In the following C# code, which of the following statements are perfectly valid?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> MyContainer<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> <span class=\"kw1\">where</span> T<span class=\"sy0\">:</span> IComparable</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"coMULTI\">/* insert code here */</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Class MyConatiner requires that its type argument must implement Icomparable interface",
            "b) There are multiple constraints on type argument to MyContainer class",
            "c) Type argument of class MyContainer should be Icomparable",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  None.\n"
    },
    {
        "id": 563,
        "Question": "8. Which of the following statements are valid in the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T Field<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> testSub<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T i <span class=\"sy0\">=</span> Field <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span>g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">testSub</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) code runs successfully but prints nothing",
            "b) code runs successfully and prints 1",
            "c) program will give run time error",
            "d) compile time error"
        ],
        "Answer": " Answer: d\nExplanation: Compiler will give error as operator ‘+’ is not defined for types ‘T’ and ‘int’.\n"
    },
    {
        "id": 564,
        "Question": "Which among the given classes represents System.Collections.Generic namespace?",
        "Options": [
            "a) SortedDictionary",
            "b) Sorted Array",
            "c) Stack",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 565,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Csharp",
            "c) 0",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\nCsharp\n\n\n"
    },
    {
        "id": 566,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 30",
            "c) Runtime Error",
            "d) Compile time Error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n30.\n\n\n"
    },
    {
        "id": 567,
        "Question": "Assume 2 columns named as Product and Category how can be both sorted out based on first by category and then by product name?",
        "Options": [
            "a) var sortedProds = _db.Products.Orderby(c => c.Category)",
            "b) var sortedProds = _db.Products.Orderby(c => c.Category) + ThenBy(n => n.Name)",
            "c) var sortedProds = _db.Products.Orderby(c => c.Category) . ThenBy(n => n.Name)",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  var sortedProds = _db.Products.Orderby(c => c.Category) . ThenBy(n => n.Name).\n"
    },
    {
        "id": 568,
        "Question": "Choose the wrong statement about the LINQ?",
        "Options": [
            "a) The main concept behind the linq is query",
            "b) linq makes use of foreach loop to execute the query",
            "c) It is not required that linq should make use of IEnumerable interface",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: LINQ at core is the query. A query specifies what data will be obtained from a data source. Query in linq is executed using foreach loop. In order for a source of data to be used by LINQ, it must implement the IEnumerable interface.\n"
    },
    {
        "id": 569,
        "Question": "Choose the namespace in which the interface IEnumerable is declared?",
        "Options": [
            "a) System.Collections",
            "b) System.Collections.Generic",
            "c) Both System.Collections & System.Collections.Generic",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 570,
        "Question": "Can we use linq to query against a DataTable?",
        "Options": [
            "a) Yes",
            "b) No",
            "c) Either Yes or No",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: We cannot use query against the DataTable’s Rows collection, since DataRowCollection doesn’t implement IEnumerable<T>. We need to use the AsEnumerable() extension for DataTable. As an example:\n\n\n                    var results = from myRow in myDataTable.AsEnumerable() \n                    where myRow.Field<int>(\"RowNo\") == 1 \n                    select myRow;\n\n\n"
    },
    {
        "id": 571,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">where</span> n <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0, 1, -2, -4, 5",
            "b) 1, 3, 0, 5",
            "c) 1, 3, 5",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation:  A simple linq query generated program to show a query is implemented using linq.\nOutput :\n\n\n\t\n\n1, 3, 0, 5\n\n\n"
    },
    {
        "id": 572,
        "Question": "Select the namespace which should be included while making use of LINQ operations?",
        "Options": [
            "a) System.Text",
            "b) System.Collections.Generic",
            "c) System.Linq",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 573,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">where</span> n <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span><span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The positive values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) code run successfully prints nothing",
            "b) run time error",
            "c) code run successfully and executes output",
            "d) compile time error"
        ],
        "Answer": " Answer: c\nExplanation: -2, 0, -4\n"
    },
    {
        "id": 574,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">where</span> n <span class=\"sy0\">&gt;</span> <span class=\"sy0\">-</span><span class=\"nu0\">5</span> <span class=\"sy0\">&amp;&amp;</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">6</span></pre></li><li class=\"li1\"><pre class=\"de1\">                       orderby n descending</pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The positive values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Prints nothing code runs successfully",
            "b) Run time error",
            "c) Arranged in descending order code runs successfully",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n5, 3, 1, 0, -2, -4\n\n\n"
    },
    {
        "id": 575,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">16</span>,  <span class=\"nu0\">9</span>, <span class=\"nu0\">25</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                      <span class=\"kw1\">where</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> </pre></li><li class=\"li1\"><pre class=\"de1\">                      <span class=\"kw1\">select</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Sqrt</span><span class=\"br0\">(</span>n<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The positive values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code runs successfully prints nothing",
            "b) Code runs successfully prints required output",
            "c) Run time error",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n4, 3, 5\n\n\n"
    },
    {
        "id": 576,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                      wheres n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span> </pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw1\">select</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span><span class=\"nu0\">78</span>, <span class=\"nu0\">9</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The largest values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code runs successfully prints nothing",
            "b) Run time error",
            "c) Code runs successfully prints required output",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\nThe largest values in nums: 78\n\n\n"
    },
    {
        "id": 577,
        "Question": "1. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> strs <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"alpha\"</span>, <span class=\"st0\">\"beta\"</span>, <span class=\"st0\">\"gamma\"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> chrs <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> str <span class=\"kw1\">in</span> strs</pre></li><li class=\"li1\"><pre class=\"de1\">                   let chrArray <span class=\"sy0\">=</span> str<span class=\"sy0\">.</span><span class=\"me1\">ToCharArray</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw1\">from</span> ch <span class=\"kw1\">in</span> chrArray</pre></li><li class=\"li1\"><pre class=\"de1\">                   orderby ch</pre></li><li class=\"li1\"><pre class=\"de1\">                   <span class=\"kw1\">select</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The individual characters in sorted order:\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> c <span class=\"kw1\">in</span> chrs<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>c <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a a l h a b g m m a p e t a",
            "b) a a a a a b e g h l m m p t",
            "c) a g h l m m p t a a a a b e",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\t\n\n\n a a a a a b e g h l m m p t\n\n\n"
    },
    {
        "id": 578,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> nums<span class=\"sy0\">.</span><span class=\"kw1\">Where</span><span class=\"br0\">(</span>n <span class=\"sy0\">=&gt;</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> r<span class=\"sy0\">*</span><span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">.</span></pre></li><li class=\"li1\"><pre class=\"de1\">                       <span class=\"me1\">OrderByDescending</span><span class=\"br0\">(</span>r<span class=\"sy0\">=&gt;</span>r<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The positive values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) code run successfully prints nothing",
            "b) run time error",
            "c) code run successfully prints multiple of 2",
            "d) compile time error"
        ],
        "Answer": " Answer: c\nExplanation: We had created the queries by using query method such as Where() and Select(). This creates a query called posNums that creates a sequence of positive values in nums in descending order using the method OrderByDescending().\nOutput:\n\n        \n\n\n 10 6 2\n\n\n"
    },
    {
        "id": 579,
        "Question": "3. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">3</span>, <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> ltAvg <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                     let x <span class=\"sy0\">=</span> nums<span class=\"sy0\">.</span><span class=\"me1\">Average</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw1\">where</span> n <span class=\"sy0\">&lt;</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The average is \"</span> <span class=\"sy0\">+</span> nums<span class=\"sy0\">.</span><span class=\"me1\">Average</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 3",
            "c) 5",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: Built in method Avg() is used\nOutput:\n\n\t\n\n\n3\n\n\n"
    },
    {
        "id": 580,
        "Question": "Choose the namespace in which Expression trees are encapsulated?",
        "Options": [
            "a) System.Linq",
            "b) System.Linq.Expressions",
            "c) System.Text",
            "d) System.Collections.Generic"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 581,
        "Question": "7. In the following C# code, what does the output represent?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                      <span class=\"kw1\">where</span> n <span class=\"sy0\">&gt;</span> <span class=\"nu0\">0</span></pre></li><li class=\"li1\"><pre class=\"de1\">                      <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> len <span class=\"sy0\">=</span> posNums<span class=\"sy0\">.</span><span class=\"me1\">Count</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>len<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Execution of code with nothing being printed",
            "b) Execution of code with printing all numbers",
            "c) Execution of code with counting total numbers greater than zero",
            "d) Run time error"
        ],
        "Answer": " Answer: d\nExplanation: The current program has introduced the concept of expression tree. An expression tree is a representation of a lambda expression as data. The program illustrates the two key steps in using an expression tree. First, it creates an expression tree by using this statement:\n\n\nExpression<Func<int, int, bool>>\nIsFactorExp = (n, d) => (d != 0) ? (n % d) == 0 : false;\n\n\nSecond, this constructs a representation of a lambda expression in memory.\nOutput:\n\n\n5 is a factor of 10\n\n\n"
    },
    {
        "id": 582,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">0</span>, <span class=\"sy0\">-</span><span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> nums<span class=\"sy0\">.</span><span class=\"kw1\">Where</span><span class=\"br0\">(</span>n <span class=\"sy0\">=&gt;</span> n <span class=\"sy0\">&lt;</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span><span class=\"sy0\">.</span><span class=\"kw1\">Select</span><span class=\"br0\">(</span>r <span class=\"sy0\">=&gt;</span> r<span class=\"sy0\">%</span>3<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) 1 -2 0 0 -1 2",
            "d) 2 -1 0 0 -2 1"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n            int len = (from n in nums where n > 0\n                    select n).Count();\n\n\n"
    },
    {
        "id": 583,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"sy0\">-</span><span class=\"nu0\">2</span>, <span class=\"sy0\">-</span><span class=\"nu0\">3</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                          orderby n descending</pre></li><li class=\"li1\"><pre class=\"de1\">                          <span class=\"kw1\">select</span> n<span class=\"sy0\">*</span><span class=\"nu0\">4</span> <span class=\"sy0\">/</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 10 2 -4 -6",
            "b) 5 1 -2 -3",
            "c) 1 5 -2 -3",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n 3\n\n\n"
    },
    {
        "id": 584,
        "Question": "Select the class which is the base class for all arrays in C#?",
        "Options": [
            "a) Array",
            "b) Text",
            "c) arrays",
            "d) Both Array & Text"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 585,
        "Question": "Select the interfaces implemented by array class.",
        "Options": [
            "a) ICloneable, ICollection",
            "b) IEnumerable, IStructuralComparable, IStructuralEquatable",
            "c) ICloneable, ICollection, IList",
            "d) Only IEnumerable, IStructuralComparable, IStructuralEquatable & ICloneable, ICollection, IList"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 586,
        "Question": "Choose the correct statement about the IComparer interface in C#?",
        "Options": [
            "a) The IComparer interface is in System.Collections",
            "b) It defines a method called Compare(), which compares the values of two objects",
            "c) Both The IComparer interface is in System.Collections & It defines a method called Compare(), which compares the values of two objects",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The IComparer interface is in System.Collections. It defines a method called Compare(), which compares the values of two objects. It is shown here: int Compare(object x, object y). It returns greater than zero if x is greater than y, less than zero if x is less than y, and zero if the two values are equal.\n"
    },
    {
        "id": 587,
        "Question": "Choose the correct statement about the IComparer<T> interface in C#?",
        "Options": [
            "a) The IComparer<T> is in System.Collections.Generic",
            "b) It defines a generic form of Compare()",
            "c) Only The IComparer<T> is in System.Collections.Generic",
            "d) Both The IComparer is in System.Collections.Generic & It defines a generic form of Compare()"
        ],
        "Answer": " Answer: d\nExplanation:  IComparer<T> is in System.Collections.Generic. It defines a generic form of Compare(), which is shown here:\n int Compare(T x, T y). It works the same as its non-generic relative: returning greater than zero if x is greater than\ny, less than zero if x is less than y, and zero if the two values are equal.\n"
    },
    {
        "id": 588,
        "Question": "5. What does the following property defined in the array class defines in C#?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">bool</span> IsReadOnly <span class=\"br0\">{</span> <span class=\"kw1\">get</span><span class=\"sy0\">;</span> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a property is read only by nature",
            "b) property is true if the array object is read only and false otherwise",
            "c) value is false for arrays",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A read-only property that is true if the Array object is read-only and false if it is not. This value is false for arrays.\n"
    },
    {
        "id": 589,
        "Question": "6. What does the following property define in C#?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> BinarySearch<span class=\"sy0\">&amp;</span>lt<span class=\"sy0\">;</span>T<span class=\"sy0\">&amp;</span>gt<span class=\"sy0\">;</span><span class=\"br0\">(</span>T<span class=\"br0\">[</span><span class=\"br0\">]</span> array, <span class=\"kw4\">int</span> index, <span class=\"kw4\">int</span> length, T <span class=\"kw1\">value</span><span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Searches a portion of the array specified by array for the value specified by value",
            "b) The search begins at the index specified by index and is restricted to length elements. Returns the index of the first match",
            "c) If value is not found, returns a zero value",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Searches a portion of the array specified by array for the value specified by value. The search begins at the index specified by index and is restricted to length elements. Returns the index of the first match. If the value is not found, returns a negative value. The array should be sorted and one-dimensional.\n"
    },
    {
        "id": 590,
        "Question": "Which method will be used to copy content from one array to another array?",
        "Options": [
            "a) Copy()",
            "b) copy()",
            "c) Both Copy() & copy()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  ‘Reverse()’ a built in method to reverse an array of string defined in array class is used.\nOutput:\n\n\n        Array elements:\n        beta alpha gamma\n        Array elements now:\n        gamma alpha beta\n\n\n"
    },
    {
        "id": 591,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"Original order: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> nums<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Array<span class=\"sy0\">.</span><span class=\"me1\">Reverse</span><span class=\"br0\">(</span>nums<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"Reversed order: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> nums<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 5, 4, 3, 2, 1",
            "c) Compile time error",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  Using Built in method Sort(), first array is sorted then index of number ’14’ is searched using array class built in method Array.BinarySearch(nums, 14) and hence at last if loop is used to make comparison of index position with random position ‘9’ chosen here.\nOutput:\n\n\n        True\n        9\n\n\n"
    },
    {
        "id": 592,
        "Question": "Which mechanism among the following helps in identifying a type during the execution of a program?",
        "Options": [
            "a) Reflection",
            "b) Runtime type ID",
            "c) Both Reflection & Runtime type ID",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Runtime type ID is the mechanism that lets identify a type during the execution of a program. Using Runtime type ID we can construct and use objects at runtime.\n"
    },
    {
        "id": 593,
        "Question": "Select the statement which are correct about RTTI(Runtime type identification)?",
        "Options": [
            "a) It allows the type of an object to be determined during program execution",
            "b) It tells what type of object is being referred to by a base class reference determined by RTTI",
            "c) Helps in prevention of an invalid cast exception in advance",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Runtime type identification (RTTI) allows the type of an object to be determined during program execution. RTTI is useful for many reasons. For example, we can discover precisely what type of object is being referred to by a base-class reference. Another use of RTTI is to test in advance whether a cast will succeed, preventing an invalid cast exception.\n"
    },
    {
        "id": 594,
        "Question": "Select the Keyword which supports the run time type identification?",
        "Options": [
            "a) is, as",
            "b) as, typeof",
            "c) Both is, as & as, typeof",
            "d) Only is, as"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 595,
        "Question": "4. What does the following C# code signify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">expr <span class=\"kw3\">is</span> type</pre></div></div></div></div></div></div>",
        "Options": [
            "a) Determines the type of an object",
            "b) a simple deceleration",
            "c) Both Determines the type of an object & a simple deceleration",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  The given expression determines the type of an object using the ‘is’ operator. Here, expr is an expression that describes an object whose type is being tested against type. If the type of expr is the same as, or compatible with, type, then the outcome of this operation is true. Otherwise, it is false.\n"
    },
    {
        "id": 596,
        "Question": "Which operator among the following supports the operation of conversion at runtime without generating the exceptions?",
        "Options": [
            "a) is",
            "b) as",
            "c) typeof",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: We have to include the line ‘This won’t display — a not derived from B’ this is because ‘a’ is object of class ‘A’ which itself is derived from class ‘B’. So, ‘a’ is a B\nOutput:\n\n\n       a is an A\n        This won’t display -- a not derived from B\n\n\n"
    },
    {
        "id": 597,
        "Question": "Which operator among the following is used to perform the operation of boxing, unboxing, reference and identity conversions?",
        "Options": [
            "a) is",
            "b) as",
            "c) typeof",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 598,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> A <span class=\"br0\">{</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> B <span class=\"sy0\">:</span> A <span class=\"br0\">{</span><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> CheckCast </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        A a <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        B b <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> B<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b <span class=\"sy0\">=</span> a <span class=\"kw1\">as</span> B<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>b<span class=\"sy0\">==</span><span class=\"kw1\">null</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The cast in b = (B) a is NOT allowed.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The cast in b = (B) a is allowed\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) The cast in b = (B) a is NOT allowed",
            "c) The cast in b = (B) a is allowed",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: use the as operator, which has this general form:\n\n\n     expr as type\n\n\nHere, expr is the expression being converted to type. If the conversion succeeds, then a reference to type is returned. Otherwise, a null reference is returned. The as operator can be used to perform only reference, boxing, unboxing, or identity conversions.\n"
    },
    {
        "id": 599,
        "Question": "Which operator among the following supplies the information about the characteristics of a typeof?",
        "Options": [
            "a) is",
            "b) as",
            "c) typeof",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: since a is not a B, the cast of a to B is invalid and is prevented by the if statement.\nOutput:\n\n\nThe cast in b = (B) a is NOT allowed\n\n\n"
    },
    {
        "id": 600,
        "Question": "Which feature enables to obtain information about the use and capabilities of types at runtime?",
        "Options": [
            "a) Runtime type ID",
            "b) Reflection",
            "c) Attributes",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Reflection is the feature that enables you to obtain information about a type. The term reflection comes from the way the process works: A Type object mirrors the underlying type that it represents. Reflection is a powerful mechanism because it allows us to learn and use the capabilities of types that are known only at runtime.\n"
    },
    {
        "id": 601,
        "Question": "Choose the namespace which consists of classes that are part of .NET Reflection API?",
        "Options": [
            "a) System.Text",
            "b) System.Name",
            "c) System.Reflection",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Many of the classes that support reflection are part of the .NET Reflection API, which is in the System.Reflection namespace.\neg : using System.Reflection;\n"
    },
    {
        "id": 602,
        "Question": "Choose the correct statement about System.Type namespace.",
        "Options": [
            "a) Core of the reflection subsystem as it encapsulates a type",
            "b) Consists of many methods and properties that can be used to obtain information about a type at runtime",
            "c) Both Core of the reflection subsystem as it encapsulates a type & Consists of many methods and properties that can be used to obtain information about a type at runtime",
            "d) Only Consists of many methods and properties that can be used to obtain information about a type at runtime"
        ],
        "Answer": " Answer: c\nExplanation: System.Type is at the core of the reflection subsystem because it encapsulates a type. It contains many properties and methods that you will use to obtain information about a type at runtime.\n"
    },
    {
        "id": 603,
        "Question": "Choose the class from which the namespace ‘System.Type’ is derived?",
        "Options": [
            "a) System.Reflection",
            "b) System.Reflection.MemberInfo",
            "c) Both System.Reflection & System.Reflection.MemberInfo",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Type is derived from an abstract class called System.Reflection.MemberInfo\n"
    },
    {
        "id": 604,
        "Options": [
            "a) Helps in distinguishing kinds of members",
            "b) Property helps in determining if member is a field, method, property or event",
            "c) Both Helps in distinguishing kinds of members & Property helps in determining if member is a field, method, property or event",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: This property obtains the kind of the member. This value indicates if the member is a field, method, property, event, or constructor among others.\n"
    },
    {
        "id": 605,
        "Question": "The property signifies “Obtains a Module object that represents the module (an executable file) in which the reflected type resides”. Choose the property which specifies the following statement?",
        "Options": [
            "a) Type DeclaringType",
            "b) int MetadataToken",
            "c) Module Module",
            "d) Type ReflectedType"
        ],
        "Answer": " Answer: c\nExplanation: By definition.\n"
    },
    {
        "id": 606,
        "Question": "Choose the method defined by MemberInfo.",
        "Options": [
            "a) GetCustomAttributes()",
            "b) IsDefined()",
            "c) GetCustomeAttributesData()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: MemberInfo includes two abstract methods: GetCustomAttributes( ) and IsDefined( ). These both relate to attributes. The first obtains a list of the custom attributes associated with the invoking object. The second determines if an attribute is defined for the invoking object. The .NET Framework Version 4.0 adds a method called GetCustomAttributesData(), which returns information about custom attributes.\n"
    },
    {
        "id": 607,
        "Question": "8. What does the following declaration specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\"> MethodInfo<span class=\"br0\">[</span><span class=\"br0\">]</span> GetMethods<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Returns an array of MethodInfo objects",
            "b) Returns a list of the public methods supported by the type by using GetMethods()",
            "c) Both Returns an array of MethodInfo objects & Returns a list of the public methods supported by the type by using GetMethods()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  A list of the public methods supported by the type can be obtained by using GetMethods(). It returns an array of MethodInfo objects that describe the methods supported by the invoking type. MethodInfo is in the System.Reflection namespace.\n"
    },
    {
        "id": 608,
        "Question": "9. What does the following C# code specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\"><span class=\"kw4\">object</span> Invoke<span class=\"br0\">(</span><span class=\"kw4\">object</span> obj, <span class=\"kw4\">object</span><span class=\"br0\">[</span><span class=\"br0\">]</span> parameters<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Calling a type using invoke()",
            "b) Any arguments that need to be passed to the method are specified in the array parameters",
            "c) The value returned by the invoked method is returned by Invoke()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Here, obj is a reference to the object on which the method is invoked. (For static methods, you can pass null to obj.) Any arguments that need to be passed to the method are specified in the array parameters. If no arguments are needed, parameters must be null. Also, parameters must contain exactly the same number of elements as the number of arguments.\n"
    },
    {
        "id": 609,
        "Question": "10. What does the following C# method specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">  Type<span class=\"br0\">[</span><span class=\"br0\">]</span> GetGenericArguments<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) A property defined by MemberInfo",
            "b) Obtains a list of the type arguments bound to a closed constructed generic type",
            "c) The list may contain both type arguments and type parameters",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  The following method Obtains a list of the type arguments bound to a closed constructed generic type or the type parameters if the specified type is a generic type definition. For an open constructed type, the list may contain both type arguments and type parameters.\n"
    },
    {
        "id": 610,
        "Question": "Which among the following is not the ordered collection class?",
        "Options": [
            "a) BitArray",
            "b) Queue",
            "c) Stack",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  None.\n"
    },
    {
        "id": 611,
        "Question": "Which among the following is not an interface declared in System.Collection namespace?",
        "Options": [
            "a) IDictionaryComparer",
            "b) IEnumerable",
            "c) IEnumerator",
            "d) Icomparer"
        ],
        "Answer": " Answer: a\nExplanation:  None.\n"
    },
    {
        "id": 612,
        "Question": "Which among the following is the correct way to find out the number of elements currently present in an ArrayListCollection called arr?",
        "Options": [
            "a) arr.Capacity",
            "b) arr.Count",
            "c) arr.MaxIndex",
            "d) arr.UpperBound"
        ],
        "Answer": " Answer: b\nExplanation:  None.\n"
    },
    {
        "id": 613,
        "Question": "4. Which statement is correct in the following C#.NET code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">Stack st <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">st<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">st<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span><span class=\"nu0\">7.3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">st<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span><span class=\"nu0\">8</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">st<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span><span class=\"st0\">'b'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">st<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span><span class=\"kw1\">true</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Unsimilar elements like “Csharp”, 7.3, 8 cannot be stored in the same stack collection",
            "b) Boolean values can never be stored in Stack collection",
            "c) Perfectly workable code",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 614,
        "Question": "Which is the correct statement about an ArrayList collection that implements the IEnumerable interface?",
        "Options": [
            "a) To access members of ArrayList from the inner class, it is necessary to pass ArrayList class reference to it",
            "b) The inner class of ArrayList can access ArrayList class members",
            "c) The ArrayList class consist of inner class that implements the IEnumerator interface",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 615,
        "Question": "Which statements among the following are correct about the Collection Classes available in Framework Class Library?",
        "Options": [
            "a) Elements of a collection cannot be transmitted over a network",
            "b) Elements stored in a collection can be modified only if all the elements are of similar types",
            "c) Elements stored in a Collection can be retrieved but cannot be modified",
            "d) Collection classes make use of efficient algorithms to manage the collection, hence improving the performance of the program"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 616,
        "Question": "Among the given collections which one is I/O index based?",
        "Options": [
            "a) ArrayList",
            "b) List",
            "c) Stack",
            "d) Queue"
        ],
        "Answer": " Answer: a\nExplanation:  None.\n"
    },
    {
        "id": 617,
        "Question": "Which among the given statements are correct about the Stack collection?",
        "Options": [
            "a) It can be used for evaluation of expressions",
            "b) It is used to maintain a FIFO list",
            "c) Top most element of the Stack collection can be accessed using the Peek()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 618,
        "Question": "In which of the following collections is the I/O based on a key?",
        "Options": [
            "a) BitArray",
            "b) SortedList",
            "c) Queue",
            "d) Stack"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 619,
        "Question": "The wrong statements about a HashTable collection are?",
        "Options": [
            "a) It is a keyed collection",
            "b) It is a ordered collection",
            "c) It’s not an indexed collection",
            "d) It implements a IDictionaryEnumerator interface in its inner class"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 620,
        "Question": "Which of these classes contains only floating point functions?",
        "Options": [
            "a) Math",
            "b) Process",
            "c) System",
            "d) Object"
        ],
        "Answer": " Answer: a\nExplanation: Math class contains all the floating point functions that are used for geometry, trigonometry, as well as several general purpose methods. Example : sin(), cos(), exp(), sqrt() etc.\n"
    },
    {
        "id": 621,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">2.0</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">3.0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> z <span class=\"sy0\">=</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span> x, y <span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2.0",
            "b) 4.0",
            "c) 8",
            "d) 8.0"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n\t\n\n        \n\n8\n\n\n"
    },
    {
        "id": 622,
        "Question": "3. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">4.772</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> y <span class=\"sy0\">=</span> <span class=\"nu0\">4.76</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">double</span> z <span class=\"sy0\">=</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span>x, y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) 4.772",
            "d) 4.76"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n\t\n\n4.772\n\n\n"
    },
    {
        "id": 623,
        "Question": "What is the value of double consonant ‘E’ defined in Math class?",
        "Options": [
            "a) approximately 3",
            "b) approximately 3.14",
            "c) approximately 2.72",
            "d) approximately 0"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 624,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         A obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         A obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj2 <span class=\"sy0\">=</span> obj1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj2<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 0 0",
            "b) 1 2 1 2",
            "c) 0 0 0 0",
            "d) Run time exception"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n 1 2 1 2\n\n\n"
    },
    {
        "id": 625,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"nu0\">1</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">var</span> posNums <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                      <span class=\"kw1\">select</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span><span class=\"nu0\">4</span> ,<span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"The values in nums: \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> posNums<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 64",
            "c) Compile time error",
            "d) 81"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n64\n\n\n"
    },
    {
        "id": 626,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">float</span> x <span class=\"sy0\">=</span> 3<span class=\"sy0\">.</span>14F<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Abs</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) 3.14",
            "c) 3",
            "d) 4"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n3\n\n\n"
    },
    {
        "id": 627,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span>x,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span>y, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 25",
            "b) 625",
            "c) Compile time error",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation: y = 25, z = 25*25 = 625\nOutput :\n\n\n625\n\n\n"
    },
    {
        "id": 628,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">3</span> ,<span class=\"nu0\">1</span> ,<span class=\"nu0\">2</span> ,<span class=\"nu0\">5</span> ,<span class=\"nu0\">4</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">var</span> ltAvg <span class=\"sy0\">=</span> <span class=\"kw1\">from</span> n <span class=\"kw1\">in</span> nums</pre></li><li class=\"li1\"><pre class=\"de1\">                     let x <span class=\"sy0\">=</span> nums<span class=\"sy0\">.</span><span class=\"me1\">Average</span><span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw1\">where</span> n <span class=\"sy0\">&lt;</span> x</pre></li><li class=\"li1\"><pre class=\"de1\">                     <span class=\"kw1\">select</span> n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"The average is \"</span> <span class=\"sy0\">+</span> nums<span class=\"sy0\">.</span><span class=\"me1\">Average</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 3",
            "c) 5",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: Built in method of maths class Avg() id used\nOutput :\n\n\n3\n\n\n"
    },
    {
        "id": 629,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Max</span><span class=\"br0\">(</span><span class=\"nu0\">4</span>,<span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span>Math<span class=\"sy0\">.</span><span class=\"me1\">Pow</span><span class=\"br0\">(</span>y, <span class=\"nu0\">2</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>z<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4",
            "b) Compile time error",
            "c) 16",
            "d) 89"
        ],
        "Answer": " Answer: c\nExplanation: Built in method of maths class, Max() is used to select maximum value among 4 and 2 and then y is squared using Pow() of math class and the value is stored in z.\nOutput :\n\n\n16\n\n\n"
    },
    {
        "id": 630,
        "Question": "Which among the given classes provides types of rounding functions?",
        "Options": [
            "a) Math",
            "b) Process",
            "c) System",
            "d) Object"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 631,
        "Question": "Which of these methods is a rounding function of Math class?",
        "Options": [
            "a) Max()",
            "b) Min()",
            "c) Abs()",
            "d) Round()"
        ],
        "Answer": " Answer: d\nExplanation: Round() rounds up a variable to nearest integer.\n"
    },
    {
        "id": 632,
        "Question": "Which of these classes contains only floating point functions?",
        "Options": [
            "a) Math",
            "b) Process",
            "c) System",
            "d) Object"
        ],
        "Answer": " Answer: a\nExplanation:  Math class contains all the floating point functions that are used for general purpose mathematics methods. Example : sin(), cos(), exp(), sqrt() etc.\n"
    },
    {
        "id": 633,
        "Question": "Which of these method returns a smallest whole number greater than or equal to variable X?",
        "Options": [
            "a) double Ciel(double X)",
            "b) double Floor(double X)",
            "c) double Max(double X)",
            "d) double Min(double X)"
        ],
        "Answer": " Answer: a\nExplanation: Ciel(double X) returns the smallest whole number greater than or equal to variable X.\n"
    },
    {
        "id": 634,
        "Question": "Which of these methods return a largest whole number less than or equal to variable X?",
        "Options": [
            "a) double Ciel(double X)",
            "b) double Floor(double X)",
            "c) double Max(double X)",
            "d) double Min(double X)"
        ],
        "Answer": " Answer: b\nExplanation: double Floor(double X) returns a largest whole number less than or equal to variable X.\n"
    },
    {
        "id": 635,
        "Question": "Which of the following functions return absolute value of a variable?",
        "Options": [
            "a) Abs()",
            "b) Absolute()",
            "c) absolutevariable()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: Abs() returns the absolute value of a variable.\n"
    },
    {
        "id": 636,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> display<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>x <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         A obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         A obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj2 <span class=\"sy0\">=</span> obj1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj1<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj2<span class=\"sy0\">.</span><span class=\"me1\">display</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1 2 0 0",
            "b) 1 2 1 2",
            "c) 0 0 0 0",
            "d) Run time exception"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n\t\n\n 1 2 1 2\n\n\n"
    },
    {
        "id": 637,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">3.14</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Abs</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 3",
            "c) 3.0",
            "d) 3.1"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n  3\n\n\n"
    },
    {
        "id": 638,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">3.14</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Ceiling</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 3",
            "c) 3.0",
            "d) 4"
        ],
        "Answer": " Answer: d\nExplanation: Ceiling(double x) returns the smallest whole number greater than or equal to variable x.\nOutput:\n\n\n 4\n\n\n"
    },
    {
        "id": 639,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">double</span> x <span class=\"sy0\">=</span> <span class=\"nu0\">3.14</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> y <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span> Math<span class=\"sy0\">.</span><span class=\"me1\">Floor</span><span class=\"br0\">(</span>x<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 3",
            "c) 3.0",
            "d) 4"
        ],
        "Answer": " Answer: b\nExplanation: double Floor(double X) returns the largest whole number less than or equal to variable X. Here, the smallest whole number less than 3.14 is 3.\nOutput:\n\n\n 3\n\n\n"
    },
    {
        "id": 640,
        "Question": "Select the type of multitasking methods that exist:",
        "Options": [
            "a) process based",
            "b) thread based",
            "c) only process",
            "d) both process & thread based"
        ],
        "Answer": " Answer: d\nExplanation: There are two distinct types of multitasking: process-based and thread-based.\n"
    },
    {
        "id": 641,
        "Question": "Choose the correct statement about process-based multitasking.",
        "Options": [
            "a) A feature that allows our computer to run two or more programs concurrently",
            "b) A program that acts as a small unit of code that can be dispatched by the scheduler",
            "c) Only A program that acts as a small unit of code that can be dispatched by the scheduler",
            "d) Both A feature that allows our computer to run two or more programs concurrently & A program that acts as a small unit of code that can be dispatched by the scheduler"
        ],
        "Answer": " Answer: d\nExplanation: The process-based multitasking is the feature that allows your computer to run two or more programs concurrently. For example, process-based multitasking allows you to run a word processor at the same time you are using a spreadsheet or browsing the Internet. In process-based multitasking, a program is the smallest unit of code that can be dispatched by the scheduler.\n"
    },
    {
        "id": 642,
        "Question": "Choose the statements which indicate the differences between the thread based multitasking and process based multitasking.",
        "Options": [
            "a) Process-based multitasking handles the concurrent execution of programs",
            "b) Process-based multitasking handles the concurrent execution of pieces of the same program",
            "c) Thread-based multitasking handles the concurrent execution of programs",
            "d) Thread-based multitasking deals with the concurrent execution of pieces of the same program"
        ],
        "Answer": " Answer:  a\nExplanation: The differences between process-based and thread-based multitasking can be summarized like this:Process-based multitasking handles the concurrent execution of programs. Thread-based multitasking deals with the concurrent execution of pieces of the same program.\n"
    },
    {
        "id": 643,
        "Question": "What is the advantage of the multithreading program?",
        "Options": [
            "a) Enables to utilize the idle and executing time present in most programs",
            "b) Enables to utilize the idle time present in most programs",
            "c) Both Enables to utilize the idle and executing time present in most programs & Enables to utilize the idle time present in most programs",
            "d) Only Enables to utilize the idle time present in most programs"
        ],
        "Answer": " Answer: d\nExplanation: The principal advantage of multithreading is that it enables us to write very efficient programs because it lets us utilize the idle time that is present in most programs.\n"
    },
    {
        "id": 644,
        "Question": "Select the two type of threads mentioned in the concept of multithreading:",
        "Options": [
            "a) foreground",
            "b) background",
            "c) only foreground",
            "d) both foreground & background"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 645,
        "Question": "Number of threads that exists for each of the processes that occurs in the program:",
        "Options": [
            "a) at most 1",
            "b) atleast 1",
            "c) only 1",
            "d) both at most 1 & atleast 1"
        ],
        "Answer": " Answer:  d\nExplanation: All processes have at least one thread for execution, which is usually called the main thread because it is the primary thread that is executed when our program begins. From the main thread, we can create other threads.\n"
    },
    {
        "id": 646,
        "Question": "Choose the namespace which supports multithreading programming?",
        "Options": [
            "a) System.net",
            "b) System.Linq",
            "c) System.Threading",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: The classes that support multithreaded programming are defined in the System.Threading namespace. Thus, you will usually include this statement at the start of any multithreaded program.\n"
    },
    {
        "id": 647,
        "Question": "8. What does the following C# code snippet specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> Thread<span class=\"br0\">(</span>ThreadStart start<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Defines a thread",
            "b) Declaration of a thread constructor",
            "c) Only Defines a thread",
            "d) Only Defines a thread & Declaration of a thread constructor"
        ],
        "Answer": " Answer: d\nExplanation: To create a thread, instantiate an object of type Thread, which is a class defined in System.Threading. The simplest Thread constructor is shown here:\n\n\n\t\n\n          public Thread(ThreadStart start)\n\n\nHere, start specifies the method that will be called to begin execution of the thread. In other words, it specifies the thread’s entry point.\n"
    },
    {
        "id": 648,
        "Question": "Which of these classes is used to make a thread?",
        "Options": [
            "a) String",
            "b) System",
            "c) Thread",
            "d) Runnable"
        ],
        "Answer": " Answer: c\nExplanation: The multithreading system is built upon the Thread class, which encapsulates a thread of execution. The Thread class is sealed, which means that it cannot be inherited. Thread defines several methods and properties that help manage threads.\n"
    },
    {
        "id": 649,
        "Question": "On call of which type of method the new created thread will not start executing?",
        "Options": [
            "a) Begin()",
            "b) Start()",
            "c) New()",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Once created, the new thread will not start running until you call its Start() method, which is defined by Thread.\n"
    },
    {
        "id": 650,
        "Question": "Which of these methods of Thread class is used to Suspend a thread for a period of time?",
        "Options": [
            "a) sleep()",
            "b) terminate()",
            "c) suspend()",
            "d) stop()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 651,
        "Question": "Which of these keywords are used to implement synchronization?",
        "Options": [
            "a) synchronize",
            "b) syn",
            "c) synch",
            "d) synchronized"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 652,
        "Question": "Which keyword is used for using the synchronization features defined by the Monitor class?",
        "Options": [
            "a) lock",
            "b) synchronized",
            "c) monitor",
            "d) locked"
        ],
        "Answer": " Answer: a\nExplanation: The C# keyword lock is really just shorthand for using the synchronization features defined by the Monitor class, which is defined in the System.Threading namespace.\n"
    },
    {
        "id": 653,
        "Question": "What is synchronization in reference to a thread?",
        "Options": [
            "a) It’s a process of handling situations when two or more threads need access to a shared resource",
            "b) It’s a process by which many threads are able to access the same shared resource simultaneously",
            "c) It’s a process by which a method is able to access many different threads simultaneously",
            "d) It’s a method that allows too many threads to access any information they require"
        ],
        "Answer": " Answer: a\nExplanation: When two or more threads need to access the same shared resource, they need some way to ensure that the resource will be used by only one thread at a time, the process by which this is achieved is called synchronization.\n"
    },
    {
        "id": 654,
        "Question": "Which method is called when a thread is blocked from running temporarily?",
        "Options": [
            "a) Pulse()",
            "b) PulseAll()",
            "c) Wait()",
            "d) Both Pulse() & Wait()"
        ],
        "Answer": " Answer: c\nExplanation: When a thread is temporarily blocked from running, it calls Wait( ). This causes the thread to go to sleep and the lock for that object to be released, allowing another thread to acquire the lock.\n"
    },
    {
        "id": 655,
        "Question": "What kind of exception is being thrown if Wait(), Pulse() or PulseAll() is called from code that is not within synchronized code?",
        "Options": [
            "a) System I/O Exception",
            "b) DivideByZero Exception",
            "c) SynchronizationLockException",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A SynchronizationLockException will be thrown if Wait(), Pulse(), or PulseAll() is called from code that is not within synchronized code, such as a lock block.\n"
    },
    {
        "id": 656,
        "Question": "What is mutex?",
        "Options": [
            "a) a mutually exclusive synchronization object",
            "b) can be acquired by more than one thread at a time",
            "c) helps in sharing of resource which can be used by one thread",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: A mutex is a mutually exclusive synchronization object. This means it can be acquired by one and only one thread at a time. The mutex is designed for those situations in which a shared resource can be used by only one thread at a time.\n"
    },
    {
        "id": 657,
        "Question": "What is Semaphore?",
        "Options": [
            "a) Grant more than one thread access to a shared resource at the same time",
            "b) Useful when a collection of resources is being synchronized",
            "c) Make use of a counter to control access to a shared resource",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A semaphore is similar to a mutex except that it can grant more than one thread access to a shared resource at the same time. Thus, the semaphore is useful when a collection of resources is being synchronized. A semaphore controls access to a shared resource through the use of a counter. If the counter is greater than zero, then access is allowed. If it is zero, access is denied.\n"
    },
    {
        "id": 658,
        "Question": "Which method is used to abort thread prior to it’s normal execution?",
        "Options": [
            "a) sleep()",
            "b) terminate()",
            "c) suspend()",
            "d) Abort()"
        ],
        "Answer": " Answer: d\nExplanation: To terminate a thread prior to its normal conclusion, use Thread.Abort( ). Its simplest form is shown here:\n\n\n public void Abort()\n\n\nAbort() causes a ThreadAbortException to be thrown to the thread on which Abort() is called. This exception causes the thread to terminate.\n"
    },
    {
        "id": 659,
        "Question": "Which of these statements is incorrect?",
        "Options": [
            "a) By multithreading CPU idle time is minimized, and we can take maximum use of it",
            "b) By multitasking CPU idle time is minimized, and we can take maximum use of it",
            "c) Two thread in Csharp can have same priority",
            "d) A thread can exist only in two states, running and blocked"
        ],
        "Answer": " Answer: d\nExplanation: Thread exists in several states, a thread can be running, suspended, blocked, terminated & ready to run.\n"
    },
    {
        "id": 660,
        "Question": "What is multithreaded programming?",
        "Options": [
            "a) It’s a process in which two different processes run simultaneously",
            "b) It’s a process in which two or more parts of same process run simultaneously",
            "c) It’s a process in which many different process are able to access same information",
            "d) It’s a process in which a single process can access information from many sources"
        ],
        "Answer": " Answer: b\nExplanation: Multithreaded programming a process in which two or more parts of same process run simultaneously.\n"
    },
    {
        "id": 661,
        "Question": "What is an iterator?",
        "Options": [
            "a) a method",
            "b) an operator",
            "c) accessor",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: An iterator is a method, operator, or accessor that returns the members of a set of objects, one member at a time, from start to finish.\n"
    },
    {
        "id": 662,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> chrs <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">'A'</span>, <span class=\"st0\">'B'</span>, <span class=\"st0\">'C'</span>, <span class=\"st0\">'D'</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw5\">System.<span class=\"me1\">Collections</span></span><span class=\"sy0\">.</span><span class=\"me1\">IEnumerator</span> GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> chrs<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         MyClass mc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyClass<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> mc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>ch <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) Compile time error",
            "c) Code runs successfully prints nothing",
            "d) Code runs successfully prints A, B, C, D"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n\n\n\t\n\n        \n\n A, B, C, D\n\n\n"
    },
    {
        "id": 663,
        "Question": "3. Choose the correct statements for the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw5\">System.<span class=\"me1\">Collections</span></span><span class=\"sy0\">.</span><span class=\"me1\">IEnumerator</span> GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> chrs<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Definition of iterator for MyClass",
            "b) Implements the GetEnumerator() method defined by IEnumerable",
            "c) The yield return statement returns the next object in the collection, which in this case is the next character in chrs",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This is the definition of the iterator for MyClass. The code implicitly implements the GetEnumerator() method defined by IEnumerable. At the body of the method. It contains a foreach loop that returns the elements in chrs. It does this through the use of a yield return statement. The yield return statement returns the next object in the collection, which in this case is the next character in chrs.\n"
    },
    {
        "id": 664,
        "Question": "4. What does the yield return statement specify in the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> <span class=\"kw5\">System.<span class=\"me1\">Collections</span></span><span class=\"sy0\">.</span><span class=\"me1\">IEnumerator</span> GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> chrs<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">a<span class=\"br0\">)</span> returns the output</pre></li><li class=\"li1\"><pre class=\"de1\">b<span class=\"br0\">)</span> returns the next <span class=\"kw4\">object</span> <span class=\"kw1\">in</span> the collection</pre></li><li class=\"li1\"><pre class=\"de1\">c<span class=\"br0\">)</span> Both returns the output <span class=\"sy0\">&amp;</span> returns the next <span class=\"kw4\">object</span> <span class=\"kw1\">in</span> the collection</pre></li><li class=\"li1\"><pre class=\"de1\">d<span class=\"br0\">)</span> none of the mentioned</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">[</span>expand title<span class=\"sy0\">=</span><span class=\"st0\">\"View Answer\"</span><span class=\"br0\">]</span> Answer<span class=\"sy0\">:</span>  b</pre></li><li class=\"li1\"><pre class=\"de1\">Explanation<span class=\"sy0\">:</span> The <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> statement returns the next <span class=\"kw4\">object</span> <span class=\"kw1\">in</span> the collection, which <span class=\"kw1\">in</span> <span class=\"kw1\">this</span> <span class=\"kw1\">case</span> <span class=\"kw3\">is</span> the next character <span class=\"kw1\">in</span> chrs <span class=\"kw1\">in</span> the code<span class=\"sy0\">.</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">[</span><span class=\"sy0\">/</span>expand<span class=\"br0\">]</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"nu0\">5</span><span class=\"sy0\">.</span> <span class=\"me1\">What</span> does the following C<span class=\"co2\"># code snippet specify?</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"sy0\">&lt;</span>pre lang<span class=\"sy0\">=</span><span class=\"st0\">\"csharp\"</span> line<span class=\"sy0\">=</span><span class=\"st0\">\"1\"</span> cssfile<span class=\"sy0\">=</span><span class=\"st0\">\"hk1_style\"</span><span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">char</span> chrs <span class=\"sy0\">=</span> <span class=\"st0\">'A'</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> IEnumerator GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span>chrs <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        MyClass mc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyClass<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> mc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>ch <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) A B C D E F G H I J K L M N O P Q R S T U V",
            "b) Run time error",
            "c) U T S R Q P O N M L K J I H G F E D C B A",
            "d) Compile successfully prints nothing"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n U T S R Q P O N M L K J I H G F E D C B A\n\n\n"
    },
    {
        "id": 665,
        "Question": "6. What will be the following C# code snippet specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">char</span> chrs <span class=\"sy0\">=</span> <span class=\"st0\">'A'</span> <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> IEnumerator GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> <span class=\"nu0\">10</span><span class=\"br0\">)</span> <span class=\"kw1\">yield</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"br0\">(</span>chrs <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        MyClass mc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyClass<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span> ch <span class=\"kw1\">in</span> mc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>ch <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Code run successfully prints nothing",
            "b) A B C D E F G H I J K L M N O P Q R S T U V",
            "c) U T S R Q P O N M L",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: The code to specify stoppage of the iterator using ‘yield break’ statement When this statement executes, the iterator signals that the end of the collection has been reached, which effectively stops the iterator.\nOutput:\n\n\n U T S R Q P O N M L\n\n\n"
    },
    {
        "id": 666,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> a <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"nu0\">1</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">3</span>, <span class=\"nu0\">4</span>, <span class=\"nu0\">5</span>, <span class=\"nu0\">6</span>, <span class=\"nu0\">7</span>, <span class=\"nu0\">8</span>, <span class=\"nu0\">9</span>, <span class=\"nu0\">10</span>, <span class=\"nu0\">11</span>, <span class=\"nu0\">12</span>, <span class=\"nu0\">13</span>, <span class=\"nu0\">14</span>, <span class=\"nu0\">15</span>, <span class=\"nu0\">16</span>, <span class=\"nu0\">17</span>, <span class=\"nu0\">18</span>, <span class=\"nu0\">19</span>, <span class=\"nu0\">20</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> IEnumerator GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">if</span> <span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>a<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         MyClass mc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyClass<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">foreach</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"kw1\">in</span> mc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) prints nothing code run successfully",
            "b) run time error",
            "c) code runs successfully prints even number between 1 to 20",
            "d) compile time error"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n2, 4, 6, 8, 10, 12, 14, 16, 18, 20\n\n\n"
    },
    {
        "id": 667,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> MyClass</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">char</span> ch <span class=\"sy0\">=</span> <span class=\"st0\">'A'</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> e <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> k <span class=\"sy0\">=</span> <span class=\"nu0\">9</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> z <span class=\"sy0\">=</span> <span class=\"nu0\">6</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> IEnumerator GetEnumerator<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">26</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>i <span class=\"sy0\">==</span> e<span class=\"sy0\">*</span>k <span class=\"sy0\">/</span>z<span class=\"br0\">)</span> <span class=\"kw1\">yield</span> <span class=\"kw1\">break</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">yield</span> <span class=\"kw1\">return</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"br0\">)</span><span class=\"br0\">(</span>ch <span class=\"sy0\">+</span> i<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        MyClass mc <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyClass<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">foreach</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> ch <span class=\"kw1\">in</span> mc<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>ch <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) 65 66 67 68 69 70",
            "d) Code run successfully prints nothing"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n        Iterate the first 7 letters:\n         A B C D E F G \n        Iterate letters from F to L:\n        H I J K L\n\n\n"
    },
    {
        "id": 668,
        "Question": "What are the advantages of the named iterator?",
        "Options": [
            "a) They allow  to pass arguments to the iterator that control what elements are obtained",
            "b) This form of iterators can be overloaded",
            "c) Both They allow  to pass arguments to the iterator that control what elements are obtained & This form of iterators can be overloaded",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n 65 66 67 68 69 70\n\n\n"
    },
    {
        "id": 669,
        "Question": "Which of the following is not a namespace in the .NET Framework Class Library?",
        "Options": [
            "a) System.Process",
            "b) System.Security",
            "c) System.Threading",
            "d) System.xml"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 670,
        "Question": "Which is the correct statement about the namespaces in C#.NET?",
        "Options": [
            "a) Nesting  of namespaces is permitted, provided all the inner namespaces are declared in the same file",
            "b) A namespace cannot be tested",
            "c) There is no limit on the number of levels while nesting namespaces",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 671,
        "Question": "Which among the following does not belong to the C#.NET namespace?",
        "Options": [
            "a) class",
            "b) struct",
            "c) enum",
            "d) data"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 672,
        "Question": "Which among the following is a correct statement about namespace used in C#.NET?",
        "Options": [
            "a) Classes must belong to a namespace, whereas structures need not",
            "b) All elements of the namespace must to belong to one file",
            "c) If not mentioned, a namespace takes the name of the current project",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  None.\n"
    },
    {
        "id": 673,
        "Question": "Which among the following statements are not correct about a namespace used in C#.NET?",
        "Options": [
            "a) Nested namespaces are allowed",
            "b) Importing outer namespaces imports inner namespace",
            "c) Nested namespaces are allowed",
            "d) Importing outer namespace does not import inner namespace"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 674,
        "Question": "Which among the following is a .NET namespace?",
        "Options": [
            "a) System.Web",
            "b) System.Process",
            "c) System.Drawing2D",
            "d) System.Drawing3D"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 675,
        "Question": "Which among the following is the correct statement about the using statement used in C#.NET?",
        "Options": [
            "a) A C#.NET source code file consists of any number of using statement",
            "b) By using ‘using’ statement it’s possible to create an alias for the namespace but not for the namespace element",
            "c) It is permitted to define a member at namespace level using alias",
            "d) Using statement can be placed anywhere in the C#.NET source code file"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 676,
        "Question": "Choose the symbol which begins a preprocessor directive in C#.NET?",
        "Options": [
            "a) #",
            "b) **",
            "c) *",
            "d) &"
        ],
        "Answer": " Answer: a\nExplanation:\n\n\n\t\n\n #define, #elif, #else etc.\n\n\n"
    },
    {
        "id": 677,
        "Question": "What is meant by preprocessor directive in C#.NET?",
        "Options": [
            "a) a form of command which are interpreted by the compiler",
            "b) a form of macros like in c and c++ not exactly same to them, separately designed for C#.NET",
            "c) always begins with a ‘#’ character occupies separate line of source of code",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Preprocessor directives are commands that are interpreted by the compiler and affect the output or behavior of the build process. The C# compiler does not have a separate preprocessor, like C and C++ we cannot use these directives to create macros. Preprocessing directives are top lines in our program that start with ‘#’. The ‘#’ is followed by an identifier that is the directive name.\n"
    },
    {
        "id": 678,
        "Question": "What is meant by preprocessor directive #define?",
        "Options": [
            "a) defines a character sequence",
            "b) helps in determining existence and non existence of a symbol",
            "c) can be used to create function like macros as in C/C++",
            "d) all of the mentioned"
        ],
        "Answer": " Answer:  a\nExplanation: The #define directive defines a character sequence called a symbol. The existence or nonexistence of a symbol can be determined by #if or #elif and is used to control compilation. #define which supports creation of function like macros in c/c++ does not support the same in C#.\n"
    },
    {
        "id": 679,
        "Question": "Select the defined preprocessor in C#.NET?",
        "Options": [
            "a) #define",
            "b) #elif",
            "c) #else",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 680,
        "Question": "What does preprocessor directive #if and #endif explains?",
        "Options": [
            "a) Enables compilation of sequence of code on condition basis",
            "b) Express results into true or false on evaluation of condition",
            "c) If expression following #if is true then code that is between #if and #endif is compiled otherwise skipped",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  The #if and #endif directives enable conditional compilation of a sequence of code based upon whether an expression involving one or more symbols evaluates to true. A symbol is true if it has been defined. It is false otherwise. If the expression following #if is true, the code that is between it and #endif is compiled. Otherwise, the intervening code is skipped. The #endif directive marks the end of an #if block.\n"
    },
    {
        "id": 681,
        "Question": "Which preprocessor directive among the following forces the compiler to stop the compilation?",
        "Options": [
            "a) #warning",
            "b) #endregion",
            "c) #undef",
            "d) #error"
        ],
        "Answer": " Answer: b\nExplanation: The defined symbol ‘pi’ when compared as per ‘if’ condition, hence the outcome is false which results in skip of statement and hence executes statement after #else and finally the end statement after #endif.\nOutput:  pi not define\n         ok\n"
    },
    {
        "id": 682,
        "Question": "Which among the following is not a preprocessor directive?",
        "Options": [
            "a) #ifdef",
            "b) #pragma",
            "c) #Or",
            "d) #undef"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 683,
        "Question": "Which of these data types can be used for a method having a return statement in it?",
        "Options": [
            "a) void",
            "b) int",
            "c) float",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 684,
        "Question": "What is the process of defining more than one method in a class differentiated by parameters known as?",
        "Options": [
            "a) Function overriding",
            "b) Function overloading",
            "c) Function doubling",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: Function overloading is a process of defining more than one method in a class with same name differentiated by function signature i:e return type or parameters type and number. Example – int volume(int length, int width) & int volume(int length,  int width,  int height) can be used to calculate volume.\n"
    },
    {
        "id": 685,
        "Question": "Which of these methods is executed first before execution of any other thing that takes place in a program?",
        "Options": [
            "a) main method",
            "b) finalize method",
            "c) static method",
            "d) private method"
        ],
        "Answer": " Answer: c\nExplanation: If a static method is present in the program then it will be executed first, then main will be executed.\n"
    },
    {
        "id": 686,
        "Question": "Which of these can be used to differentiate two or more methods having same name?",
        "Options": [
            "a) Parameters data type",
            "b) Number of parameters",
            "c) Return type of method",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 687,
        "Question": "Which of these data types can be used for a method having a return statement in it?",
        "Options": [
            "a) void",
            "b) int",
            "c) float",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 688,
        "Question": "6. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> box </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> width<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> height<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> volume<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">void</span> volume<span class=\"br0\">(</span><span class=\"kw4\">int</span> height, <span class=\"kw4\">int</span> length, <span class=\"kw4\">int</span> width<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        volume <span class=\"sy0\">=</span> width <span class=\"sy0\">*</span> height <span class=\"sy0\">*</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Prameterized_method</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       box obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> box<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">height</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">length</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">width</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">volume</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>, <span class=\"nu0\">2</span>, <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">volume</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>      </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 1",
            "c) 6",
            "d) 25"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n\t\n\n6\n\n\n"
    },
    {
        "id": 689,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> equality </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    boolean isequal<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span><span class=\"br0\">(</span>x <span class=\"sy0\">==</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Output </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       equality obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> equality<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       obj<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">isequal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) false",
            "b) true",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\ntrue\n\n\n"
    },
    {
        "id": 690,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> equality</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> Boolean isequal<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">return</span> <span class=\"br0\">(</span>x <span class=\"sy0\">==</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         equality obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> equality<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">isequal</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) false",
            "b) true",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\ntrue\n\n\n"
    },
    {
        "id": 691,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> box</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> width<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> height<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> volume1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> volume<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        volume1 <span class=\"sy0\">=</span> width <span class=\"sy0\">*</span> height <span class=\"sy0\">*</span> length<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> volume<span class=\"br0\">(</span><span class=\"kw4\">int</span> x<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        volume1 <span class=\"sy0\">=</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        box obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> box<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">height</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">length</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">width</span> <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">volume</span><span class=\"br0\">(</span><span class=\"nu0\">5</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">volume1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>        </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 5",
            "c) 25",
            "d) 26"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n 5\n\n\n"
    },
    {
        "id": 692,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> x, y <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>x <span class=\"sy0\">!=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">&amp;&amp;</span> x <span class=\"sy0\">/</span> Convert<span class=\"sy0\">.</span><span class=\"me1\">ToInt32</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">++</span>y<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 1",
            "b) 2",
            "c) Run time error",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: Both conditions for if statements are failed and hence statement after else is executed.\nOutput :\n\n\n 2\n\n\n"
    },
    {
        "id": 693,
        "Question": "Which namespace is mostly preferred for the operation of networking in C#?",
        "Options": [
            "a) System.Web",
            "b) System.in",
            "c) System.Net.Mail",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: Networking support is contained in several namespaces defined by the .NET Framework. The primary namespace for networking is System.Net. It defines a large number of high-level, easy-to-use classes that support various types of operations common to the Internet. Several namespaces nested under System.Net are also provided. Example: System.Net.Mail.\n"
    },
    {
        "id": 694,
        "Question": "Which of the following are the classes defined by the namespace System.Net?",
        "Options": [
            "a) Cookie",
            "b) CookieContainer",
            "c) FileWebRequest",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 695,
        "Question": "Which of the following are the interfaces defined by the namespace System.Net?",
        "Options": [
            "a) IAuthenticationModule",
            "b) HttpWebRequest",
            "c) WebProxy",
            "d) HttpResponseHeader"
        ],
        "Answer": " Answer: a\nExplanation: WebProxy and HttpResponseHeader are namespaces and enumerations.\n"
    },
    {
        "id": 696,
        "Question": "Which of the following are the classes that support the standard HTTP protocol?",
        "Options": [
            "a) HttpWebRequest",
            "b) HttpResponseHeader",
            "c) HttpRequestHeader",
            "d) HttpStatusCode"
        ],
        "Answer": " Answer: a\nExplanation: The derived classes that support the standard HTTP protocol are HttpWebRequest and HttpWebResponse.\n"
    },
    {
        "id": 697,
        "Question": "Which of the following class/classes supports the task of uploading and downloading the file?",
        "Options": [
            "a) WebRequest",
            "b) WebResponse",
            "c) WebClient",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: If we only need to upload or download a file, then WebClient is often the best way to accomplish it.\n"
    },
    {
        "id": 698,
        "Question": "How many ports of TCP/IP are reserved for specific protocols?",
        "Options": [
            "a) 10",
            "b) 1024",
            "c) 2048",
            "d) 512"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 699,
        "Question": "How many bits are present in a single IP address?",
        "Options": [
            "a) 8",
            "b) 16",
            "c) 32",
            "d) 64"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 700,
        "Question": "Which of the following is the full form of DNS?",
        "Options": [
            "a) Data Network Service",
            "b) Data Name Service",
            "c) Domain Network Service",
            "d) Domain Name Service"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 701,
        "Question": "Which of the following classes is used to encapsulate IP address and DNS?",
        "Options": [
            "a) DatagramPacket",
            "b) URL",
            "c) InetAddress",
            "d) ContentHandler"
        ],
        "Answer": " Answer: c\nExplanation: InetAddress class encapsulates both IP address and DNS. We can interact with this class by using the name of an IP host.\n"
    },
    {
        "id": 702,
        "Question": "Which of the following are the protocols defined by .NET runtime?",
        "Options": [
            "a) HTTP",
            "b) HTTPS",
            "c) File",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: The .NET runtime defines HTTP, HTTPS, file, and FTP protocols. Thus, if we specify a URI that uses HTTP prefix, we will automatically receive the HTTP-compatible class that supports it. If we specify a URI that uses FTP prefix, we will automatically receive the FTP-compatible class that supports it.\n"
    },
    {
        "id": 703,
        "Question": "What does URL stand for?",
        "Options": [
            "a) Uniform Resource Locator",
            "b) Uniform Resource Latch",
            "c) Universal Resource Locator",
            "d) Universal Resource Latch"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 704,
        "Question": "Which of these exceptions is thrown by the URL class’s constructors?",
        "Options": [
            "a) URLNotFound",
            "b) URLSourceNotFound",
            "c) MalformedURLException",
            "d) URLNotFoundException"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 705,
        "Question": "3. What does the following form define?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">  Protocol<span class=\"sy0\">:</span><span class=\"co1\">//HostName/FilePath?Query</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Protocol specifies the protocol being used, such as HTTP",
            "b) HostName identifies a specific server, such as mhprofessional.com or www.google.com",
            "c) FilePath specifies the path to a specific file",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 706,
        "Question": "Which of these classes is used to encapsulate IP address and DNS?",
        "Options": [
            "a) DatagramPacket",
            "b) URL",
            "c) InetAddress",
            "d) ContentHandler"
        ],
        "Answer": " Answer: c\nExplanation: InetAddress class encapsulates both IP address and DNS, we can interact with this class by using the name of an IP host.\n"
    },
    {
        "id": 707,
        "Question": "Which of these is a standard for communicating multimedia content over email?",
        "Options": [
            "a) http",
            "b) https",
            "c) Mime",
            "d) httpd"
        ],
        "Answer": " Answer: c\nExplanation: MIME is an internet standard for communicating multimedia content over email. The HTTP protocol uses and extends the notion of MIME headers to pass attribute pairs between HTTP client and server.\n"
    },
    {
        "id": 708,
        "Question": "6. What does the following method specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><pre class=\"de1\">   <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> WebRequest Create<span class=\"br0\">(</span><span class=\"kw4\">string</span> requestUriString<span class=\"br0\">)</span></pre></div></div></div></div></div></div>",
        "Options": [
            "a) Creates a WebRequest object for the URI specified by the string passed by requestUriString",
            "b) The object returned will implement the protocol specified by the prefix of the URI",
            "c) The object will be an instance of the class that inherits WebRequest",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Creates a WebRequest object for the URI specified by the string passed by requestUriString. The object returned will\nimplement the protocol specified by the prefix of the URI. Thus, the object will be an instance of a class that inherits WebRequest. A NotSupportedException is thrown if the requested protocol is not available. A UriFormatException is thrown if the URI format is invalid.\n"
    },
    {
        "id": 709,
        "Question": "7. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\">  <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw4\">int</span> ch<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          HttpWebRequest req <span class=\"sy0\">=</span> <span class=\"br0\">(</span>HttpWebRequest<span class=\"br0\">)</span> WebRequest<span class=\"sy0\">.</span><span class=\"me1\">Create</span><span class=\"br0\">(</span><span class=\"st0\">\"http://www.McGraw-Hill.com\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          HttpWebResponse resp <span class=\"sy0\">=</span> <span class=\"br0\">(</span>HttpWebResponse<span class=\"br0\">)</span> req<span class=\"sy0\">.</span><span class=\"me1\">GetResponse</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          Stream istrm <span class=\"sy0\">=</span> resp<span class=\"sy0\">.</span><span class=\"me1\">GetResponseStream</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span> <span class=\"sy0\">;</span>  <span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">              ch <span class=\"sy0\">=</span> istrm<span class=\"sy0\">.</span><span class=\"me1\">ReadByte</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">if</span> <span class=\"br0\">(</span>ch <span class=\"sy0\">==</span> <span class=\"sy0\">-</span><span class=\"nu0\">1</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">break</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"br0\">)</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"br0\">(</span>i <span class=\"sy0\">%</span> <span class=\"nu0\">400</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                  Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span><span class=\"st0\">\"<span class=\"es0\">\\n</span>Press Enter.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">                  Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">          resp<span class=\"sy0\">.</span><span class=\"me1\">Close</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">      <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">  <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) html",
            "b) text",
            "c) html/text",
            "d) text/html"
        ],
        "Answer": " Answer: d\nExplanation: The following program obtains the hypertext contained at a specific website. The program displays the hypertext on the screen.\n"
    },
    {
        "id": 710,
        "Question": "8. What will be the output of the following C# code?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Uri obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Uri<span class=\"br0\">(</span><span class=\"st0\">\"https://www.sanfoundry.com/csharpmcq\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">AbsoluteUri</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) sanfoundry",
            "b) sanfoundry.com",
            "c) www.sanfoundry.com",
            "d) https://www.sanfoundry.com/csharpmcq"
        ],
        "Answer": " Answer: d\nExplanation:  AbsoluteUri is used to know the full URL of an URL object.\nOutput:\n\n\n https://www.sanfoundry.com/csharpmcq\n\n\n"
    },
    {
        "id": 711,
        "Question": "Which of these data members of HttpResponse class is used to store the response from a http server?",
        "Options": [
            "a) status",
            "b) address",
            "c) statusResponse",
            "d) statusCode"
        ],
        "Answer": " Answer: d\nExplanation: When we send a request to http server it responds with a status code. This status code is stored in statusCode and the textual equivalent is stored in reasonPhrase.\n"
    },
    {
        "id": 712,
        "Question": "Which of these classes is used to access actual bits or content information of a URL?",
        "Options": [
            "a) URL",
            "b) URLDecoder",
            "c) URLConnection",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: URL, URLDecoder and URLConnection – all these are used to access information stored in the URL.\n"
    },
    {
        "id": 713,
        "Question": "What exception is thrown if the URI format is invalid?",
        "Options": [
            "a) URLNotFound",
            "b) URLSourceNotFound",
            "c) MalformedURLException",
            "d) UriFormatException"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 714,
        "Question": "What exception is thrown if the protocol supported by URI prefix is invalid?",
        "Options": [
            "a) URLNotFound",
            "b) URLSourceNotFound",
            "c) UriFormatException",
            "d) NotSupportedException"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 715,
        "Question": "What exception is thrown if the user does not have a proper authorization?",
        "Options": [
            "a) URLNotFound",
            "b) URLSourceNotFound",
            "c) System.Security.SecurityException",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 716,
        "Question": "Choose the exceptions generated by the Create() method defined by WebRequest.",
        "Options": [
            "a) NotSupportedException",
            "b) UriFormatException",
            "c) System.Security.SecurityException",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 717,
        "Question": "Choose the exceptions generated by the GetReponse() method defined by WebRequest.",
        "Options": [
            "a) InvalidOperationException",
            "b) ProtocolViolationException",
            "c) WebException",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: By definition.\n"
    },
    {
        "id": 718,
        "Question": "Select the properties related to the network errors generated by WebException:",
        "Options": [
            "a) response",
            "b) get",
            "c) set",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: WebException has two properties that relate to network errors: Response and Status. We can obtain a reference to the WebResponse object inside an exception handler through the Response property. For the HTTP protocol, this object describes the error. It is defined like this:\n\n\n public WebResponse Response { get; }\n\n\n When an error occurs, we can use the Status property of WebException to find out what went wrong. It is defined like this:\n\n\n\t\n\npublic WebExceptionStatus Status {get; }\n\n\n"
    },
    {
        "id": 719,
        "Question": "Which of these classes is used for operating on the request from the client to the server?",
        "Options": [
            "a) http",
            "b) httpDecoder",
            "c) httpConnection",
            "d) httpd"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 720,
        "Question": "Choose the exceptions generated by the GetResponseStream() method defined by WebRequest.",
        "Options": [
            "a) ProtocolViolationException",
            "b) ObjectDisposedException",
            "c) IOException",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 721,
        "Question": "Which of these classes is used to create servers that listen to either local or remote client programs?",
        "Options": [
            "a) httpServer",
            "b) ServerSockets",
            "c) MimeHeader",
            "d) HttpResponse"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 722,
        "Question": "Which of these methods gives the full URL of an URL object?",
        "Options": [
            "a) fullHost()",
            "b) getHost()",
            "c) AbsoluteUri",
            "d) toExternalForm()"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 723,
        "Question": "Why are generics used?",
        "Options": [
            "a) Generics make code more fast",
            "b) Generics make code more optimised and readable",
            "c) Generics add stability to your code by making more of your bugs detectable at compile time",
            "d) Generics add stability to your code by making more of your bugs detectable at run time"
        ],
        "Answer": " Answer: c\nExplanation: Generics add stability to your code by making more of your bugs detectable at compile time.\n"
    },
    {
        "id": 724,
        "Question": "Which of these type parameters is used for generic methods to return and accept any type of object?",
        "Options": [
            "a) K",
            "b) N",
            "c) T",
            "d) V"
        ],
        "Answer": " Answer: c\nExplanation: T is used for type, A type variable can be any non-primitive type you specify: any class type, any interface type, any array type, or even another type variable.\n"
    },
    {
        "id": 725,
        "Question": "Which of these is an correct way of defining generic method?",
        "Options": [
            "a) name(T1, T2, …, Tn) { /* … */ }",
            "b) public name { /* … */ }",
            "c) class name[T1, T2, …, Tn] { /* … */ }",
            "d) name{T1, T2, …, Tn} { /* … */ }"
        ],
        "Answer": " Answer: b\nExplanation: The syntax for a generic method includes a type parameter, inside angle brackets, and appears before the method’s return type. For static generic methods, the type parameter section must appear before the method’s return type.\n"
    },
    {
        "id": 726,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">int</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"st0\">\"Csharp\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Csharp",
            "c) 0",
            "d) Run time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n        \n\nCsharp\n\n\n"
    },
    {
        "id": 727,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw4\">class</span> Generic<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> stk <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Stack<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> push<span class=\"br0\">(</span>T obj<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        stk<span class=\"sy0\">.</span><span class=\"me1\">Push</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> T pop<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        T obj <span class=\"sy0\">=</span> stk<span class=\"sy0\">.</span><span class=\"me1\">Pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> obj<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span> g <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> Generic<span class=\"sy0\">&lt;</span><span class=\"kw4\">string</span><span class=\"sy0\">&gt;</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        g<span class=\"sy0\">.</span><span class=\"me1\">push</span><span class=\"br0\">(</span><span class=\"nu0\">30</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>g<span class=\"sy0\">.</span><span class=\"me1\">pop</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 0",
            "b) 30",
            "c) Runtime Error",
            "d) Compile time Error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput : 30\n"
    },
    {
        "id": 728,
        "Question": "6. What does the following C# code block define?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Gen<span class=\"sy0\">&lt;</span>T<span class=\"sy0\">&gt;</span> <span class=\"br0\">{</span>  </pre></li><li class=\"li1\"><pre class=\"de1\">                  T ob<span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">              <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Generics class declaration",
            "b) Declaration of variable",
            "c) A simple class declaration",
            "d) Both Generics class declaration & Declaration of variable"
        ],
        "Answer": " Answer: d\nExplanation: class Gen<T> This defines the generics declaration where ‘T’ is the name of type parameter. This parameter is used as a placeholder for the actual type that will be specified when a Gen object is created. Gen is a generic class. T is used to declare a variable called ‘ob’.\n"
    },
    {
        "id": 729,
        "Question": "Select the type argument of open constructed type?",
        "Options": [
            "a) Gen<int>",
            "b) Gen<T>",
            "c) Gen<>",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: A generic type, such as Gen<T>, is an abstraction. In C# terminology, a construct such as Gen<T> is called an open constructed type, because the type parameter T (rather than an actual type, such as int) is specified.\n"
    },
    {
        "id": 730,
        "Question": "10. What does the following C# code set defines?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">public</span> Gen<span class=\"br0\">(</span>T o<span class=\"br0\">)</span> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                     ob <span class=\"sy0\">=</span> o<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">                 <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Generics class decleration",
            "b) Decleration of variable",
            "c) Generic constructor decleration",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 731,
        "Question": "Pointer variable is used to hold the _________ of the variable.",
        "Options": [
            "a) Value",
            "b) Address",
            "c) Value and Address",
            "d) Name of the variable"
        ],
        "Answer": " Answer: b\nExplanation: By definition.\n"
    },
    {
        "id": 732,
        "Question": "Which among the given operators is referred to as ‘address of’ operator?",
        "Options": [
            "a) *",
            "b) ^",
            "c) &",
            "d) ~"
        ],
        "Answer": " Answer: c\nExplanation:  The ‘&’ is a unary operator that returns the memory address of its operand.\n              For example,\n\n\n                           int* ip;\n                           int num = 10;\n                           ip = &num;\n\n\nputs into ip the memory address of the variable num. This address is the location of the variable in the computer’s internal memory.\n"
    },
    {
        "id": 733,
        "Question": "Choose the correct statement among the given statements?",
        "Options": [
            "a) Use of return statement is necessary in every function",
            "b) Return statement may not be followed by a parenthesis",
            "c) A program may contain more than one return statement",
            "d) Return statement may not return a value"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 734,
        "Question": "What is the size of a char pointer?",
        "Options": [
            "a) 1 byte",
            "b) 2 byte",
            "c) 3 byte",
            "d) 4 byte"
        ],
        "Answer": " Answer: b\nExplanation:\n\n\n             class UnsafeCode\n             {\n                 unsafe static void Main()\n                 {\n                  char ch;\n                  Console.WriteLine(sizeof(char));\n                  Console.ReadLine();\n                 }\n            }\n\n\nThe sizeof() method helps in calculating size of char pointer.\n"
    },
    {
        "id": 735,
        "Question": "After incrementing a float pointer ptr by 1 it would be incremented by __________",
        "Options": [
            "a) 1 byte",
            "b) 2 bytes",
            "c) 3 bytes",
            "d) 4 bytes"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 736,
        "Question": "Which of the following job is done by the instruction ++*p for an integer pointer p?",
        "Options": [
            "a) increment value contained at address p",
            "b) increment address contained in p",
            "c) Both increment value contained at address p and increment address contained in p",
            "d) neither increment value contained at address p nor increment address contained in p"
        ],
        "Answer": " Answer: a\nExplanation:\n\n\n             class UnsafeCode\n             {\n                 unsafe static void Main()\n                 {\n                      int n = 10;\n                      int* p = &n;\n                      Console.WriteLine(*p);\n                 }\n             }\n\n\nOutput :\n\n\n10 +  1 = 11.\n\n\n"
    },
    {
        "id": 737,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>a1 <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>b1 <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>a1 <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>b1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6",
            "b) print garbage value",
            "c) print -6",
            "d) print address of b + a"
        ],
        "Answer": " Answer: a\nExplanation: The (*) operator prints the value stored at address (&) of ‘a’.\nOutput :\n\n\n 4 + 2 = 6\n\n\n"
    },
    {
        "id": 738,
        "Question": "8. What will be the output of the following C# code segment?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">void</span><span class=\"sy0\">*</span> p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) The program will print 10",
            "b) Run time error",
            "c) Compile time error",
            "d) Output is the address contained in p"
        ],
        "Answer": " Answer: c\nExplanation: The program will result in compile time error because void pointer cannot point anywhere.\n"
    },
    {
        "id": 739,
        "Question": "Which among the following is referred as an array of pointers?",
        "Options": [
            "a) int *p;",
            "b) int (*)p;",
            "c) int p[4];",
            "d) int*[4] p;"
        ],
        "Answer": " Answer: d\nExplanation:  None.\n"
    },
    {
        "id": 740,
        "Question": "Among the given pointer which of the following cannot be incremented?",
        "Options": [
            "a) int",
            "b) char",
            "c) float",
            "d) void"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 741,
        "Question": "How many values can be returned from a function simultaneously using pointers?",
        "Options": [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) as many as user wants"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 742,
        "Question": "Consider an integer pointer . *a.++*a will increment ___________ while *a++ will increment __________",
        "Options": [
            "a) value at a,  address contained in a",
            "b) value at a,value at a",
            "c) address contained in a, address contained in a",
            "d) address contained in a, value at a"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 743,
        "Question": "13. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">*</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a1 <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> b1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        b1 <span class=\"sy0\">=</span> <span class=\"sy0\">*&amp;</span>a1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>b1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) program will print garbage value",
            "b) program will print address of a",
            "c) program will print value of a1",
            "d) program will print address of a1"
        ],
        "Answer": " Answer: c\nExplanation: The address of variable a1 is stored in variable b1 by making a1 as a pointer to variable b1. Later, variable b1 address is stored in pointer a and hence using pointer operation value of a1 is displayed in a.\nOutput : 10\n"
    },
    {
        "id": 744,
        "Question": "14. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">*</span> p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">**</span> p1 <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>p<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">***</span> p2 <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>p1<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>p <span class=\"sy0\">*</span> <span class=\"sy0\">**</span>p1 <span class=\"sy0\">*</span> <span class=\"sy0\">***</span>p2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) compile time error",
            "b) garbage value is printed",
            "c) program will print 1000",
            "d) program will print 100"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :1000\n"
    },
    {
        "id": 745,
        "Question": "15. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw4\">int</span><span class=\"sy0\">*</span> p<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            p <span class=\"sy0\">=</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span><span class=\"br0\">)</span><span class=\"br0\">(</span><span class=\"nu0\">65535</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"br0\">(</span><span class=\"kw4\">uint</span><span class=\"br0\">)</span>p<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) compile time error",
            "b) garbage value",
            "c) program prints value at address 65535",
            "d) program prints 65535"
        ],
        "Answer": " Answer: d\nExplanation:  None.\nOutput :\n\n\n65535\n\n\n"
    },
    {
        "id": 746,
        "Question": "1. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> m <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>mptr <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>m<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> <span class=\"sy0\">**</span>ptr <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>mptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> n <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> <span class=\"sy0\">*</span>nptr <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>n<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> <span class=\"sy0\">**</span>prt <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>nptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         m <span class=\"sy0\">=</span> <span class=\"sy0\">**</span>prt <span class=\"sy0\">+</span> <span class=\"sy0\">*</span>nptr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         n <span class=\"sy0\">=</span> <span class=\"sy0\">*</span>mptr<span class=\"sy0\">*</span> <span class=\"sy0\">**</span>prt<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>n <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> m<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20 200",
            "b) 40 200",
            "c) 800 40",
            "d) 40 800"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput: 800 40\n"
    },
    {
        "id": 747,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> b <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span><span class=\"sy0\">*</span><span class=\"br0\">[</span><span class=\"br0\">]</span> ptr <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"sy0\">*</span> <span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     ptr<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     ptr<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     ptr<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>c<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">for</span> <span class=\"br0\">(</span>a <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> a <span class=\"sy0\">&lt;</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span> a<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         c <span class=\"sy0\">+=</span> <span class=\"sy0\">*</span>ptr<span class=\"br0\">[</span>a<span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 5 10",
            "b) 10 20",
            "c) Compile time error",
            "d) 5 10 20"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:5 10 20\n"
    },
    {
        "id": 748,
        "Question": "3. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">*</span> ptrs <span class=\"sy0\">=</span> <span class=\"kw1\">stackalloc</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> <span class=\"sy0\">--</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">*</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">+</span> <span class=\"nu0\">4</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20, 10, 7",
            "b) 13, 10, 7",
            "c) 6, 9, 3",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput: 13, 10, 7\n"
    },
    {
        "id": 749,
        "Question": "Among the given pointers which of the following cannot be incremented?",
        "Options": [
            "a) int",
            "b) char",
            "c) float",
            "d) void"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 750,
        "Question": "A structure pointer points to __________",
        "Options": [
            "a) first member of structure",
            "b) first two members of structure",
            "c) whole structure",
            "d) only to the last member of structure"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 751,
        "Question": "What will be the declaration of the variable ptr as the pointer to array of 6 floats?",
        "Options": [
            "a) float *ptr[6] ",
            "b) float [6]*ptr",
            "c) float(*ptr)[6] ",
            "d) float(*ptr)(6)."
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 752,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">char</span><span class=\"br0\">[</span><span class=\"br0\">]</span> arr <span class=\"sy0\">=</span> <span class=\"br0\">{</span> <span class=\"st0\">'A'</span>, <span class=\"st0\">'B'</span>, <span class=\"st0\">'C'</span>, <span class=\"st0\">'D'</span>, <span class=\"st0\">'E'</span> <span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">fixed</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> P <span class=\"sy0\">=</span> arr<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">for</span> <span class=\"br0\">(</span>i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span> <span class=\"nu0\">5</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>P <span class=\"sy0\">%</span> <span class=\"nu0\">2</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"sy0\">++*</span>P<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"br0\">(</span><span class=\"sy0\">*</span>P<span class=\"br0\">)</span><span class=\"sy0\">++;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>arr<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ACCEE",
            "b) FBCDE",
            "c) BBDDF",
            "d) BBCEE"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:FBCDE\n"
    },
    {
        "id": 753,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Index pointer like array.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">fixed</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span> p <span class=\"sy0\">=</span> nums<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&lt;</span><span class=\"nu0\">10</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">10</span> <span class=\"sy0\">;</span>i <span class=\"sy0\">&gt;</span><span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"p[{0}]: {1} \"</span>, i, p<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">             Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) p[10] :0, p[9] :9, p[8] :8…..p[1]:1",
            "b) p[10] : 1, p[9] :2, p[8] :3…..p[1] :0",
            "c) p[1] : 1, p[2] :2, p[3] :3…..p[10] :0",
            "d) Compile time error"
        ],
        "Answer": " Answer: a\nExplanation: None.\nOutput:Index pointer like array:\n        p[10] :0, p[9] :9, p[8] :8…p[1]:1\n"
    },
    {
        "id": 754,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">string</span> str <span class=\"sy0\">=</span> <span class=\"st0\">\"this is a test\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">&nbsp;</pre></li><li class=\"li1\"><pre class=\"de1\">             <span class=\"kw1\">fixed</span> <span class=\"br0\">(</span><span class=\"kw4\">char</span><span class=\"sy0\">*</span> p <span class=\"sy0\">=</span> str<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">                <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> str<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">-</span><span class=\"nu0\">1</span> <span class=\"sy0\">;</span>p<span class=\"br0\">[</span>i<span class=\"br0\">]</span> <span class=\"sy0\">!=</span> <span class=\"nu0\">0</span> <span class=\"sy0\">;</span>i<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">                Console<span class=\"sy0\">.</span><span class=\"me1\">Write</span><span class=\"br0\">(</span>p<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) test a is this",
            "b) compile time error",
            "c) tset a si siht",
            "d) run time error"
        ],
        "Answer": " Answer: c\nExplanation:  Reversal of string using pointers.\nOutput:tset a si siht\n"
    },
    {
        "id": 755,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span><span class=\"sy0\">*</span> p <span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> ch <span class=\"sy0\">=</span> <span class=\"nu0\">13</span><span class=\"sy0\">*</span><span class=\"nu0\">5</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span><span class=\"br0\">(</span>ch<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToChar</span><span class=\"br0\">(</span><span class=\"sy0\">*</span>p<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">if</span> <span class=\"br0\">(</span><span class=\"sy0\">*</span>p <span class=\"sy0\">==</span> <span class=\"st0\">'A'</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>Convert<span class=\"sy0\">.</span><span class=\"me1\">ToBoolean</span><span class=\"br0\">(</span><span class=\"nu0\">0</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 65 False",
            "b) 65 1",
            "c) A True",
            "d) A 1"
        ],
        "Answer": " Answer: c\nExplanation:  Convert.Tochar(*p) = A\n              Convert.ToBoolean(1) = True\nOutput: A\n         True\n"
    },
    {
        "id": 756,
        "Question": "1. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">struct</span> MyStruct</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Sum<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">return</span> a <span class=\"sy0\">*</span> b<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       MyStruct o <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyStruct<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       MyStruct<span class=\"sy0\">*</span> p<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>o<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       p<span class=\"sy0\">-&gt;</span>a <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       p<span class=\"sy0\">-&gt;</span>b <span class=\"sy0\">=</span> <span class=\"nu0\">20</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Value is \"</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">-&gt;</span>Sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) Run time error",
            "c) 200",
            "d) 30"
        ],
        "Answer": " Answer: c\nExplanation: A pointer can point to an object of a structure type as long as the structure does not contain reference types. When we access a member of a structure through a pointer, we must use the arrow operator, which is –>, rather than the dot (.) operator.\nOutput : 200\n"
    },
    {
        "id": 757,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">struct</span> MyStruct</pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> Sum<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">           <span class=\"kw1\">return</span> a <span class=\"sy0\">/</span> b<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       MyStruct o <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> MyStruct<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       MyStruct<span class=\"sy0\">*</span> p<span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>o<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       p<span class=\"sy0\">-&gt;</span>a <span class=\"sy0\">=</span> <span class=\"nu0\">60</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       p<span class=\"sy0\">-&gt;</span>b <span class=\"sy0\">=</span> <span class=\"nu0\">15</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">       <span class=\"kw4\">int</span> c <span class=\"sy0\">=</span> <span class=\"nu0\">30</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Value is : \"</span> <span class=\"sy0\">+</span> p<span class=\"sy0\">-&gt;</span>Sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">*</span>c<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Compile time error",
            "b) 120",
            "c) Run time error",
            "d) 4"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput :\n\n\n        \n\n120\n\n\n"
    },
    {
        "id": 758,
        "Question": "3. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"br0\">]</span> nums <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">10</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">fixed</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span><span class=\"sy0\">*</span> p <span class=\"sy0\">=</span> <span class=\"sy0\">&amp;</span>nums<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span>, p2 <span class=\"sy0\">=</span> nums<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">            <span class=\"kw1\">if</span> <span class=\"br0\">(</span>p <span class=\"sy0\">==</span> p2<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"p and p2 point to same address.\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) Compile time error",
            "c) p and p2 point to the same address",
            "d) Only p2"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput:\n\n\n\t\n\np and p2 point to same address\n\n\n"
    },
    {
        "id": 759,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">?</span> count <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">?</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> incr <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        result <span class=\"sy0\">=</span> count <span class=\"sy0\">+</span> incr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>result<span class=\"sy0\">.</span><span class=\"me1\">HasValue</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"result has this value: \"</span> <span class=\"sy0\">+</span> result<span class=\"sy0\">.</span><span class=\"kw1\">Value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"result has no value\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 0",
            "c) Result has no value",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: A nullable object can be used in expressions that are valid for its underlying type. When non-nullable and nullable types are mixed in an operation, the outcome is a nullable value.\nOutput:\n\n\nresult has no value\n\n\n"
    },
    {
        "id": 760,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> count <span class=\"sy0\">=</span> <span class=\"nu0\">100</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">?</span> result <span class=\"sy0\">=</span> <span class=\"kw1\">null</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> incr <span class=\"sy0\">=</span> <span class=\"nu0\">10</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        result <span class=\"sy0\">=</span> count <span class=\"sy0\">+</span> incr<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span> <span class=\"br0\">(</span>result<span class=\"sy0\">.</span><span class=\"me1\">HasValue</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"result has this value: \"</span> <span class=\"sy0\">+</span> result<span class=\"sy0\">.</span><span class=\"kw1\">Value</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">else</span></pre></li><li class=\"li1\"><pre class=\"de1\">            Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"result has no value\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 110",
            "c) Result has no value",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput: result has this value :\n\n\n110\n\n\n"
    },
    {
        "id": 761,
        "Question": "Choose the statement which defines the Nullable type Correctly:",
        "Options": [
            "a) A special version of a value type that is represented by a structure",
            "b) A nullable type can also store the value null",
            "c) Nullable types are objects of System.Nullable, where T must be a non nullable value type",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: A nullable type is a special version of the value type that is represented by a structure. In addition to the values defined by the underlying type, a nullable type can also store the value null. Thus, a nullable type has the same range and characteristics as its underlying type. It simply adds the ability to represent a value which indicates that a variable of that type is unassigned. Nullable types are objects of System.Nullable<T>, where T must be a nonnullable value type.\n"
    },
    {
        "id": 762,
        "Question": "",
        "Options": [
            "a) Code i declares the objects of nullable of type Nullable<T> defined in the System namespace",
            "b) Code ii declares a nullable type in much shorter and in more commonly used way using ‘?’",
            "c) Both Code i declares the objects of nullable of type Nullable<T> defined in the System namespace & Code ii declares a nullable type in much shorter and in more commonly used way using ‘?’",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 763,
        "Question": "Which operator is commonly used to find the size of the type of C#?",
        "Options": [
            "a) size()",
            "b) sizeof(type)",
            "c) both size() & sizeof(type)",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 764,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">unsafe</span> <span class=\"kw4\">struct</span> FixedBankRecord</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw1\">fixed</span> <span class=\"kw4\">byte</span> Name<span class=\"br0\">[</span><span class=\"nu0\">80</span><span class=\"br0\">]</span><span class=\"sy0\">;</span> </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">double</span> Balance<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">long</span> ID<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"Size of FixedBankRecord is \"</span> <span class=\"sy0\">+</span> <span class=\"kw3\">sizeof</span><span class=\"br0\">(</span>FixedBankRecord<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Run time error",
            "b) 80",
            "c) 96",
            "d) Compile time error"
        ],
        "Answer": " Answer: c\nExplanation: The purpose of a fixed-size buffer is to allow the creation of a struct in which the array of elements that make up the buffer are contained within the struct. By using a fixed-size buffer, we let the entire array to be contained within the struct. The overall size of FixedBankRecord is 96, which is the sum of its members.\nOutput :\n\n\n96\n\n\n"
    },
    {
        "id": 765,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> UnsafeCode</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">unsafe</span> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span><span class=\"sy0\">*</span> ptrs <span class=\"sy0\">=</span> <span class=\"kw1\">stackalloc</span> <span class=\"kw4\">int</span><span class=\"br0\">[</span><span class=\"nu0\">3</span><span class=\"br0\">]</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">0</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">1</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        ptrs<span class=\"br0\">[</span><span class=\"nu0\">2</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"nu0\">3</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&gt;=</span><span class=\"nu0\">0</span><span class=\"sy0\">;</span> i<span class=\"sy0\">--</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>ptrs<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 2 1",
            "b) 1 2 3",
            "c) None of the mentioned",
            "d) Run time error"
        ],
        "Answer": " Answer: a\nExplanation: Allocates memory from the stack by using stackalloc. Here, ptrs is a pointer that receives the address of the memory that is large enough to hold size of number of objects of  type ‘int’. Here, type ‘int’ is a non reference type. Finally, stackalloc can be used only in an unsafe context.\nOutput :\n\n\n3 2 1\n\n\n"
    },
    {
        "id": 766,
        "Question": "Which among these access specifiers should be used for main() method?",
        "Options": [
            "a) private",
            "b) public",
            "c) protected",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: main() method must be specified public as it called by Csharp run time system outside of the program, by default main is private in nature if no access specifier is used.\n"
    },
    {
        "id": 767,
        "Question": "Which of these is used as default for a member of a class if no access specifier is used for it?",
        "Options": [
            "a) private",
            "b) public",
            "c) protected internal",
            "d) protected"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 768,
        "Question": "What is the process by which we can control what parts of a program can access the members of a class?",
        "Options": [
            "a) Polymorphism",
            "b) Abstraction",
            "c) Encapsulation",
            "d) Recursion"
        ],
        "Answer": " Answer: c\nExplanation: None.\n"
    },
    {
        "id": 769,
        "Question": "Which of these base class are accessible to the derived class members?",
        "Options": [
            "a) static",
            "b) protected",
            "c) private",
            "d) shared"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 770,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> access</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         y <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         access obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> access<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">cal</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> obj<span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 3",
            "b) 2 3",
            "c) Run time error",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: ‘y’ is defined privately which cannot be accessed outside its scope.\n"
    },
    {
        "id": 771,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> access</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">private</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw4\">void</span> cal<span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        y <span class=\"sy0\">=</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw4\">void</span> print<span class=\"br0\">(</span><span class=\"br0\">)</span> </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">       Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> y<span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">   <span class=\"br0\">}</span> </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        access obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> access<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">cal</span><span class=\"br0\">(</span><span class=\"nu0\">2</span>, <span class=\"nu0\">3</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">x</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj<span class=\"sy0\">.</span><span class=\"me1\">print</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 2 3",
            "b) 3 3",
            "c) Run time error",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 772,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> sum   </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> <span class=\"kw1\">add</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        y <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sum obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        sum obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> sum<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj1<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span>a, a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj2<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj1<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> obj2<span class=\"sy0\">.</span><span class=\"me1\">y</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 6, 9",
            "b) 5, 9",
            "c) 9, 10",
            "d) 3, 2"
        ],
        "Answer": " Answer: b\nExplanation: Here, a = 2, a + 1 = 2 + 1 = 3.\n             So, a = 2, b = 3.\n             x = 2 + 3 = 5.\n             y = 5 + 3 = 8.\n             Similarly, a = 5, b = a + 1 = 4.\n             y = 5 + 4 = 9.\nOutput :\n\n\n5, 9\n\n\n"
    },
    {
        "id": 773,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> static_out</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> x<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span>  <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> y<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">public</span> <span class=\"kw4\">int</span> <span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"kw4\">int</span> a, <span class=\"kw4\">int</span> b<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        x <span class=\"sy0\">=</span> a <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        y <span class=\"sy0\">=</span> x <span class=\"sy0\">+</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">return</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        static_out obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> static_out<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        static_out obj2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> static_out<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>   </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">int</span> a <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj1<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span>a, a <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        obj2<span class=\"sy0\">.</span><span class=\"kw1\">add</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>static_out<span class=\"sy0\">.</span><span class=\"me1\">x</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> static_out<span class=\"sy0\">.</span><span class=\"me1\">y</span> <span class=\"br0\">)</span><span class=\"sy0\">;</span>     </pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 7 7",
            "b) 6 6",
            "c) 7 9",
            "d) 9 7"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n 7, 9\n\n\n"
    },
    {
        "id": 774,
        "Question": "Which of these access specifiers must be used for class so that it can be inherited by another subclass?",
        "Options": [
            "a) public",
            "b) private",
            "c) both public & private",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation:  None.\n"
    },
    {
        "id": 775,
        "Question": "Which of the following statements are incorrect?",
        "Options": [
            "a) public members of class can be accessed by any code in the program",
            "b) private members of class can only be accessed by other members of the class",
            "c) private members of class can be inherited by a subclass, and become protected members in subclass",
            "d) protected members of a class can be inherited by a subclass, and become private members of the subclass"
        ],
        "Answer": " Answer: c\nExplanation: private members of a class cannot be inherited by a subclass.\n"
    },
    {
        "id": 776,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> test</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>   <span class=\"kw4\">int</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  <span class=\"kw4\">int</span> b<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span>  test<span class=\"br0\">(</span><span class=\"kw4\">int</span> i, <span class=\"kw4\">int</span> j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         a <span class=\"sy0\">=</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         b <span class=\"sy0\">=</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> <span class=\"kw4\">void</span> meth<span class=\"br0\">(</span>test o<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         o<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">*=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         o<span class=\"sy0\">.</span><span class=\"me1\">b</span> <span class=\"sy0\">/=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span>    </pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         test obj <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> test<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">20</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         obj<span class=\"sy0\">.</span><span class=\"me1\">meth</span><span class=\"br0\">(</span>obj<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj<span class=\"sy0\">.</span><span class=\"me1\">a</span> <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> obj<span class=\"sy0\">.</span><span class=\"me1\">b</span><span class=\"br0\">)</span><span class=\"sy0\">;</span>    </pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 20, 40",
            "b) 40, 20",
            "c) 20, 10",
            "d) 10, 20"
        ],
        "Answer": " Answer: c\nExplanation: None.\nOutput :\n\n\n20, 10\n\n\n"
    },
    {
        "id": 777,
        "Question": "Accessibility modifiers defined in a class are?",
        "Options": [
            "a) public, private, protected",
            "b) public, internal, protected internal",
            "c) public, private, internal, protected internal",
            "d) public, private, protected, internal, protected internal"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 778,
        "Question": "What are strings in C#?",
        "Options": [
            "a) a sequence of characters",
            "b) array of characters",
            "c) objects of built-in data type",
            "d) a reference type"
        ],
        "Answer": " Answer: c\nExplanation:  Generally, a string is defined as a sequence of characters but it is different in C#. In c++, the string is an array of characters. In case of C#, strings are objects of the built-in string data type. Thus, a string is a reference type.\n"
    },
    {
        "id": 779,
        "Question": "Select the namespace in which string class is built?",
        "Options": [
            "a) System.Text",
            "b) System.Net",
            "c) System.IO",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 780,
        "Question": "Select the interfaces defined by the string class?",
        "Options": [
            "a) IComparable",
            "b) IComparable<string>",
            "c) ICloneable",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: None.\n"
    },
    {
        "id": 781,
        "Question": "Choose the constructor type used to build strings from character array.",
        "Options": [
            "a) public String(value)",
            "b) public String(char[ ] value, int startIndex, int length)",
            "c) public String(char[ ])",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: public String(char[ ] value) – This form of constructor constructs a string that contains characters in value\npublic String(char[ ] value, int startIndex, int length) -The second form uses length characters from value, beginning at the index specified by startIndex.\n"
    },
    {
        "id": 782,
        "Question": "Select the operators used for checking the equality in strings:",
        "Options": [
            "a) !=",
            "b) >",
            "c) <",
            "d) >="
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 783,
        "Question": "6. What does the following C# code set specifies?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> Compare<span class=\"br0\">(</span><span class=\"kw4\">string</span> strA, <span class=\"kw4\">string</span> strB<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Comparison is case and culture sensitive",
            "b) Two strings A and B are compared with each other",
            "c) Output is : >0 for (A > B), <0 for (A < B) else ‘0’ for(A=B)",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Compares the string referred to by strA with strB. Returns greater than zero if strA is greater than strB, less than zero if strA is less than strB, and zero if strA and strB are equal. The comparison is case and culture-sensitive.\n"
    },
    {
        "id": 784,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"c\"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"Sharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello c Sharp",
            "b) HellocSharp",
            "c) Compile time error",
            "d) Hello"
        ],
        "Answer": " Answer: a\nExplanation:  Here ‘+’ operator works as concatenation for strings.\nOutput :\n\n\nHello c Sharp\n\n\n"
    },
    {
        "id": 785,
        "Question": "Which of these operators can be used to concatenate two or more String objects?",
        "Options": [
            "a) +",
            "b) +=",
            "c) &",
            "d) ||"
        ],
        "Answer": " Answer: a\nExplanation:  string s1 = “Hello”+ ” I ” + “Love” + ” ComputerScience “;\nConsole.WriteLine(s1);\nOutput :\n\n\nHello I Love ComputerScience.\n\n\n"
    },
    {
        "id": 786,
        "Question": "9. What does the following C# code set specify?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">int</span> Compare<span class=\"br0\">(</span><span class=\"kw4\">string</span> strA, <span class=\"kw4\">int</span> indexA, <span class=\"kw4\">string</span> strB, <span class=\"kw4\">int</span> indexB, <span class=\"kw4\">int</span> length, <span class=\"kw4\">bool</span> ignoreCase<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Comparison begins at strA[indexA] and strB[indexB] and runs for length of characters",
            "b) Returns output > 0 for for strA > strB else < 0 for strA < strB else if strA = str B output is 0",
            "c) Comparison is culture sensitive and if ignore case is true, comparison ignores case differences",
            "d) All of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation:  Compares portions of the strings referred to by strA and strB. The comparison begins at strA[indexA] and strB[indexB] and runs for length characters. Returns greater than zero if strA is greater than strB, less than zero if strA is less than strB, and zero if strA and strB are equal. If ignoreCase is true, the comparison ignores case differences. Otherwise, case differences matter. The comparison is culture-sensitive.\n"
    },
    {
        "id": 787,
        "Question": "10. Which string operation does the below-mentioned method define?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">public</span> <span class=\"kw1\">static</span> <span class=\"kw4\">string</span> Concat<span class=\"br0\">(</span><span class=\"kw4\">string</span> str0, <span class=\"kw4\">string</span> str1<span class=\"br0\">)</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) method returns a string",
            "b) string str1 is concatenated to the end of str0",
            "c) can be used to concatenate any number of strings",
            "d) all of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: This method returns a string that contains str1 concatenated to the end of str0. Another form of Concat(), shown here, concatenates three strings:\npublic static string Concat(string str0, string str1, string str2). Hence, any number of strings can be concatenated using this method.\n"
    },
    {
        "id": 788,
        "Question": "Choose the base class for string() method.",
        "Options": [
            "a) System.Array",
            "b) System.char",
            "c) System.String",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation: String is an alias for the predefined “System.string” class from which most of the string() methods are derived.\n"
    },
    {
        "id": 789,
        "Question": "Did method use to remove whitespace from the string?",
        "Options": [
            "a) Split()",
            "b) Substring()",
            "c) Trim()",
            "d) TrimStart()"
        ],
        "Answer": " Answer: c\nExplanation: Perfectly removes whitespace from string whereas TrimStart() removes a string of characters from the end of the string.\n"
    },
    {
        "id": 790,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\" Ixg\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span><span class=\"nu0\">3</span>,<span class=\"st0\">\"i\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw4\">string</span> s3 <span class=\"sy0\">=</span> s2<span class=\"sy0\">.</span><span class=\"me1\">Insert</span><span class=\"br0\">(</span><span class=\"nu0\">5</span>, <span class=\"st0\">\"o\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> s3<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> i<span class=\"sy0\">++</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s3<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Ixgo",
            "b) Ixig",
            "c) Ixigo",
            "d) Ixg"
        ],
        "Answer": " Answer: d\nExplanation: In the first comparison it is being checked if two strings are equal or not, but in the second comparison it is checked if two string references are equal or not. Also the length of the string and characters match is tested for the equality of strings.\nOutput :\n\n\nUnequal\nUnequal\n\n\n"
    },
    {
        "id": 791,
        "Question": "3. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">char</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>chars <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'a'</span>, <span class=\"st0\">'b'</span>, <span class=\"st0\">'c'</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">String</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) b",
            "c) c",
            "d) abc"
        ],
        "Answer": " Answer: c\nExplanation: Insert() the built in method inserts characters at specified position mentioned with index positions.\nOutput:\n\n\n\t\n\nIxigo\n\n\n"
    },
    {
        "id": 792,
        "Question": "4. What will be the output of given code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">char</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>chars <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'a'</span>, <span class=\"st0\">'b'</span>, <span class=\"st0\">'c'</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">String</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"abcd\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> len1 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> len2 <span class=\"sy0\">=</span> s<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>len1 <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> len2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 4 0",
            "b) 3 0",
            "c) 3 4",
            "d) 4 3"
        ],
        "Answer": " Answer: d\nExplanation: String(chars) is a constructor of class string, it initializes string s with the values stored in character array chars,So s contains “abc”.\nOutput :\n\n\nabc\n\n\n"
    },
    {
        "id": 793,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> A</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> i<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">int</span> j<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">public</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         i <span class=\"sy0\">=</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         j <span class=\"sy0\">=</span> <span class=\"nu0\">2</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         A obj1 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> A<span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>obj1<span class=\"sy0\">.</span><span class=\"me1\">ToString</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) String associated with obj1",
            "d) Compile time error"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput :\n\n\n4 3\n\n\n"
    },
    {
        "id": 794,
        "Question": "Which of these constructors is used to create an empty String object?",
        "Options": [
            "a) String()",
            "b) String(void)",
            "c) String(0)",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: c\nExplanation:  ToString() is the method of class Object, since it is the superclass of every class, every object has this method. ToString() returns the string associated with the calling object.\nOutput :\n\n\nConsoleApplication19.A\n\n\n"
    },
    {
        "id": 795,
        "Question": " Which of these method of class String is used to obtain length of String object?",
        "Options": [
            "a) get()",
            "b) Sizeof()",
            "c) Lengthof()",
            "d) Length()"
        ],
        "Answer": " Answer: a\nExplanation: None.\n"
    },
    {
        "id": 796,
        "Question": "Choose the base class for string() method.",
        "Options": [
            "a) System.Array",
            "b) System.char",
            "c) System.String",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: d\nExplanation: Method Length() of string class is used to get the length of the object which invoked the method Length().\n"
    },
    {
        "id": 797,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello i love Csharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Boolean <span class=\"kw1\">var</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">\t <span class=\"kw1\">var</span> <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">StartsWith</span><span class=\"br0\">(</span><span class=\"st0\">\"hello\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"kw1\">var</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) 1",
            "d) Run time error"
        ],
        "Answer": " Answer: c\nExplanation:  String is an alias for the predefined “System.string” class from which most of the string() methods are derived.\n"
    },
    {
        "id": 798,
        "Question": "What is the value returned by the function CompareTo() if the invoking string is less than the string compared?",
        "Options": [
            "a) zero",
            "b) value less than zero",
            "c) value greater than zero",
            "d) none of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: StartsWith() method is case sensitive “hello” and “Hello” are treated differently, hence false is stored in var.\n"
    },
    {
        "id": 799,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello i love Csharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        StringBuilder s2 <span class=\"sy0\">=</span> <span class=\"kw3\">new</span>  StringBuilder<span class=\"br0\">(</span>s1<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s1<span class=\"sy0\">.</span><span class=\"me1\">Equals</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) True",
            "b) False",
            "c) 0",
            "d) Compile time error"
        ],
        "Answer": " Answer: b\nExplanation: CompareTo() function returns zero when both the strings are equal, it returns a value less than zero if the invoking string is less than the other string being compared and value greater than zero when invoking string is greater than the string compared to.\n"
    },
    {
        "id": 800,
        "Question": "Which of these methods of class String is used to check whether a given string starts with a particular substring or not?",
        "Options": [
            "a) StartsWith()",
            "b) EndsWith()",
            "c) Starts()",
            "d) Ends()"
        ],
        "Answer": " Answer: b\nExplanation: Equals() compares the content of two strings. StringBuilder class supports many methods which are useful for manipulating dynamic strings.\nOutput: False\n"
    },
    {
        "id": 801,
        "Question": "Which of these methods of class String is used to extract a substring from a String object?",
        "Options": [
            "a) substring()",
            "b) Substring()",
            "c) SubString()",
            "d) None of the mentioned"
        ],
        "Answer": " Answer: b\nExplanation: None.\n"
    },
    {
        "id": 802,
        "Question": "2. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"one\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s2 <span class=\"sy0\">=</span> <span class=\"kw4\">string</span><span class=\"sy0\">.</span><span class=\"me1\">Concat</span><span class=\"br0\">(</span>s1 <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"two\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) one",
            "b) two",
            "c) one two",
            "d) two one"
        ],
        "Answer": " Answer: c\nExplanation: Two strings can be concatenated using Concat() method.\nOutput:\n\n\n\t\n\n        \n\none two\n\n\n"
    },
    {
        "id": 803,
        "Question": "Which of these methods of class String is used to remove leading and trailing whitespaces?",
        "Options": [
            "a) startsWith()",
            "b) TrimEnd()",
            "c) Trim()",
            "d) TrimStart()"
        ],
        "Answer": " Answer: c\nExplanation: Removes white space from the string.\n"
    },
    {
        "id": 804,
        "Question": "4. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"  Hello World  \"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">Trim</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span><span class=\"st0\">\"\"</span><span class=\"st0\">\"+s+\"</span><span class=\"st0\">\"\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) ” Hello World ”",
            "b) “HelloWorld”",
            "c) “Hello World”",
            "d) “Hello”"
        ],
        "Answer": " Answer: c\nExplanation:  Trim() method is used to remove leading and trailing whitespaces in a string.\nOutput:\n\n\n\t\n\n\"Hello World\"\n\n\n"
    },
    {
        "id": 805,
        "Question": "5. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"CSHARP\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Replace</span><span class=\"br0\">(</span><span class=\"st0\">'H'</span>,<span class=\"st0\">'L'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) CSHAP",
            "b) CSHP",
            "c) CSHALP",
            "d) CSHP"
        ],
        "Answer": " Answer: c\nExplanation: Replace() method replaces all occurrences of a single character in invoking strings with another character. s1.Replace(‘H’,’L’) replaces every occurrence of ‘H’ in CSHARP by ‘L’, giving CSHALP.\nOutput:\n\n\nCSHALP\n\n\n"
    },
    {
        "id": 806,
        "Question": "6. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s1 <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s2 <span class=\"sy0\">=</span> s1<span class=\"sy0\">.</span><span class=\"me1\">Substring</span><span class=\"br0\">(</span><span class=\"nu0\">0</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s2<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) Hello",
            "b) Hell",
            "c) H",
            "d) Hello World"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\nHell\n\n\n"
    },
    {
        "id": 807,
        "Question": "7. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> <span class=\"st0\">\"Hello World\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'o'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         <span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> s<span class=\"sy0\">.</span><span class=\"me1\">LastIndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'l'</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>i <span class=\"sy0\">+</span> <span class=\"st0\">\" \"</span> <span class=\"sy0\">+</span> j<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">         Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 9 5",
            "b) 4 9",
            "c) 9 0",
            "d) 9 4"
        ],
        "Answer": " Answer: b\nExplanation: None.\nOutput:\n\n\n4 9\n\n\n"
    },
    {
        "id": 808,
        "Question": "8. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> c <span class=\"sy0\">=</span> <span class=\"st0\">\"i love Csharp\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">bool</span> a<span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        a <span class=\"sy0\">=</span> c<span class=\"sy0\">.</span><span class=\"me1\">StartsWith</span><span class=\"br0\">(</span><span class=\"st0\">\"I\"</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>a<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) true",
            "b) false",
            "c) 0",
            "d) 1"
        ],
        "Answer": " Answer: b\nExplanation: StartsWith() method is case sensitive “i” and “I” are treated differently, hence false is stored in a.\nOutput:\n\n\nfalse\n\n\n"
    },
    {
        "id": 809,
        "Question": "9. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"><span class=\"kw4\">class</span> Program</pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">{</span> </pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw4\">String</span> <span class=\"br0\">[</span><span class=\"br0\">]</span>chars <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">\"z\"</span>, <span class=\"st0\">\"x\"</span>, <span class=\"st0\">\"y\"</span>, <span class=\"st0\">\"z\"</span>, <span class=\"st0\">\"y\"</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> i <span class=\"sy0\">=</span> <span class=\"nu0\">0</span><span class=\"sy0\">;</span> i <span class=\"sy0\">&lt;</span> chars<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>i<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">for</span> <span class=\"br0\">(</span><span class=\"kw4\">int</span> j <span class=\"sy0\">=</span> i <span class=\"sy0\">+</span> <span class=\"nu0\">1</span><span class=\"sy0\">;</span> j <span class=\"sy0\">&lt;</span> chars<span class=\"sy0\">.</span><span class=\"me1\">Length</span><span class=\"sy0\">;</span> <span class=\"sy0\">++</span>j<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        <span class=\"kw1\">if</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>i<span class=\"br0\">]</span><span class=\"sy0\">.</span><span class=\"me1\">CompareTo</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span> <span class=\"sy0\">==</span> <span class=\"nu0\">0</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>chars<span class=\"br0\">[</span>j<span class=\"br0\">]</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">        Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">    <span class=\"br0\">}</span></pre></li><li class=\"li1\"><pre class=\"de1\"><span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) zx",
            "b) xy",
            "c) zy",
            "d) yz"
        ],
        "Answer": " Answer: c\nExplanation: compareTo() function returns zero when both the strings are equal. It returns a value less than zero if the invoking string is less than the other string being compared and a value greater than zero if the invoking string is greater than the string compared to 4\nOutput:\n\n\nzy\n\n\n"
    },
    {
        "id": 810,
        "Question": "10. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> main<span class=\"br0\">(</span><span class=\"kw4\">String</span> args<span class=\"br0\">[</span><span class=\"br0\">]</span><span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">char</span> chars<span class=\"br0\">[</span><span class=\"br0\">]</span> <span class=\"sy0\">=</span> <span class=\"br0\">{</span><span class=\"st0\">'a'</span>, <span class=\"st0\">'b'</span>, <span class=\"st0\">'c'</span><span class=\"br0\">}</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">String</span> s <span class=\"sy0\">=</span> <span class=\"kw3\">new</span> <span class=\"kw4\">String</span><span class=\"br0\">(</span>chars<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) a",
            "b) b",
            "c) ab",
            "d) abc"
        ],
        "Answer": " Answer: d\nExplanation: None.\nOutput:\n\n\nabc\n\n\n"
    },
    {
        "id": 811,
        "Question": "11. What will be the output of the following C# code snippet?<div class=\"hk1_style-wrap4\"><div class=\"hk1_style-wrap3\"><div class=\"hk1_style-wrap2\"><div class=\"hk1_style-wrap\"><div class=\"hk1_style\"><div class=\"csharp\"><ol><li class=\"li1\"><pre class=\"de1\"> <span class=\"kw1\">static</span> <span class=\"kw4\">void</span> Main<span class=\"br0\">(</span><span class=\"kw4\">string</span><span class=\"br0\">[</span><span class=\"br0\">]</span> args<span class=\"br0\">)</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">{</span></pre></li><li class=\"li1\"><pre class=\"de1\">     <span class=\"kw4\">string</span> s <span class=\"sy0\">=</span> <span class=\"st0\">\" i love you\"</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">WriteLine</span><span class=\"br0\">(</span>s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'l'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">lastIndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'o'</span><span class=\"br0\">)</span> <span class=\"sy0\">+</span> <span class=\"st0\">\"  \"</span> <span class=\"sy0\">+</span> s<span class=\"sy0\">.</span><span class=\"me1\">IndexOf</span><span class=\"br0\">(</span><span class=\"st0\">'e'</span><span class=\"br0\">)</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\">     Console<span class=\"sy0\">.</span><span class=\"me1\">ReadLine</span><span class=\"br0\">(</span><span class=\"br0\">)</span><span class=\"sy0\">;</span></pre></li><li class=\"li1\"><pre class=\"de1\"> <span class=\"br0\">}</span></pre></li></ol></div></div></div></div></div></div>",
        "Options": [
            "a) 3 5 7",
            "b) 4 5 6",
            "c) 3 9 6",
            "d) 2 4 6"
        ],
        "Answer": " Answer: c\nExplanation: indexof(‘l’) and lastIndexof(‘o’) are pre-defined function which are used to get the index of first and last occurrence of the character pointed by l and c respectively in the given array.\nOutput:\n\n\n3, 9, 6\n\n\n"
    }
]